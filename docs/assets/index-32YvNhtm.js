var MO=Object.defineProperty;var BO=(t,e,n)=>e in t?MO(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var Px=(t,e,n)=>BO(t,typeof e!="symbol"?e+"":e,n);function VO(t,e){for(var n=0;n<e.length;n++){const s=e[n];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in t)){const r=Object.getOwnPropertyDescriptor(s,a);r&&Object.defineProperty(t,a,r.get?r:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=n(a);fetch(a.href,r)}})();var Uo=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function UO(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function WO(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(s){var a=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,a.get?a:{enumerable:!0,get:function(){return t[s]}})}),n}var cN={exports:{}},rg={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var GO=Symbol.for("react.transitional.element"),HO=Symbol.for("react.fragment");function hN(t,e,n){var s=null;if(n!==void 0&&(s=""+n),e.key!==void 0&&(s=""+e.key),"key"in e){n={};for(var a in e)a!=="key"&&(n[a]=e[a])}else n=e;return e=n.ref,{$$typeof:GO,type:t,key:s,ref:e!==void 0?e:null,props:n}}rg.Fragment=HO;rg.jsx=hN;rg.jsxs=hN;cN.exports=rg;var Te=cN.exports,dN={exports:{}},ze={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var O1=Symbol.for("react.transitional.element"),jO=Symbol.for("react.portal"),qO=Symbol.for("react.fragment"),XO=Symbol.for("react.strict_mode"),KO=Symbol.for("react.profiler"),YO=Symbol.for("react.consumer"),QO=Symbol.for("react.context"),ZO=Symbol.for("react.forward_ref"),JO=Symbol.for("react.suspense"),eF=Symbol.for("react.memo"),pN=Symbol.for("react.lazy"),PS=Symbol.iterator;function tF(t){return t===null||typeof t!="object"?null:(t=PS&&t[PS]||t["@@iterator"],typeof t=="function"?t:null)}var fN={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},mN=Object.assign,gN={};function $u(t,e,n){this.props=t,this.context=e,this.refs=gN,this.updater=n||fN}$u.prototype.isReactComponent={};$u.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};$u.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function yN(){}yN.prototype=$u.prototype;function F1(t,e,n){this.props=t,this.context=e,this.refs=gN,this.updater=n||fN}var z1=F1.prototype=new yN;z1.constructor=F1;mN(z1,$u.prototype);z1.isPureReactComponent=!0;var MS=Array.isArray,Dt={H:null,A:null,T:null,S:null},xN=Object.prototype.hasOwnProperty;function L1(t,e,n,s,a,r){return n=r.ref,{$$typeof:O1,type:t,key:e,ref:n!==void 0?n:null,props:r}}function nF(t,e){return L1(t.type,e,void 0,void 0,void 0,t.props)}function P1(t){return typeof t=="object"&&t!==null&&t.$$typeof===O1}function sF(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var BS=/\/+/g;function Mx(t,e){return typeof t=="object"&&t!==null&&t.key!=null?sF(""+t.key):e.toString(36)}function VS(){}function aF(t){switch(t.status){case"fulfilled":return t.value;case"rejected":throw t.reason;default:switch(typeof t.status=="string"?t.then(VS,VS):(t.status="pending",t.then(function(e){t.status==="pending"&&(t.status="fulfilled",t.value=e)},function(e){t.status==="pending"&&(t.status="rejected",t.reason=e)})),t.status){case"fulfilled":return t.value;case"rejected":throw t.reason}}throw t}function Sl(t,e,n,s,a){var r=typeof t;(r==="undefined"||r==="boolean")&&(t=null);var i=!1;if(t===null)i=!0;else switch(r){case"bigint":case"string":case"number":i=!0;break;case"object":switch(t.$$typeof){case O1:case jO:i=!0;break;case pN:return i=t._init,Sl(i(t._payload),e,n,s,a)}}if(i)return a=a(t),i=s===""?"."+Mx(t,0):s,MS(a)?(n="",i!=null&&(n=i.replace(BS,"$&/")+"/"),Sl(a,e,n,"",function(u){return u})):a!=null&&(P1(a)&&(a=nF(a,n+(a.key==null||t&&t.key===a.key?"":(""+a.key).replace(BS,"$&/")+"/")+i)),e.push(a)),1;i=0;var o=s===""?".":s+":";if(MS(t))for(var l=0;l<t.length;l++)s=t[l],r=o+Mx(s,l),i+=Sl(s,e,n,r,a);else if(l=tF(t),typeof l=="function")for(t=l.call(t),l=0;!(s=t.next()).done;)s=s.value,r=o+Mx(s,l++),i+=Sl(s,e,n,r,a);else if(r==="object"){if(typeof t.then=="function")return Sl(aF(t),e,n,s,a);throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.")}return i}function tf(t,e,n){if(t==null)return t;var s=[],a=0;return Sl(t,s,"","",function(r){return e.call(n,r,a++)}),s}function rF(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var US=typeof reportError=="function"?reportError:function(t){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof t=="object"&&t!==null&&typeof t.message=="string"?String(t.message):String(t),error:t});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",t);return}console.error(t)};function iF(){}ze.Children={map:tf,forEach:function(t,e,n){tf(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return tf(t,function(){e++}),e},toArray:function(t){return tf(t,function(e){return e})||[]},only:function(t){if(!P1(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};ze.Component=$u;ze.Fragment=qO;ze.Profiler=KO;ze.PureComponent=F1;ze.StrictMode=XO;ze.Suspense=JO;ze.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=Dt;ze.act=function(){throw Error("act(...) is not supported in production builds of React.")};ze.cache=function(t){return function(){return t.apply(null,arguments)}};ze.cloneElement=function(t,e,n){if(t==null)throw Error("The argument must be a React element, but you passed "+t+".");var s=mN({},t.props),a=t.key,r=void 0;if(e!=null)for(i in e.ref!==void 0&&(r=void 0),e.key!==void 0&&(a=""+e.key),e)!xN.call(e,i)||i==="key"||i==="__self"||i==="__source"||i==="ref"&&e.ref===void 0||(s[i]=e[i]);var i=arguments.length-2;if(i===1)s.children=n;else if(1<i){for(var o=Array(i),l=0;l<i;l++)o[l]=arguments[l+2];s.children=o}return L1(t.type,a,void 0,void 0,r,s)};ze.createContext=function(t){return t={$$typeof:QO,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null},t.Provider=t,t.Consumer={$$typeof:YO,_context:t},t};ze.createElement=function(t,e,n){var s,a={},r=null;if(e!=null)for(s in e.key!==void 0&&(r=""+e.key),e)xN.call(e,s)&&s!=="key"&&s!=="__self"&&s!=="__source"&&(a[s]=e[s]);var i=arguments.length-2;if(i===1)a.children=n;else if(1<i){for(var o=Array(i),l=0;l<i;l++)o[l]=arguments[l+2];a.children=o}if(t&&t.defaultProps)for(s in i=t.defaultProps,i)a[s]===void 0&&(a[s]=i[s]);return L1(t,r,void 0,void 0,null,a)};ze.createRef=function(){return{current:null}};ze.forwardRef=function(t){return{$$typeof:ZO,render:t}};ze.isValidElement=P1;ze.lazy=function(t){return{$$typeof:pN,_payload:{_status:-1,_result:t},_init:rF}};ze.memo=function(t,e){return{$$typeof:eF,type:t,compare:e===void 0?null:e}};ze.startTransition=function(t){var e=Dt.T,n={};Dt.T=n;try{var s=t(),a=Dt.S;a!==null&&a(n,s),typeof s=="object"&&s!==null&&typeof s.then=="function"&&s.then(iF,US)}catch(r){US(r)}finally{Dt.T=e}};ze.unstable_useCacheRefresh=function(){return Dt.H.useCacheRefresh()};ze.use=function(t){return Dt.H.use(t)};ze.useActionState=function(t,e,n){return Dt.H.useActionState(t,e,n)};ze.useCallback=function(t,e){return Dt.H.useCallback(t,e)};ze.useContext=function(t){return Dt.H.useContext(t)};ze.useDebugValue=function(){};ze.useDeferredValue=function(t,e){return Dt.H.useDeferredValue(t,e)};ze.useEffect=function(t,e){return Dt.H.useEffect(t,e)};ze.useId=function(){return Dt.H.useId()};ze.useImperativeHandle=function(t,e,n){return Dt.H.useImperativeHandle(t,e,n)};ze.useInsertionEffect=function(t,e){return Dt.H.useInsertionEffect(t,e)};ze.useLayoutEffect=function(t,e){return Dt.H.useLayoutEffect(t,e)};ze.useMemo=function(t,e){return Dt.H.useMemo(t,e)};ze.useOptimistic=function(t,e){return Dt.H.useOptimistic(t,e)};ze.useReducer=function(t,e,n){return Dt.H.useReducer(t,e,n)};ze.useRef=function(t){return Dt.H.useRef(t)};ze.useState=function(t){return Dt.H.useState(t)};ze.useSyncExternalStore=function(t,e,n){return Dt.H.useSyncExternalStore(t,e,n)};ze.useTransition=function(){return Dt.H.useTransition()};ze.version="19.0.0";dN.exports=ze;var mn=dN.exports,bN={exports:{}},ig={},wN={exports:{}},vN={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(D,H){var P=D.length;D.push(H);e:for(;0<P;){var j=P-1>>>1,X=D[j];if(0<a(X,H))D[j]=H,D[P]=X,P=j;else break e}}function n(D){return D.length===0?null:D[0]}function s(D){if(D.length===0)return null;var H=D[0],P=D.pop();if(P!==H){D[0]=P;e:for(var j=0,X=D.length,Q=X>>>1;j<Q;){var ee=2*(j+1)-1,J=D[ee],se=ee+1,te=D[se];if(0>a(J,P))se<X&&0>a(te,J)?(D[j]=te,D[se]=P,j=se):(D[j]=J,D[ee]=P,j=ee);else if(se<X&&0>a(te,P))D[j]=te,D[se]=P,j=se;else break e}}return H}function a(D,H){var P=D.sortIndex-H.sortIndex;return P!==0?P:D.id-H.id}if(t.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;t.unstable_now=function(){return r.now()}}else{var i=Date,o=i.now();t.unstable_now=function(){return i.now()-o}}var l=[],u=[],c=1,h=null,d=3,p=!1,f=!1,m=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;function b(D){for(var H=n(u);H!==null;){if(H.callback===null)s(u);else if(H.startTime<=D)s(u),H.sortIndex=H.expirationTime,e(l,H);else break;H=n(u)}}function w(D){if(m=!1,b(D),!f)if(n(l)!==null)f=!0,V();else{var H=n(u);H!==null&&G(w,H.startTime-D)}}var v=!1,C=-1,$=5,k=-1;function T(){return!(t.unstable_now()-k<$)}function E(){if(v){var D=t.unstable_now();k=D;var H=!0;try{e:{f=!1,m&&(m=!1,g(C),C=-1),p=!0;var P=d;try{t:{for(b(D),h=n(l);h!==null&&!(h.expirationTime>D&&T());){var j=h.callback;if(typeof j=="function"){h.callback=null,d=h.priorityLevel;var X=j(h.expirationTime<=D);if(D=t.unstable_now(),typeof X=="function"){h.callback=X,b(D),H=!0;break t}h===n(l)&&s(l),b(D)}else s(l);h=n(l)}if(h!==null)H=!0;else{var Q=n(u);Q!==null&&G(w,Q.startTime-D),H=!1}}break e}finally{h=null,d=P,p=!1}H=void 0}}finally{H?O():v=!1}}}var O;if(typeof x=="function")O=function(){x(E)};else if(typeof MessageChannel<"u"){var B=new MessageChannel,W=B.port2;B.port1.onmessage=E,O=function(){W.postMessage(null)}}else O=function(){y(E,0)};function V(){v||(v=!0,O())}function G(D,H){C=y(function(){D(t.unstable_now())},H)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(D){D.callback=null},t.unstable_continueExecution=function(){f||p||(f=!0,V())},t.unstable_forceFrameRate=function(D){0>D||125<D?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):$=0<D?Math.floor(1e3/D):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(D){switch(d){case 1:case 2:case 3:var H=3;break;default:H=d}var P=d;d=H;try{return D()}finally{d=P}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(D,H){switch(D){case 1:case 2:case 3:case 4:case 5:break;default:D=3}var P=d;d=D;try{return H()}finally{d=P}},t.unstable_scheduleCallback=function(D,H,P){var j=t.unstable_now();switch(typeof P=="object"&&P!==null?(P=P.delay,P=typeof P=="number"&&0<P?j+P:j):P=j,D){case 1:var X=-1;break;case 2:X=250;break;case 5:X=1073741823;break;case 4:X=1e4;break;default:X=5e3}return X=P+X,D={id:c++,callback:H,priorityLevel:D,startTime:P,expirationTime:X,sortIndex:-1},P>j?(D.sortIndex=P,e(u,D),n(l)===null&&D===n(u)&&(m?(g(C),C=-1):m=!0,G(w,P-j))):(D.sortIndex=X,e(l,D),f||p||(f=!0,V())),D},t.unstable_shouldYield=T,t.unstable_wrapCallback=function(D){var H=d;return function(){var P=d;d=H;try{return D.apply(this,arguments)}finally{d=P}}}})(vN);wN.exports=vN;var oF=wN.exports,SN={exports:{}},ts={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var lF=mn;function CN(t){var e="https://react.dev/errors/"+t;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function jr(){}var Xn={d:{f:jr,r:function(){throw Error(CN(522))},D:jr,C:jr,L:jr,m:jr,X:jr,S:jr,M:jr},p:0,findDOMNode:null},uF=Symbol.for("react.portal");function cF(t,e,n){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:uF,key:s==null?null:""+s,children:t,containerInfo:e,implementation:n}}var gh=lF.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function og(t,e){if(t==="font")return"";if(typeof e=="string")return e==="use-credentials"?e:""}ts.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=Xn;ts.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)throw Error(CN(299));return cF(t,e,null,n)};ts.flushSync=function(t){var e=gh.T,n=Xn.p;try{if(gh.T=null,Xn.p=2,t)return t()}finally{gh.T=e,Xn.p=n,Xn.d.f()}};ts.preconnect=function(t,e){typeof t=="string"&&(e?(e=e.crossOrigin,e=typeof e=="string"?e==="use-credentials"?e:"":void 0):e=null,Xn.d.C(t,e))};ts.prefetchDNS=function(t){typeof t=="string"&&Xn.d.D(t)};ts.preinit=function(t,e){if(typeof t=="string"&&e&&typeof e.as=="string"){var n=e.as,s=og(n,e.crossOrigin),a=typeof e.integrity=="string"?e.integrity:void 0,r=typeof e.fetchPriority=="string"?e.fetchPriority:void 0;n==="style"?Xn.d.S(t,typeof e.precedence=="string"?e.precedence:void 0,{crossOrigin:s,integrity:a,fetchPriority:r}):n==="script"&&Xn.d.X(t,{crossOrigin:s,integrity:a,fetchPriority:r,nonce:typeof e.nonce=="string"?e.nonce:void 0})}};ts.preinitModule=function(t,e){if(typeof t=="string")if(typeof e=="object"&&e!==null){if(e.as==null||e.as==="script"){var n=og(e.as,e.crossOrigin);Xn.d.M(t,{crossOrigin:n,integrity:typeof e.integrity=="string"?e.integrity:void 0,nonce:typeof e.nonce=="string"?e.nonce:void 0})}}else e==null&&Xn.d.M(t)};ts.preload=function(t,e){if(typeof t=="string"&&typeof e=="object"&&e!==null&&typeof e.as=="string"){var n=e.as,s=og(n,e.crossOrigin);Xn.d.L(t,n,{crossOrigin:s,integrity:typeof e.integrity=="string"?e.integrity:void 0,nonce:typeof e.nonce=="string"?e.nonce:void 0,type:typeof e.type=="string"?e.type:void 0,fetchPriority:typeof e.fetchPriority=="string"?e.fetchPriority:void 0,referrerPolicy:typeof e.referrerPolicy=="string"?e.referrerPolicy:void 0,imageSrcSet:typeof e.imageSrcSet=="string"?e.imageSrcSet:void 0,imageSizes:typeof e.imageSizes=="string"?e.imageSizes:void 0,media:typeof e.media=="string"?e.media:void 0})}};ts.preloadModule=function(t,e){if(typeof t=="string")if(e){var n=og(e.as,e.crossOrigin);Xn.d.m(t,{as:typeof e.as=="string"&&e.as!=="script"?e.as:void 0,crossOrigin:n,integrity:typeof e.integrity=="string"?e.integrity:void 0})}else Xn.d.m(t)};ts.requestFormReset=function(t){Xn.d.r(t)};ts.unstable_batchedUpdates=function(t,e){return t(e)};ts.useFormState=function(t,e,n){return gh.H.useFormState(t,e,n)};ts.useFormStatus=function(){return gh.H.useHostTransitionStatus()};ts.version="19.0.0";function $N(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($N)}catch(t){console.error(t)}}$N(),SN.exports=ts;var hF=SN.exports;/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hn=oF,NN=mn,dF=hF;function Y(t){var e="https://react.dev/errors/"+t;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function kN(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}var pF=Symbol.for("react.element"),nf=Symbol.for("react.transitional.element"),ah=Symbol.for("react.portal"),Rl=Symbol.for("react.fragment"),IN=Symbol.for("react.strict_mode"),Bb=Symbol.for("react.profiler"),fF=Symbol.for("react.provider"),TN=Symbol.for("react.consumer"),wr=Symbol.for("react.context"),M1=Symbol.for("react.forward_ref"),Vb=Symbol.for("react.suspense"),Ub=Symbol.for("react.suspense_list"),B1=Symbol.for("react.memo"),Kr=Symbol.for("react.lazy"),EN=Symbol.for("react.offscreen"),mF=Symbol.for("react.memo_cache_sentinel"),WS=Symbol.iterator;function jc(t){return t===null||typeof t!="object"?null:(t=WS&&t[WS]||t["@@iterator"],typeof t=="function"?t:null)}var gF=Symbol.for("react.client.reference");function Wb(t){if(t==null)return null;if(typeof t=="function")return t.$$typeof===gF?null:t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case Rl:return"Fragment";case ah:return"Portal";case Bb:return"Profiler";case IN:return"StrictMode";case Vb:return"Suspense";case Ub:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case wr:return(t.displayName||"Context")+".Provider";case TN:return(t._context.displayName||"Context")+".Consumer";case M1:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case B1:return e=t.displayName||null,e!==null?e:Wb(t.type)||"Memo";case Kr:e=t._payload,t=t._init;try{return Wb(t(e))}catch{}}return null}var Oe=NN.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,St=Object.assign,Bx,GS;function rh(t){if(Bx===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Bx=e&&e[1]||"",GS=-1<n.stack.indexOf(`
    at`)?" (<anonymous>)":-1<n.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Bx+t+GS}var Vx=!1;function Ux(t,e){if(!t||Vx)return"";Vx=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var s={DetermineComponentFrameRoot:function(){try{if(e){var h=function(){throw Error()};if(Object.defineProperty(h.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(h,[])}catch(p){var d=p}Reflect.construct(t,[],h)}else{try{h.call()}catch(p){d=p}t.call(h.prototype)}}else{try{throw Error()}catch(p){d=p}(h=t())&&typeof h.catch=="function"&&h.catch(function(){})}}catch(p){if(p&&d&&typeof p.stack=="string")return[p.stack,d.stack]}return[null,null]}};s.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var a=Object.getOwnPropertyDescriptor(s.DetermineComponentFrameRoot,"name");a&&a.configurable&&Object.defineProperty(s.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var r=s.DetermineComponentFrameRoot(),i=r[0],o=r[1];if(i&&o){var l=i.split(`
`),u=o.split(`
`);for(a=s=0;s<l.length&&!l[s].includes("DetermineComponentFrameRoot");)s++;for(;a<u.length&&!u[a].includes("DetermineComponentFrameRoot");)a++;if(s===l.length||a===u.length)for(s=l.length-1,a=u.length-1;1<=s&&0<=a&&l[s]!==u[a];)a--;for(;1<=s&&0<=a;s--,a--)if(l[s]!==u[a]){if(s!==1||a!==1)do if(s--,a--,0>a||l[s]!==u[a]){var c=`
`+l[s].replace(" at new "," at ");return t.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",t.displayName)),c}while(1<=s&&0<=a);break}}}finally{Vx=!1,Error.prepareStackTrace=n}return(n=t?t.displayName||t.name:"")?rh(n):""}function yF(t){switch(t.tag){case 26:case 27:case 5:return rh(t.type);case 16:return rh("Lazy");case 13:return rh("Suspense");case 19:return rh("SuspenseList");case 0:case 15:return t=Ux(t.type,!1),t;case 11:return t=Ux(t.type.render,!1),t;case 1:return t=Ux(t.type,!0),t;default:return""}}function HS(t){try{var e="";do e+=yF(t),t=t.return;while(t);return e}catch(n){return`
Error generating stack: `+n.message+`
`+n.stack}}function Nu(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,e.flags&4098&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function RN(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function jS(t){if(Nu(t)!==t)throw Error(Y(188))}function xF(t){var e=t.alternate;if(!e){if(e=Nu(t),e===null)throw Error(Y(188));return e!==t?null:t}for(var n=t,s=e;;){var a=n.return;if(a===null)break;var r=a.alternate;if(r===null){if(s=a.return,s!==null){n=s;continue}break}if(a.child===r.child){for(r=a.child;r;){if(r===n)return jS(a),t;if(r===s)return jS(a),e;r=r.sibling}throw Error(Y(188))}if(n.return!==s.return)n=a,s=r;else{for(var i=!1,o=a.child;o;){if(o===n){i=!0,n=a,s=r;break}if(o===s){i=!0,s=a,n=r;break}o=o.sibling}if(!i){for(o=r.child;o;){if(o===n){i=!0,n=r,s=a;break}if(o===s){i=!0,s=r,n=a;break}o=o.sibling}if(!i)throw Error(Y(189))}}if(n.alternate!==s)throw Error(Y(190))}if(n.tag!==3)throw Error(Y(188));return n.stateNode.current===n?t:e}function DN(t){var e=t.tag;if(e===5||e===26||e===27||e===6)return t;for(t=t.child;t!==null;){if(e=DN(t),e!==null)return e;t=t.sibling}return null}var ih=Array.isArray,wt=dF.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,po={pending:!1,data:null,method:null,action:null},Gb=[],Dl=-1;function tr(t){return{current:t}}function vn(t){0>Dl||(t.current=Gb[Dl],Gb[Dl]=null,Dl--)}function kt(t,e){Dl++,Gb[Dl]=t.current,t.current=e}var Wa=tr(null),Fh=tr(null),oi=tr(null),Zf=tr(null);function Jf(t,e){switch(kt(oi,e),kt(Fh,t),kt(Wa,null),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)&&(e=e.namespaceURI)?qC(e):0;break;default:if(t=t===8?e.parentNode:e,e=t.tagName,t=t.namespaceURI)t=qC(t),e=WI(t,e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}vn(Wa),kt(Wa,e)}function nu(){vn(Wa),vn(Fh),vn(oi)}function Hb(t){t.memoizedState!==null&&kt(Zf,t);var e=Wa.current,n=WI(e,t.type);e!==n&&(kt(Fh,t),kt(Wa,n))}function em(t){Fh.current===t&&(vn(Wa),vn(Fh)),Zf.current===t&&(vn(Zf),jh._currentValue=po)}var jb=Object.prototype.hasOwnProperty,V1=hn.unstable_scheduleCallback,Wx=hn.unstable_cancelCallback,bF=hn.unstable_shouldYield,wF=hn.unstable_requestPaint,Ga=hn.unstable_now,vF=hn.unstable_getCurrentPriorityLevel,AN=hn.unstable_ImmediatePriority,_N=hn.unstable_UserBlockingPriority,tm=hn.unstable_NormalPriority,SF=hn.unstable_LowPriority,ON=hn.unstable_IdlePriority,CF=hn.log,$F=hn.unstable_setDisableYieldValue,gd=null,Is=null;function NF(t){if(Is&&typeof Is.onCommitFiberRoot=="function")try{Is.onCommitFiberRoot(gd,t,void 0,(t.current.flags&128)===128)}catch{}}function ni(t){if(typeof CF=="function"&&$F(t),Is&&typeof Is.setStrictMode=="function")try{Is.setStrictMode(gd,t)}catch{}}var Ts=Math.clz32?Math.clz32:TF,kF=Math.log,IF=Math.LN2;function TF(t){return t>>>=0,t===0?32:31-(kF(t)/IF|0)|0}var sf=128,af=4194304;function Qi(t){var e=t&42;if(e!==0)return e;switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return t&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return t}}function lg(t,e){var n=t.pendingLanes;if(n===0)return 0;var s=0,a=t.suspendedLanes,r=t.pingedLanes,i=t.warmLanes;t=t.finishedLanes!==0;var o=n&134217727;return o!==0?(n=o&~a,n!==0?s=Qi(n):(r&=o,r!==0?s=Qi(r):t||(i=o&~i,i!==0&&(s=Qi(i))))):(o=n&~a,o!==0?s=Qi(o):r!==0?s=Qi(r):t||(i=n&~i,i!==0&&(s=Qi(i)))),s===0?0:e!==0&&e!==s&&!(e&a)&&(a=s&-s,i=e&-e,a>=i||a===32&&(i&4194176)!==0)?e:s}function yd(t,e){return(t.pendingLanes&~(t.suspendedLanes&~t.pingedLanes)&e)===0}function EF(t,e){switch(t){case 1:case 2:case 4:case 8:return e+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function FN(){var t=sf;return sf<<=1,!(sf&4194176)&&(sf=128),t}function zN(){var t=af;return af<<=1,!(af&62914560)&&(af=4194304),t}function Gx(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function xd(t,e){t.pendingLanes|=e,e!==268435456&&(t.suspendedLanes=0,t.pingedLanes=0,t.warmLanes=0)}function RF(t,e,n,s,a,r){var i=t.pendingLanes;t.pendingLanes=n,t.suspendedLanes=0,t.pingedLanes=0,t.warmLanes=0,t.expiredLanes&=n,t.entangledLanes&=n,t.errorRecoveryDisabledLanes&=n,t.shellSuspendCounter=0;var o=t.entanglements,l=t.expirationTimes,u=t.hiddenUpdates;for(n=i&~n;0<n;){var c=31-Ts(n),h=1<<c;o[c]=0,l[c]=-1;var d=u[c];if(d!==null)for(u[c]=null,c=0;c<d.length;c++){var p=d[c];p!==null&&(p.lane&=-536870913)}n&=~h}s!==0&&LN(t,s,0),r!==0&&a===0&&t.tag!==0&&(t.suspendedLanes|=r&~(i&~e))}function LN(t,e,n){t.pendingLanes|=e,t.suspendedLanes&=~e;var s=31-Ts(e);t.entangledLanes|=e,t.entanglements[s]=t.entanglements[s]|1073741824|n&4194218}function PN(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var s=31-Ts(n),a=1<<s;a&e|t[s]&e&&(t[s]|=e),n&=~a}}function MN(t){return t&=-t,2<t?8<t?t&134217727?32:268435456:8:2}function BN(){var t=wt.p;return t!==0?t:(t=window.event,t===void 0?32:JI(t.type))}function DF(t,e){var n=wt.p;try{return wt.p=t,e()}finally{wt.p=n}}var Ai=Math.random().toString(36).slice(2),Ln="__reactFiber$"+Ai,cs="__reactProps$"+Ai,ku="__reactContainer$"+Ai,qb="__reactEvents$"+Ai,AF="__reactListeners$"+Ai,_F="__reactHandles$"+Ai,qS="__reactResources$"+Ai,zh="__reactMarker$"+Ai;function U1(t){delete t[Ln],delete t[cs],delete t[qb],delete t[AF],delete t[_F]}function oo(t){var e=t[Ln];if(e)return e;for(var n=t.parentNode;n;){if(e=n[ku]||n[Ln]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=KC(t);t!==null;){if(n=t[Ln])return n;t=KC(t)}return e}t=n,n=t.parentNode}return null}function Iu(t){if(t=t[Ln]||t[ku]){var e=t.tag;if(e===5||e===6||e===13||e===26||e===27||e===3)return t}return null}function oh(t){var e=t.tag;if(e===5||e===26||e===27||e===6)return t.stateNode;throw Error(Y(33))}function Ul(t){var e=t[qS];return e||(e=t[qS]={hoistableStyles:new Map,hoistableScripts:new Map}),e}function yn(t){t[zh]=!0}var VN=new Set,UN={};function Wo(t,e){su(t,e),su(t+"Capture",e)}function su(t,e){for(UN[t]=e,t=0;t<e.length;t++)VN.add(e[t])}var Rr=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),OF=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),XS={},KS={};function FF(t){return jb.call(KS,t)?!0:jb.call(XS,t)?!1:OF.test(t)?KS[t]=!0:(XS[t]=!0,!1)}function Of(t,e,n){if(FF(e))if(n===null)t.removeAttribute(e);else{switch(typeof n){case"undefined":case"function":case"symbol":t.removeAttribute(e);return;case"boolean":var s=e.toLowerCase().slice(0,5);if(s!=="data-"&&s!=="aria-"){t.removeAttribute(e);return}}t.setAttribute(e,""+n)}}function rf(t,e,n){if(n===null)t.removeAttribute(e);else{switch(typeof n){case"undefined":case"function":case"symbol":case"boolean":t.removeAttribute(e);return}t.setAttribute(e,""+n)}}function ur(t,e,n,s){if(s===null)t.removeAttribute(n);else{switch(typeof s){case"undefined":case"function":case"symbol":case"boolean":t.removeAttribute(n);return}t.setAttributeNS(e,n,""+s)}}function Gs(t){switch(typeof t){case"bigint":case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function WN(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function zF(t){var e=WN(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),s=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var a=n.get,r=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return a.call(this)},set:function(i){s=""+i,r.call(this,i)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return s},setValue:function(i){s=""+i},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function nm(t){t._valueTracker||(t._valueTracker=zF(t))}function GN(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),s="";return t&&(s=WN(t)?t.checked?"true":"false":t.value),t=s,t!==n?(e.setValue(t),!0):!1}function sm(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}var LF=/[\n"\\]/g;function qs(t){return t.replace(LF,function(e){return"\\"+e.charCodeAt(0).toString(16)+" "})}function Xb(t,e,n,s,a,r,i,o){t.name="",i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"?t.type=i:t.removeAttribute("type"),e!=null?i==="number"?(e===0&&t.value===""||t.value!=e)&&(t.value=""+Gs(e)):t.value!==""+Gs(e)&&(t.value=""+Gs(e)):i!=="submit"&&i!=="reset"||t.removeAttribute("value"),e!=null?Kb(t,i,Gs(e)):n!=null?Kb(t,i,Gs(n)):s!=null&&t.removeAttribute("value"),a==null&&r!=null&&(t.defaultChecked=!!r),a!=null&&(t.checked=a&&typeof a!="function"&&typeof a!="symbol"),o!=null&&typeof o!="function"&&typeof o!="symbol"&&typeof o!="boolean"?t.name=""+Gs(o):t.removeAttribute("name")}function HN(t,e,n,s,a,r,i,o){if(r!=null&&typeof r!="function"&&typeof r!="symbol"&&typeof r!="boolean"&&(t.type=r),e!=null||n!=null){if(!(r!=="submit"&&r!=="reset"||e!=null))return;n=n!=null?""+Gs(n):"",e=e!=null?""+Gs(e):n,o||e===t.value||(t.value=e),t.defaultValue=e}s=s??a,s=typeof s!="function"&&typeof s!="symbol"&&!!s,t.checked=o?t.checked:!!s,t.defaultChecked=!!s,i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"&&(t.name=i)}function Kb(t,e,n){e==="number"&&sm(t.ownerDocument)===t||t.defaultValue===""+n||(t.defaultValue=""+n)}function Wl(t,e,n,s){if(t=t.options,e){e={};for(var a=0;a<n.length;a++)e["$"+n[a]]=!0;for(n=0;n<t.length;n++)a=e.hasOwnProperty("$"+t[n].value),t[n].selected!==a&&(t[n].selected=a),a&&s&&(t[n].defaultSelected=!0)}else{for(n=""+Gs(n),e=null,a=0;a<t.length;a++){if(t[a].value===n){t[a].selected=!0,s&&(t[a].defaultSelected=!0);return}e!==null||t[a].disabled||(e=t[a])}e!==null&&(e.selected=!0)}}function jN(t,e,n){if(e!=null&&(e=""+Gs(e),e!==t.value&&(t.value=e),n==null)){t.defaultValue!==e&&(t.defaultValue=e);return}t.defaultValue=n!=null?""+Gs(n):""}function qN(t,e,n,s){if(e==null){if(s!=null){if(n!=null)throw Error(Y(92));if(ih(s)){if(1<s.length)throw Error(Y(93));s=s[0]}n=s}n==null&&(n=""),e=n}n=Gs(e),t.defaultValue=n,s=t.textContent,s===n&&s!==""&&s!==null&&(t.value=s)}function au(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var PF=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function YS(t,e,n){var s=e.indexOf("--")===0;n==null||typeof n=="boolean"||n===""?s?t.setProperty(e,""):e==="float"?t.cssFloat="":t[e]="":s?t.setProperty(e,n):typeof n!="number"||n===0||PF.has(e)?e==="float"?t.cssFloat=n:t[e]=(""+n).trim():t[e]=n+"px"}function XN(t,e,n){if(e!=null&&typeof e!="object")throw Error(Y(62));if(t=t.style,n!=null){for(var s in n)!n.hasOwnProperty(s)||e!=null&&e.hasOwnProperty(s)||(s.indexOf("--")===0?t.setProperty(s,""):s==="float"?t.cssFloat="":t[s]="");for(var a in e)s=e[a],e.hasOwnProperty(a)&&n[a]!==s&&YS(t,a,s)}else for(var r in e)e.hasOwnProperty(r)&&YS(t,r,e[r])}function W1(t){if(t.indexOf("-")===-1)return!1;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var MF=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),BF=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Ff(t){return BF.test(""+t)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":t}var Yb=null;function G1(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Al=null,Gl=null;function QS(t){var e=Iu(t);if(e&&(t=e.stateNode)){var n=t[cs]||null;e:switch(t=e.stateNode,e.type){case"input":if(Xb(t,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll('input[name="'+qs(""+e)+'"][type="radio"]'),e=0;e<n.length;e++){var s=n[e];if(s!==t&&s.form===t.form){var a=s[cs]||null;if(!a)throw Error(Y(90));Xb(s,a.value,a.defaultValue,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name)}}for(e=0;e<n.length;e++)s=n[e],s.form===t.form&&GN(s)}break e;case"textarea":jN(t,n.value,n.defaultValue);break e;case"select":e=n.value,e!=null&&Wl(t,!!n.multiple,e,!1)}}}var Hx=!1;function KN(t,e,n){if(Hx)return t(e,n);Hx=!0;try{var s=t(e);return s}finally{if(Hx=!1,(Al!==null||Gl!==null)&&(xg(),Al&&(e=Al,t=Gl,Gl=Al=null,QS(e),t)))for(e=0;e<t.length;e++)QS(t[e])}}function Lh(t,e){var n=t.stateNode;if(n===null)return null;var s=n[cs]||null;if(s===null)return null;n=s[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(t=t.type,s=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!s;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(Y(231,e,typeof n));return n}var Qb=!1;if(Rr)try{var qc={};Object.defineProperty(qc,"passive",{get:function(){Qb=!0}}),window.addEventListener("test",qc,qc),window.removeEventListener("test",qc,qc)}catch{Qb=!1}var si=null,H1=null,zf=null;function YN(){if(zf)return zf;var t,e=H1,n=e.length,s,a="value"in si?si.value:si.textContent,r=a.length;for(t=0;t<n&&e[t]===a[t];t++);var i=n-t;for(s=1;s<=i&&e[n-s]===a[r-s];s++);return zf=a.slice(t,1<s?1-s:void 0)}function Lf(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function of(){return!0}function ZS(){return!1}function ys(t){function e(n,s,a,r,i){this._reactName=n,this._targetInst=a,this.type=s,this.nativeEvent=r,this.target=i,this.currentTarget=null;for(var o in t)t.hasOwnProperty(o)&&(n=t[o],this[o]=n?n(r):r[o]);return this.isDefaultPrevented=(r.defaultPrevented!=null?r.defaultPrevented:r.returnValue===!1)?of:ZS,this.isPropagationStopped=ZS,this}return St(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=of)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=of)},persist:function(){},isPersistent:of}),e}var Go={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ug=ys(Go),bd=St({},Go,{view:0,detail:0}),VF=ys(bd),jx,qx,Xc,cg=St({},bd,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:j1,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==Xc&&(Xc&&t.type==="mousemove"?(jx=t.screenX-Xc.screenX,qx=t.screenY-Xc.screenY):qx=jx=0,Xc=t),jx)},movementY:function(t){return"movementY"in t?t.movementY:qx}}),JS=ys(cg),UF=St({},cg,{dataTransfer:0}),WF=ys(UF),GF=St({},bd,{relatedTarget:0}),Xx=ys(GF),HF=St({},Go,{animationName:0,elapsedTime:0,pseudoElement:0}),jF=ys(HF),qF=St({},Go,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),XF=ys(qF),KF=St({},Go,{data:0}),eC=ys(KF),YF={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},QF={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ZF={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function JF(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=ZF[t])?!!e[t]:!1}function j1(){return JF}var ez=St({},bd,{key:function(t){if(t.key){var e=YF[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=Lf(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?QF[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:j1,charCode:function(t){return t.type==="keypress"?Lf(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?Lf(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),tz=ys(ez),nz=St({},cg,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),tC=ys(nz),sz=St({},bd,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:j1}),az=ys(sz),rz=St({},Go,{propertyName:0,elapsedTime:0,pseudoElement:0}),iz=ys(rz),oz=St({},cg,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),lz=ys(oz),uz=St({},Go,{newState:0,oldState:0}),cz=ys(uz),hz=[9,13,27,32],q1=Rr&&"CompositionEvent"in window,yh=null;Rr&&"documentMode"in document&&(yh=document.documentMode);var dz=Rr&&"TextEvent"in window&&!yh,QN=Rr&&(!q1||yh&&8<yh&&11>=yh),nC=" ",sC=!1;function ZN(t,e){switch(t){case"keyup":return hz.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function JN(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var _l=!1;function pz(t,e){switch(t){case"compositionend":return JN(e);case"keypress":return e.which!==32?null:(sC=!0,nC);case"textInput":return t=e.data,t===nC&&sC?null:t;default:return null}}function fz(t,e){if(_l)return t==="compositionend"||!q1&&ZN(t,e)?(t=YN(),zf=H1=si=null,_l=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return QN&&e.locale!=="ko"?null:e.data;default:return null}}var mz={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function aC(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!mz[t.type]:e==="textarea"}function ek(t,e,n,s){Al?Gl?Gl.push(s):Gl=[s]:Al=s,e=bm(e,"onChange"),0<e.length&&(n=new ug("onChange","change",null,n,s),t.push({event:n,listeners:e}))}var xh=null,Ph=null;function gz(t){BI(t,0)}function hg(t){var e=oh(t);if(GN(e))return t}function rC(t,e){if(t==="change")return e}var tk=!1;if(Rr){var Kx;if(Rr){var Yx="oninput"in document;if(!Yx){var iC=document.createElement("div");iC.setAttribute("oninput","return;"),Yx=typeof iC.oninput=="function"}Kx=Yx}else Kx=!1;tk=Kx&&(!document.documentMode||9<document.documentMode)}function oC(){xh&&(xh.detachEvent("onpropertychange",nk),Ph=xh=null)}function nk(t){if(t.propertyName==="value"&&hg(Ph)){var e=[];ek(e,Ph,t,G1(t)),KN(gz,e)}}function yz(t,e,n){t==="focusin"?(oC(),xh=e,Ph=n,xh.attachEvent("onpropertychange",nk)):t==="focusout"&&oC()}function xz(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return hg(Ph)}function bz(t,e){if(t==="click")return hg(e)}function wz(t,e){if(t==="input"||t==="change")return hg(e)}function vz(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Rs=typeof Object.is=="function"?Object.is:vz;function Mh(t,e){if(Rs(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),s=Object.keys(e);if(n.length!==s.length)return!1;for(s=0;s<n.length;s++){var a=n[s];if(!jb.call(e,a)||!Rs(t[a],e[a]))return!1}return!0}function lC(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function uC(t,e){var n=lC(t);t=0;for(var s;n;){if(n.nodeType===3){if(s=t+n.textContent.length,t<=e&&s>=e)return{node:n,offset:e-t};t=s}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=lC(n)}}function sk(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?sk(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function ak(t){t=t!=null&&t.ownerDocument!=null&&t.ownerDocument.defaultView!=null?t.ownerDocument.defaultView:window;for(var e=sm(t.document);e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=sm(t.document)}return e}function X1(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function Sz(t,e){var n=ak(e);e=t.focusedElem;var s=t.selectionRange;if(n!==e&&e&&e.ownerDocument&&sk(e.ownerDocument.documentElement,e)){if(s!==null&&X1(e)){if(t=s.start,n=s.end,n===void 0&&(n=t),"selectionStart"in e)e.selectionStart=t,e.selectionEnd=Math.min(n,e.value.length);else if(n=(t=e.ownerDocument||document)&&t.defaultView||window,n.getSelection){n=n.getSelection();var a=e.textContent.length,r=Math.min(s.start,a);s=s.end===void 0?r:Math.min(s.end,a),!n.extend&&r>s&&(a=s,s=r,r=a),a=uC(e,r);var i=uC(e,s);a&&i&&(n.rangeCount!==1||n.anchorNode!==a.node||n.anchorOffset!==a.offset||n.focusNode!==i.node||n.focusOffset!==i.offset)&&(t=t.createRange(),t.setStart(a.node,a.offset),n.removeAllRanges(),r>s?(n.addRange(t),n.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),n.addRange(t)))}}for(t=[],n=e;n=n.parentNode;)n.nodeType===1&&t.push({element:n,left:n.scrollLeft,top:n.scrollTop});for(typeof e.focus=="function"&&e.focus(),e=0;e<t.length;e++)n=t[e],n.element.scrollLeft=n.left,n.element.scrollTop=n.top}}var Cz=Rr&&"documentMode"in document&&11>=document.documentMode,Ol=null,Zb=null,bh=null,Jb=!1;function cC(t,e,n){var s=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Jb||Ol==null||Ol!==sm(s)||(s=Ol,"selectionStart"in s&&X1(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),bh&&Mh(bh,s)||(bh=s,s=bm(Zb,"onSelect"),0<s.length&&(e=new ug("onSelect","select",null,e,n),t.push({event:e,listeners:s}),e.target=Ol)))}function qi(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Fl={animationend:qi("Animation","AnimationEnd"),animationiteration:qi("Animation","AnimationIteration"),animationstart:qi("Animation","AnimationStart"),transitionrun:qi("Transition","TransitionRun"),transitionstart:qi("Transition","TransitionStart"),transitioncancel:qi("Transition","TransitionCancel"),transitionend:qi("Transition","TransitionEnd")},Qx={},rk={};Rr&&(rk=document.createElement("div").style,"AnimationEvent"in window||(delete Fl.animationend.animation,delete Fl.animationiteration.animation,delete Fl.animationstart.animation),"TransitionEvent"in window||delete Fl.transitionend.transition);function Ho(t){if(Qx[t])return Qx[t];if(!Fl[t])return t;var e=Fl[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in rk)return Qx[t]=e[n];return t}var ik=Ho("animationend"),ok=Ho("animationiteration"),lk=Ho("animationstart"),$z=Ho("transitionrun"),Nz=Ho("transitionstart"),kz=Ho("transitioncancel"),uk=Ho("transitionend"),ck=new Map,hC="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function Da(t,e){ck.set(t,e),Wo(e,[t])}var Us=[],zl=0,K1=0;function dg(){for(var t=zl,e=K1=zl=0;e<t;){var n=Us[e];Us[e++]=null;var s=Us[e];Us[e++]=null;var a=Us[e];Us[e++]=null;var r=Us[e];if(Us[e++]=null,s!==null&&a!==null){var i=s.pending;i===null?a.next=a:(a.next=i.next,i.next=a),s.pending=a}r!==0&&hk(n,a,r)}}function pg(t,e,n,s){Us[zl++]=t,Us[zl++]=e,Us[zl++]=n,Us[zl++]=s,K1|=s,t.lanes|=s,t=t.alternate,t!==null&&(t.lanes|=s)}function Y1(t,e,n,s){return pg(t,e,n,s),am(t)}function xi(t,e){return pg(t,null,null,e),am(t)}function hk(t,e,n){t.lanes|=n;var s=t.alternate;s!==null&&(s.lanes|=n);for(var a=!1,r=t.return;r!==null;)r.childLanes|=n,s=r.alternate,s!==null&&(s.childLanes|=n),r.tag===22&&(t=r.stateNode,t===null||t._visibility&1||(a=!0)),t=r,r=r.return;a&&e!==null&&t.tag===3&&(r=t.stateNode,a=31-Ts(n),r=r.hiddenUpdates,t=r[a],t===null?r[a]=[e]:t.push(e),e.lane=n|536870912)}function am(t){if(50<Dh)throw Dh=0,v0=null,Error(Y(185));for(var e=t.return;e!==null;)t=e,e=t.return;return t.tag===3?t.stateNode:null}var Ll={},dC=new WeakMap;function Xs(t,e){if(typeof t=="object"&&t!==null){var n=dC.get(t);return n!==void 0?n:(e={value:t,source:e,stack:HS(e)},dC.set(t,e),e)}return{value:t,source:e,stack:HS(e)}}var Pl=[],Ml=0,rm=null,im=0,Hs=[],js=0,fo=null,vr=1,Sr="";function Zi(t,e){Pl[Ml++]=im,Pl[Ml++]=rm,rm=t,im=e}function dk(t,e,n){Hs[js++]=vr,Hs[js++]=Sr,Hs[js++]=fo,fo=t;var s=vr;t=Sr;var a=32-Ts(s)-1;s&=~(1<<a),n+=1;var r=32-Ts(e)+a;if(30<r){var i=a-a%5;r=(s&(1<<i)-1).toString(32),s>>=i,a-=i,vr=1<<32-Ts(e)+a|n<<a|s,Sr=r+t}else vr=1<<r|n<<a|s,Sr=t}function Q1(t){t.return!==null&&(Zi(t,1),dk(t,1,0))}function Z1(t){for(;t===rm;)rm=Pl[--Ml],Pl[Ml]=null,im=Pl[--Ml],Pl[Ml]=null;for(;t===fo;)fo=Hs[--js],Hs[js]=null,Sr=Hs[--js],Hs[js]=null,vr=Hs[--js],Hs[js]=null}var jn=null,In=null,Ke=!1,xa=null,Ba=!1,e0=Error(Y(519));function Co(t){var e=Error(Y(418,""));throw Bh(Xs(e,t)),e0}function pC(t){var e=t.stateNode,n=t.type,s=t.memoizedProps;switch(e[Ln]=t,e[cs]=s,n){case"dialog":Ge("cancel",e),Ge("close",e);break;case"iframe":case"object":case"embed":Ge("load",e);break;case"video":case"audio":for(n=0;n<Wh.length;n++)Ge(Wh[n],e);break;case"source":Ge("error",e);break;case"img":case"image":case"link":Ge("error",e),Ge("load",e);break;case"details":Ge("toggle",e);break;case"input":Ge("invalid",e),HN(e,s.value,s.defaultValue,s.checked,s.defaultChecked,s.type,s.name,!0),nm(e);break;case"select":Ge("invalid",e);break;case"textarea":Ge("invalid",e),qN(e,s.value,s.defaultValue,s.children),nm(e)}n=s.children,typeof n!="string"&&typeof n!="number"&&typeof n!="bigint"||e.textContent===""+n||s.suppressHydrationWarning===!0||UI(e.textContent,n)?(s.popover!=null&&(Ge("beforetoggle",e),Ge("toggle",e)),s.onScroll!=null&&Ge("scroll",e),s.onScrollEnd!=null&&Ge("scrollend",e),s.onClick!=null&&(e.onclick=wg),e=!0):e=!1,e||Co(t)}function fC(t){for(jn=t.return;jn;)switch(jn.tag){case 3:case 27:Ba=!0;return;case 5:case 13:Ba=!1;return;default:jn=jn.return}}function Kc(t){if(t!==jn)return!1;if(!Ke)return fC(t),Ke=!0,!1;var e=!1,n;if((n=t.tag!==3&&t.tag!==27)&&((n=t.tag===5)&&(n=t.type,n=!(n!=="form"&&n!=="button")||T0(t.type,t.memoizedProps)),n=!n),n&&(e=!0),e&&In&&Co(t),fC(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(Y(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8)if(n=t.data,n==="/$"){if(e===0){In=va(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++;t=t.nextSibling}In=null}}else In=jn?va(t.stateNode.nextSibling):null;return!0}function wd(){In=jn=null,Ke=!1}function Bh(t){xa===null?xa=[t]:xa.push(t)}var wh=Error(Y(460)),pk=Error(Y(474)),t0={then:function(){}};function mC(t){return t=t.status,t==="fulfilled"||t==="rejected"}function lf(){}function fk(t,e,n){switch(n=t[n],n===void 0?t.push(e):n!==e&&(e.then(lf,lf),e=n),e.status){case"fulfilled":return e.value;case"rejected":throw t=e.reason,t===wh?Error(Y(483)):t;default:if(typeof e.status=="string")e.then(lf,lf);else{if(t=ft,t!==null&&100<t.shellSuspendCounter)throw Error(Y(482));t=e,t.status="pending",t.then(function(s){if(e.status==="pending"){var a=e;a.status="fulfilled",a.value=s}},function(s){if(e.status==="pending"){var a=e;a.status="rejected",a.reason=s}})}switch(e.status){case"fulfilled":return e.value;case"rejected":throw t=e.reason,t===wh?Error(Y(483)):t}throw vh=e,wh}}var vh=null;function gC(){if(vh===null)throw Error(Y(459));var t=vh;return vh=null,t}var Hl=null,Vh=0;function uf(t){var e=Vh;return Vh+=1,Hl===null&&(Hl=[]),fk(Hl,t,e)}function Yc(t,e){e=e.props.ref,t.ref=e!==void 0?e:null}function cf(t,e){throw e.$$typeof===pF?Error(Y(525)):(t=Object.prototype.toString.call(e),Error(Y(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)))}function yC(t){var e=t._init;return e(t._payload)}function mk(t){function e(g,x){if(t){var b=g.deletions;b===null?(g.deletions=[x],g.flags|=16):b.push(x)}}function n(g,x){if(!t)return null;for(;x!==null;)e(g,x),x=x.sibling;return null}function s(g){for(var x=new Map;g!==null;)g.key!==null?x.set(g.key,g):x.set(g.index,g),g=g.sibling;return x}function a(g,x){return g=ci(g,x),g.index=0,g.sibling=null,g}function r(g,x,b){return g.index=b,t?(b=g.alternate,b!==null?(b=b.index,b<x?(g.flags|=33554434,x):b):(g.flags|=33554434,x)):(g.flags|=1048576,x)}function i(g){return t&&g.alternate===null&&(g.flags|=33554434),g}function o(g,x,b,w){return x===null||x.tag!==6?(x=ub(b,g.mode,w),x.return=g,x):(x=a(x,b),x.return=g,x)}function l(g,x,b,w){var v=b.type;return v===Rl?c(g,x,b.props.children,w,b.key):x!==null&&(x.elementType===v||typeof v=="object"&&v!==null&&v.$$typeof===Kr&&yC(v)===x.type)?(x=a(x,b.props),Yc(x,b),x.return=g,x):(x=Uf(b.type,b.key,b.props,null,g.mode,w),Yc(x,b),x.return=g,x)}function u(g,x,b,w){return x===null||x.tag!==4||x.stateNode.containerInfo!==b.containerInfo||x.stateNode.implementation!==b.implementation?(x=cb(b,g.mode,w),x.return=g,x):(x=a(x,b.children||[]),x.return=g,x)}function c(g,x,b,w,v){return x===null||x.tag!==7?(x=go(b,g.mode,w,v),x.return=g,x):(x=a(x,b),x.return=g,x)}function h(g,x,b){if(typeof x=="string"&&x!==""||typeof x=="number"||typeof x=="bigint")return x=ub(""+x,g.mode,b),x.return=g,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case nf:return b=Uf(x.type,x.key,x.props,null,g.mode,b),Yc(b,x),b.return=g,b;case ah:return x=cb(x,g.mode,b),x.return=g,x;case Kr:var w=x._init;return x=w(x._payload),h(g,x,b)}if(ih(x)||jc(x))return x=go(x,g.mode,b,null),x.return=g,x;if(typeof x.then=="function")return h(g,uf(x),b);if(x.$$typeof===wr)return h(g,hf(g,x),b);cf(g,x)}return null}function d(g,x,b,w){var v=x!==null?x.key:null;if(typeof b=="string"&&b!==""||typeof b=="number"||typeof b=="bigint")return v!==null?null:o(g,x,""+b,w);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case nf:return b.key===v?l(g,x,b,w):null;case ah:return b.key===v?u(g,x,b,w):null;case Kr:return v=b._init,b=v(b._payload),d(g,x,b,w)}if(ih(b)||jc(b))return v!==null?null:c(g,x,b,w,null);if(typeof b.then=="function")return d(g,x,uf(b),w);if(b.$$typeof===wr)return d(g,x,hf(g,b),w);cf(g,b)}return null}function p(g,x,b,w,v){if(typeof w=="string"&&w!==""||typeof w=="number"||typeof w=="bigint")return g=g.get(b)||null,o(x,g,""+w,v);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case nf:return g=g.get(w.key===null?b:w.key)||null,l(x,g,w,v);case ah:return g=g.get(w.key===null?b:w.key)||null,u(x,g,w,v);case Kr:var C=w._init;return w=C(w._payload),p(g,x,b,w,v)}if(ih(w)||jc(w))return g=g.get(b)||null,c(x,g,w,v,null);if(typeof w.then=="function")return p(g,x,b,uf(w),v);if(w.$$typeof===wr)return p(g,x,b,hf(x,w),v);cf(x,w)}return null}function f(g,x,b,w){for(var v=null,C=null,$=x,k=x=0,T=null;$!==null&&k<b.length;k++){$.index>k?(T=$,$=null):T=$.sibling;var E=d(g,$,b[k],w);if(E===null){$===null&&($=T);break}t&&$&&E.alternate===null&&e(g,$),x=r(E,x,k),C===null?v=E:C.sibling=E,C=E,$=T}if(k===b.length)return n(g,$),Ke&&Zi(g,k),v;if($===null){for(;k<b.length;k++)$=h(g,b[k],w),$!==null&&(x=r($,x,k),C===null?v=$:C.sibling=$,C=$);return Ke&&Zi(g,k),v}for($=s($);k<b.length;k++)T=p($,g,k,b[k],w),T!==null&&(t&&T.alternate!==null&&$.delete(T.key===null?k:T.key),x=r(T,x,k),C===null?v=T:C.sibling=T,C=T);return t&&$.forEach(function(O){return e(g,O)}),Ke&&Zi(g,k),v}function m(g,x,b,w){if(b==null)throw Error(Y(151));for(var v=null,C=null,$=x,k=x=0,T=null,E=b.next();$!==null&&!E.done;k++,E=b.next()){$.index>k?(T=$,$=null):T=$.sibling;var O=d(g,$,E.value,w);if(O===null){$===null&&($=T);break}t&&$&&O.alternate===null&&e(g,$),x=r(O,x,k),C===null?v=O:C.sibling=O,C=O,$=T}if(E.done)return n(g,$),Ke&&Zi(g,k),v;if($===null){for(;!E.done;k++,E=b.next())E=h(g,E.value,w),E!==null&&(x=r(E,x,k),C===null?v=E:C.sibling=E,C=E);return Ke&&Zi(g,k),v}for($=s($);!E.done;k++,E=b.next())E=p($,g,k,E.value,w),E!==null&&(t&&E.alternate!==null&&$.delete(E.key===null?k:E.key),x=r(E,x,k),C===null?v=E:C.sibling=E,C=E);return t&&$.forEach(function(B){return e(g,B)}),Ke&&Zi(g,k),v}function y(g,x,b,w){if(typeof b=="object"&&b!==null&&b.type===Rl&&b.key===null&&(b=b.props.children),typeof b=="object"&&b!==null){switch(b.$$typeof){case nf:e:{for(var v=b.key;x!==null;){if(x.key===v){if(v=b.type,v===Rl){if(x.tag===7){n(g,x.sibling),w=a(x,b.props.children),w.return=g,g=w;break e}}else if(x.elementType===v||typeof v=="object"&&v!==null&&v.$$typeof===Kr&&yC(v)===x.type){n(g,x.sibling),w=a(x,b.props),Yc(w,b),w.return=g,g=w;break e}n(g,x);break}else e(g,x);x=x.sibling}b.type===Rl?(w=go(b.props.children,g.mode,w,b.key),w.return=g,g=w):(w=Uf(b.type,b.key,b.props,null,g.mode,w),Yc(w,b),w.return=g,g=w)}return i(g);case ah:e:{for(v=b.key;x!==null;){if(x.key===v)if(x.tag===4&&x.stateNode.containerInfo===b.containerInfo&&x.stateNode.implementation===b.implementation){n(g,x.sibling),w=a(x,b.children||[]),w.return=g,g=w;break e}else{n(g,x);break}else e(g,x);x=x.sibling}w=cb(b,g.mode,w),w.return=g,g=w}return i(g);case Kr:return v=b._init,b=v(b._payload),y(g,x,b,w)}if(ih(b))return f(g,x,b,w);if(jc(b)){if(v=jc(b),typeof v!="function")throw Error(Y(150));return b=v.call(b),m(g,x,b,w)}if(typeof b.then=="function")return y(g,x,uf(b),w);if(b.$$typeof===wr)return y(g,x,hf(g,b),w);cf(g,b)}return typeof b=="string"&&b!==""||typeof b=="number"||typeof b=="bigint"?(b=""+b,x!==null&&x.tag===6?(n(g,x.sibling),w=a(x,b),w.return=g,g=w):(n(g,x),w=ub(b,g.mode,w),w.return=g,g=w),i(g)):n(g,x)}return function(g,x,b,w){try{Vh=0;var v=y(g,x,b,w);return Hl=null,v}catch($){if($===wh)throw $;var C=Ys(29,$,null,g.mode);return C.lanes=w,C.return=g,C}finally{}}}var $o=mk(!0),gk=mk(!1),ru=tr(null),om=tr(0);function xC(t,e){t=_r,kt(om,t),kt(ru,e),_r=t|e.baseLanes}function n0(){kt(om,_r),kt(ru,ru.current)}function J1(){_r=om.current,vn(ru),vn(om)}var oa=tr(null),Ha=null;function Zr(t){var e=t.alternate;kt(ln,ln.current&1),kt(oa,t),Ha===null&&(e===null||ru.current!==null||e.memoizedState!==null)&&(Ha=t)}function yk(t){if(t.tag===22){if(kt(ln,ln.current),kt(oa,t),Ha===null){var e=t.alternate;e!==null&&e.memoizedState!==null&&(Ha=t)}}else Jr()}function Jr(){kt(ln,ln.current),kt(oa,oa.current)}function Cr(t){vn(oa),Ha===t&&(Ha=null),vn(ln)}var ln=tr(0);function lm(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Iz=typeof AbortController<"u"?AbortController:function(){var t=[],e=this.signal={aborted:!1,addEventListener:function(n,s){t.push(s)}};this.abort=function(){e.aborted=!0,t.forEach(function(n){return n()})}},Tz=hn.unstable_scheduleCallback,Ez=hn.unstable_NormalPriority,rn={$$typeof:wr,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function ew(){return{controller:new Iz,data:new Map,refCount:0}}function vd(t){t.refCount--,t.refCount===0&&Tz(Ez,function(){t.controller.abort()})}var Sh=null,s0=0,iu=0,jl=null;function Rz(t,e){if(Sh===null){var n=Sh=[];s0=0,iu=Cw(),jl={status:"pending",value:void 0,then:function(s){n.push(s)}}}return s0++,e.then(bC,bC),e}function bC(){if(--s0===0&&Sh!==null){jl!==null&&(jl.status="fulfilled");var t=Sh;Sh=null,iu=0,jl=null;for(var e=0;e<t.length;e++)(0,t[e])()}}function Dz(t,e){var n=[],s={status:"pending",value:null,reason:null,then:function(a){n.push(a)}};return t.then(function(){s.status="fulfilled",s.value=e;for(var a=0;a<n.length;a++)(0,n[a])(e)},function(a){for(s.status="rejected",s.reason=a,a=0;a<n.length;a++)(0,n[a])(void 0)}),s}var wC=Oe.S;Oe.S=function(t,e){typeof e=="object"&&e!==null&&typeof e.then=="function"&&Rz(t,e),wC!==null&&wC(t,e)};var mo=tr(null);function tw(){var t=mo.current;return t!==null?t:ft.pooledCache}function Pf(t,e){e===null?kt(mo,mo.current):kt(mo,e.pool)}function xk(){var t=tw();return t===null?null:{parent:rn._currentValue,pool:t}}var bi=0,Me=null,st=null,qt=null,um=!1,ql=!1,No=!1,cm=0,Uh=0,Xl=null,Az=0;function Wt(){throw Error(Y(321))}function nw(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Rs(t[n],e[n]))return!1;return!0}function sw(t,e,n,s,a,r){return bi=r,Me=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Oe.H=t===null||t.memoizedState===null?jo:_i,No=!1,r=n(s,a),No=!1,ql&&(r=wk(e,n,s,a)),bk(t),r}function bk(t){Oe.H=Ya;var e=st!==null&&st.next!==null;if(bi=0,qt=st=Me=null,um=!1,Uh=0,Xl=null,e)throw Error(Y(300));t===null||wn||(t=t.dependencies,t!==null&&pm(t)&&(wn=!0))}function wk(t,e,n,s){Me=t;var a=0;do{if(ql&&(Xl=null),Uh=0,ql=!1,25<=a)throw Error(Y(301));if(a+=1,qt=st=null,t.updateQueue!=null){var r=t.updateQueue;r.lastEffect=null,r.events=null,r.stores=null,r.memoCache!=null&&(r.memoCache.index=0)}Oe.H=qo,r=e(n,s)}while(ql);return r}function _z(){var t=Oe.H,e=t.useState()[0];return e=typeof e.then=="function"?Sd(e):e,t=t.useState()[0],(st!==null?st.memoizedState:null)!==t&&(Me.flags|=1024),e}function aw(){var t=cm!==0;return cm=0,t}function rw(t,e,n){e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~n}function iw(t){if(um){for(t=t.memoizedState;t!==null;){var e=t.queue;e!==null&&(e.pending=null),t=t.next}um=!1}bi=0,qt=st=Me=null,ql=!1,Uh=cm=0,Xl=null}function rs(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return qt===null?Me.memoizedState=qt=t:qt=qt.next=t,qt}function Qt(){if(st===null){var t=Me.alternate;t=t!==null?t.memoizedState:null}else t=st.next;var e=qt===null?Me.memoizedState:qt.next;if(e!==null)qt=e,st=t;else{if(t===null)throw Me.alternate===null?Error(Y(467)):Error(Y(310));st=t,t={memoizedState:st.memoizedState,baseState:st.baseState,baseQueue:st.baseQueue,queue:st.queue,next:null},qt===null?Me.memoizedState=qt=t:qt=qt.next=t}return qt}var fg;fg=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function Sd(t){var e=Uh;return Uh+=1,Xl===null&&(Xl=[]),t=fk(Xl,t,e),e=Me,(qt===null?e.memoizedState:qt.next)===null&&(e=e.alternate,Oe.H=e===null||e.memoizedState===null?jo:_i),t}function mg(t){if(t!==null&&typeof t=="object"){if(typeof t.then=="function")return Sd(t);if(t.$$typeof===wr)return Pn(t)}throw Error(Y(438,String(t)))}function ow(t){var e=null,n=Me.updateQueue;if(n!==null&&(e=n.memoCache),e==null){var s=Me.alternate;s!==null&&(s=s.updateQueue,s!==null&&(s=s.memoCache,s!=null&&(e={data:s.data.map(function(a){return a.slice()}),index:0})))}if(e==null&&(e={data:[],index:0}),n===null&&(n=fg(),Me.updateQueue=n),n.memoCache=e,n=e.data[e.index],n===void 0)for(n=e.data[e.index]=Array(t),s=0;s<t;s++)n[s]=mF;return e.index++,n}function Dr(t,e){return typeof e=="function"?e(t):e}function Mf(t){var e=Qt();return lw(e,st,t)}function lw(t,e,n){var s=t.queue;if(s===null)throw Error(Y(311));s.lastRenderedReducer=n;var a=t.baseQueue,r=s.pending;if(r!==null){if(a!==null){var i=a.next;a.next=r.next,r.next=i}e.baseQueue=a=r,s.pending=null}if(r=t.baseState,a===null)t.memoizedState=r;else{e=a.next;var o=i=null,l=null,u=e,c=!1;do{var h=u.lane&-536870913;if(h!==u.lane?(qe&h)===h:(bi&h)===h){var d=u.revertLane;if(d===0)l!==null&&(l=l.next={lane:0,revertLane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),h===iu&&(c=!0);else if((bi&d)===d){u=u.next,d===iu&&(c=!0);continue}else h={lane:0,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},l===null?(o=l=h,i=r):l=l.next=h,Me.lanes|=d,vi|=d;h=u.action,No&&n(r,h),r=u.hasEagerState?u.eagerState:n(r,h)}else d={lane:h,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},l===null?(o=l=d,i=r):l=l.next=d,Me.lanes|=h,vi|=h;u=u.next}while(u!==null&&u!==e);if(l===null?i=r:l.next=o,!Rs(r,t.memoizedState)&&(wn=!0,c&&(n=jl,n!==null)))throw n;t.memoizedState=r,t.baseState=i,t.baseQueue=l,s.lastRenderedState=r}return a===null&&(s.lanes=0),[t.memoizedState,s.dispatch]}function Zx(t){var e=Qt(),n=e.queue;if(n===null)throw Error(Y(311));n.lastRenderedReducer=t;var s=n.dispatch,a=n.pending,r=e.memoizedState;if(a!==null){n.pending=null;var i=a=a.next;do r=t(r,i.action),i=i.next;while(i!==a);Rs(r,e.memoizedState)||(wn=!0),e.memoizedState=r,e.baseQueue===null&&(e.baseState=r),n.lastRenderedState=r}return[r,s]}function vk(t,e,n){var s=Me,a=Qt(),r=Ke;if(r){if(n===void 0)throw Error(Y(407));n=n()}else n=e();var i=!Rs((st||a).memoizedState,n);if(i&&(a.memoizedState=n,wn=!0),a=a.queue,uw($k.bind(null,s,a,t),[t]),a.getSnapshot!==e||i||qt!==null&&qt.memoizedState.tag&1){if(s.flags|=2048,ou(9,Ck.bind(null,s,a,n,e),{destroy:void 0},null),ft===null)throw Error(Y(349));r||bi&60||Sk(s,e,n)}return n}function Sk(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=Me.updateQueue,e===null?(e=fg(),Me.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function Ck(t,e,n,s){e.value=n,e.getSnapshot=s,Nk(e)&&kk(t)}function $k(t,e,n){return n(function(){Nk(e)&&kk(t)})}function Nk(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!Rs(t,n)}catch{return!0}}function kk(t){var e=xi(t,2);e!==null&&Yn(e,t,2)}function a0(t){var e=rs();if(typeof t=="function"){var n=t;if(t=n(),No){ni(!0);try{n()}finally{ni(!1)}}}return e.memoizedState=e.baseState=t,e.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:t},e}function Ik(t,e,n,s){return t.baseState=n,lw(t,st,typeof s=="function"?s:Dr)}function Oz(t,e,n,s,a){if(yg(t))throw Error(Y(485));if(t=e.action,t!==null){var r={payload:a,action:t,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(i){r.listeners.push(i)}};Oe.T!==null?n(!0):r.isTransition=!1,s(r),n=e.pending,n===null?(r.next=e.pending=r,Tk(e,r)):(r.next=n.next,e.pending=n.next=r)}}function Tk(t,e){var n=e.action,s=e.payload,a=t.state;if(e.isTransition){var r=Oe.T,i={};Oe.T=i;try{var o=n(a,s),l=Oe.S;l!==null&&l(i,o),vC(t,e,o)}catch(u){r0(t,e,u)}finally{Oe.T=r}}else try{r=n(a,s),vC(t,e,r)}catch(u){r0(t,e,u)}}function vC(t,e,n){n!==null&&typeof n=="object"&&typeof n.then=="function"?n.then(function(s){SC(t,e,s)},function(s){return r0(t,e,s)}):SC(t,e,n)}function SC(t,e,n){e.status="fulfilled",e.value=n,Ek(e),t.state=n,e=t.pending,e!==null&&(n=e.next,n===e?t.pending=null:(n=n.next,e.next=n,Tk(t,n)))}function r0(t,e,n){var s=t.pending;if(t.pending=null,s!==null){s=s.next;do e.status="rejected",e.reason=n,Ek(e),e=e.next;while(e!==s)}t.action=null}function Ek(t){t=t.listeners;for(var e=0;e<t.length;e++)(0,t[e])()}function Rk(t,e){return e}function Dk(t,e){if(Ke){var n=ft.formState;if(n!==null){e:{var s=Me;if(Ke){if(In){t:{for(var a=In,r=Ba;a.nodeType!==8;){if(!r){a=null;break t}if(a=va(a.nextSibling),a===null){a=null;break t}}r=a.data,a=r==="F!"||r==="F"?a:null}if(a){In=va(a.nextSibling),s=a.data==="F!";break e}}Co(s)}s=!1}s&&(e=n[0])}}return n=rs(),n.memoizedState=n.baseState=e,s={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Rk,lastRenderedState:e},n.queue=s,n=Xk.bind(null,Me,s),s.dispatch=n,s=a0(!1),r=pw.bind(null,Me,!1,s.queue),s=rs(),a={state:e,dispatch:null,action:t,pending:null},s.queue=a,n=Oz.bind(null,Me,a,r,n),a.dispatch=n,s.memoizedState=t,[e,n,!1]}function Ak(t){var e=Qt();return _k(e,st,t)}function _k(t,e,n){e=lw(t,e,Rk)[0],t=Mf(Dr)[0],e=typeof e=="object"&&e!==null&&typeof e.then=="function"?Sd(e):e;var s=Qt(),a=s.queue,r=a.dispatch;return n!==s.memoizedState&&(Me.flags|=2048,ou(9,Fz.bind(null,a,n),{destroy:void 0},null)),[e,r,t]}function Fz(t,e){t.action=e}function Ok(t){var e=Qt(),n=st;if(n!==null)return _k(e,n,t);Qt(),e=e.memoizedState,n=Qt();var s=n.queue.dispatch;return n.memoizedState=t,[e,s,!1]}function ou(t,e,n,s){return t={tag:t,create:e,inst:n,deps:s,next:null},e=Me.updateQueue,e===null&&(e=fg(),Me.updateQueue=e),n=e.lastEffect,n===null?e.lastEffect=t.next=t:(s=n.next,n.next=t,t.next=s,e.lastEffect=t),t}function Fk(){return Qt().memoizedState}function Bf(t,e,n,s){var a=rs();Me.flags|=t,a.memoizedState=ou(1|e,n,{destroy:void 0},s===void 0?null:s)}function gg(t,e,n,s){var a=Qt();s=s===void 0?null:s;var r=a.memoizedState.inst;st!==null&&s!==null&&nw(s,st.memoizedState.deps)?a.memoizedState=ou(e,n,r,s):(Me.flags|=t,a.memoizedState=ou(1|e,n,r,s))}function CC(t,e){Bf(8390656,8,t,e)}function uw(t,e){gg(2048,8,t,e)}function zk(t,e){return gg(4,2,t,e)}function Lk(t,e){return gg(4,4,t,e)}function Pk(t,e){if(typeof e=="function"){t=t();var n=e(t);return function(){typeof n=="function"?n():e(null)}}if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function Mk(t,e,n){n=n!=null?n.concat([t]):null,gg(4,4,Pk.bind(null,e,t),n)}function cw(){}function Bk(t,e){var n=Qt();e=e===void 0?null:e;var s=n.memoizedState;return e!==null&&nw(e,s[1])?s[0]:(n.memoizedState=[t,e],t)}function Vk(t,e){var n=Qt();e=e===void 0?null:e;var s=n.memoizedState;if(e!==null&&nw(e,s[1]))return s[0];if(s=t(),No){ni(!0);try{t()}finally{ni(!1)}}return n.memoizedState=[s,e],s}function hw(t,e,n){return n===void 0||bi&1073741824?t.memoizedState=e:(t.memoizedState=n,t=EI(),Me.lanes|=t,vi|=t,n)}function Uk(t,e,n,s){return Rs(n,e)?n:ru.current!==null?(t=hw(t,n,s),Rs(t,e)||(wn=!0),t):bi&42?(t=EI(),Me.lanes|=t,vi|=t,e):(wn=!0,t.memoizedState=n)}function Wk(t,e,n,s,a){var r=wt.p;wt.p=r!==0&&8>r?r:8;var i=Oe.T,o={};Oe.T=o,pw(t,!1,e,n);try{var l=a(),u=Oe.S;if(u!==null&&u(o,l),l!==null&&typeof l=="object"&&typeof l.then=="function"){var c=Dz(l,s);Ch(t,e,c,Es(t))}else Ch(t,e,s,Es(t))}catch(h){Ch(t,e,{then:function(){},status:"rejected",reason:h},Es())}finally{wt.p=r,Oe.T=i}}function zz(){}function i0(t,e,n,s){if(t.tag!==5)throw Error(Y(476));var a=Gk(t).queue;Wk(t,a,e,po,n===null?zz:function(){return Hk(t),n(s)})}function Gk(t){var e=t.memoizedState;if(e!==null)return e;e={memoizedState:po,baseState:po,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:po},next:null};var n={};return e.next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:n},next:null},t.memoizedState=e,t=t.alternate,t!==null&&(t.memoizedState=e),e}function Hk(t){var e=Gk(t).next.queue;Ch(t,e,{},Es())}function dw(){return Pn(jh)}function jk(){return Qt().memoizedState}function qk(){return Qt().memoizedState}function Lz(t){for(var e=t.return;e!==null;){switch(e.tag){case 24:case 3:var n=Es();t=li(n);var s=ui(e,t,n);s!==null&&(Yn(s,e,n),Nh(s,e,n)),e={cache:ew()},t.payload=e;return}e=e.return}}function Pz(t,e,n){var s=Es();n={lane:s,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null},yg(t)?Kk(e,n):(n=Y1(t,e,n,s),n!==null&&(Yn(n,t,s),Yk(n,e,s)))}function Xk(t,e,n){var s=Es();Ch(t,e,n,s)}function Ch(t,e,n,s){var a={lane:s,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(yg(t))Kk(e,a);else{var r=t.alternate;if(t.lanes===0&&(r===null||r.lanes===0)&&(r=e.lastRenderedReducer,r!==null))try{var i=e.lastRenderedState,o=r(i,n);if(a.hasEagerState=!0,a.eagerState=o,Rs(o,i))return pg(t,e,a,0),ft===null&&dg(),!1}catch{}finally{}if(n=Y1(t,e,a,s),n!==null)return Yn(n,t,s),Yk(n,e,s),!0}return!1}function pw(t,e,n,s){if(s={lane:2,revertLane:Cw(),action:s,hasEagerState:!1,eagerState:null,next:null},yg(t)){if(e)throw Error(Y(479))}else e=Y1(t,n,s,2),e!==null&&Yn(e,t,2)}function yg(t){var e=t.alternate;return t===Me||e!==null&&e===Me}function Kk(t,e){ql=um=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function Yk(t,e,n){if(n&4194176){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,PN(t,n)}}var Ya={readContext:Pn,use:mg,useCallback:Wt,useContext:Wt,useEffect:Wt,useImperativeHandle:Wt,useLayoutEffect:Wt,useInsertionEffect:Wt,useMemo:Wt,useReducer:Wt,useRef:Wt,useState:Wt,useDebugValue:Wt,useDeferredValue:Wt,useTransition:Wt,useSyncExternalStore:Wt,useId:Wt};Ya.useCacheRefresh=Wt;Ya.useMemoCache=Wt;Ya.useHostTransitionStatus=Wt;Ya.useFormState=Wt;Ya.useActionState=Wt;Ya.useOptimistic=Wt;var jo={readContext:Pn,use:mg,useCallback:function(t,e){return rs().memoizedState=[t,e===void 0?null:e],t},useContext:Pn,useEffect:CC,useImperativeHandle:function(t,e,n){n=n!=null?n.concat([t]):null,Bf(4194308,4,Pk.bind(null,e,t),n)},useLayoutEffect:function(t,e){return Bf(4194308,4,t,e)},useInsertionEffect:function(t,e){Bf(4,2,t,e)},useMemo:function(t,e){var n=rs();e=e===void 0?null:e;var s=t();if(No){ni(!0);try{t()}finally{ni(!1)}}return n.memoizedState=[s,e],s},useReducer:function(t,e,n){var s=rs();if(n!==void 0){var a=n(e);if(No){ni(!0);try{n(e)}finally{ni(!1)}}}else a=e;return s.memoizedState=s.baseState=a,t={pending:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:a},s.queue=t,t=t.dispatch=Pz.bind(null,Me,t),[s.memoizedState,t]},useRef:function(t){var e=rs();return t={current:t},e.memoizedState=t},useState:function(t){t=a0(t);var e=t.queue,n=Xk.bind(null,Me,e);return e.dispatch=n,[t.memoizedState,n]},useDebugValue:cw,useDeferredValue:function(t,e){var n=rs();return hw(n,t,e)},useTransition:function(){var t=a0(!1);return t=Wk.bind(null,Me,t.queue,!0,!1),rs().memoizedState=t,[!1,t]},useSyncExternalStore:function(t,e,n){var s=Me,a=rs();if(Ke){if(n===void 0)throw Error(Y(407));n=n()}else{if(n=e(),ft===null)throw Error(Y(349));qe&60||Sk(s,e,n)}a.memoizedState=n;var r={value:n,getSnapshot:e};return a.queue=r,CC($k.bind(null,s,r,t),[t]),s.flags|=2048,ou(9,Ck.bind(null,s,r,n,e),{destroy:void 0},null),n},useId:function(){var t=rs(),e=ft.identifierPrefix;if(Ke){var n=Sr,s=vr;n=(s&~(1<<32-Ts(s)-1)).toString(32)+n,e=":"+e+"R"+n,n=cm++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=Az++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},useCacheRefresh:function(){return rs().memoizedState=Lz.bind(null,Me)}};jo.useMemoCache=ow;jo.useHostTransitionStatus=dw;jo.useFormState=Dk;jo.useActionState=Dk;jo.useOptimistic=function(t){var e=rs();e.memoizedState=e.baseState=t;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return e.queue=n,e=pw.bind(null,Me,!0,n),n.dispatch=e,[t,e]};var _i={readContext:Pn,use:mg,useCallback:Bk,useContext:Pn,useEffect:uw,useImperativeHandle:Mk,useInsertionEffect:zk,useLayoutEffect:Lk,useMemo:Vk,useReducer:Mf,useRef:Fk,useState:function(){return Mf(Dr)},useDebugValue:cw,useDeferredValue:function(t,e){var n=Qt();return Uk(n,st.memoizedState,t,e)},useTransition:function(){var t=Mf(Dr)[0],e=Qt().memoizedState;return[typeof t=="boolean"?t:Sd(t),e]},useSyncExternalStore:vk,useId:jk};_i.useCacheRefresh=qk;_i.useMemoCache=ow;_i.useHostTransitionStatus=dw;_i.useFormState=Ak;_i.useActionState=Ak;_i.useOptimistic=function(t,e){var n=Qt();return Ik(n,st,t,e)};var qo={readContext:Pn,use:mg,useCallback:Bk,useContext:Pn,useEffect:uw,useImperativeHandle:Mk,useInsertionEffect:zk,useLayoutEffect:Lk,useMemo:Vk,useReducer:Zx,useRef:Fk,useState:function(){return Zx(Dr)},useDebugValue:cw,useDeferredValue:function(t,e){var n=Qt();return st===null?hw(n,t,e):Uk(n,st.memoizedState,t,e)},useTransition:function(){var t=Zx(Dr)[0],e=Qt().memoizedState;return[typeof t=="boolean"?t:Sd(t),e]},useSyncExternalStore:vk,useId:jk};qo.useCacheRefresh=qk;qo.useMemoCache=ow;qo.useHostTransitionStatus=dw;qo.useFormState=Ok;qo.useActionState=Ok;qo.useOptimistic=function(t,e){var n=Qt();return st!==null?Ik(n,st,t,e):(n.baseState=t,[t,n.queue.dispatch])};function Jx(t,e,n,s){e=t.memoizedState,n=n(s,e),n=n==null?e:St({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var o0={isMounted:function(t){return(t=t._reactInternals)?Nu(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var s=Es(),a=li(s);a.payload=e,n!=null&&(a.callback=n),e=ui(t,a,s),e!==null&&(Yn(e,t,s),Nh(e,t,s))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var s=Es(),a=li(s);a.tag=1,a.payload=e,n!=null&&(a.callback=n),e=ui(t,a,s),e!==null&&(Yn(e,t,s),Nh(e,t,s))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=Es(),s=li(n);s.tag=2,e!=null&&(s.callback=e),e=ui(t,s,n),e!==null&&(Yn(e,t,n),Nh(e,t,n))}};function $C(t,e,n,s,a,r,i){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(s,r,i):e.prototype&&e.prototype.isPureReactComponent?!Mh(n,s)||!Mh(a,r):!0}function NC(t,e,n,s){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,s),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,s),e.state!==t&&o0.enqueueReplaceState(e,e.state,null)}function ko(t,e){var n=e;if("ref"in e){n={};for(var s in e)s!=="ref"&&(n[s]=e[s])}if(t=t.defaultProps){n===e&&(n=St({},n));for(var a in t)n[a]===void 0&&(n[a]=t[a])}return n}var hm=typeof reportError=="function"?reportError:function(t){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof t=="object"&&t!==null&&typeof t.message=="string"?String(t.message):String(t),error:t});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",t);return}console.error(t)};function Qk(t){hm(t)}function Zk(t){console.error(t)}function Jk(t){hm(t)}function dm(t,e){try{var n=t.onUncaughtError;n(e.value,{componentStack:e.stack})}catch(s){setTimeout(function(){throw s})}}function kC(t,e,n){try{var s=t.onCaughtError;s(n.value,{componentStack:n.stack,errorBoundary:e.tag===1?e.stateNode:null})}catch(a){setTimeout(function(){throw a})}}function l0(t,e,n){return n=li(n),n.tag=3,n.payload={element:null},n.callback=function(){dm(t,e)},n}function eI(t){return t=li(t),t.tag=3,t}function tI(t,e,n,s){var a=n.type.getDerivedStateFromError;if(typeof a=="function"){var r=s.value;t.payload=function(){return a(r)},t.callback=function(){kC(e,n,s)}}var i=n.stateNode;i!==null&&typeof i.componentDidCatch=="function"&&(t.callback=function(){kC(e,n,s),typeof a!="function"&&(hi===null?hi=new Set([this]):hi.add(this));var o=s.stack;this.componentDidCatch(s.value,{componentStack:o!==null?o:""})})}function Mz(t,e,n,s,a){if(n.flags|=32768,s!==null&&typeof s=="object"&&typeof s.then=="function"){if(e=n.alternate,e!==null&&Cd(e,n,a,!0),n=oa.current,n!==null){switch(n.tag){case 13:return Ha===null?C0():n.alternate===null&&Lt===0&&(Lt=3),n.flags&=-257,n.flags|=65536,n.lanes=a,s===t0?n.flags|=16384:(e=n.updateQueue,e===null?n.updateQueue=new Set([s]):e.add(s),db(t,s,a)),!1;case 22:return n.flags|=65536,s===t0?n.flags|=16384:(e=n.updateQueue,e===null?(e={transitions:null,markerInstances:null,retryQueue:new Set([s])},n.updateQueue=e):(n=e.retryQueue,n===null?e.retryQueue=new Set([s]):n.add(s)),db(t,s,a)),!1}throw Error(Y(435,n.tag))}return db(t,s,a),C0(),!1}if(Ke)return e=oa.current,e!==null?(!(e.flags&65536)&&(e.flags|=256),e.flags|=65536,e.lanes=a,s!==e0&&(t=Error(Y(422),{cause:s}),Bh(Xs(t,n)))):(s!==e0&&(e=Error(Y(423),{cause:s}),Bh(Xs(e,n))),t=t.current.alternate,t.flags|=65536,a&=-a,t.lanes|=a,s=Xs(s,n),a=l0(t.stateNode,s,a),rb(t,a),Lt!==4&&(Lt=2)),!1;var r=Error(Y(520),{cause:s});if(r=Xs(r,n),Eh===null?Eh=[r]:Eh.push(r),Lt!==4&&(Lt=2),e===null)return!0;s=Xs(s,n),n=e;do{switch(n.tag){case 3:return n.flags|=65536,t=a&-a,n.lanes|=t,t=l0(n.stateNode,s,t),rb(n,t),!1;case 1:if(e=n.type,r=n.stateNode,(n.flags&128)===0&&(typeof e.getDerivedStateFromError=="function"||r!==null&&typeof r.componentDidCatch=="function"&&(hi===null||!hi.has(r))))return n.flags|=65536,a&=-a,n.lanes|=a,a=eI(a),tI(a,t,n,s),rb(n,a),!1}n=n.return}while(n!==null);return!1}var nI=Error(Y(461)),wn=!1;function kn(t,e,n,s){e.child=t===null?gk(e,null,n,s):$o(e,t.child,n,s)}function IC(t,e,n,s,a){n=n.render;var r=e.ref;if("ref"in s){var i={};for(var o in s)o!=="ref"&&(i[o]=s[o])}else i=s;return Io(e),s=sw(t,e,n,i,r,a),o=aw(),t!==null&&!wn?(rw(t,e,a),Ar(t,e,a)):(Ke&&o&&Q1(e),e.flags|=1,kn(t,e,s,a),e.child)}function TC(t,e,n,s,a){if(t===null){var r=n.type;return typeof r=="function"&&!xw(r)&&r.defaultProps===void 0&&n.compare===null?(e.tag=15,e.type=r,sI(t,e,r,s,a)):(t=Uf(n.type,null,s,e,e.mode,a),t.ref=e.ref,t.return=e,e.child=t)}if(r=t.child,!fw(t,a)){var i=r.memoizedProps;if(n=n.compare,n=n!==null?n:Mh,n(i,s)&&t.ref===e.ref)return Ar(t,e,a)}return e.flags|=1,t=ci(r,s),t.ref=e.ref,t.return=e,e.child=t}function sI(t,e,n,s,a){if(t!==null){var r=t.memoizedProps;if(Mh(r,s)&&t.ref===e.ref)if(wn=!1,e.pendingProps=s=r,fw(t,a))t.flags&131072&&(wn=!0);else return e.lanes=t.lanes,Ar(t,e,a)}return u0(t,e,n,s,a)}function aI(t,e,n){var s=e.pendingProps,a=s.children,r=(e.stateNode._pendingVisibility&2)!==0,i=t!==null?t.memoizedState:null;if($h(t,e),s.mode==="hidden"||r){if(e.flags&128){if(s=i!==null?i.baseLanes|n:n,t!==null){for(a=e.child=t.child,r=0;a!==null;)r=r|a.lanes|a.childLanes,a=a.sibling;e.childLanes=r&~s}else e.childLanes=0,e.child=null;return EC(t,e,s,n)}if(n&536870912)e.memoizedState={baseLanes:0,cachePool:null},t!==null&&Pf(e,i!==null?i.cachePool:null),i!==null?xC(e,i):n0(),yk(e);else return e.lanes=e.childLanes=536870912,EC(t,e,i!==null?i.baseLanes|n:n,n)}else i!==null?(Pf(e,i.cachePool),xC(e,i),Jr(),e.memoizedState=null):(t!==null&&Pf(e,null),n0(),Jr());return kn(t,e,a,n),e.child}function EC(t,e,n,s){var a=tw();return a=a===null?null:{parent:rn._currentValue,pool:a},e.memoizedState={baseLanes:n,cachePool:a},t!==null&&Pf(e,null),n0(),yk(e),t!==null&&Cd(t,e,s,!0),null}function $h(t,e){var n=e.ref;if(n===null)t!==null&&t.ref!==null&&(e.flags|=2097664);else{if(typeof n!="function"&&typeof n!="object")throw Error(Y(284));(t===null||t.ref!==n)&&(e.flags|=2097664)}}function u0(t,e,n,s,a){return Io(e),n=sw(t,e,n,s,void 0,a),s=aw(),t!==null&&!wn?(rw(t,e,a),Ar(t,e,a)):(Ke&&s&&Q1(e),e.flags|=1,kn(t,e,n,a),e.child)}function RC(t,e,n,s,a,r){return Io(e),e.updateQueue=null,n=wk(e,s,n,a),bk(t),s=aw(),t!==null&&!wn?(rw(t,e,r),Ar(t,e,r)):(Ke&&s&&Q1(e),e.flags|=1,kn(t,e,n,r),e.child)}function DC(t,e,n,s,a){if(Io(e),e.stateNode===null){var r=Ll,i=n.contextType;typeof i=="object"&&i!==null&&(r=Pn(i)),r=new n(s,r),e.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,r.updater=o0,e.stateNode=r,r._reactInternals=e,r=e.stateNode,r.props=s,r.state=e.memoizedState,r.refs={},mw(e),i=n.contextType,r.context=typeof i=="object"&&i!==null?Pn(i):Ll,r.state=e.memoizedState,i=n.getDerivedStateFromProps,typeof i=="function"&&(Jx(e,n,i,s),r.state=e.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof r.getSnapshotBeforeUpdate=="function"||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(i=r.state,typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount(),i!==r.state&&o0.enqueueReplaceState(r,r.state,null),Ih(e,s,r,a),kh(),r.state=e.memoizedState),typeof r.componentDidMount=="function"&&(e.flags|=4194308),s=!0}else if(t===null){r=e.stateNode;var o=e.memoizedProps,l=ko(n,o);r.props=l;var u=r.context,c=n.contextType;i=Ll,typeof c=="object"&&c!==null&&(i=Pn(c));var h=n.getDerivedStateFromProps;c=typeof h=="function"||typeof r.getSnapshotBeforeUpdate=="function",o=e.pendingProps!==o,c||typeof r.UNSAFE_componentWillReceiveProps!="function"&&typeof r.componentWillReceiveProps!="function"||(o||u!==i)&&NC(e,r,s,i),Yr=!1;var d=e.memoizedState;r.state=d,Ih(e,s,r,a),kh(),u=e.memoizedState,o||d!==u||Yr?(typeof h=="function"&&(Jx(e,n,h,s),u=e.memoizedState),(l=Yr||$C(e,n,l,s,d,u,i))?(c||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount()),typeof r.componentDidMount=="function"&&(e.flags|=4194308)):(typeof r.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=s,e.memoizedState=u),r.props=s,r.state=u,r.context=i,s=l):(typeof r.componentDidMount=="function"&&(e.flags|=4194308),s=!1)}else{r=e.stateNode,m0(t,e),i=e.memoizedProps,c=ko(n,i),r.props=c,h=e.pendingProps,d=r.context,u=n.contextType,l=Ll,typeof u=="object"&&u!==null&&(l=Pn(u)),o=n.getDerivedStateFromProps,(u=typeof o=="function"||typeof r.getSnapshotBeforeUpdate=="function")||typeof r.UNSAFE_componentWillReceiveProps!="function"&&typeof r.componentWillReceiveProps!="function"||(i!==h||d!==l)&&NC(e,r,s,l),Yr=!1,d=e.memoizedState,r.state=d,Ih(e,s,r,a),kh();var p=e.memoizedState;i!==h||d!==p||Yr||t!==null&&t.dependencies!==null&&pm(t.dependencies)?(typeof o=="function"&&(Jx(e,n,o,s),p=e.memoizedState),(c=Yr||$C(e,n,c,s,d,p,l)||t!==null&&t.dependencies!==null&&pm(t.dependencies))?(u||typeof r.UNSAFE_componentWillUpdate!="function"&&typeof r.componentWillUpdate!="function"||(typeof r.componentWillUpdate=="function"&&r.componentWillUpdate(s,p,l),typeof r.UNSAFE_componentWillUpdate=="function"&&r.UNSAFE_componentWillUpdate(s,p,l)),typeof r.componentDidUpdate=="function"&&(e.flags|=4),typeof r.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof r.componentDidUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof r.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),e.memoizedProps=s,e.memoizedState=p),r.props=s,r.state=p,r.context=l,s=c):(typeof r.componentDidUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof r.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),s=!1)}return r=s,$h(t,e),s=(e.flags&128)!==0,r||s?(r=e.stateNode,n=s&&typeof n.getDerivedStateFromError!="function"?null:r.render(),e.flags|=1,t!==null&&s?(e.child=$o(e,t.child,null,a),e.child=$o(e,null,n,a)):kn(t,e,n,a),e.memoizedState=r.state,t=e.child):t=Ar(t,e,a),t}function AC(t,e,n,s){return wd(),e.flags|=256,kn(t,e,n,s),e.child}var eb={dehydrated:null,treeContext:null,retryLane:0};function tb(t){return{baseLanes:t,cachePool:xk()}}function nb(t,e,n){return t=t!==null?t.childLanes&~n:0,e&&(t|=Qs),t}function rI(t,e,n){var s=e.pendingProps,a=!1,r=(e.flags&128)!==0,i;if((i=r)||(i=t!==null&&t.memoizedState===null?!1:(ln.current&2)!==0),i&&(a=!0,e.flags&=-129),i=(e.flags&32)!==0,e.flags&=-33,t===null){if(Ke){if(a?Zr(e):Jr(),Ke){var o=In,l;if(l=o){e:{for(l=o,o=Ba;l.nodeType!==8;){if(!o){o=null;break e}if(l=va(l.nextSibling),l===null){o=null;break e}}o=l}o!==null?(e.memoizedState={dehydrated:o,treeContext:fo!==null?{id:vr,overflow:Sr}:null,retryLane:536870912},l=Ys(18,null,null,0),l.stateNode=o,l.return=e,e.child=l,jn=e,In=null,l=!0):l=!1}l||Co(e)}if(o=e.memoizedState,o!==null&&(o=o.dehydrated,o!==null))return o.data==="$!"?e.lanes=16:e.lanes=536870912,null;Cr(e)}return o=s.children,s=s.fallback,a?(Jr(),a=e.mode,o=h0({mode:"hidden",children:o},a),s=go(s,a,n,null),o.return=e,s.return=e,o.sibling=s,e.child=o,a=e.child,a.memoizedState=tb(n),a.childLanes=nb(t,i,n),e.memoizedState=eb,s):(Zr(e),c0(e,o))}if(l=t.memoizedState,l!==null&&(o=l.dehydrated,o!==null)){if(r)e.flags&256?(Zr(e),e.flags&=-257,e=sb(t,e,n)):e.memoizedState!==null?(Jr(),e.child=t.child,e.flags|=128,e=null):(Jr(),a=s.fallback,o=e.mode,s=h0({mode:"visible",children:s.children},o),a=go(a,o,n,null),a.flags|=2,s.return=e,a.return=e,s.sibling=a,e.child=s,$o(e,t.child,null,n),s=e.child,s.memoizedState=tb(n),s.childLanes=nb(t,i,n),e.memoizedState=eb,e=a);else if(Zr(e),o.data==="$!"){if(i=o.nextSibling&&o.nextSibling.dataset,i)var u=i.dgst;i=u,s=Error(Y(419)),s.stack="",s.digest=i,Bh({value:s,source:null,stack:null}),e=sb(t,e,n)}else if(wn||Cd(t,e,n,!1),i=(n&t.childLanes)!==0,wn||i){if(i=ft,i!==null){if(s=n&-n,s&42)s=1;else switch(s){case 2:s=1;break;case 8:s=4;break;case 32:s=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:s=64;break;case 268435456:s=134217728;break;default:s=0}if(s=s&(i.suspendedLanes|n)?0:s,s!==0&&s!==l.retryLane)throw l.retryLane=s,xi(t,s),Yn(i,t,s),nI}o.data==="$?"||C0(),e=sb(t,e,n)}else o.data==="$?"?(e.flags|=128,e.child=t.child,e=eL.bind(null,t),o._reactRetry=e,e=null):(t=l.treeContext,In=va(o.nextSibling),jn=e,Ke=!0,xa=null,Ba=!1,t!==null&&(Hs[js++]=vr,Hs[js++]=Sr,Hs[js++]=fo,vr=t.id,Sr=t.overflow,fo=e),e=c0(e,s.children),e.flags|=4096);return e}return a?(Jr(),a=s.fallback,o=e.mode,l=t.child,u=l.sibling,s=ci(l,{mode:"hidden",children:s.children}),s.subtreeFlags=l.subtreeFlags&31457280,u!==null?a=ci(u,a):(a=go(a,o,n,null),a.flags|=2),a.return=e,s.return=e,s.sibling=a,e.child=s,s=a,a=e.child,o=t.child.memoizedState,o===null?o=tb(n):(l=o.cachePool,l!==null?(u=rn._currentValue,l=l.parent!==u?{parent:u,pool:u}:l):l=xk(),o={baseLanes:o.baseLanes|n,cachePool:l}),a.memoizedState=o,a.childLanes=nb(t,i,n),e.memoizedState=eb,s):(Zr(e),n=t.child,t=n.sibling,n=ci(n,{mode:"visible",children:s.children}),n.return=e,n.sibling=null,t!==null&&(i=e.deletions,i===null?(e.deletions=[t],e.flags|=16):i.push(t)),e.child=n,e.memoizedState=null,n)}function c0(t,e){return e=h0({mode:"visible",children:e},t.mode),e.return=t,t.child=e}function h0(t,e){return II(t,e,0,null)}function sb(t,e,n){return $o(e,t.child,null,n),t=c0(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function _C(t,e,n){t.lanes|=e;var s=t.alternate;s!==null&&(s.lanes|=e),p0(t.return,e,n)}function ab(t,e,n,s,a){var r=t.memoizedState;r===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:s,tail:n,tailMode:a}:(r.isBackwards=e,r.rendering=null,r.renderingStartTime=0,r.last=s,r.tail=n,r.tailMode=a)}function iI(t,e,n){var s=e.pendingProps,a=s.revealOrder,r=s.tail;if(kn(t,e,s.children,n),s=ln.current,s&2)s=s&1|2,e.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&_C(t,n,e);else if(t.tag===19)_C(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}s&=1}switch(kt(ln,s),a){case"forwards":for(n=e.child,a=null;n!==null;)t=n.alternate,t!==null&&lm(t)===null&&(a=n),n=n.sibling;n=a,n===null?(a=e.child,e.child=null):(a=n.sibling,n.sibling=null),ab(e,!1,a,n,r);break;case"backwards":for(n=null,a=e.child,e.child=null;a!==null;){if(t=a.alternate,t!==null&&lm(t)===null){e.child=a;break}t=a.sibling,a.sibling=n,n=a,a=t}ab(e,!0,n,null,r);break;case"together":ab(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Ar(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),vi|=e.lanes,!(n&e.childLanes))if(t!==null){if(Cd(t,e,n,!1),(n&e.childLanes)===0)return null}else return null;if(t!==null&&e.child!==t.child)throw Error(Y(153));if(e.child!==null){for(t=e.child,n=ci(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=ci(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function fw(t,e){return t.lanes&e?!0:(t=t.dependencies,!!(t!==null&&pm(t)))}function Bz(t,e,n){switch(e.tag){case 3:Jf(e,e.stateNode.containerInfo),ei(e,rn,t.memoizedState.cache),wd();break;case 27:case 5:Hb(e);break;case 4:Jf(e,e.stateNode.containerInfo);break;case 10:ei(e,e.type,e.memoizedProps.value);break;case 13:var s=e.memoizedState;if(s!==null)return s.dehydrated!==null?(Zr(e),e.flags|=128,null):n&e.child.childLanes?rI(t,e,n):(Zr(e),t=Ar(t,e,n),t!==null?t.sibling:null);Zr(e);break;case 19:var a=(t.flags&128)!==0;if(s=(n&e.childLanes)!==0,s||(Cd(t,e,n,!1),s=(n&e.childLanes)!==0),a){if(s)return iI(t,e,n);e.flags|=128}if(a=e.memoizedState,a!==null&&(a.rendering=null,a.tail=null,a.lastEffect=null),kt(ln,ln.current),s)break;return null;case 22:case 23:return e.lanes=0,aI(t,e,n);case 24:ei(e,rn,t.memoizedState.cache)}return Ar(t,e,n)}function oI(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps)wn=!0;else{if(!fw(t,n)&&!(e.flags&128))return wn=!1,Bz(t,e,n);wn=!!(t.flags&131072)}else wn=!1,Ke&&e.flags&1048576&&dk(e,im,e.index);switch(e.lanes=0,e.tag){case 16:e:{t=e.pendingProps;var s=e.elementType,a=s._init;if(s=a(s._payload),e.type=s,typeof s=="function")xw(s)?(t=ko(s,t),e.tag=1,e=DC(null,e,s,t,n)):(e.tag=0,e=u0(null,e,s,t,n));else{if(s!=null){if(a=s.$$typeof,a===M1){e.tag=11,e=IC(null,e,s,t,n);break e}else if(a===B1){e.tag=14,e=TC(null,e,s,t,n);break e}}throw e=Wb(s)||s,Error(Y(306,e,""))}}return e;case 0:return u0(t,e,e.type,e.pendingProps,n);case 1:return s=e.type,a=ko(s,e.pendingProps),DC(t,e,s,a,n);case 3:e:{if(Jf(e,e.stateNode.containerInfo),t===null)throw Error(Y(387));var r=e.pendingProps;a=e.memoizedState,s=a.element,m0(t,e),Ih(e,r,null,n);var i=e.memoizedState;if(r=i.cache,ei(e,rn,r),r!==a.cache&&f0(e,[rn],n,!0),kh(),r=i.element,a.isDehydrated)if(a={element:r,isDehydrated:!1,cache:i.cache},e.updateQueue.baseState=a,e.memoizedState=a,e.flags&256){e=AC(t,e,r,n);break e}else if(r!==s){s=Xs(Error(Y(424)),e),Bh(s),e=AC(t,e,r,n);break e}else for(In=va(e.stateNode.containerInfo.firstChild),jn=e,Ke=!0,xa=null,Ba=!0,n=gk(e,null,r,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(wd(),r===s){e=Ar(t,e,n);break e}kn(t,e,r,n)}e=e.child}return e;case 26:return $h(t,e),t===null?(n=QC(e.type,null,e.pendingProps,null))?e.memoizedState=n:Ke||(n=e.type,t=e.pendingProps,s=wm(oi.current).createElement(n),s[Ln]=e,s[cs]=t,Tn(s,n,t),yn(s),e.stateNode=s):e.memoizedState=QC(e.type,t.memoizedProps,e.pendingProps,t.memoizedState),null;case 27:return Hb(e),t===null&&Ke&&(s=e.stateNode=HI(e.type,e.pendingProps,oi.current),jn=e,Ba=!0,In=va(s.firstChild)),s=e.pendingProps.children,t!==null||Ke?kn(t,e,s,n):e.child=$o(e,null,s,n),$h(t,e),e.child;case 5:return t===null&&Ke&&((a=s=In)&&(s=gL(s,e.type,e.pendingProps,Ba),s!==null?(e.stateNode=s,jn=e,In=va(s.firstChild),Ba=!1,a=!0):a=!1),a||Co(e)),Hb(e),a=e.type,r=e.pendingProps,i=t!==null?t.memoizedProps:null,s=r.children,T0(a,r)?s=null:i!==null&&T0(a,i)&&(e.flags|=32),e.memoizedState!==null&&(a=sw(t,e,_z,null,null,n),jh._currentValue=a),$h(t,e),kn(t,e,s,n),e.child;case 6:return t===null&&Ke&&((t=n=In)&&(n=yL(n,e.pendingProps,Ba),n!==null?(e.stateNode=n,jn=e,In=null,t=!0):t=!1),t||Co(e)),null;case 13:return rI(t,e,n);case 4:return Jf(e,e.stateNode.containerInfo),s=e.pendingProps,t===null?e.child=$o(e,null,s,n):kn(t,e,s,n),e.child;case 11:return IC(t,e,e.type,e.pendingProps,n);case 7:return kn(t,e,e.pendingProps,n),e.child;case 8:return kn(t,e,e.pendingProps.children,n),e.child;case 12:return kn(t,e,e.pendingProps.children,n),e.child;case 10:return s=e.pendingProps,ei(e,e.type,s.value),kn(t,e,s.children,n),e.child;case 9:return a=e.type._context,s=e.pendingProps.children,Io(e),a=Pn(a),s=s(a),e.flags|=1,kn(t,e,s,n),e.child;case 14:return TC(t,e,e.type,e.pendingProps,n);case 15:return sI(t,e,e.type,e.pendingProps,n);case 19:return iI(t,e,n);case 22:return aI(t,e,n);case 24:return Io(e),s=Pn(rn),t===null?(a=tw(),a===null&&(a=ft,r=ew(),a.pooledCache=r,r.refCount++,r!==null&&(a.pooledCacheLanes|=n),a=r),e.memoizedState={parent:s,cache:a},mw(e),ei(e,rn,a)):(t.lanes&n&&(m0(t,e),Ih(e,null,null,n),kh()),a=t.memoizedState,r=e.memoizedState,a.parent!==s?(a={parent:s,cache:s},e.memoizedState=a,e.lanes===0&&(e.memoizedState=e.updateQueue.baseState=a),ei(e,rn,s)):(s=r.cache,ei(e,rn,s),s!==a.cache&&f0(e,[rn],n,!0))),kn(t,e,e.pendingProps.children,n),e.child;case 29:throw e.pendingProps}throw Error(Y(156,e.tag))}var d0=tr(null),Xo=null,$r=null;function ei(t,e,n){kt(d0,e._currentValue),e._currentValue=n}function Nr(t){t._currentValue=d0.current,vn(d0)}function p0(t,e,n){for(;t!==null;){var s=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,s!==null&&(s.childLanes|=e)):s!==null&&(s.childLanes&e)!==e&&(s.childLanes|=e),t===n)break;t=t.return}}function f0(t,e,n,s){var a=t.child;for(a!==null&&(a.return=t);a!==null;){var r=a.dependencies;if(r!==null){var i=a.child;r=r.firstContext;e:for(;r!==null;){var o=r;r=a;for(var l=0;l<e.length;l++)if(o.context===e[l]){r.lanes|=n,o=r.alternate,o!==null&&(o.lanes|=n),p0(r.return,n,t),s||(i=null);break e}r=o.next}}else if(a.tag===18){if(i=a.return,i===null)throw Error(Y(341));i.lanes|=n,r=i.alternate,r!==null&&(r.lanes|=n),p0(i,n,t),i=null}else i=a.child;if(i!==null)i.return=a;else for(i=a;i!==null;){if(i===t){i=null;break}if(a=i.sibling,a!==null){a.return=i.return,i=a;break}i=i.return}a=i}}function Cd(t,e,n,s){t=null;for(var a=e,r=!1;a!==null;){if(!r){if(a.flags&524288)r=!0;else if(a.flags&262144)break}if(a.tag===10){var i=a.alternate;if(i===null)throw Error(Y(387));if(i=i.memoizedProps,i!==null){var o=a.type;Rs(a.pendingProps.value,i.value)||(t!==null?t.push(o):t=[o])}}else if(a===Zf.current){if(i=a.alternate,i===null)throw Error(Y(387));i.memoizedState.memoizedState!==a.memoizedState.memoizedState&&(t!==null?t.push(jh):t=[jh])}a=a.return}t!==null&&f0(e,t,n,s),e.flags|=262144}function pm(t){for(t=t.firstContext;t!==null;){if(!Rs(t.context._currentValue,t.memoizedValue))return!0;t=t.next}return!1}function Io(t){Xo=t,$r=null,t=t.dependencies,t!==null&&(t.firstContext=null)}function Pn(t){return lI(Xo,t)}function hf(t,e){return Xo===null&&Io(t),lI(t,e)}function lI(t,e){var n=e._currentValue;if(e={context:e,memoizedValue:n,next:null},$r===null){if(t===null)throw Error(Y(308));$r=e,t.dependencies={lanes:0,firstContext:e},t.flags|=524288}else $r=$r.next=e;return n}var Yr=!1;function mw(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function m0(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,callbacks:null})}function li(t){return{lane:t,tag:0,payload:null,callback:null,next:null}}function ui(t,e,n){var s=t.updateQueue;if(s===null)return null;if(s=s.shared,At&2){var a=s.pending;return a===null?e.next=e:(e.next=a.next,a.next=e),s.pending=e,e=am(t),hk(t,null,n),e}return pg(t,s,e,n),am(t)}function Nh(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194176)!==0)){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,PN(t,n)}}function rb(t,e){var n=t.updateQueue,s=t.alternate;if(s!==null&&(s=s.updateQueue,n===s)){var a=null,r=null;if(n=n.firstBaseUpdate,n!==null){do{var i={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};r===null?a=r=i:r=r.next=i,n=n.next}while(n!==null);r===null?a=r=e:r=r.next=e}else a=r=e;n={baseState:s.baseState,firstBaseUpdate:a,lastBaseUpdate:r,shared:s.shared,callbacks:s.callbacks},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}var g0=!1;function kh(){if(g0){var t=jl;if(t!==null)throw t}}function Ih(t,e,n,s){g0=!1;var a=t.updateQueue;Yr=!1;var r=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(o!==null){a.shared.pending=null;var l=o,u=l.next;l.next=null,i===null?r=u:i.next=u,i=l;var c=t.alternate;c!==null&&(c=c.updateQueue,o=c.lastBaseUpdate,o!==i&&(o===null?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(r!==null){var h=a.baseState;i=0,c=u=l=null,o=r;do{var d=o.lane&-536870913,p=d!==o.lane;if(p?(qe&d)===d:(s&d)===d){d!==0&&d===iu&&(g0=!0),c!==null&&(c=c.next={lane:0,tag:o.tag,payload:o.payload,callback:null,next:null});e:{var f=t,m=o;d=e;var y=n;switch(m.tag){case 1:if(f=m.payload,typeof f=="function"){h=f.call(y,h,d);break e}h=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=m.payload,d=typeof f=="function"?f.call(y,h,d):f,d==null)break e;h=St({},h,d);break e;case 2:Yr=!0}}d=o.callback,d!==null&&(t.flags|=64,p&&(t.flags|=8192),p=a.callbacks,p===null?a.callbacks=[d]:p.push(d))}else p={lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},c===null?(u=c=p,l=h):c=c.next=p,i|=d;if(o=o.next,o===null){if(o=a.shared.pending,o===null)break;p=o,o=p.next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}while(!0);c===null&&(l=h),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,r===null&&(a.shared.lanes=0),vi|=i,t.lanes=i,t.memoizedState=h}}function uI(t,e){if(typeof t!="function")throw Error(Y(191,t));t.call(e)}function cI(t,e){var n=t.callbacks;if(n!==null)for(t.callbacks=null,t=0;t<n.length;t++)uI(n[t],e)}function $d(t,e){try{var n=e.updateQueue,s=n!==null?n.lastEffect:null;if(s!==null){var a=s.next;n=a;do{if((n.tag&t)===t){s=void 0;var r=n.create,i=n.inst;s=r(),i.destroy=s}n=n.next}while(n!==a)}}catch(o){ut(e,e.return,o)}}function wi(t,e,n){try{var s=e.updateQueue,a=s!==null?s.lastEffect:null;if(a!==null){var r=a.next;s=r;do{if((s.tag&t)===t){var i=s.inst,o=i.destroy;if(o!==void 0){i.destroy=void 0,a=e;var l=n;try{o()}catch(u){ut(a,l,u)}}}s=s.next}while(s!==r)}}catch(u){ut(e,e.return,u)}}function hI(t){var e=t.updateQueue;if(e!==null){var n=t.stateNode;try{cI(e,n)}catch(s){ut(t,t.return,s)}}}function dI(t,e,n){n.props=ko(t.type,t.memoizedProps),n.state=t.memoizedState;try{n.componentWillUnmount()}catch(s){ut(t,e,s)}}function lo(t,e){try{var n=t.ref;if(n!==null){var s=t.stateNode;switch(t.tag){case 26:case 27:case 5:var a=s;break;default:a=s}typeof n=="function"?t.refCleanup=n(a):n.current=a}}catch(r){ut(t,e,r)}}function $s(t,e){var n=t.ref,s=t.refCleanup;if(n!==null)if(typeof s=="function")try{s()}catch(a){ut(t,e,a)}finally{t.refCleanup=null,t=t.alternate,t!=null&&(t.refCleanup=null)}else if(typeof n=="function")try{n(null)}catch(a){ut(t,e,a)}else n.current=null}function pI(t){var e=t.type,n=t.memoizedProps,s=t.stateNode;try{e:switch(e){case"button":case"input":case"select":case"textarea":n.autoFocus&&s.focus();break e;case"img":n.src?s.src=n.src:n.srcSet&&(s.srcset=n.srcSet)}}catch(a){ut(t,t.return,a)}}function OC(t,e,n){try{var s=t.stateNode;hL(s,t.type,n,e),s[cs]=e}catch(a){ut(t,t.return,a)}}function fI(t){return t.tag===5||t.tag===3||t.tag===26||t.tag===27||t.tag===4}function ib(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||fI(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==27&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function y0(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=wg));else if(s!==4&&s!==27&&(t=t.child,t!==null))for(y0(t,e,n),t=t.sibling;t!==null;)y0(t,e,n),t=t.sibling}function fm(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(s!==4&&s!==27&&(t=t.child,t!==null))for(fm(t,e,n),t=t.sibling;t!==null;)fm(t,e,n),t=t.sibling}var gr=!1,zt=!1,ob=!1,FC=typeof WeakSet=="function"?WeakSet:Set,gn=null,zC=!1;function Vz(t,e){if(t=t.containerInfo,k0=$m,t=ak(t),X1(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var s=n.getSelection&&n.getSelection();if(s&&s.rangeCount!==0){n=s.anchorNode;var a=s.anchorOffset,r=s.focusNode;s=s.focusOffset;try{n.nodeType,r.nodeType}catch{n=null;break e}var i=0,o=-1,l=-1,u=0,c=0,h=t,d=null;t:for(;;){for(var p;h!==n||a!==0&&h.nodeType!==3||(o=i+a),h!==r||s!==0&&h.nodeType!==3||(l=i+s),h.nodeType===3&&(i+=h.nodeValue.length),(p=h.firstChild)!==null;)d=h,h=p;for(;;){if(h===t)break t;if(d===n&&++u===a&&(o=i),d===r&&++c===s&&(l=i),(p=h.nextSibling)!==null)break;h=d,d=h.parentNode}h=p}n=o===-1||l===-1?null:{start:o,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(I0={focusedElem:t,selectionRange:n},$m=!1,gn=e;gn!==null;)if(e=gn,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,gn=t;else for(;gn!==null;){switch(e=gn,r=e.alternate,t=e.flags,e.tag){case 0:break;case 11:case 15:break;case 1:if(t&1024&&r!==null){t=void 0,n=e,a=r.memoizedProps,r=r.memoizedState,s=n.stateNode;try{var f=ko(n.type,a,n.elementType===n.type);t=s.getSnapshotBeforeUpdate(f,r),s.__reactInternalSnapshotBeforeUpdate=t}catch(m){ut(n,n.return,m)}}break;case 3:if(t&1024){if(t=e.stateNode.containerInfo,n=t.nodeType,n===9)E0(t);else if(n===1)switch(t.nodeName){case"HEAD":case"HTML":case"BODY":E0(t);break;default:t.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if(t&1024)throw Error(Y(163))}if(t=e.sibling,t!==null){t.return=e.return,gn=t;break}gn=e.return}return f=zC,zC=!1,f}function mI(t,e,n){var s=n.flags;switch(n.tag){case 0:case 11:case 15:hr(t,n),s&4&&$d(5,n);break;case 1:if(hr(t,n),s&4)if(t=n.stateNode,e===null)try{t.componentDidMount()}catch(o){ut(n,n.return,o)}else{var a=ko(n.type,e.memoizedProps);e=e.memoizedState;try{t.componentDidUpdate(a,e,t.__reactInternalSnapshotBeforeUpdate)}catch(o){ut(n,n.return,o)}}s&64&&hI(n),s&512&&lo(n,n.return);break;case 3:if(hr(t,n),s&64&&(s=n.updateQueue,s!==null)){if(t=null,n.child!==null)switch(n.child.tag){case 27:case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}try{cI(s,t)}catch(o){ut(n,n.return,o)}}break;case 26:hr(t,n),s&512&&lo(n,n.return);break;case 27:case 5:hr(t,n),e===null&&s&4&&pI(n),s&512&&lo(n,n.return);break;case 12:hr(t,n);break;case 13:hr(t,n),s&4&&xI(t,n);break;case 22:if(a=n.memoizedState!==null||gr,!a){e=e!==null&&e.memoizedState!==null||zt;var r=gr,i=zt;gr=a,(zt=e)&&!i?Xr(t,n,(n.subtreeFlags&8772)!==0):hr(t,n),gr=r,zt=i}s&512&&(n.memoizedProps.mode==="manual"?lo(n,n.return):$s(n,n.return));break;default:hr(t,n)}}function gI(t){var e=t.alternate;e!==null&&(t.alternate=null,gI(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&U1(e)),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}var jt=null,Ss=!1;function cr(t,e,n){for(n=n.child;n!==null;)yI(t,e,n),n=n.sibling}function yI(t,e,n){if(Is&&typeof Is.onCommitFiberUnmount=="function")try{Is.onCommitFiberUnmount(gd,n)}catch{}switch(n.tag){case 26:zt||$s(n,e),cr(t,e,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode,n.parentNode.removeChild(n));break;case 27:zt||$s(n,e);var s=jt,a=Ss;for(jt=n.stateNode,cr(t,e,n),n=n.stateNode,e=n.attributes;e.length;)n.removeAttributeNode(e[0]);U1(n),jt=s,Ss=a;break;case 5:zt||$s(n,e);case 6:a=jt;var r=Ss;if(jt=null,cr(t,e,n),jt=a,Ss=r,jt!==null)if(Ss)try{t=jt,s=n.stateNode,t.nodeType===8?t.parentNode.removeChild(s):t.removeChild(s)}catch(i){ut(n,e,i)}else try{jt.removeChild(n.stateNode)}catch(i){ut(n,e,i)}break;case 18:jt!==null&&(Ss?(e=jt,n=n.stateNode,e.nodeType===8?bb(e.parentNode,n):e.nodeType===1&&bb(e,n),Kh(e)):bb(jt,n.stateNode));break;case 4:s=jt,a=Ss,jt=n.stateNode.containerInfo,Ss=!0,cr(t,e,n),jt=s,Ss=a;break;case 0:case 11:case 14:case 15:zt||wi(2,n,e),zt||wi(4,n,e),cr(t,e,n);break;case 1:zt||($s(n,e),s=n.stateNode,typeof s.componentWillUnmount=="function"&&dI(n,e,s)),cr(t,e,n);break;case 21:cr(t,e,n);break;case 22:zt||$s(n,e),zt=(s=zt)||n.memoizedState!==null,cr(t,e,n),zt=s;break;default:cr(t,e,n)}}function xI(t,e){if(e.memoizedState===null&&(t=e.alternate,t!==null&&(t=t.memoizedState,t!==null&&(t=t.dehydrated,t!==null))))try{Kh(t)}catch(n){ut(e,e.return,n)}}function Uz(t){switch(t.tag){case 13:case 19:var e=t.stateNode;return e===null&&(e=t.stateNode=new FC),e;case 22:return t=t.stateNode,e=t._retryCache,e===null&&(e=t._retryCache=new FC),e;default:throw Error(Y(435,t.tag))}}function lb(t,e){var n=Uz(t);e.forEach(function(s){var a=tL.bind(null,t,s);n.has(s)||(n.add(s),s.then(a,a))})}function Ls(t,e){var n=e.deletions;if(n!==null)for(var s=0;s<n.length;s++){var a=n[s],r=t,i=e,o=i;e:for(;o!==null;){switch(o.tag){case 27:case 5:jt=o.stateNode,Ss=!1;break e;case 3:jt=o.stateNode.containerInfo,Ss=!0;break e;case 4:jt=o.stateNode.containerInfo,Ss=!0;break e}o=o.return}if(jt===null)throw Error(Y(160));yI(r,i,a),jt=null,Ss=!1,r=a.alternate,r!==null&&(r.return=null),a.return=null}if(e.subtreeFlags&13878)for(e=e.child;e!==null;)bI(e,t),e=e.sibling}var ya=null;function bI(t,e){var n=t.alternate,s=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:Ls(e,t),Ps(t),s&4&&(wi(3,t,t.return),$d(3,t),wi(5,t,t.return));break;case 1:Ls(e,t),Ps(t),s&512&&(zt||n===null||$s(n,n.return)),s&64&&gr&&(t=t.updateQueue,t!==null&&(s=t.callbacks,s!==null&&(n=t.shared.hiddenCallbacks,t.shared.hiddenCallbacks=n===null?s:n.concat(s))));break;case 26:var a=ya;if(Ls(e,t),Ps(t),s&512&&(zt||n===null||$s(n,n.return)),s&4){var r=n!==null?n.memoizedState:null;if(s=t.memoizedState,n===null)if(s===null)if(t.stateNode===null){e:{s=t.type,n=t.memoizedProps,a=a.ownerDocument||a;t:switch(s){case"title":r=a.getElementsByTagName("title")[0],(!r||r[zh]||r[Ln]||r.namespaceURI==="http://www.w3.org/2000/svg"||r.hasAttribute("itemprop"))&&(r=a.createElement(s),a.head.insertBefore(r,a.querySelector("head > title"))),Tn(r,s,n),r[Ln]=t,yn(r),s=r;break e;case"link":var i=JC("link","href",a).get(s+(n.href||""));if(i){for(var o=0;o<i.length;o++)if(r=i[o],r.getAttribute("href")===(n.href==null?null:n.href)&&r.getAttribute("rel")===(n.rel==null?null:n.rel)&&r.getAttribute("title")===(n.title==null?null:n.title)&&r.getAttribute("crossorigin")===(n.crossOrigin==null?null:n.crossOrigin)){i.splice(o,1);break t}}r=a.createElement(s),Tn(r,s,n),a.head.appendChild(r);break;case"meta":if(i=JC("meta","content",a).get(s+(n.content||""))){for(o=0;o<i.length;o++)if(r=i[o],r.getAttribute("content")===(n.content==null?null:""+n.content)&&r.getAttribute("name")===(n.name==null?null:n.name)&&r.getAttribute("property")===(n.property==null?null:n.property)&&r.getAttribute("http-equiv")===(n.httpEquiv==null?null:n.httpEquiv)&&r.getAttribute("charset")===(n.charSet==null?null:n.charSet)){i.splice(o,1);break t}}r=a.createElement(s),Tn(r,s,n),a.head.appendChild(r);break;default:throw Error(Y(468,s))}r[Ln]=t,yn(r),s=r}t.stateNode=s}else e2(a,t.type,t.stateNode);else t.stateNode=ZC(a,s,t.memoizedProps);else r!==s?(r===null?n.stateNode!==null&&(n=n.stateNode,n.parentNode.removeChild(n)):r.count--,s===null?e2(a,t.type,t.stateNode):ZC(a,s,t.memoizedProps)):s===null&&t.stateNode!==null&&OC(t,t.memoizedProps,n.memoizedProps)}break;case 27:if(s&4&&t.alternate===null){a=t.stateNode,r=t.memoizedProps;try{for(var l=a.firstChild;l;){var u=l.nextSibling,c=l.nodeName;l[zh]||c==="HEAD"||c==="BODY"||c==="SCRIPT"||c==="STYLE"||c==="LINK"&&l.rel.toLowerCase()==="stylesheet"||a.removeChild(l),l=u}for(var h=t.type,d=a.attributes;d.length;)a.removeAttributeNode(d[0]);Tn(a,h,r),a[Ln]=t,a[cs]=r}catch(f){ut(t,t.return,f)}}case 5:if(Ls(e,t),Ps(t),s&512&&(zt||n===null||$s(n,n.return)),t.flags&32){a=t.stateNode;try{au(a,"")}catch(f){ut(t,t.return,f)}}s&4&&t.stateNode!=null&&(a=t.memoizedProps,OC(t,a,n!==null?n.memoizedProps:a)),s&1024&&(ob=!0);break;case 6:if(Ls(e,t),Ps(t),s&4){if(t.stateNode===null)throw Error(Y(162));s=t.memoizedProps,n=t.stateNode;try{n.nodeValue=s}catch(f){ut(t,t.return,f)}}break;case 3:if(Gf=null,a=ya,ya=vm(e.containerInfo),Ls(e,t),ya=a,Ps(t),s&4&&n!==null&&n.memoizedState.isDehydrated)try{Kh(e.containerInfo)}catch(f){ut(t,t.return,f)}ob&&(ob=!1,wI(t));break;case 4:s=ya,ya=vm(t.stateNode.containerInfo),Ls(e,t),Ps(t),ya=s;break;case 12:Ls(e,t),Ps(t);break;case 13:Ls(e,t),Ps(t),t.child.flags&8192&&t.memoizedState!==null!=(n!==null&&n.memoizedState!==null)&&(vw=Ga()),s&4&&(s=t.updateQueue,s!==null&&(t.updateQueue=null,lb(t,s)));break;case 22:if(s&512&&(zt||n===null||$s(n,n.return)),l=t.memoizedState!==null,u=n!==null&&n.memoizedState!==null,c=gr,h=zt,gr=c||l,zt=h||u,Ls(e,t),zt=h,gr=c,Ps(t),e=t.stateNode,e._current=t,e._visibility&=-3,e._visibility|=e._pendingVisibility&2,s&8192&&(e._visibility=l?e._visibility&-2:e._visibility|1,l&&(e=gr||zt,n===null||u||e||Cl(t)),t.memoizedProps===null||t.memoizedProps.mode!=="manual"))e:for(n=null,e=t;;){if(e.tag===5||e.tag===26||e.tag===27){if(n===null){u=n=e;try{if(a=u.stateNode,l)r=a.style,typeof r.setProperty=="function"?r.setProperty("display","none","important"):r.display="none";else{i=u.stateNode,o=u.memoizedProps.style;var p=o!=null&&o.hasOwnProperty("display")?o.display:null;i.style.display=p==null||typeof p=="boolean"?"":(""+p).trim()}}catch(f){ut(u,u.return,f)}}}else if(e.tag===6){if(n===null){u=e;try{u.stateNode.nodeValue=l?"":u.memoizedProps}catch(f){ut(u,u.return,f)}}}else if((e.tag!==22&&e.tag!==23||e.memoizedState===null||e===t)&&e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;n===e&&(n=null),e=e.return}n===e&&(n=null),e.sibling.return=e.return,e=e.sibling}s&4&&(s=t.updateQueue,s!==null&&(n=s.retryQueue,n!==null&&(s.retryQueue=null,lb(t,n))));break;case 19:Ls(e,t),Ps(t),s&4&&(s=t.updateQueue,s!==null&&(t.updateQueue=null,lb(t,s)));break;case 21:break;default:Ls(e,t),Ps(t)}}function Ps(t){var e=t.flags;if(e&2){try{if(t.tag!==27){e:{for(var n=t.return;n!==null;){if(fI(n)){var s=n;break e}n=n.return}throw Error(Y(160))}switch(s.tag){case 27:var a=s.stateNode,r=ib(t);fm(t,r,a);break;case 5:var i=s.stateNode;s.flags&32&&(au(i,""),s.flags&=-33);var o=ib(t);fm(t,o,i);break;case 3:case 4:var l=s.stateNode.containerInfo,u=ib(t);y0(t,u,l);break;default:throw Error(Y(161))}}}catch(c){ut(t,t.return,c)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function wI(t){if(t.subtreeFlags&1024)for(t=t.child;t!==null;){var e=t;wI(e),e.tag===5&&e.flags&1024&&e.stateNode.reset(),t=t.sibling}}function hr(t,e){if(e.subtreeFlags&8772)for(e=e.child;e!==null;)mI(t,e.alternate,e),e=e.sibling}function Cl(t){for(t=t.child;t!==null;){var e=t;switch(e.tag){case 0:case 11:case 14:case 15:wi(4,e,e.return),Cl(e);break;case 1:$s(e,e.return);var n=e.stateNode;typeof n.componentWillUnmount=="function"&&dI(e,e.return,n),Cl(e);break;case 26:case 27:case 5:$s(e,e.return),Cl(e);break;case 22:$s(e,e.return),e.memoizedState===null&&Cl(e);break;default:Cl(e)}t=t.sibling}}function Xr(t,e,n){for(n=n&&(e.subtreeFlags&8772)!==0,e=e.child;e!==null;){var s=e.alternate,a=t,r=e,i=r.flags;switch(r.tag){case 0:case 11:case 15:Xr(a,r,n),$d(4,r);break;case 1:if(Xr(a,r,n),s=r,a=s.stateNode,typeof a.componentDidMount=="function")try{a.componentDidMount()}catch(u){ut(s,s.return,u)}if(s=r,a=s.updateQueue,a!==null){var o=s.stateNode;try{var l=a.shared.hiddenCallbacks;if(l!==null)for(a.shared.hiddenCallbacks=null,a=0;a<l.length;a++)uI(l[a],o)}catch(u){ut(s,s.return,u)}}n&&i&64&&hI(r),lo(r,r.return);break;case 26:case 27:case 5:Xr(a,r,n),n&&s===null&&i&4&&pI(r),lo(r,r.return);break;case 12:Xr(a,r,n);break;case 13:Xr(a,r,n),n&&i&4&&xI(a,r);break;case 22:r.memoizedState===null&&Xr(a,r,n),lo(r,r.return);break;default:Xr(a,r,n)}e=e.sibling}}function gw(t,e){var n=null;t!==null&&t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(n=t.memoizedState.cachePool.pool),t=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(t=e.memoizedState.cachePool.pool),t!==n&&(t!=null&&t.refCount++,n!=null&&vd(n))}function yw(t,e){t=null,e.alternate!==null&&(t=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==t&&(e.refCount++,t!=null&&vd(t))}function qr(t,e,n,s){if(e.subtreeFlags&10256)for(e=e.child;e!==null;)vI(t,e,n,s),e=e.sibling}function vI(t,e,n,s){var a=e.flags;switch(e.tag){case 0:case 11:case 15:qr(t,e,n,s),a&2048&&$d(9,e);break;case 3:qr(t,e,n,s),a&2048&&(t=null,e.alternate!==null&&(t=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==t&&(e.refCount++,t!=null&&vd(t)));break;case 12:if(a&2048){qr(t,e,n,s),t=e.stateNode;try{var r=e.memoizedProps,i=r.id,o=r.onPostCommit;typeof o=="function"&&o(i,e.alternate===null?"mount":"update",t.passiveEffectDuration,-0)}catch(l){ut(e,e.return,l)}}else qr(t,e,n,s);break;case 23:break;case 22:r=e.stateNode,e.memoizedState!==null?r._visibility&4?qr(t,e,n,s):Th(t,e):r._visibility&4?qr(t,e,n,s):(r._visibility|=4,$l(t,e,n,s,(e.subtreeFlags&10256)!==0)),a&2048&&gw(e.alternate,e);break;case 24:qr(t,e,n,s),a&2048&&yw(e.alternate,e);break;default:qr(t,e,n,s)}}function $l(t,e,n,s,a){for(a=a&&(e.subtreeFlags&10256)!==0,e=e.child;e!==null;){var r=t,i=e,o=n,l=s,u=i.flags;switch(i.tag){case 0:case 11:case 15:$l(r,i,o,l,a),$d(8,i);break;case 23:break;case 22:var c=i.stateNode;i.memoizedState!==null?c._visibility&4?$l(r,i,o,l,a):Th(r,i):(c._visibility|=4,$l(r,i,o,l,a)),a&&u&2048&&gw(i.alternate,i);break;case 24:$l(r,i,o,l,a),a&&u&2048&&yw(i.alternate,i);break;default:$l(r,i,o,l,a)}e=e.sibling}}function Th(t,e){if(e.subtreeFlags&10256)for(e=e.child;e!==null;){var n=t,s=e,a=s.flags;switch(s.tag){case 22:Th(n,s),a&2048&&gw(s.alternate,s);break;case 24:Th(n,s),a&2048&&yw(s.alternate,s);break;default:Th(n,s)}e=e.sibling}}var lh=8192;function ml(t){if(t.subtreeFlags&lh)for(t=t.child;t!==null;)SI(t),t=t.sibling}function SI(t){switch(t.tag){case 26:ml(t),t.flags&lh&&t.memoizedState!==null&&RL(ya,t.memoizedState,t.memoizedProps);break;case 5:ml(t);break;case 3:case 4:var e=ya;ya=vm(t.stateNode.containerInfo),ml(t),ya=e;break;case 22:t.memoizedState===null&&(e=t.alternate,e!==null&&e.memoizedState!==null?(e=lh,lh=16777216,ml(t),lh=e):ml(t));break;default:ml(t)}}function CI(t){var e=t.alternate;if(e!==null&&(t=e.child,t!==null)){e.child=null;do e=t.sibling,t.sibling=null,t=e;while(t!==null)}}function Qc(t){var e=t.deletions;if(t.flags&16){if(e!==null)for(var n=0;n<e.length;n++){var s=e[n];gn=s,NI(s,t)}CI(t)}if(t.subtreeFlags&10256)for(t=t.child;t!==null;)$I(t),t=t.sibling}function $I(t){switch(t.tag){case 0:case 11:case 15:Qc(t),t.flags&2048&&wi(9,t,t.return);break;case 3:Qc(t);break;case 12:Qc(t);break;case 22:var e=t.stateNode;t.memoizedState!==null&&e._visibility&4&&(t.return===null||t.return.tag!==13)?(e._visibility&=-5,Vf(t)):Qc(t);break;default:Qc(t)}}function Vf(t){var e=t.deletions;if(t.flags&16){if(e!==null)for(var n=0;n<e.length;n++){var s=e[n];gn=s,NI(s,t)}CI(t)}for(t=t.child;t!==null;){switch(e=t,e.tag){case 0:case 11:case 15:wi(8,e,e.return),Vf(e);break;case 22:n=e.stateNode,n._visibility&4&&(n._visibility&=-5,Vf(e));break;default:Vf(e)}t=t.sibling}}function NI(t,e){for(;gn!==null;){var n=gn;switch(n.tag){case 0:case 11:case 15:wi(8,n,e);break;case 23:case 22:if(n.memoizedState!==null&&n.memoizedState.cachePool!==null){var s=n.memoizedState.cachePool.pool;s!=null&&s.refCount++}break;case 24:vd(n.memoizedState.cache)}if(s=n.child,s!==null)s.return=n,gn=s;else e:for(n=t;gn!==null;){s=gn;var a=s.sibling,r=s.return;if(gI(s),s===n){gn=null;break e}if(a!==null){a.return=r,gn=a;break e}gn=r}}}function Wz(t,e,n,s){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ys(t,e,n,s){return new Wz(t,e,n,s)}function xw(t){return t=t.prototype,!(!t||!t.isReactComponent)}function ci(t,e){var n=t.alternate;return n===null?(n=Ys(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&31457280,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n.refCleanup=t.refCleanup,n}function kI(t,e){t.flags&=31457282;var n=t.alternate;return n===null?(t.childLanes=0,t.lanes=e,t.child=null,t.subtreeFlags=0,t.memoizedProps=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.stateNode=null):(t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.subtreeFlags=0,t.deletions=null,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,t.type=n.type,e=n.dependencies,t.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),t}function Uf(t,e,n,s,a,r){var i=0;if(s=t,typeof t=="function")xw(t)&&(i=1);else if(typeof t=="string")i=TL(t,n,Wa.current)?26:t==="html"||t==="head"||t==="body"?27:5;else e:switch(t){case Rl:return go(n.children,a,r,e);case IN:i=8,a|=24;break;case Bb:return t=Ys(12,n,e,a|2),t.elementType=Bb,t.lanes=r,t;case Vb:return t=Ys(13,n,e,a),t.elementType=Vb,t.lanes=r,t;case Ub:return t=Ys(19,n,e,a),t.elementType=Ub,t.lanes=r,t;case EN:return II(n,a,r,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case fF:case wr:i=10;break e;case TN:i=9;break e;case M1:i=11;break e;case B1:i=14;break e;case Kr:i=16,s=null;break e}i=29,n=Error(Y(130,t===null?"null":typeof t,"")),s=null}return e=Ys(i,n,e,a),e.elementType=t,e.type=s,e.lanes=r,e}function go(t,e,n,s){return t=Ys(7,t,s,e),t.lanes=n,t}function II(t,e,n,s){t=Ys(22,t,s,e),t.elementType=EN,t.lanes=n;var a={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var r=a._current;if(r===null)throw Error(Y(456));if(!(a._pendingVisibility&2)){var i=xi(r,2);i!==null&&(a._pendingVisibility|=2,Yn(i,r,2))}},attach:function(){var r=a._current;if(r===null)throw Error(Y(456));if(a._pendingVisibility&2){var i=xi(r,2);i!==null&&(a._pendingVisibility&=-3,Yn(i,r,2))}}};return t.stateNode=a,t}function ub(t,e,n){return t=Ys(6,t,null,e),t.lanes=n,t}function cb(t,e,n){return e=Ys(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function dr(t){t.flags|=4}function LC(t,e){if(e.type!=="stylesheet"||e.state.loading&4)t.flags&=-16777217;else if(t.flags|=16777216,!XI(e)){if(e=oa.current,e!==null&&((qe&4194176)===qe?Ha!==null:(qe&62914560)!==qe&&!(qe&536870912)||e!==Ha))throw vh=t0,pk;t.flags|=8192}}function df(t,e){e!==null&&(t.flags|=4),t.flags&16384&&(e=t.tag!==22?zN():536870912,t.lanes|=e,lu|=e)}function Zc(t,e){if(!Ke)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var s=null;n!==null;)n.alternate!==null&&(s=n),n=n.sibling;s===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:s.sibling=null}}function Et(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,s=0;if(e)for(var a=t.child;a!==null;)n|=a.lanes|a.childLanes,s|=a.subtreeFlags&31457280,s|=a.flags&31457280,a.return=t,a=a.sibling;else for(a=t.child;a!==null;)n|=a.lanes|a.childLanes,s|=a.subtreeFlags,s|=a.flags,a.return=t,a=a.sibling;return t.subtreeFlags|=s,t.childLanes=n,e}function Gz(t,e,n){var s=e.pendingProps;switch(Z1(e),e.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Et(e),null;case 1:return Et(e),null;case 3:return n=e.stateNode,s=null,t!==null&&(s=t.memoizedState.cache),e.memoizedState.cache!==s&&(e.flags|=2048),Nr(rn),nu(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(t===null||t.child===null)&&(Kc(e)?dr(e):t===null||t.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,xa!==null&&(S0(xa),xa=null))),Et(e),null;case 26:return n=e.memoizedState,t===null?(dr(e),n!==null?(Et(e),LC(e,n)):(Et(e),e.flags&=-16777217)):n?n!==t.memoizedState?(dr(e),Et(e),LC(e,n)):(Et(e),e.flags&=-16777217):(t.memoizedProps!==s&&dr(e),Et(e),e.flags&=-16777217),null;case 27:em(e),n=oi.current;var a=e.type;if(t!==null&&e.stateNode!=null)t.memoizedProps!==s&&dr(e);else{if(!s){if(e.stateNode===null)throw Error(Y(166));return Et(e),null}t=Wa.current,Kc(e)?pC(e):(t=HI(a,s,n),e.stateNode=t,dr(e))}return Et(e),null;case 5:if(em(e),n=e.type,t!==null&&e.stateNode!=null)t.memoizedProps!==s&&dr(e);else{if(!s){if(e.stateNode===null)throw Error(Y(166));return Et(e),null}if(t=Wa.current,Kc(e))pC(e);else{switch(a=wm(oi.current),t){case 1:t=a.createElementNS("http://www.w3.org/2000/svg",n);break;case 2:t=a.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;default:switch(n){case"svg":t=a.createElementNS("http://www.w3.org/2000/svg",n);break;case"math":t=a.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;case"script":t=a.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild);break;case"select":t=typeof s.is=="string"?a.createElement("select",{is:s.is}):a.createElement("select"),s.multiple?t.multiple=!0:s.size&&(t.size=s.size);break;default:t=typeof s.is=="string"?a.createElement(n,{is:s.is}):a.createElement(n)}}t[Ln]=e,t[cs]=s;e:for(a=e.child;a!==null;){if(a.tag===5||a.tag===6)t.appendChild(a.stateNode);else if(a.tag!==4&&a.tag!==27&&a.child!==null){a.child.return=a,a=a.child;continue}if(a===e)break e;for(;a.sibling===null;){if(a.return===null||a.return===e)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}e.stateNode=t;e:switch(Tn(t,n,s),n){case"button":case"input":case"select":case"textarea":t=!!s.autoFocus;break e;case"img":t=!0;break e;default:t=!1}t&&dr(e)}}return Et(e),e.flags&=-16777217,null;case 6:if(t&&e.stateNode!=null)t.memoizedProps!==s&&dr(e);else{if(typeof s!="string"&&e.stateNode===null)throw Error(Y(166));if(t=oi.current,Kc(e)){if(t=e.stateNode,n=e.memoizedProps,s=null,a=jn,a!==null)switch(a.tag){case 27:case 5:s=a.memoizedProps}t[Ln]=e,t=!!(t.nodeValue===n||s!==null&&s.suppressHydrationWarning===!0||UI(t.nodeValue,n)),t||Co(e)}else t=wm(t).createTextNode(s),t[Ln]=e,e.stateNode=t}return Et(e),null;case 13:if(s=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(a=Kc(e),s!==null&&s.dehydrated!==null){if(t===null){if(!a)throw Error(Y(318));if(a=e.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(Y(317));a[Ln]=e}else wd(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;Et(e),a=!1}else xa!==null&&(S0(xa),xa=null),a=!0;if(!a)return e.flags&256?(Cr(e),e):(Cr(e),null)}if(Cr(e),e.flags&128)return e.lanes=n,e;if(n=s!==null,t=t!==null&&t.memoizedState!==null,n){s=e.child,a=null,s.alternate!==null&&s.alternate.memoizedState!==null&&s.alternate.memoizedState.cachePool!==null&&(a=s.alternate.memoizedState.cachePool.pool);var r=null;s.memoizedState!==null&&s.memoizedState.cachePool!==null&&(r=s.memoizedState.cachePool.pool),r!==a&&(s.flags|=2048)}return n!==t&&n&&(e.child.flags|=8192),df(e,e.updateQueue),Et(e),null;case 4:return nu(),t===null&&$w(e.stateNode.containerInfo),Et(e),null;case 10:return Nr(e.type),Et(e),null;case 19:if(vn(ln),a=e.memoizedState,a===null)return Et(e),null;if(s=(e.flags&128)!==0,r=a.rendering,r===null)if(s)Zc(a,!1);else{if(Lt!==0||t!==null&&t.flags&128)for(t=e.child;t!==null;){if(r=lm(t),r!==null){for(e.flags|=128,Zc(a,!1),t=r.updateQueue,e.updateQueue=t,df(e,t),e.subtreeFlags=0,t=n,n=e.child;n!==null;)kI(n,t),n=n.sibling;return kt(ln,ln.current&1|2),e.child}t=t.sibling}a.tail!==null&&Ga()>mm&&(e.flags|=128,s=!0,Zc(a,!1),e.lanes=4194304)}else{if(!s)if(t=lm(r),t!==null){if(e.flags|=128,s=!0,t=t.updateQueue,e.updateQueue=t,df(e,t),Zc(a,!0),a.tail===null&&a.tailMode==="hidden"&&!r.alternate&&!Ke)return Et(e),null}else 2*Ga()-a.renderingStartTime>mm&&n!==536870912&&(e.flags|=128,s=!0,Zc(a,!1),e.lanes=4194304);a.isBackwards?(r.sibling=e.child,e.child=r):(t=a.last,t!==null?t.sibling=r:e.child=r,a.last=r)}return a.tail!==null?(e=a.tail,a.rendering=e,a.tail=e.sibling,a.renderingStartTime=Ga(),e.sibling=null,t=ln.current,kt(ln,s?t&1|2:t&1),e):(Et(e),null);case 22:case 23:return Cr(e),J1(),s=e.memoizedState!==null,t!==null?t.memoizedState!==null!==s&&(e.flags|=8192):s&&(e.flags|=8192),s?n&536870912&&!(e.flags&128)&&(Et(e),e.subtreeFlags&6&&(e.flags|=8192)):Et(e),n=e.updateQueue,n!==null&&df(e,n.retryQueue),n=null,t!==null&&t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(n=t.memoizedState.cachePool.pool),s=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(s=e.memoizedState.cachePool.pool),s!==n&&(e.flags|=2048),t!==null&&vn(mo),null;case 24:return n=null,t!==null&&(n=t.memoizedState.cache),e.memoizedState.cache!==n&&(e.flags|=2048),Nr(rn),Et(e),null;case 25:return null}throw Error(Y(156,e.tag))}function Hz(t,e){switch(Z1(e),e.tag){case 1:return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return Nr(rn),nu(),t=e.flags,t&65536&&!(t&128)?(e.flags=t&-65537|128,e):null;case 26:case 27:case 5:return em(e),null;case 13:if(Cr(e),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(Y(340));wd()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return vn(ln),null;case 4:return nu(),null;case 10:return Nr(e.type),null;case 22:case 23:return Cr(e),J1(),t!==null&&vn(mo),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 24:return Nr(rn),null;case 25:return null;default:return null}}function TI(t,e){switch(Z1(e),e.tag){case 3:Nr(rn),nu();break;case 26:case 27:case 5:em(e);break;case 4:nu();break;case 13:Cr(e);break;case 19:vn(ln);break;case 10:Nr(e.type);break;case 22:case 23:Cr(e),J1(),t!==null&&vn(mo);break;case 24:Nr(rn)}}var jz={getCacheForType:function(t){var e=Pn(rn),n=e.data.get(t);return n===void 0&&(n=t(),e.data.set(t,n)),n}},qz=typeof WeakMap=="function"?WeakMap:Map,At=0,ft=null,Be=null,qe=0,pt=0,Cs=null,yr=!1,Tu=!1,bw=!1,_r=0,Lt=0,vi=0,yo=0,ww=0,Qs=0,lu=0,Eh=null,Va=null,x0=!1,vw=0,mm=1/0,gm=null,hi=null,pf=!1,to=null,Rh=0,b0=0,w0=null,Dh=0,v0=null;function Es(){if(At&2&&qe!==0)return qe&-qe;if(Oe.T!==null){var t=iu;return t!==0?t:Cw()}return BN()}function EI(){Qs===0&&(Qs=!(qe&536870912)||Ke?FN():536870912);var t=oa.current;return t!==null&&(t.flags|=32),Qs}function Yn(t,e,n){(t===ft&&pt===2||t.cancelPendingCommit!==null)&&(uu(t,0),xr(t,qe,Qs,!1)),xd(t,n),(!(At&2)||t!==ft)&&(t===ft&&(!(At&2)&&(yo|=n),Lt===4&&xr(t,qe,Qs,!1)),nr(t))}function RI(t,e,n){if(At&6)throw Error(Y(327));var s=!n&&(e&60)===0&&(e&t.expiredLanes)===0||yd(t,e),a=s?Yz(t,e):hb(t,e,!0),r=s;do{if(a===0){Tu&&!s&&xr(t,e,0,!1);break}else if(a===6)xr(t,e,0,!yr);else{if(n=t.current.alternate,r&&!Xz(n)){a=hb(t,e,!1),r=!1;continue}if(a===2){if(r=e,t.errorRecoveryDisabledLanes&r)var i=0;else i=t.pendingLanes&-536870913,i=i!==0?i:i&536870912?536870912:0;if(i!==0){e=i;e:{var o=t;a=Eh;var l=o.current.memoizedState.isDehydrated;if(l&&(uu(o,i).flags|=256),i=hb(o,i,!1),i!==2){if(bw&&!l){o.errorRecoveryDisabledLanes|=r,yo|=r,a=4;break e}r=Va,Va=a,r!==null&&S0(r)}a=i}if(r=!1,a!==2)continue}}if(a===1){uu(t,0),xr(t,e,0,!0);break}e:{switch(s=t,a){case 0:case 1:throw Error(Y(345));case 4:if((e&4194176)===e){xr(s,e,Qs,!yr);break e}break;case 2:Va=null;break;case 3:case 5:break;default:throw Error(Y(329))}if(s.finishedWork=n,s.finishedLanes=e,(e&62914560)===e&&(r=vw+300-Ga(),10<r)){if(xr(s,e,Qs,!yr),lg(s,0)!==0)break e;s.timeoutHandle=GI(PC.bind(null,s,n,Va,gm,x0,e,Qs,yo,lu,yr,2,-0,0),r);break e}PC(s,n,Va,gm,x0,e,Qs,yo,lu,yr,0,-0,0)}}break}while(!0);nr(t)}function S0(t){Va===null?Va=t:Va.push.apply(Va,t)}function PC(t,e,n,s,a,r,i,o,l,u,c,h,d){var p=e.subtreeFlags;if((p&8192||(p&16785408)===16785408)&&(Hh={stylesheets:null,count:0,unsuspend:EL},SI(e),e=DL(),e!==null)){t.cancelPendingCommit=e(BC.bind(null,t,n,s,a,i,o,l,1,h,d)),xr(t,r,i,!u);return}BC(t,n,s,a,i,o,l,c,h,d)}function Xz(t){for(var e=t;;){var n=e.tag;if((n===0||n===11||n===15)&&e.flags&16384&&(n=e.updateQueue,n!==null&&(n=n.stores,n!==null)))for(var s=0;s<n.length;s++){var a=n[s],r=a.getSnapshot;a=a.value;try{if(!Rs(r(),a))return!1}catch{return!1}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function xr(t,e,n,s){e&=~ww,e&=~yo,t.suspendedLanes|=e,t.pingedLanes&=~e,s&&(t.warmLanes|=e),s=t.expirationTimes;for(var a=e;0<a;){var r=31-Ts(a),i=1<<r;s[r]=-1,a&=~i}n!==0&&LN(t,n,e)}function xg(){return At&6?!0:(Nd(0),!1)}function Sw(){if(Be!==null){if(pt===0)var t=Be.return;else t=Be,$r=Xo=null,iw(t),Hl=null,Vh=0,t=Be;for(;t!==null;)TI(t.alternate,t),t=t.return;Be=null}}function uu(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;n!==-1&&(t.timeoutHandle=-1,pL(n)),n=t.cancelPendingCommit,n!==null&&(t.cancelPendingCommit=null,n()),Sw(),ft=t,Be=n=ci(t.current,null),qe=e,pt=0,Cs=null,yr=!1,Tu=yd(t,e),bw=!1,lu=Qs=ww=yo=vi=Lt=0,Va=Eh=null,x0=!1,e&8&&(e|=e&32);var s=t.entangledLanes;if(s!==0)for(t=t.entanglements,s&=e;0<s;){var a=31-Ts(s),r=1<<a;e|=t[a],s&=~r}return _r=e,dg(),n}function DI(t,e){Me=null,Oe.H=Ya,e===wh?(e=gC(),pt=3):e===pk?(e=gC(),pt=4):pt=e===nI?8:e!==null&&typeof e=="object"&&typeof e.then=="function"?6:1,Cs=e,Be===null&&(Lt=1,dm(t,Xs(e,t.current)))}function AI(){var t=Oe.H;return Oe.H=Ya,t===null?Ya:t}function _I(){var t=Oe.A;return Oe.A=jz,t}function C0(){Lt=4,yr||(qe&4194176)!==qe&&oa.current!==null||(Tu=!0),!(vi&134217727)&&!(yo&134217727)||ft===null||xr(ft,qe,Qs,!1)}function hb(t,e,n){var s=At;At|=2;var a=AI(),r=_I();(ft!==t||qe!==e)&&(gm=null,uu(t,e)),e=!1;var i=Lt;e:do try{if(pt!==0&&Be!==null){var o=Be,l=Cs;switch(pt){case 8:Sw(),i=6;break e;case 3:case 2:case 6:oa.current===null&&(e=!0);var u=pt;if(pt=0,Cs=null,Bl(t,o,l,u),n&&Tu){i=0;break e}break;default:u=pt,pt=0,Cs=null,Bl(t,o,l,u)}}Kz(),i=Lt;break}catch(c){DI(t,c)}while(!0);return e&&t.shellSuspendCounter++,$r=Xo=null,At=s,Oe.H=a,Oe.A=r,Be===null&&(ft=null,qe=0,dg()),i}function Kz(){for(;Be!==null;)OI(Be)}function Yz(t,e){var n=At;At|=2;var s=AI(),a=_I();ft!==t||qe!==e?(gm=null,mm=Ga()+500,uu(t,e)):Tu=yd(t,e);e:do try{if(pt!==0&&Be!==null){e=Be;var r=Cs;t:switch(pt){case 1:pt=0,Cs=null,Bl(t,e,r,1);break;case 2:if(mC(r)){pt=0,Cs=null,MC(e);break}e=function(){pt===2&&ft===t&&(pt=7),nr(t)},r.then(e,e);break e;case 3:pt=7;break e;case 4:pt=5;break e;case 7:mC(r)?(pt=0,Cs=null,MC(e)):(pt=0,Cs=null,Bl(t,e,r,7));break;case 5:var i=null;switch(Be.tag){case 26:i=Be.memoizedState;case 5:case 27:var o=Be;if(!i||XI(i)){pt=0,Cs=null;var l=o.sibling;if(l!==null)Be=l;else{var u=o.return;u!==null?(Be=u,bg(u)):Be=null}break t}}pt=0,Cs=null,Bl(t,e,r,5);break;case 6:pt=0,Cs=null,Bl(t,e,r,6);break;case 8:Sw(),Lt=6;break e;default:throw Error(Y(462))}}Qz();break}catch(c){DI(t,c)}while(!0);return $r=Xo=null,Oe.H=s,Oe.A=a,At=n,Be!==null?0:(ft=null,qe=0,dg(),Lt)}function Qz(){for(;Be!==null&&!bF();)OI(Be)}function OI(t){var e=oI(t.alternate,t,_r);t.memoizedProps=t.pendingProps,e===null?bg(t):Be=e}function MC(t){var e=t,n=e.alternate;switch(e.tag){case 15:case 0:e=RC(n,e,e.pendingProps,e.type,void 0,qe);break;case 11:e=RC(n,e,e.pendingProps,e.type.render,e.ref,qe);break;case 5:iw(e);default:TI(n,e),e=Be=kI(e,_r),e=oI(n,e,_r)}t.memoizedProps=t.pendingProps,e===null?bg(t):Be=e}function Bl(t,e,n,s){$r=Xo=null,iw(e),Hl=null,Vh=0;var a=e.return;try{if(Mz(t,a,e,n,qe)){Lt=1,dm(t,Xs(n,t.current)),Be=null;return}}catch(r){if(a!==null)throw Be=a,r;Lt=1,dm(t,Xs(n,t.current)),Be=null;return}e.flags&32768?(Ke||s===1?t=!0:Tu||qe&536870912?t=!1:(yr=t=!0,(s===2||s===3||s===6)&&(s=oa.current,s!==null&&s.tag===13&&(s.flags|=16384))),FI(e,t)):bg(e)}function bg(t){var e=t;do{if(e.flags&32768){FI(e,yr);return}t=e.return;var n=Gz(e.alternate,e,_r);if(n!==null){Be=n;return}if(e=e.sibling,e!==null){Be=e;return}Be=e=t}while(e!==null);Lt===0&&(Lt=5)}function FI(t,e){do{var n=Hz(t.alternate,t);if(n!==null){n.flags&=32767,Be=n;return}if(n=t.return,n!==null&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!e&&(t=t.sibling,t!==null)){Be=t;return}Be=t=n}while(t!==null);Lt=6,Be=null}function BC(t,e,n,s,a,r,i,o,l,u){var c=Oe.T,h=wt.p;try{wt.p=2,Oe.T=null,Zz(t,e,n,s,h,a,r,i,o,l,u)}finally{Oe.T=c,wt.p=h}}function Zz(t,e,n,s,a,r,i,o){do Kl();while(to!==null);if(At&6)throw Error(Y(327));var l=t.finishedWork;if(s=t.finishedLanes,l===null)return null;if(t.finishedWork=null,t.finishedLanes=0,l===t.current)throw Error(Y(177));t.callbackNode=null,t.callbackPriority=0,t.cancelPendingCommit=null;var u=l.lanes|l.childLanes;if(u|=K1,RF(t,s,u,r,i,o),t===ft&&(Be=ft=null,qe=0),!(l.subtreeFlags&10256)&&!(l.flags&10256)||pf||(pf=!0,b0=u,w0=n,nL(tm,function(){return Kl(),null})),n=(l.flags&15990)!==0,l.subtreeFlags&15990||n?(n=Oe.T,Oe.T=null,r=wt.p,wt.p=2,i=At,At|=4,Vz(t,l),bI(l,t),Sz(I0,t.containerInfo),$m=!!k0,I0=k0=null,t.current=l,mI(t,l.alternate,l),wF(),At=i,wt.p=r,Oe.T=n):t.current=l,pf?(pf=!1,to=t,Rh=s):zI(t,u),u=t.pendingLanes,u===0&&(hi=null),NF(l.stateNode),nr(t),e!==null)for(a=t.onRecoverableError,l=0;l<e.length;l++)u=e[l],a(u.value,{componentStack:u.stack});return Rh&3&&Kl(),u=t.pendingLanes,s&4194218&&u&42?t===v0?Dh++:(Dh=0,v0=t):Dh=0,Nd(0),null}function zI(t,e){(t.pooledCacheLanes&=e)===0&&(e=t.pooledCache,e!=null&&(t.pooledCache=null,vd(e)))}function Kl(){if(to!==null){var t=to,e=b0;b0=0;var n=MN(Rh),s=Oe.T,a=wt.p;try{if(wt.p=32>n?32:n,Oe.T=null,to===null)var r=!1;else{n=w0,w0=null;var i=to,o=Rh;if(to=null,Rh=0,At&6)throw Error(Y(331));var l=At;if(At|=4,$I(i.current),vI(i,i.current,o,n),At=l,Nd(0,!1),Is&&typeof Is.onPostCommitFiberRoot=="function")try{Is.onPostCommitFiberRoot(gd,i)}catch{}r=!0}return r}finally{wt.p=a,Oe.T=s,zI(t,e)}}return!1}function VC(t,e,n){e=Xs(n,e),e=l0(t.stateNode,e,2),t=ui(t,e,2),t!==null&&(xd(t,2),nr(t))}function ut(t,e,n){if(t.tag===3)VC(t,t,n);else for(;e!==null;){if(e.tag===3){VC(e,t,n);break}else if(e.tag===1){var s=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&(hi===null||!hi.has(s))){t=Xs(n,t),n=eI(2),s=ui(e,n,2),s!==null&&(tI(n,s,e,t),xd(s,2),nr(s));break}}e=e.return}}function db(t,e,n){var s=t.pingCache;if(s===null){s=t.pingCache=new qz;var a=new Set;s.set(e,a)}else a=s.get(e),a===void 0&&(a=new Set,s.set(e,a));a.has(n)||(bw=!0,a.add(n),t=Jz.bind(null,t,e,n),e.then(t,t))}function Jz(t,e,n){var s=t.pingCache;s!==null&&s.delete(e),t.pingedLanes|=t.suspendedLanes&n,t.warmLanes&=~n,ft===t&&(qe&n)===n&&(Lt===4||Lt===3&&(qe&62914560)===qe&&300>Ga()-vw?!(At&2)&&uu(t,0):ww|=n,lu===qe&&(lu=0)),nr(t)}function LI(t,e){e===0&&(e=zN()),t=xi(t,e),t!==null&&(xd(t,e),nr(t))}function eL(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),LI(t,n)}function tL(t,e){var n=0;switch(t.tag){case 13:var s=t.stateNode,a=t.memoizedState;a!==null&&(n=a.retryLane);break;case 19:s=t.stateNode;break;case 22:s=t.stateNode._retryCache;break;default:throw Error(Y(314))}s!==null&&s.delete(e),LI(t,n)}function nL(t,e){return V1(t,e)}var ym=null,Nl=null,$0=!1,xm=!1,pb=!1,xo=0;function nr(t){t!==Nl&&t.next===null&&(Nl===null?ym=Nl=t:Nl=Nl.next=t),xm=!0,$0||($0=!0,aL(sL))}function Nd(t,e){if(!pb&&xm){pb=!0;do for(var n=!1,s=ym;s!==null;){if(t!==0){var a=s.pendingLanes;if(a===0)var r=0;else{var i=s.suspendedLanes,o=s.pingedLanes;r=(1<<31-Ts(42|t)+1)-1,r&=a&~(i&~o),r=r&201326677?r&201326677|1:r?r|2:0}r!==0&&(n=!0,UC(s,r))}else r=qe,r=lg(s,s===ft?r:0),!(r&3)||yd(s,r)||(n=!0,UC(s,r));s=s.next}while(n);pb=!1}}function sL(){xm=$0=!1;var t=0;xo!==0&&(dL()&&(t=xo),xo=0);for(var e=Ga(),n=null,s=ym;s!==null;){var a=s.next,r=PI(s,e);r===0?(s.next=null,n===null?ym=a:n.next=a,a===null&&(Nl=n)):(n=s,(t!==0||r&3)&&(xm=!0)),s=a}Nd(t)}function PI(t,e){for(var n=t.suspendedLanes,s=t.pingedLanes,a=t.expirationTimes,r=t.pendingLanes&-62914561;0<r;){var i=31-Ts(r),o=1<<i,l=a[i];l===-1?(!(o&n)||o&s)&&(a[i]=EF(o,e)):l<=e&&(t.expiredLanes|=o),r&=~o}if(e=ft,n=qe,n=lg(t,t===e?n:0),s=t.callbackNode,n===0||t===e&&pt===2||t.cancelPendingCommit!==null)return s!==null&&s!==null&&Wx(s),t.callbackNode=null,t.callbackPriority=0;if(!(n&3)||yd(t,n)){if(e=n&-n,e===t.callbackPriority)return e;switch(s!==null&&Wx(s),MN(n)){case 2:case 8:n=_N;break;case 32:n=tm;break;case 268435456:n=ON;break;default:n=tm}return s=MI.bind(null,t),n=V1(n,s),t.callbackPriority=e,t.callbackNode=n,e}return s!==null&&s!==null&&Wx(s),t.callbackPriority=2,t.callbackNode=null,2}function MI(t,e){var n=t.callbackNode;if(Kl()&&t.callbackNode!==n)return null;var s=qe;return s=lg(t,t===ft?s:0),s===0?null:(RI(t,s,e),PI(t,Ga()),t.callbackNode!=null&&t.callbackNode===n?MI.bind(null,t):null)}function UC(t,e){if(Kl())return null;RI(t,e,!0)}function aL(t){fL(function(){At&6?V1(AN,t):t()})}function Cw(){return xo===0&&(xo=FN()),xo}function WC(t){return t==null||typeof t=="symbol"||typeof t=="boolean"?null:typeof t=="function"?t:Ff(""+t)}function GC(t,e){var n=e.ownerDocument.createElement("input");return n.name=e.name,n.value=e.value,t.id&&n.setAttribute("form",t.id),e.parentNode.insertBefore(n,e),t=new FormData(t),n.parentNode.removeChild(n),t}function rL(t,e,n,s,a){if(e==="submit"&&n&&n.stateNode===a){var r=WC((a[cs]||null).action),i=s.submitter;i&&(e=(e=i[cs]||null)?WC(e.formAction):i.getAttribute("formAction"),e!==null&&(r=e,i=null));var o=new ug("action","action",null,s,a);t.push({event:o,listeners:[{instance:null,listener:function(){if(s.defaultPrevented){if(xo!==0){var l=i?GC(a,i):new FormData(a);i0(n,{pending:!0,data:l,method:a.method,action:r},null,l)}}else typeof r=="function"&&(o.preventDefault(),l=i?GC(a,i):new FormData(a),i0(n,{pending:!0,data:l,method:a.method,action:r},r,l))},currentTarget:a}]})}}for(var fb=0;fb<hC.length;fb++){var mb=hC[fb],iL=mb.toLowerCase(),oL=mb[0].toUpperCase()+mb.slice(1);Da(iL,"on"+oL)}Da(ik,"onAnimationEnd");Da(ok,"onAnimationIteration");Da(lk,"onAnimationStart");Da("dblclick","onDoubleClick");Da("focusin","onFocus");Da("focusout","onBlur");Da($z,"onTransitionRun");Da(Nz,"onTransitionStart");Da(kz,"onTransitionCancel");Da(uk,"onTransitionEnd");su("onMouseEnter",["mouseout","mouseover"]);su("onMouseLeave",["mouseout","mouseover"]);su("onPointerEnter",["pointerout","pointerover"]);su("onPointerLeave",["pointerout","pointerover"]);Wo("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Wo("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Wo("onBeforeInput",["compositionend","keypress","textInput","paste"]);Wo("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Wo("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Wo("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Wh="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),lL=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Wh));function BI(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var s=t[n],a=s.event;s=s.listeners;e:{var r=void 0;if(e)for(var i=s.length-1;0<=i;i--){var o=s[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==r&&a.isPropagationStopped())break e;r=o,a.currentTarget=u;try{r(a)}catch(c){hm(c)}a.currentTarget=null,r=l}else for(i=0;i<s.length;i++){if(o=s[i],l=o.instance,u=o.currentTarget,o=o.listener,l!==r&&a.isPropagationStopped())break e;r=o,a.currentTarget=u;try{r(a)}catch(c){hm(c)}a.currentTarget=null,r=l}}}}function Ge(t,e){var n=e[qb];n===void 0&&(n=e[qb]=new Set);var s=t+"__bubble";n.has(s)||(VI(e,t,2,!1),n.add(s))}function gb(t,e,n){var s=0;e&&(s|=4),VI(n,t,s,e)}var ff="_reactListening"+Math.random().toString(36).slice(2);function $w(t){if(!t[ff]){t[ff]=!0,VN.forEach(function(n){n!=="selectionchange"&&(lL.has(n)||gb(n,!1,t),gb(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[ff]||(e[ff]=!0,gb("selectionchange",!1,e))}}function VI(t,e,n,s){switch(JI(e)){case 2:var a=OL;break;case 8:a=FL;break;default:a=Tw}n=a.bind(null,e,n,t),a=void 0,!Qb||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(a=!0),s?a!==void 0?t.addEventListener(e,n,{capture:!0,passive:a}):t.addEventListener(e,n,!0):a!==void 0?t.addEventListener(e,n,{passive:a}):t.addEventListener(e,n,!1)}function yb(t,e,n,s,a){var r=s;if(!(e&1)&&!(e&2)&&s!==null)e:for(;;){if(s===null)return;var i=s.tag;if(i===3||i===4){var o=s.stateNode.containerInfo;if(o===a||o.nodeType===8&&o.parentNode===a)break;if(i===4)for(i=s.return;i!==null;){var l=i.tag;if((l===3||l===4)&&(l=i.stateNode.containerInfo,l===a||l.nodeType===8&&l.parentNode===a))return;i=i.return}for(;o!==null;){if(i=oo(o),i===null)return;if(l=i.tag,l===5||l===6||l===26||l===27){s=r=i;continue e}o=o.parentNode}}s=s.return}KN(function(){var u=r,c=G1(n),h=[];e:{var d=ck.get(t);if(d!==void 0){var p=ug,f=t;switch(t){case"keypress":if(Lf(n)===0)break e;case"keydown":case"keyup":p=tz;break;case"focusin":f="focus",p=Xx;break;case"focusout":f="blur",p=Xx;break;case"beforeblur":case"afterblur":p=Xx;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=JS;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=WF;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=az;break;case ik:case ok:case lk:p=jF;break;case uk:p=iz;break;case"scroll":case"scrollend":p=VF;break;case"wheel":p=lz;break;case"copy":case"cut":case"paste":p=XF;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=tC;break;case"toggle":case"beforetoggle":p=cz}var m=(e&4)!==0,y=!m&&(t==="scroll"||t==="scrollend"),g=m?d!==null?d+"Capture":null:d;m=[];for(var x=u,b;x!==null;){var w=x;if(b=w.stateNode,w=w.tag,w!==5&&w!==26&&w!==27||b===null||g===null||(w=Lh(x,g),w!=null&&m.push(Gh(x,w,b))),y)break;x=x.return}0<m.length&&(d=new p(d,f,null,n,c),h.push({event:d,listeners:m}))}}if(!(e&7)){e:{if(d=t==="mouseover"||t==="pointerover",p=t==="mouseout"||t==="pointerout",d&&n!==Yb&&(f=n.relatedTarget||n.fromElement)&&(oo(f)||f[ku]))break e;if((p||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,p?(f=n.relatedTarget||n.toElement,p=u,f=f?oo(f):null,f!==null&&(y=Nu(f),m=f.tag,f!==y||m!==5&&m!==27&&m!==6)&&(f=null)):(p=null,f=u),p!==f)){if(m=JS,w="onMouseLeave",g="onMouseEnter",x="mouse",(t==="pointerout"||t==="pointerover")&&(m=tC,w="onPointerLeave",g="onPointerEnter",x="pointer"),y=p==null?d:oh(p),b=f==null?d:oh(f),d=new m(w,x+"leave",p,n,c),d.target=y,d.relatedTarget=b,w=null,oo(c)===u&&(m=new m(g,x+"enter",f,n,c),m.target=b,m.relatedTarget=y,w=m),y=w,p&&f)t:{for(m=p,g=f,x=0,b=m;b;b=gl(b))x++;for(b=0,w=g;w;w=gl(w))b++;for(;0<x-b;)m=gl(m),x--;for(;0<b-x;)g=gl(g),b--;for(;x--;){if(m===g||g!==null&&m===g.alternate)break t;m=gl(m),g=gl(g)}m=null}else m=null;p!==null&&HC(h,d,p,m,!1),f!==null&&y!==null&&HC(h,y,f,m,!0)}}e:{if(d=u?oh(u):window,p=d.nodeName&&d.nodeName.toLowerCase(),p==="select"||p==="input"&&d.type==="file")var v=rC;else if(aC(d))if(tk)v=wz;else{v=xz;var C=yz}else p=d.nodeName,!p||p.toLowerCase()!=="input"||d.type!=="checkbox"&&d.type!=="radio"?u&&W1(u.elementType)&&(v=rC):v=bz;if(v&&(v=v(t,u))){ek(h,v,n,c);break e}C&&C(t,d,u),t==="focusout"&&u&&d.type==="number"&&u.memoizedProps.value!=null&&Kb(d,"number",d.value)}switch(C=u?oh(u):window,t){case"focusin":(aC(C)||C.contentEditable==="true")&&(Ol=C,Zb=u,bh=null);break;case"focusout":bh=Zb=Ol=null;break;case"mousedown":Jb=!0;break;case"contextmenu":case"mouseup":case"dragend":Jb=!1,cC(h,n,c);break;case"selectionchange":if(Cz)break;case"keydown":case"keyup":cC(h,n,c)}var $;if(q1)e:{switch(t){case"compositionstart":var k="onCompositionStart";break e;case"compositionend":k="onCompositionEnd";break e;case"compositionupdate":k="onCompositionUpdate";break e}k=void 0}else _l?ZN(t,n)&&(k="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(k="onCompositionStart");k&&(QN&&n.locale!=="ko"&&(_l||k!=="onCompositionStart"?k==="onCompositionEnd"&&_l&&($=YN()):(si=c,H1="value"in si?si.value:si.textContent,_l=!0)),C=bm(u,k),0<C.length&&(k=new eC(k,t,null,n,c),h.push({event:k,listeners:C}),$?k.data=$:($=JN(n),$!==null&&(k.data=$)))),($=dz?pz(t,n):fz(t,n))&&(k=bm(u,"onBeforeInput"),0<k.length&&(C=new eC("onBeforeInput","beforeinput",null,n,c),h.push({event:C,listeners:k}),C.data=$)),rL(h,t,u,n,c)}BI(h,e)})}function Gh(t,e,n){return{instance:t,listener:e,currentTarget:n}}function bm(t,e){for(var n=e+"Capture",s=[];t!==null;){var a=t,r=a.stateNode;a=a.tag,a!==5&&a!==26&&a!==27||r===null||(a=Lh(t,n),a!=null&&s.unshift(Gh(t,a,r)),a=Lh(t,e),a!=null&&s.push(Gh(t,a,r))),t=t.return}return s}function gl(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5&&t.tag!==27);return t||null}function HC(t,e,n,s,a){for(var r=e._reactName,i=[];n!==null&&n!==s;){var o=n,l=o.alternate,u=o.stateNode;if(o=o.tag,l!==null&&l===s)break;o!==5&&o!==26&&o!==27||u===null||(l=u,a?(u=Lh(n,r),u!=null&&i.unshift(Gh(n,u,l))):a||(u=Lh(n,r),u!=null&&i.push(Gh(n,u,l)))),n=n.return}i.length!==0&&t.push({event:e,listeners:i})}var uL=/\r\n?/g,cL=/\u0000|\uFFFD/g;function jC(t){return(typeof t=="string"?t:""+t).replace(uL,`
`).replace(cL,"")}function UI(t,e){return e=jC(e),jC(t)===e}function wg(){}function nt(t,e,n,s,a,r){switch(n){case"children":typeof s=="string"?e==="body"||e==="textarea"&&s===""||au(t,s):(typeof s=="number"||typeof s=="bigint")&&e!=="body"&&au(t,""+s);break;case"className":rf(t,"class",s);break;case"tabIndex":rf(t,"tabindex",s);break;case"dir":case"role":case"viewBox":case"width":case"height":rf(t,n,s);break;case"style":XN(t,s,r);break;case"data":if(e!=="object"){rf(t,"data",s);break}case"src":case"href":if(s===""&&(e!=="a"||n!=="href")){t.removeAttribute(n);break}if(s==null||typeof s=="function"||typeof s=="symbol"||typeof s=="boolean"){t.removeAttribute(n);break}s=Ff(""+s),t.setAttribute(n,s);break;case"action":case"formAction":if(typeof s=="function"){t.setAttribute(n,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof r=="function"&&(n==="formAction"?(e!=="input"&&nt(t,e,"name",a.name,a,null),nt(t,e,"formEncType",a.formEncType,a,null),nt(t,e,"formMethod",a.formMethod,a,null),nt(t,e,"formTarget",a.formTarget,a,null)):(nt(t,e,"encType",a.encType,a,null),nt(t,e,"method",a.method,a,null),nt(t,e,"target",a.target,a,null)));if(s==null||typeof s=="symbol"||typeof s=="boolean"){t.removeAttribute(n);break}s=Ff(""+s),t.setAttribute(n,s);break;case"onClick":s!=null&&(t.onclick=wg);break;case"onScroll":s!=null&&Ge("scroll",t);break;case"onScrollEnd":s!=null&&Ge("scrollend",t);break;case"dangerouslySetInnerHTML":if(s!=null){if(typeof s!="object"||!("__html"in s))throw Error(Y(61));if(n=s.__html,n!=null){if(a.children!=null)throw Error(Y(60));t.innerHTML=n}}break;case"multiple":t.multiple=s&&typeof s!="function"&&typeof s!="symbol";break;case"muted":t.muted=s&&typeof s!="function"&&typeof s!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(s==null||typeof s=="function"||typeof s=="boolean"||typeof s=="symbol"){t.removeAttribute("xlink:href");break}n=Ff(""+s),t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":s!=null&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,""+s):t.removeAttribute(n);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":s&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,""):t.removeAttribute(n);break;case"capture":case"download":s===!0?t.setAttribute(n,""):s!==!1&&s!=null&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,s):t.removeAttribute(n);break;case"cols":case"rows":case"size":case"span":s!=null&&typeof s!="function"&&typeof s!="symbol"&&!isNaN(s)&&1<=s?t.setAttribute(n,s):t.removeAttribute(n);break;case"rowSpan":case"start":s==null||typeof s=="function"||typeof s=="symbol"||isNaN(s)?t.removeAttribute(n):t.setAttribute(n,s);break;case"popover":Ge("beforetoggle",t),Ge("toggle",t),Of(t,"popover",s);break;case"xlinkActuate":ur(t,"http://www.w3.org/1999/xlink","xlink:actuate",s);break;case"xlinkArcrole":ur(t,"http://www.w3.org/1999/xlink","xlink:arcrole",s);break;case"xlinkRole":ur(t,"http://www.w3.org/1999/xlink","xlink:role",s);break;case"xlinkShow":ur(t,"http://www.w3.org/1999/xlink","xlink:show",s);break;case"xlinkTitle":ur(t,"http://www.w3.org/1999/xlink","xlink:title",s);break;case"xlinkType":ur(t,"http://www.w3.org/1999/xlink","xlink:type",s);break;case"xmlBase":ur(t,"http://www.w3.org/XML/1998/namespace","xml:base",s);break;case"xmlLang":ur(t,"http://www.w3.org/XML/1998/namespace","xml:lang",s);break;case"xmlSpace":ur(t,"http://www.w3.org/XML/1998/namespace","xml:space",s);break;case"is":Of(t,"is",s);break;case"innerText":case"textContent":break;default:(!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(n=MF.get(n)||n,Of(t,n,s))}}function N0(t,e,n,s,a,r){switch(n){case"style":XN(t,s,r);break;case"dangerouslySetInnerHTML":if(s!=null){if(typeof s!="object"||!("__html"in s))throw Error(Y(61));if(n=s.__html,n!=null){if(a.children!=null)throw Error(Y(60));t.innerHTML=n}}break;case"children":typeof s=="string"?au(t,s):(typeof s=="number"||typeof s=="bigint")&&au(t,""+s);break;case"onScroll":s!=null&&Ge("scroll",t);break;case"onScrollEnd":s!=null&&Ge("scrollend",t);break;case"onClick":s!=null&&(t.onclick=wg);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!UN.hasOwnProperty(n))e:{if(n[0]==="o"&&n[1]==="n"&&(a=n.endsWith("Capture"),e=n.slice(2,a?n.length-7:void 0),r=t[cs]||null,r=r!=null?r[n]:null,typeof r=="function"&&t.removeEventListener(e,r,a),typeof s=="function")){typeof r!="function"&&r!==null&&(n in t?t[n]=null:t.hasAttribute(n)&&t.removeAttribute(n)),t.addEventListener(e,s,a);break e}n in t?t[n]=s:s===!0?t.setAttribute(n,""):Of(t,n,s)}}}function Tn(t,e,n){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Ge("error",t),Ge("load",t);var s=!1,a=!1,r;for(r in n)if(n.hasOwnProperty(r)){var i=n[r];if(i!=null)switch(r){case"src":s=!0;break;case"srcSet":a=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(Y(137,e));default:nt(t,e,r,i,n,null)}}a&&nt(t,e,"srcSet",n.srcSet,n,null),s&&nt(t,e,"src",n.src,n,null);return;case"input":Ge("invalid",t);var o=r=i=a=null,l=null,u=null;for(s in n)if(n.hasOwnProperty(s)){var c=n[s];if(c!=null)switch(s){case"name":a=c;break;case"type":i=c;break;case"checked":l=c;break;case"defaultChecked":u=c;break;case"value":r=c;break;case"defaultValue":o=c;break;case"children":case"dangerouslySetInnerHTML":if(c!=null)throw Error(Y(137,e));break;default:nt(t,e,s,c,n,null)}}HN(t,r,o,l,u,i,a,!1),nm(t);return;case"select":Ge("invalid",t),s=i=r=null;for(a in n)if(n.hasOwnProperty(a)&&(o=n[a],o!=null))switch(a){case"value":r=o;break;case"defaultValue":i=o;break;case"multiple":s=o;default:nt(t,e,a,o,n,null)}e=r,n=i,t.multiple=!!s,e!=null?Wl(t,!!s,e,!1):n!=null&&Wl(t,!!s,n,!0);return;case"textarea":Ge("invalid",t),r=a=s=null;for(i in n)if(n.hasOwnProperty(i)&&(o=n[i],o!=null))switch(i){case"value":s=o;break;case"defaultValue":a=o;break;case"children":r=o;break;case"dangerouslySetInnerHTML":if(o!=null)throw Error(Y(91));break;default:nt(t,e,i,o,n,null)}qN(t,s,a,r),nm(t);return;case"option":for(l in n)if(n.hasOwnProperty(l)&&(s=n[l],s!=null))switch(l){case"selected":t.selected=s&&typeof s!="function"&&typeof s!="symbol";break;default:nt(t,e,l,s,n,null)}return;case"dialog":Ge("cancel",t),Ge("close",t);break;case"iframe":case"object":Ge("load",t);break;case"video":case"audio":for(s=0;s<Wh.length;s++)Ge(Wh[s],t);break;case"image":Ge("error",t),Ge("load",t);break;case"details":Ge("toggle",t);break;case"embed":case"source":case"link":Ge("error",t),Ge("load",t);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(u in n)if(n.hasOwnProperty(u)&&(s=n[u],s!=null))switch(u){case"children":case"dangerouslySetInnerHTML":throw Error(Y(137,e));default:nt(t,e,u,s,n,null)}return;default:if(W1(e)){for(c in n)n.hasOwnProperty(c)&&(s=n[c],s!==void 0&&N0(t,e,c,s,n,void 0));return}}for(o in n)n.hasOwnProperty(o)&&(s=n[o],s!=null&&nt(t,e,o,s,n,null))}function hL(t,e,n,s){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var a=null,r=null,i=null,o=null,l=null,u=null,c=null;for(p in n){var h=n[p];if(n.hasOwnProperty(p)&&h!=null)switch(p){case"checked":break;case"value":break;case"defaultValue":l=h;default:s.hasOwnProperty(p)||nt(t,e,p,null,s,h)}}for(var d in s){var p=s[d];if(h=n[d],s.hasOwnProperty(d)&&(p!=null||h!=null))switch(d){case"type":r=p;break;case"name":a=p;break;case"checked":u=p;break;case"defaultChecked":c=p;break;case"value":i=p;break;case"defaultValue":o=p;break;case"children":case"dangerouslySetInnerHTML":if(p!=null)throw Error(Y(137,e));break;default:p!==h&&nt(t,e,d,p,s,h)}}Xb(t,i,o,l,u,c,r,a);return;case"select":p=i=o=d=null;for(r in n)if(l=n[r],n.hasOwnProperty(r)&&l!=null)switch(r){case"value":break;case"multiple":p=l;default:s.hasOwnProperty(r)||nt(t,e,r,null,s,l)}for(a in s)if(r=s[a],l=n[a],s.hasOwnProperty(a)&&(r!=null||l!=null))switch(a){case"value":d=r;break;case"defaultValue":o=r;break;case"multiple":i=r;default:r!==l&&nt(t,e,a,r,s,l)}e=o,n=i,s=p,d!=null?Wl(t,!!n,d,!1):!!s!=!!n&&(e!=null?Wl(t,!!n,e,!0):Wl(t,!!n,n?[]:"",!1));return;case"textarea":p=d=null;for(o in n)if(a=n[o],n.hasOwnProperty(o)&&a!=null&&!s.hasOwnProperty(o))switch(o){case"value":break;case"children":break;default:nt(t,e,o,null,s,a)}for(i in s)if(a=s[i],r=n[i],s.hasOwnProperty(i)&&(a!=null||r!=null))switch(i){case"value":d=a;break;case"defaultValue":p=a;break;case"children":break;case"dangerouslySetInnerHTML":if(a!=null)throw Error(Y(91));break;default:a!==r&&nt(t,e,i,a,s,r)}jN(t,d,p);return;case"option":for(var f in n)if(d=n[f],n.hasOwnProperty(f)&&d!=null&&!s.hasOwnProperty(f))switch(f){case"selected":t.selected=!1;break;default:nt(t,e,f,null,s,d)}for(l in s)if(d=s[l],p=n[l],s.hasOwnProperty(l)&&d!==p&&(d!=null||p!=null))switch(l){case"selected":t.selected=d&&typeof d!="function"&&typeof d!="symbol";break;default:nt(t,e,l,d,s,p)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var m in n)d=n[m],n.hasOwnProperty(m)&&d!=null&&!s.hasOwnProperty(m)&&nt(t,e,m,null,s,d);for(u in s)if(d=s[u],p=n[u],s.hasOwnProperty(u)&&d!==p&&(d!=null||p!=null))switch(u){case"children":case"dangerouslySetInnerHTML":if(d!=null)throw Error(Y(137,e));break;default:nt(t,e,u,d,s,p)}return;default:if(W1(e)){for(var y in n)d=n[y],n.hasOwnProperty(y)&&d!==void 0&&!s.hasOwnProperty(y)&&N0(t,e,y,void 0,s,d);for(c in s)d=s[c],p=n[c],!s.hasOwnProperty(c)||d===p||d===void 0&&p===void 0||N0(t,e,c,d,s,p);return}}for(var g in n)d=n[g],n.hasOwnProperty(g)&&d!=null&&!s.hasOwnProperty(g)&&nt(t,e,g,null,s,d);for(h in s)d=s[h],p=n[h],!s.hasOwnProperty(h)||d===p||d==null&&p==null||nt(t,e,h,d,s,p)}var k0=null,I0=null;function wm(t){return t.nodeType===9?t:t.ownerDocument}function qC(t){switch(t){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function WI(t,e){if(t===0)switch(e){case"svg":return 1;case"math":return 2;default:return 0}return t===1&&e==="foreignObject"?0:t}function T0(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.children=="bigint"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var xb=null;function dL(){var t=window.event;return t&&t.type==="popstate"?t===xb?!1:(xb=t,!0):(xb=null,!1)}var GI=typeof setTimeout=="function"?setTimeout:void 0,pL=typeof clearTimeout=="function"?clearTimeout:void 0,XC=typeof Promise=="function"?Promise:void 0,fL=typeof queueMicrotask=="function"?queueMicrotask:typeof XC<"u"?function(t){return XC.resolve(null).then(t).catch(mL)}:GI;function mL(t){setTimeout(function(){throw t})}function bb(t,e){var n=e,s=0;do{var a=n.nextSibling;if(t.removeChild(n),a&&a.nodeType===8)if(n=a.data,n==="/$"){if(s===0){t.removeChild(a),Kh(e);return}s--}else n!=="$"&&n!=="$?"&&n!=="$!"||s++;n=a}while(n);Kh(e)}function E0(t){var e=t.firstChild;for(e&&e.nodeType===10&&(e=e.nextSibling);e;){var n=e;switch(e=e.nextSibling,n.nodeName){case"HTML":case"HEAD":case"BODY":E0(n),U1(n);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(n.rel.toLowerCase()==="stylesheet")continue}t.removeChild(n)}}function gL(t,e,n,s){for(;t.nodeType===1;){var a=n;if(t.nodeName.toLowerCase()!==e.toLowerCase()){if(!s&&(t.nodeName!=="INPUT"||t.type!=="hidden"))break}else if(s){if(!t[zh])switch(e){case"meta":if(!t.hasAttribute("itemprop"))break;return t;case"link":if(r=t.getAttribute("rel"),r==="stylesheet"&&t.hasAttribute("data-precedence"))break;if(r!==a.rel||t.getAttribute("href")!==(a.href==null?null:a.href)||t.getAttribute("crossorigin")!==(a.crossOrigin==null?null:a.crossOrigin)||t.getAttribute("title")!==(a.title==null?null:a.title))break;return t;case"style":if(t.hasAttribute("data-precedence"))break;return t;case"script":if(r=t.getAttribute("src"),(r!==(a.src==null?null:a.src)||t.getAttribute("type")!==(a.type==null?null:a.type)||t.getAttribute("crossorigin")!==(a.crossOrigin==null?null:a.crossOrigin))&&r&&t.hasAttribute("async")&&!t.hasAttribute("itemprop"))break;return t;default:return t}}else if(e==="input"&&t.type==="hidden"){var r=a.name==null?null:""+a.name;if(a.type==="hidden"&&t.getAttribute("name")===r)return t}else return t;if(t=va(t.nextSibling),t===null)break}return null}function yL(t,e,n){if(e==="")return null;for(;t.nodeType!==3;)if((t.nodeType!==1||t.nodeName!=="INPUT"||t.type!=="hidden")&&!n||(t=va(t.nextSibling),t===null))return null;return t}function va(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?"||e==="F!"||e==="F")break;if(e==="/$")return null}}return t}function KC(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}function HI(t,e,n){switch(e=wm(n),t){case"html":if(t=e.documentElement,!t)throw Error(Y(452));return t;case"head":if(t=e.head,!t)throw Error(Y(453));return t;case"body":if(t=e.body,!t)throw Error(Y(454));return t;default:throw Error(Y(451))}}var la=new Map,YC=new Set;function vm(t){return typeof t.getRootNode=="function"?t.getRootNode():t.ownerDocument}var Lr=wt.d;wt.d={f:xL,r:bL,D:wL,C:vL,L:SL,m:CL,X:NL,S:$L,M:kL};function xL(){var t=Lr.f(),e=xg();return t||e}function bL(t){var e=Iu(t);e!==null&&e.tag===5&&e.type==="form"?Hk(e):Lr.r(t)}var Eu=typeof document>"u"?null:document;function jI(t,e,n){var s=Eu;if(s&&typeof e=="string"&&e){var a=qs(e);a='link[rel="'+t+'"][href="'+a+'"]',typeof n=="string"&&(a+='[crossorigin="'+n+'"]'),YC.has(a)||(YC.add(a),t={rel:t,crossOrigin:n,href:e},s.querySelector(a)===null&&(e=s.createElement("link"),Tn(e,"link",t),yn(e),s.head.appendChild(e)))}}function wL(t){Lr.D(t),jI("dns-prefetch",t,null)}function vL(t,e){Lr.C(t,e),jI("preconnect",t,e)}function SL(t,e,n){Lr.L(t,e,n);var s=Eu;if(s&&t&&e){var a='link[rel="preload"][as="'+qs(e)+'"]';e==="image"&&n&&n.imageSrcSet?(a+='[imagesrcset="'+qs(n.imageSrcSet)+'"]',typeof n.imageSizes=="string"&&(a+='[imagesizes="'+qs(n.imageSizes)+'"]')):a+='[href="'+qs(t)+'"]';var r=a;switch(e){case"style":r=cu(t);break;case"script":r=Ru(t)}la.has(r)||(t=St({rel:"preload",href:e==="image"&&n&&n.imageSrcSet?void 0:t,as:e},n),la.set(r,t),s.querySelector(a)!==null||e==="style"&&s.querySelector(kd(r))||e==="script"&&s.querySelector(Id(r))||(e=s.createElement("link"),Tn(e,"link",t),yn(e),s.head.appendChild(e)))}}function CL(t,e){Lr.m(t,e);var n=Eu;if(n&&t){var s=e&&typeof e.as=="string"?e.as:"script",a='link[rel="modulepreload"][as="'+qs(s)+'"][href="'+qs(t)+'"]',r=a;switch(s){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":r=Ru(t)}if(!la.has(r)&&(t=St({rel:"modulepreload",href:t},e),la.set(r,t),n.querySelector(a)===null)){switch(s){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(n.querySelector(Id(r)))return}s=n.createElement("link"),Tn(s,"link",t),yn(s),n.head.appendChild(s)}}}function $L(t,e,n){Lr.S(t,e,n);var s=Eu;if(s&&t){var a=Ul(s).hoistableStyles,r=cu(t);e=e||"default";var i=a.get(r);if(!i){var o={loading:0,preload:null};if(i=s.querySelector(kd(r)))o.loading=5;else{t=St({rel:"stylesheet",href:t,"data-precedence":e},n),(n=la.get(r))&&Nw(t,n);var l=i=s.createElement("link");yn(l),Tn(l,"link",t),l._p=new Promise(function(u,c){l.onload=u,l.onerror=c}),l.addEventListener("load",function(){o.loading|=1}),l.addEventListener("error",function(){o.loading|=2}),o.loading|=4,Wf(i,e,s)}i={type:"stylesheet",instance:i,count:1,state:o},a.set(r,i)}}}function NL(t,e){Lr.X(t,e);var n=Eu;if(n&&t){var s=Ul(n).hoistableScripts,a=Ru(t),r=s.get(a);r||(r=n.querySelector(Id(a)),r||(t=St({src:t,async:!0},e),(e=la.get(a))&&kw(t,e),r=n.createElement("script"),yn(r),Tn(r,"link",t),n.head.appendChild(r)),r={type:"script",instance:r,count:1,state:null},s.set(a,r))}}function kL(t,e){Lr.M(t,e);var n=Eu;if(n&&t){var s=Ul(n).hoistableScripts,a=Ru(t),r=s.get(a);r||(r=n.querySelector(Id(a)),r||(t=St({src:t,async:!0,type:"module"},e),(e=la.get(a))&&kw(t,e),r=n.createElement("script"),yn(r),Tn(r,"link",t),n.head.appendChild(r)),r={type:"script",instance:r,count:1,state:null},s.set(a,r))}}function QC(t,e,n,s){var a=(a=oi.current)?vm(a):null;if(!a)throw Error(Y(446));switch(t){case"meta":case"title":return null;case"style":return typeof n.precedence=="string"&&typeof n.href=="string"?(e=cu(n.href),n=Ul(a).hoistableStyles,s=n.get(e),s||(s={type:"style",instance:null,count:0,state:null},n.set(e,s)),s):{type:"void",instance:null,count:0,state:null};case"link":if(n.rel==="stylesheet"&&typeof n.href=="string"&&typeof n.precedence=="string"){t=cu(n.href);var r=Ul(a).hoistableStyles,i=r.get(t);if(i||(a=a.ownerDocument||a,i={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},r.set(t,i),(r=a.querySelector(kd(t)))&&!r._p&&(i.instance=r,i.state.loading=5),la.has(t)||(n={rel:"preload",as:"style",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy},la.set(t,n),r||IL(a,t,n,i.state))),e&&s===null)throw Error(Y(528,""));return i}if(e&&s!==null)throw Error(Y(529,""));return null;case"script":return e=n.async,n=n.src,typeof n=="string"&&e&&typeof e!="function"&&typeof e!="symbol"?(e=Ru(n),n=Ul(a).hoistableScripts,s=n.get(e),s||(s={type:"script",instance:null,count:0,state:null},n.set(e,s)),s):{type:"void",instance:null,count:0,state:null};default:throw Error(Y(444,t))}}function cu(t){return'href="'+qs(t)+'"'}function kd(t){return'link[rel="stylesheet"]['+t+"]"}function qI(t){return St({},t,{"data-precedence":t.precedence,precedence:null})}function IL(t,e,n,s){t.querySelector('link[rel="preload"][as="style"]['+e+"]")?s.loading=1:(e=t.createElement("link"),s.preload=e,e.addEventListener("load",function(){return s.loading|=1}),e.addEventListener("error",function(){return s.loading|=2}),Tn(e,"link",n),yn(e),t.head.appendChild(e))}function Ru(t){return'[src="'+qs(t)+'"]'}function Id(t){return"script[async]"+t}function ZC(t,e,n){if(e.count++,e.instance===null)switch(e.type){case"style":var s=t.querySelector('style[data-href~="'+qs(n.href)+'"]');if(s)return e.instance=s,yn(s),s;var a=St({},n,{"data-href":n.href,"data-precedence":n.precedence,href:null,precedence:null});return s=(t.ownerDocument||t).createElement("style"),yn(s),Tn(s,"style",a),Wf(s,n.precedence,t),e.instance=s;case"stylesheet":a=cu(n.href);var r=t.querySelector(kd(a));if(r)return e.state.loading|=4,e.instance=r,yn(r),r;s=qI(n),(a=la.get(a))&&Nw(s,a),r=(t.ownerDocument||t).createElement("link"),yn(r);var i=r;return i._p=new Promise(function(o,l){i.onload=o,i.onerror=l}),Tn(r,"link",s),e.state.loading|=4,Wf(r,n.precedence,t),e.instance=r;case"script":return r=Ru(n.src),(a=t.querySelector(Id(r)))?(e.instance=a,yn(a),a):(s=n,(a=la.get(r))&&(s=St({},n),kw(s,a)),t=t.ownerDocument||t,a=t.createElement("script"),yn(a),Tn(a,"link",s),t.head.appendChild(a),e.instance=a);case"void":return null;default:throw Error(Y(443,e.type))}else e.type==="stylesheet"&&!(e.state.loading&4)&&(s=e.instance,e.state.loading|=4,Wf(s,n.precedence,t));return e.instance}function Wf(t,e,n){for(var s=n.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),a=s.length?s[s.length-1]:null,r=a,i=0;i<s.length;i++){var o=s[i];if(o.dataset.precedence===e)r=o;else if(r!==a)break}r?r.parentNode.insertBefore(t,r.nextSibling):(e=n.nodeType===9?n.head:n,e.insertBefore(t,e.firstChild))}function Nw(t,e){t.crossOrigin==null&&(t.crossOrigin=e.crossOrigin),t.referrerPolicy==null&&(t.referrerPolicy=e.referrerPolicy),t.title==null&&(t.title=e.title)}function kw(t,e){t.crossOrigin==null&&(t.crossOrigin=e.crossOrigin),t.referrerPolicy==null&&(t.referrerPolicy=e.referrerPolicy),t.integrity==null&&(t.integrity=e.integrity)}var Gf=null;function JC(t,e,n){if(Gf===null){var s=new Map,a=Gf=new Map;a.set(n,s)}else a=Gf,s=a.get(n),s||(s=new Map,a.set(n,s));if(s.has(t))return s;for(s.set(t,null),n=n.getElementsByTagName(t),a=0;a<n.length;a++){var r=n[a];if(!(r[zh]||r[Ln]||t==="link"&&r.getAttribute("rel")==="stylesheet")&&r.namespaceURI!=="http://www.w3.org/2000/svg"){var i=r.getAttribute(e)||"";i=t+i;var o=s.get(i);o?o.push(r):s.set(i,[r])}}return s}function e2(t,e,n){t=t.ownerDocument||t,t.head.insertBefore(n,e==="title"?t.querySelector("head > title"):null)}function TL(t,e,n){if(n===1||e.itemProp!=null)return!1;switch(t){case"meta":case"title":return!0;case"style":if(typeof e.precedence!="string"||typeof e.href!="string"||e.href==="")break;return!0;case"link":if(typeof e.rel!="string"||typeof e.href!="string"||e.href===""||e.onLoad||e.onError)break;switch(e.rel){case"stylesheet":return t=e.disabled,typeof e.precedence=="string"&&t==null;default:return!0}case"script":if(e.async&&typeof e.async!="function"&&typeof e.async!="symbol"&&!e.onLoad&&!e.onError&&e.src&&typeof e.src=="string")return!0}return!1}function XI(t){return!(t.type==="stylesheet"&&!(t.state.loading&3))}var Hh=null;function EL(){}function RL(t,e,n){if(Hh===null)throw Error(Y(475));var s=Hh;if(e.type==="stylesheet"&&(typeof n.media!="string"||matchMedia(n.media).matches!==!1)&&!(e.state.loading&4)){if(e.instance===null){var a=cu(n.href),r=t.querySelector(kd(a));if(r){t=r._p,t!==null&&typeof t=="object"&&typeof t.then=="function"&&(s.count++,s=Sm.bind(s),t.then(s,s)),e.state.loading|=4,e.instance=r,yn(r);return}r=t.ownerDocument||t,n=qI(n),(a=la.get(a))&&Nw(n,a),r=r.createElement("link"),yn(r);var i=r;i._p=new Promise(function(o,l){i.onload=o,i.onerror=l}),Tn(r,"link",n),e.instance=r}s.stylesheets===null&&(s.stylesheets=new Map),s.stylesheets.set(e,t),(t=e.state.preload)&&!(e.state.loading&3)&&(s.count++,e=Sm.bind(s),t.addEventListener("load",e),t.addEventListener("error",e))}}function DL(){if(Hh===null)throw Error(Y(475));var t=Hh;return t.stylesheets&&t.count===0&&R0(t,t.stylesheets),0<t.count?function(e){var n=setTimeout(function(){if(t.stylesheets&&R0(t,t.stylesheets),t.unsuspend){var s=t.unsuspend;t.unsuspend=null,s()}},6e4);return t.unsuspend=e,function(){t.unsuspend=null,clearTimeout(n)}}:null}function Sm(){if(this.count--,this.count===0){if(this.stylesheets)R0(this,this.stylesheets);else if(this.unsuspend){var t=this.unsuspend;this.unsuspend=null,t()}}}var Cm=null;function R0(t,e){t.stylesheets=null,t.unsuspend!==null&&(t.count++,Cm=new Map,e.forEach(AL,t),Cm=null,Sm.call(t))}function AL(t,e){if(!(e.state.loading&4)){var n=Cm.get(t);if(n)var s=n.get(null);else{n=new Map,Cm.set(t,n);for(var a=t.querySelectorAll("link[data-precedence],style[data-precedence]"),r=0;r<a.length;r++){var i=a[r];(i.nodeName==="LINK"||i.getAttribute("media")!=="not all")&&(n.set(i.dataset.precedence,i),s=i)}s&&n.set(null,s)}a=e.instance,i=a.getAttribute("data-precedence"),r=n.get(i)||s,r===s&&n.set(null,a),n.set(i,a),this.count++,s=Sm.bind(this),a.addEventListener("load",s),a.addEventListener("error",s),r?r.parentNode.insertBefore(a,r.nextSibling):(t=t.nodeType===9?t.head:t,t.insertBefore(a,t.firstChild)),e.state.loading|=4}}var jh={$$typeof:wr,Provider:null,Consumer:null,_currentValue:po,_currentValue2:po,_threadCount:0};function _L(t,e,n,s,a,r,i,o){this.tag=1,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Gx(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Gx(0),this.hiddenUpdates=Gx(null),this.identifierPrefix=s,this.onUncaughtError=a,this.onCaughtError=r,this.onRecoverableError=i,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=o,this.incompleteTransitions=new Map}function KI(t,e,n,s,a,r,i,o,l,u,c,h){return t=new _L(t,e,n,i,o,l,u,h),e=1,r===!0&&(e|=24),r=Ys(3,null,null,e),t.current=r,r.stateNode=t,e=ew(),e.refCount++,t.pooledCache=e,e.refCount++,r.memoizedState={element:s,isDehydrated:n,cache:e},mw(r),t}function YI(t){return t?(t=Ll,t):Ll}function QI(t,e,n,s,a,r){a=YI(a),s.context===null?s.context=a:s.pendingContext=a,s=li(e),s.payload={element:n},r=r===void 0?null:r,r!==null&&(s.callback=r),n=ui(t,s,e),n!==null&&(Yn(n,t,e),Nh(n,t,e))}function t2(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function Iw(t,e){t2(t,e),(t=t.alternate)&&t2(t,e)}function ZI(t){if(t.tag===13){var e=xi(t,67108864);e!==null&&Yn(e,t,67108864),Iw(t,67108864)}}var $m=!0;function OL(t,e,n,s){var a=Oe.T;Oe.T=null;var r=wt.p;try{wt.p=2,Tw(t,e,n,s)}finally{wt.p=r,Oe.T=a}}function FL(t,e,n,s){var a=Oe.T;Oe.T=null;var r=wt.p;try{wt.p=8,Tw(t,e,n,s)}finally{wt.p=r,Oe.T=a}}function Tw(t,e,n,s){if($m){var a=D0(s);if(a===null)yb(t,e,s,Nm,n),n2(t,s);else if(LL(a,t,e,n,s))s.stopPropagation();else if(n2(t,s),e&4&&-1<zL.indexOf(t)){for(;a!==null;){var r=Iu(a);if(r!==null)switch(r.tag){case 3:if(r=r.stateNode,r.current.memoizedState.isDehydrated){var i=Qi(r.pendingLanes);if(i!==0){var o=r;for(o.pendingLanes|=2,o.entangledLanes|=2;i;){var l=1<<31-Ts(i);o.entanglements[1]|=l,i&=~l}nr(r),!(At&6)&&(mm=Ga()+500,Nd(0))}}break;case 13:o=xi(r,2),o!==null&&Yn(o,r,2),xg(),Iw(r,2)}if(r=D0(s),r===null&&yb(t,e,s,Nm,n),r===a)break;a=r}a!==null&&s.stopPropagation()}else yb(t,e,s,null,n)}}function D0(t){return t=G1(t),Ew(t)}var Nm=null;function Ew(t){if(Nm=null,t=oo(t),t!==null){var e=Nu(t);if(e===null)t=null;else{var n=e.tag;if(n===13){if(t=RN(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null)}}return Nm=t,null}function JI(t){switch(t){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(vF()){case AN:return 2;case _N:return 8;case tm:case SF:return 32;case ON:return 268435456;default:return 32}default:return 32}}var A0=!1,di=null,pi=null,fi=null,qh=new Map,Xh=new Map,ti=[],zL="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function n2(t,e){switch(t){case"focusin":case"focusout":di=null;break;case"dragenter":case"dragleave":pi=null;break;case"mouseover":case"mouseout":fi=null;break;case"pointerover":case"pointerout":qh.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Xh.delete(e.pointerId)}}function Jc(t,e,n,s,a,r){return t===null||t.nativeEvent!==r?(t={blockedOn:e,domEventName:n,eventSystemFlags:s,nativeEvent:r,targetContainers:[a]},e!==null&&(e=Iu(e),e!==null&&ZI(e)),t):(t.eventSystemFlags|=s,e=t.targetContainers,a!==null&&e.indexOf(a)===-1&&e.push(a),t)}function LL(t,e,n,s,a){switch(e){case"focusin":return di=Jc(di,t,e,n,s,a),!0;case"dragenter":return pi=Jc(pi,t,e,n,s,a),!0;case"mouseover":return fi=Jc(fi,t,e,n,s,a),!0;case"pointerover":var r=a.pointerId;return qh.set(r,Jc(qh.get(r)||null,t,e,n,s,a)),!0;case"gotpointercapture":return r=a.pointerId,Xh.set(r,Jc(Xh.get(r)||null,t,e,n,s,a)),!0}return!1}function eT(t){var e=oo(t.target);if(e!==null){var n=Nu(e);if(n!==null){if(e=n.tag,e===13){if(e=RN(n),e!==null){t.blockedOn=e,DF(t.priority,function(){if(n.tag===13){var s=Es(),a=xi(n,s);a!==null&&Yn(a,n,s),Iw(n,s)}});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function Hf(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=D0(t.nativeEvent);if(n===null){n=t.nativeEvent;var s=new n.constructor(n.type,n);Yb=s,n.target.dispatchEvent(s),Yb=null}else return e=Iu(n),e!==null&&ZI(e),t.blockedOn=n,!1;e.shift()}return!0}function s2(t,e,n){Hf(t)&&n.delete(e)}function PL(){A0=!1,di!==null&&Hf(di)&&(di=null),pi!==null&&Hf(pi)&&(pi=null),fi!==null&&Hf(fi)&&(fi=null),qh.forEach(s2),Xh.forEach(s2)}function mf(t,e){t.blockedOn===e&&(t.blockedOn=null,A0||(A0=!0,hn.unstable_scheduleCallback(hn.unstable_NormalPriority,PL)))}var gf=null;function a2(t){gf!==t&&(gf=t,hn.unstable_scheduleCallback(hn.unstable_NormalPriority,function(){gf===t&&(gf=null);for(var e=0;e<t.length;e+=3){var n=t[e],s=t[e+1],a=t[e+2];if(typeof s!="function"){if(Ew(s||n)===null)continue;break}var r=Iu(n);r!==null&&(t.splice(e,3),e-=3,i0(r,{pending:!0,data:a,method:n.method,action:s},s,a))}}))}function Kh(t){function e(l){return mf(l,t)}di!==null&&mf(di,t),pi!==null&&mf(pi,t),fi!==null&&mf(fi,t),qh.forEach(e),Xh.forEach(e);for(var n=0;n<ti.length;n++){var s=ti[n];s.blockedOn===t&&(s.blockedOn=null)}for(;0<ti.length&&(n=ti[0],n.blockedOn===null);)eT(n),n.blockedOn===null&&ti.shift();if(n=(t.ownerDocument||t).$$reactFormReplay,n!=null)for(s=0;s<n.length;s+=3){var a=n[s],r=n[s+1],i=a[cs]||null;if(typeof r=="function")i||a2(n);else if(i){var o=null;if(r&&r.hasAttribute("formAction")){if(a=r,i=r[cs]||null)o=i.formAction;else if(Ew(a)!==null)continue}else o=i.action;typeof o=="function"?n[s+1]=o:(n.splice(s,3),s-=3),a2(n)}}}function Rw(t){this._internalRoot=t}vg.prototype.render=Rw.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(Y(409));var n=e.current,s=Es();QI(n,s,t,e,null,null)};vg.prototype.unmount=Rw.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;t.tag===0&&Kl(),QI(t.current,2,null,t,null,null),xg(),e[ku]=null}};function vg(t){this._internalRoot=t}vg.prototype.unstable_scheduleHydration=function(t){if(t){var e=BN();t={blockedOn:null,target:t,priority:e};for(var n=0;n<ti.length&&e!==0&&e<ti[n].priority;n++);ti.splice(n,0,t),n===0&&eT(t)}};var r2=NN.version;if(r2!=="19.0.0")throw Error(Y(527,r2,"19.0.0"));wt.findDOMNode=function(t){var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(Y(188)):(t=Object.keys(t).join(","),Error(Y(268,t)));return t=xF(e),t=t!==null?DN(t):null,t=t===null?null:t.stateNode,t};var ML={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:Oe,findFiberByHostInstance:oo,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var yf=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yf.isDisabled&&yf.supportsFiber)try{gd=yf.inject(ML),Is=yf}catch{}}ig.createRoot=function(t,e){if(!kN(t))throw Error(Y(299));var n=!1,s="",a=Qk,r=Zk,i=Jk,o=null;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(s=e.identifierPrefix),e.onUncaughtError!==void 0&&(a=e.onUncaughtError),e.onCaughtError!==void 0&&(r=e.onCaughtError),e.onRecoverableError!==void 0&&(i=e.onRecoverableError),e.unstable_transitionCallbacks!==void 0&&(o=e.unstable_transitionCallbacks)),e=KI(t,1,!1,null,null,n,s,a,r,i,o,null),t[ku]=e.current,$w(t.nodeType===8?t.parentNode:t),new Rw(e)};ig.hydrateRoot=function(t,e,n){if(!kN(t))throw Error(Y(299));var s=!1,a="",r=Qk,i=Zk,o=Jk,l=null,u=null;return n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(a=n.identifierPrefix),n.onUncaughtError!==void 0&&(r=n.onUncaughtError),n.onCaughtError!==void 0&&(i=n.onCaughtError),n.onRecoverableError!==void 0&&(o=n.onRecoverableError),n.unstable_transitionCallbacks!==void 0&&(l=n.unstable_transitionCallbacks),n.formState!==void 0&&(u=n.formState)),e=KI(t,1,!0,e,n??null,s,a,r,i,o,l,u),e.context=YI(null),n=e.current,s=Es(),a=li(s),a.callback=null,ui(n,a,s),e.current.lanes=s,xd(e,s),nr(e),t[ku]=e.current,$w(t),new vg(e)};ig.version="19.0.0";function tT(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(tT)}catch(t){console.error(t)}}tT(),bN.exports=ig;var BL=bN.exports;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VL=1e-7,UL=1e-4;class Dw{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Sg{refCount(e){return ss("refCount")}incRef(e){return ss("incRef")}timerAvailable(){return!0}time(e){return ss("time")}read(e){return ss("read")}readSync(e){return ss("readSync")}readToGPU(e,n){return ss("readToGPU")}numDataIds(){return ss("numDataIds")}disposeData(e,n){return ss("disposeData")}write(e,n,s){return ss("write")}move(e,n,s,a,r){return ss("move")}createTensorFromGPUData(e,n,s){return ss("createTensorFromGPUData")}memory(){return ss("memory")}floatPrecision(){return ss("floatPrecision")}epsilon(){return this.floatPrecision()===32?VL:UL}dispose(){return ss("dispose")}}function ss(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,kl(t,e,n)}function To(t,e,n){return Math.max(t,Math.min(e,n))}function Aw(t){return t%2===0?t:t+1}function kl(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function nT(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function N(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function ns(t,e,n=""){N(Ee(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function Du(t){N(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function L(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function i2(t){return t.length===0}function GL(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function Ee(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function hu(t){return t%1===0}function _0(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Yl(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function o2(t,e=a=>0,n,s){return new Promise((a,r)=>{let i=0;const o=()=>{if(t()){a();return}i++;const l=e(i);if(n!=null&&i>=n){r();return}s!=null?s(o,l):setTimeout(o,l)};o()})}function _w(t,e){let n=1,s=-1;for(let r=0;r<t.length;++r)if(t[r]>=0)n*=t[r];else if(t[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(t[r]<0)throw Error(`Shapes can not be < 0. Found ${t[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[s]=e/n,a}function Ie(t,e){const n=e.length;return t=t==null?e.map((s,a)=>a):[].concat(t),N(t.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),N(t.every(s=>hu(s)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(s=>s<0?n+s:s)}function Oi(t,e){const n=[],s=[],a=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||a?null:Ie(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(r!=null){if(r[i]===o&&t[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(r[i]==null||r[i]>o)&&t[o]===1&&(n.push(t[o]),s.push(o)),r[i]<=o&&i++}t[o]!==1&&(n.push(t[o]),s.push(o))}return{newShape:n,keptDims:s}}function tn(t,e){return _t(t,e)}function _t(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function HL(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function jL(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function Ow(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function km(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function qL(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Au(t){return typeof t=="string"||t instanceof String}function XL(t){return typeof t=="boolean"}function O0(t){return typeof t=="number"}function Ko(t){return Array.isArray(t)?Ko(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":O0(t)?"float32":Au(t)?"string":XL(t)?"bool":"float32"}function F0(t){return!!(t&&t.constructor&&t.call&&t.apply)}function z0(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function xe(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function sT(t,e,n,s=!1){const a=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let i=0;i<r;i++)a[i]=n[t+i]}else{const r=e[0],i=e.slice(1),o=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<r;l++)a[l]=sT(t+l*o,i,n,s)}return a}function ra(t,e,n=!1){if(t.length===0)return e[0];const s=t.reduce((a,r)=>a*r)*(n?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return sT(0,t,e,n)}function jf(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function Fw(t,e){const n=Sn(t,e);for(let s=0;s<n.length;s++)n[s]=1;return n}function Sn(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function aT(t,e){const n=t.reduce((s,a)=>s*a,1);if(e==null||e==="float32")return ra(t,new Float32Array(n));if(e==="int32")return ra(t,new Int32Array(n));if(e==="bool")return ra(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function _s(t){t.forEach(e=>{N(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function ja(t,e,n){if(e===0)return 0;if(e===1)return t[0];let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=n[a]*t[a];return s}function _u(t,e,n){if(e===0)return[];if(e===1)return[t];const s=new Array(e);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(t/n[a]),t-=s[a]*n[a];return s[s.length-1]=t,s}function Eo(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l2="tfjsflags";class KL{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=YL,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,s){if(this.flagRegistry[e]={evaluationFn:n,setHook:s},this.urlFlags[e]!=null){const a=this.urlFlags[e];M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(Eo(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);l2 in e&&e[l2].split(",").forEach(s=>{const[a,r]=s.split(":");this.urlFlags[a]=ZL(a,r)})}}function YL(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(QL(e,s[0],s[1]),s.join("="))),e}function QL(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function ZL(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function M(){return rT}let rT=null;function JL(t){rT=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wb;function iT(){if(wb==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");wb=t}return wb}function eP(){const t=iT();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function zw(t,e){const n=eP();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const Td="Abs",Ou="Acos",Fu="Acosh",Yo="Add",Ed="AddN",Cg="All",$g="Any",Rd="ArgMax",Dd="ArgMin",zu="Asin",Lu="Asinh",Pu="Atan",Mu="Atanh",Bu="Atan2",Ad="AvgPool",Ng="AvgPoolGrad",_d="AvgPool3D",kg="AvgPool3DGrad",Od="BatchMatMul",Fd="BatchToSpaceND",Ig="Bincount",Tg="BitwiseAnd",tP="BroadcastTo",Eg="BroadcastArgs",Vu="Cast",Uu="Ceil",Wu="ClipByValue",Rg="Complex",zd="ComplexAbs",Ld="Concat",Pd="Conv2D",Dg="Conv2DBackpropFilter",Md="Conv2DBackpropInput",Bd="Conv3D",Ag="Conv3DBackpropFilterV2",_g="Conv3DBackpropInputV2",Gu="Cos",Hu="Cosh",Og="Cumprod",Vd="Cumsum",Fg="CropAndResize",zg="DenseBincount",Lg="DepthToSpace",Ud="DepthwiseConv2dNative",Pg="DepthwiseConv2dNativeBackpropFilter",Mg="DepthwiseConv2dNativeBackpropInput",Bg="Diag",Wd="Dilation2D",Im="Dilation2DBackpropInput",Tm="Dilation2DBackpropFilter",oT="Draw",ju="RealDiv",Vg="Einsum",qu="Elu",Ug="EluGrad",Xu="Erf",Gd="Equal",Ku="Exp",Hd="ExpandDims",Yu="Expm1",Wg="FFT",Gg="Fill",Hg="FlipLeftRight",Qu="Floor",Zu="FloorDiv",jd="FusedBatchNorm",qd="GatherV2",jg="GatherNd",Xd="Greater",Ju="GreaterEqual",ec="Identity",qg="IFFT",Xg="Imag",tc="IsFinite",nc="IsInf",sc="IsNan",Kd="LeakyRelu",Yd="Less",Qd="LessEqual",Kg="LinSpace",ac="Log",rc="Log1p",Zd="LogicalAnd",Jd="LogicalNot",ep="LogicalOr",nP="LogSoftmax",tp="LRN",Yg="LRNGrad",np="Max",ic="Maximum",sp="MaxPool",Qg="MaxPoolGrad",ap="MaxPool3D",Zg="MaxPool3DGrad",Jg="MaxPoolWithArgmax",rp="Mean",ip="Min",oc="Minimum",op="MirrorPad",lc="Mod",ey="Multinomial",uc="Multiply",lp="Neg",up="NotEqual",ty="NonMaxSuppressionV3",Lw="NonMaxSuppressionV4",ny="NonMaxSuppressionV5",cp="OnesLike",hp="OneHot",dp="Pack",pp="PadV2",cc="Pow",fp="Prelu",mp="Prod",Pw="RaggedGather",Mw="RaggedRange",Bw="RaggedTensorToTensor",sy="Range",ay="Real",hc="Reciprocal",dc="Relu",gp="Reshape",yp="ResizeNearestNeighbor",ry="ResizeNearestNeighborGrad",xp="ResizeBilinear",iy="ResizeBilinearGrad",pc="Relu6",bp="Reverse",fc="Round",mc="Rsqrt",oy="ScatterNd",ly="TensorScatterUpdate",uy="SearchSorted",wp="Select",gc="Selu",vp="Slice",yc="Sin",xc="Sinh",bc="Sign",wc="Sigmoid",vc="Softplus",Sc="Sqrt",Sp="Sum",Cp="SpaceToBatchND",$p="SplitV",Np="Softmax",Vw="SparseFillEmptyRows",Uw="SparseReshape",cy="SparseSegmentMean",hy="SparseSegmentSum",dy="SparseToDense",Cc="SquaredDifference",py="Square",fy="StaticRegexReplace",my="StridedSlice",gy="StringNGrams",Ww="StringSplit",Gw="StringToHashBucketFast",$c="Sub",Nc="Tan",kc="Tanh",Ic="Tile",yy="TopK",xy="Transform",bo="Transpose",Hw="Unique",kp="Unpack",Ip="UnsortedSegmentSum",Tp="ZerosLike",Tc="Step",Em="FromPixels",by="RotateWithOffset",Yh="_FusedMatMul",Qh="FusedConv2D",Zh="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(...t)}function sP(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rm=zw("kernelRegistry",()=>new Map),L0=zw("gradRegistry",()=>new Map);function P0(t,e){const n=lT(t,e);return Rm.get(n)}function u2(t){return L0.get(t)}function c2(t){const e=Rm.entries(),n=[];for(;;){const{done:s,value:a}=e.next();if(s)break;const[r,i]=a,[o]=r.split("_");o===t&&n.push(i)}return n}function jw(t){const{kernelName:e,backendName:n}=t,s=lT(e,n);Rm.has(s)&&Ns(`The kernel '${e}' for backend '${n}' is already registered`),Rm.set(s,t)}function aP(t){const{kernelName:e}=t;L0.has(e)&&M().getBool("DEBUG")&&Ns(`Overriding the gradient for '${e}'`),L0.set(e,t)}function lT(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var cT=mt,Zs=null;try{Zs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function mt(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}mt.prototype.__isLong__;Object.defineProperty(mt.prototype,"__isLong__",{value:!0});function xs(t){return(t&&t.__isLong__)===!0}mt.isLong=xs;var h2={},d2={};function Qo(t,e){var n,s,a;return e?(t>>>=0,(a=0<=t&&t<256)&&(s=d2[t],s)?s:(n=gt(t,(t|0)<0?-1:0,!0),a&&(d2[t]=n),n)):(t|=0,(a=-128<=t&&t<128)&&(s=h2[t],s)?s:(n=gt(t,t<0?-1:0,!1),a&&(h2[t]=n),n))}mt.fromInt=Qo;function Js(t,e){if(isNaN(t))return e?uo:ea;if(e){if(t<0)return uo;if(t>=hT)return fT}else{if(t<=-f2)return ls;if(t+1>=f2)return pT}return t<0?Js(-t,e).neg():gt(t%du|0,t/du|0,e)}mt.fromNumber=Js;function gt(t,e,n){return new mt(t,e,n)}mt.fromBits=gt;var Dm=Math.pow;function qw(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return ea;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return qw(t.substring(1),e,n).neg();for(var a=Js(Dm(n,8)),r=ea,i=0;i<t.length;i+=8){var o=Math.min(8,t.length-i),l=parseInt(t.substring(i,i+o),n);if(o<8){var u=Js(Dm(n,o));r=r.mul(u).add(Js(l))}else r=r.mul(a),r=r.add(Js(l))}return r.unsigned=e,r}mt.fromString=qw;function Aa(t,e){return typeof t=="number"?Js(t,e):typeof t=="string"?qw(t,e):gt(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}mt.fromValue=Aa;var p2=65536,rP=1<<24,du=p2*p2,hT=du*du,f2=hT/2,m2=Qo(rP),ea=Qo(0);mt.ZERO=ea;var uo=Qo(0,!0);mt.UZERO=uo;var Vl=Qo(1);mt.ONE=Vl;var dT=Qo(1,!0);mt.UONE=dT;var M0=Qo(-1);mt.NEG_ONE=M0;var pT=gt(-1,2147483647,!1);mt.MAX_VALUE=pT;var fT=gt(-1,-1,!0);mt.MAX_UNSIGNED_VALUE=fT;var ls=gt(0,-2147483648,!1);mt.MIN_VALUE=ls;var oe=mt.prototype;oe.toInt=function(){return this.unsigned?this.low>>>0:this.low};oe.toNumber=function(){return this.unsigned?(this.high>>>0)*du+(this.low>>>0):this.high*du+(this.low>>>0)};oe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(ls)){var n=Js(e),s=this.div(n),a=s.mul(n).sub(this);return s.toString(e)+a.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=Js(Dm(e,6),this.unsigned),i=this,o="";;){var l=i.div(r),u=i.sub(l.mul(r)).toInt()>>>0,c=u.toString(e);if(i=l,i.isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}};oe.getHighBits=function(){return this.high};oe.getHighBitsUnsigned=function(){return this.high>>>0};oe.getLowBits=function(){return this.low};oe.getLowBitsUnsigned=function(){return this.low>>>0};oe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ls)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};oe.isZero=function(){return this.high===0&&this.low===0};oe.eqz=oe.isZero;oe.isNegative=function(){return!this.unsigned&&this.high<0};oe.isPositive=function(){return this.unsigned||this.high>=0};oe.isOdd=function(){return(this.low&1)===1};oe.isEven=function(){return(this.low&1)===0};oe.equals=function(e){return xs(e)||(e=Aa(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};oe.eq=oe.equals;oe.notEquals=function(e){return!this.eq(e)};oe.neq=oe.notEquals;oe.ne=oe.notEquals;oe.lessThan=function(e){return this.comp(e)<0};oe.lt=oe.lessThan;oe.lessThanOrEqual=function(e){return this.comp(e)<=0};oe.lte=oe.lessThanOrEqual;oe.le=oe.lessThanOrEqual;oe.greaterThan=function(e){return this.comp(e)>0};oe.gt=oe.greaterThan;oe.greaterThanOrEqual=function(e){return this.comp(e)>=0};oe.gte=oe.greaterThanOrEqual;oe.ge=oe.greaterThanOrEqual;oe.compare=function(e){if(xs(e)||(e=Aa(e)),this.eq(e))return 0;var n=this.isNegative(),s=e.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};oe.comp=oe.compare;oe.negate=function(){return!this.unsigned&&this.eq(ls)?ls:this.not().add(Vl)};oe.neg=oe.negate;oe.add=function(e){xs(e)||(e=Aa(e));var n=this.high>>>16,s=this.high&65535,a=this.low>>>16,r=this.low&65535,i=e.high>>>16,o=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,p=0;return p+=r+u,d+=p>>>16,p&=65535,d+=a+l,h+=d>>>16,d&=65535,h+=s+o,c+=h>>>16,h&=65535,c+=n+i,c&=65535,gt(d<<16|p,c<<16|h,this.unsigned)};oe.subtract=function(e){return xs(e)||(e=Aa(e)),this.add(e.neg())};oe.sub=oe.subtract;oe.multiply=function(e){if(this.isZero())return ea;if(xs(e)||(e=Aa(e)),Zs){var n=Zs.mul(this.low,this.high,e.low,e.high);return gt(n,Zs.get_high(),this.unsigned)}if(e.isZero())return ea;if(this.eq(ls))return e.isOdd()?ls:ea;if(e.eq(ls))return this.isOdd()?ls:ea;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m2)&&e.lt(m2))return Js(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,a=this.high&65535,r=this.low>>>16,i=this.low&65535,o=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,f=0;return f+=i*c,p+=f>>>16,f&=65535,p+=r*c,d+=p>>>16,p&=65535,p+=i*u,d+=p>>>16,p&=65535,d+=a*c,h+=d>>>16,d&=65535,d+=r*u,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,h+=s*c+a*u+r*l+i*o,h&=65535,gt(p<<16|f,h<<16|d,this.unsigned)};oe.mul=oe.multiply;oe.divide=function(e){if(xs(e)||(e=Aa(e)),e.isZero())throw Error("division by zero");if(Zs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Zs.div_u:Zs.div_s)(this.low,this.high,e.low,e.high);return gt(n,Zs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?uo:ea;var s,a,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return uo;if(e.gt(this.shru(1)))return dT;r=uo}else{if(this.eq(ls)){if(e.eq(Vl)||e.eq(M0))return ls;if(e.eq(ls))return Vl;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(ea)?e.isNegative()?Vl:M0:(a=this.sub(e.mul(s)),r=s.add(a.div(e)),r)}else if(e.eq(ls))return this.unsigned?uo:ea;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=ea}for(a=this;a.gte(e);){s=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(s)/Math.LN2),l=o<=48?1:Dm(2,o-48),u=Js(s),c=u.mul(e);c.isNegative()||c.gt(a);)s-=l,u=Js(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=Vl),r=r.add(u),a=a.sub(c)}return r};oe.div=oe.divide;oe.modulo=function(e){if(xs(e)||(e=Aa(e)),Zs){var n=(this.unsigned?Zs.rem_u:Zs.rem_s)(this.low,this.high,e.low,e.high);return gt(n,Zs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};oe.mod=oe.modulo;oe.rem=oe.modulo;oe.not=function(){return gt(~this.low,~this.high,this.unsigned)};oe.and=function(e){return xs(e)||(e=Aa(e)),gt(this.low&e.low,this.high&e.high,this.unsigned)};oe.or=function(e){return xs(e)||(e=Aa(e)),gt(this.low|e.low,this.high|e.high,this.unsigned)};oe.xor=function(e){return xs(e)||(e=Aa(e)),gt(this.low^e.low,this.high^e.high,this.unsigned)};oe.shiftLeft=function(e){return xs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):gt(0,this.low<<e-32,this.unsigned)};oe.shl=oe.shiftLeft;oe.shiftRight=function(e){return xs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):gt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};oe.shr=oe.shiftRight;oe.shiftRightUnsigned=function(e){if(xs(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var s=this.low;return gt(s>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?gt(n,0,this.unsigned):gt(n>>>e-32,0,this.unsigned)};oe.shru=oe.shiftRightUnsigned;oe.shr_u=oe.shiftRightUnsigned;oe.toSigned=function(){return this.unsigned?gt(this.low,this.high,!1):this};oe.toUnsigned=function(){return this.unsigned?this:gt(this.low,this.high,!0)};oe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};oe.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};oe.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};mt.fromBytes=function(e,n,s){return s?mt.fromBytesLE(e,n):mt.fromBytesBE(e,n)};mt.fromBytesLE=function(e,n){return new mt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};mt.fromBytesBE=function(e,n){return new mt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const mT=UO(cT),iP=VO({__proto__:null,default:mT},[cT]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=mT||iP;function wy(t){return no.fromString(t,!0,16)}const gT=wy("c3a5c85c97cb3127"),Ji=wy("b492b66fbe98f273"),On=wy("9ae16a3b2f90404f");function B0(t){return t.xor(t.shru(47))}function yT(t,e,n){const s=t.slice(e,e+n);return no.fromBytes(Array.from(s),!0,!0)}function lt(t,e){return yT(t,e,8)}function g2(t,e){return yT(t,e,4)}function on(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function mi(t,e,n=wy("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let a=e.xor(s).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function oP(t,e,n,s,a,r){a=a.add(t),r=on(r.add(a).add(s),21);const i=a;return a=a.add(e),a=a.add(n),r=r.add(on(a,44)),[a.add(s),r.add(i)]}function xf(t,e,n,s){return oP(lt(t,e),lt(t,e+8),lt(t,e+16),lt(t,e+24),n,s)}function lP(t,e=t.length){if(e>=8){const n=On.add(e*2),s=lt(t,0).add(On),a=lt(t,e-8),r=on(a,37).mul(n).add(s),i=on(s,25).add(a).mul(n);return mi(r,i,n)}if(e>=4){const n=On.add(e*2),s=g2(t,0);return mi(s.shl(3).add(e),g2(t,e-4),n)}if(e>0){const n=t[0],s=t[e>>1],a=t[e-1],r=n+(s<<8),i=e+(a<<2);return B0(On.mul(r).xor(gT.mul(i))).mul(On)}return On}function uP(t,e=t.length){const n=On.add(e*2),s=lt(t,0).mul(Ji),a=lt(t,8),r=lt(t,e-8).mul(n),i=lt(t,e-16).mul(On);return mi(on(s.add(a),43).add(on(r,30)).add(i),s.add(on(a.add(On),18)).add(r),n)}function cP(t,e=t.length){const n=On.add(e*2),s=lt(t,0).mul(On),a=lt(t,8),r=lt(t,e-8).mul(n),i=lt(t,e-16).mul(On),o=on(s.add(a),43).add(on(r,30)).add(i),l=mi(o,s.add(on(a.add(On),18)).add(r),n),u=lt(t,16).mul(n),c=lt(t,24),h=o.add(lt(t,e-32)).mul(n),d=l.add(lt(t,e-24)).mul(n);return mi(on(u.add(c),43).add(on(h,30)).add(d),u.add(on(c.add(s),18)).add(h),n)}function hP(t,e=t.length){const n=no.fromNumber(81,!0);if(e<=32)return e<=16?lP(t,e):uP(t,e);if(e<=64)return cP(t,e);let s=n,a=n.mul(Ji).add(113),r=B0(a.mul(On).add(113)).mul(On),i=[no.UZERO,no.UZERO],o=[no.UZERO,no.UZERO];s=s.mul(On).add(lt(t,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=on(s.add(a).add(i[0]).add(lt(t,l+8)),37).mul(Ji),a=on(a.add(i[1]).add(lt(t,l+48)),42).mul(Ji),s=s.xor(o[1]),a=a.add(i[0]).add(lt(t,l+40)),r=on(r.add(o[0]),33).mul(Ji),i=xf(t,l,i[1].mul(Ji),s.add(o[0])),o=xf(t,l+32,r.add(o[1]),a.add(lt(t,l+16))),[r,s]=[s,r],l+=64;while(l!==u);const h=Ji.add(r.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=on(s.add(a).add(i[0]).add(lt(t,l+8)),37).mul(h),a=on(a.add(i[1]).add(lt(t,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(lt(t,l+40))),r=on(r.add(o[0]),33).mul(h),i=xf(t,l,i[1].mul(h),s.add(o[0])),o=xf(t,l+32,r.add(o[1]),a.add(lt(t,l+16))),[r,s]=[s,r],mi(mi(i[0],o[0],h).add(B0(a).mul(gT)).add(r),mi(i[1],o[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fi(t,e){return e==="string"?kr(t):Zo([t],e)}function dP(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function Zo(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Or(t)),M().getBool("DEBUG")&&HL(t,e),dP(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let s=0;s<n.length;++s)Math.round(t[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${e}`)}function Gn(){return M().platform.now()}function kr(t,e="utf-8"){return e=e||"utf-8",M().platform.encode(t,e)}function $a(t,e="utf-8"){return e=e||"utf-8",M().platform.decode(t,e)}function ua(t){return M().platform.isTypedArray!=null?M().platform.isTypedArray(t):uT(t)}function Or(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||Eo(t)||t==null||ua(t)&&n)e.push(t);else if(Array.isArray(t)||ua(t))for(let s=0;s<t.length;++s)Or(t[s],e,n);else{let s=-1;for(const a of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(a)&&(s=Math.max(s,Number(a)));for(let a=0;a<=s;a++)Or(t[a],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pP{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new mP)}profileKernel(e,n,s){let a;const r=()=>{a=s()};let i;const o=Gn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const u of a)u.dataSync();i=Promise.resolve({kernelMs:Gn()-o})}if(M().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<a.length;u++){const c=a[u];c.data().then(h=>{fP(h,c.dtype,e)})}return{kernelName:e,outputs:a,inputs:n,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:s,timeMs:a,inputs:r,extraInfo:i}=e;s.forEach(o=>{Promise.all([o.data(),a,i]).then(l=>{this.logger.logKernelProfile(n,o,l[0],l[1],r,l[2])})})}}function fP(t,e,n){if(e!=="float32")return!1;for(let s=0;s<t.length;s++){const a=t[s];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class mP{logKernelProfile(e,n,s,a,r,i){const o=typeof a=="number"?Yl(`${a}ms`,9):a.error,l=Yl(e,25),u=n.rank,c=n.size,h=Yl(n.shape.toString(),14);let d="";for(const p in r){const f=r[p];if(f!=null){const m=f.shape||n.shape,y=m.length;d+=`${p}: ${y}D ${y>0?m:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${h}	%c${c}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(t,e,n){const s={},a={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<t.length;l++){const u=t[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,a[u.id]=!0;break}if(p)break}}const r={};r[n.id]=!0;const i={};for(let l=t.length-1;l>=0;l--){const u=t[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(r[u.outputs[h].id]){for(const d in c)r[c[d].id]=!0,i[u.id]=!0;break}}const o=[];for(let l=0;l<t.length;l++){const u=t[l];if(a[u.id]&&i[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,o.push(h)}}return o}function yP(t,e,n,s){for(let a=e.length-1;a>=0;a--){const r=e[a],i=[];if(r.outputs.forEach(l=>{const u=t[l.id];u!=null?i.push(u):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(i);for(const l in r.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=r.inputs[l];if(!Ee(u.shape,c.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=u;else{const h=t[c.id];t[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y2=20,eh=3,vb=7;function xP(t,e,n,s){const a=xe(e),r=bP(t,e,n,a),i=e.length,o=qf(t,e,n,a,r),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function bP(t,e,n,s){const a=L(e),r=s[s.length-1],i=new Array(r).fill(0),o=e.length,l=n==="complex64"?ch(t):t;if(o>1)for(let u=0;u<a/r;u++){const c=u*r;for(let h=0;h<r;h++)i[h]=Math.max(i[h],uh(l[c+h],0,n).length)}return i}function uh(t,e,n){let s;return Array.isArray(t)?s=`${parseFloat(t[0].toFixed(vb))} + ${parseFloat(t[1].toFixed(vb))}j`:Au(t)?s=`'${t}'`:n==="bool"?s=xT(t):s=parseFloat(t.toFixed(vb)).toString(),Yl(s,e)}function xT(t){return t===0?"false":"true"}function qf(t,e,n,s,a,r=!0){const i=n==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(n==="complex64"){const m=ch(t);return[uh(m[0],0,n)]}return n==="bool"?[xT(t[0])]:[t[0].toString()]}if(l===1){if(o>y2){const y=eh*i;let g=Array.from(t.slice(0,y)),x=Array.from(t.slice((o-eh)*i,o*i));return n==="complex64"&&(g=ch(g),x=ch(x)),["["+g.map((b,w)=>uh(b,a[w],n)).join(", ")+", ..., "+x.map((b,w)=>uh(b,a[o-eh+w],n)).join(", ")+"]"]}return["["+(n==="complex64"?ch(t):Array.from(t)).map((y,g)=>uh(y,a[g],n)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>y2){for(let m=0;m<eh;m++){const y=m*h,g=y+h;d.push(...qf(t.slice(y,g),u,n,c,a,!1))}d.push("...");for(let m=o-eh;m<o;m++){const y=m*h,g=y+h;d.push(...qf(t.slice(y,g),u,n,c,a,m===o-1))}}else for(let m=0;m<o;m++){const y=m*h,g=y+h;d.push(...qf(t.slice(y,g),u,n,c,a,m===o-1))}const p=l===2?",":"";d[0]="["+(o>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":f),d}function ch(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zt{constructor(e,n,s){if(this.dtype=n,this.shape=e.slice(),this.size=L(e),s!=null){const a=s.length;N(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||_t(n,this.size),this.strides=xe(e)}set(e,...n){n.length===0&&(n=[0]),N(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const a of e){if(a<0||a>=this.shape[n]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}n++}let s=e[e.length-1];for(let a=0;a<e.length-1;++a)s+=this.strides[a]*e[a];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(e/this.strides[s]),e-=n[s]*this.strides[s];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return ba().makeTensor(this.values,this.shape,this.dtype)}}let ba=null,Il=null;function wP(t){ba=t}function vP(t){Il=t}class Nt{constructor(e,n,s,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=L(e),this.strides=xe(e),this.dataId=s,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Il.buffer(this.shape,this.dtype,e)}bufferSync(){return Il.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ra(this.shape,e,this.dtype==="complex64")}arraySync(){return ra(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=ba().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(s=>$a(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ba().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ba().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>$a(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ba().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ba().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Il.print(this,e)}clone(){return this.throwIfDisposed(),Il.clone(this)}toString(e=!1){const n=this.dataSync();return xP(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Il.cast(this,e)}variable(e=!0,n,s){return this.throwIfDisposed(),ba().makeVariable(this,e,n,s)}}Object.defineProperty(Nt,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function q(){return zw("Tensor",()=>Nt)}q();class Am extends Nt{constructor(e,n,s,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=n,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ee(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ba().disposeTensor(this),this.dataId=e.dataId,ba().incRef(this,null)}dispose(){ba().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Am,Symbol.hasInstance,{value:t=>t instanceof Nt&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var x2;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(x2||(x2={}));var V0;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(V0||(V0={}));var U0;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(U0||(U0={}));var W0;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(W0||(W0={}));var G0;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(G0||(G0={}));const SP={float32:W0,int32:V0,bool:U0,complex64:G0};function dn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return SP[t][e]}function vy(t){return dn(t,"int32")}function bT(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function wT(t){return typeof GPUBuffer<"u"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(t,e){if(t.dtype===e.dtype)return[t,e];const n=dn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function CP(t,e){N(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function vT(t){const e=[];return ST(t,e,new Set),e}function ST(t,e,n){if(t==null)return;if(t instanceof Nt){e.push(t);return}if(!$P(t))return;const s=t;for(const a in s){const r=s[a];n.has(r)||(n.add(r),ST(r,e,n))}}function $P(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(t){return t.kernelName!=null}class b2{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class pu{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b2}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,s=1){return e in this.registryFactory?(Ns(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(e);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new pP(this.backendInstance),!0}setupRegisteredKernels(){c2(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){c2(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof Sg)&&typeof s.then=="function"){const a=++this.pendingBackendInitId,r=s.then(i=>a<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Ns(`Initialization of backend ${e} failed`),Ns(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Ns(`Initialization of backend ${e} failed`),Ns(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n],{success:a,asyncInit:r}=this.initializeBackend(s);if(r||a)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const s=this.state.tensorInfo.get(n),a=s.backend,r=this.readSync(n),i=a.refCount(n);a.disposeData(n,!0),s.backend=e,e.move(n,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let s=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let a;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=n(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,n,s){e();try{const a=s();return n(),a}catch(a){throw n(),a}}nextTensorId(){return pu.nextTensorId++}nextVariableId(){return pu.nextVariableId++}clone(e){const n=A.runKernel(ec,{x:e}),s={x:e},a=i=>({x:()=>{const o="float32",l={x:i},u={dtype:o};return A.runKernel(Vu,l,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[n],a,r,{}),n}runKernel(e,n,s){if(this.backendName==null&&this.backend,!(P0(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,s){const a=this.backend.numDataIds();let r=0;s.forEach(l=>{r+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-n-r-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let n,s=[];const a=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=Sb(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Sb(e)){const{kernelName:f,inputs:m,attrs:y}=e;this.backendName==null&&this.backend;const g=P0(f,this.backendName);N(g!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),o=()=>{const x=this.backend.numDataIds();l=g.kernelFunc({inputs:m,attrs:y,backend:this.backend});const b=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,b);const w=b.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(a){const v=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(v)}return w}}else{const{forwardFunc:f}=e,m=y=>{a&&(s=y.map(g=>this.keep(this.clone(g))))};o=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,g),g}}const{inputs:c,attrs:h}=e,d=Sb(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(p=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),a&&this.addTapeNode(u,c,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,n,s){const a=u2(e);if(a!=null){const r=a.inputsToSave||[],i=a.outputsToSave||[];let o;a.saveAllInputs?(N(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(u=>n[u])):o=r.map(u=>n[u]);const l=s.filter((u,c)=>i[c]);return o.concat(l)}return[]}makeTensor(e,n,s,a){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",a=a||this.backend;let r=e;s==="string"&&Au(e[0])&&(r=e.map(l=>kr(l)));const i=a.write(r,n,s),o=new Nt(n,s,i,this.nextTensorId());if(this.trackTensor(o,a),s==="string"){const l=this.state.tensorInfo.get(i),u=qL(r);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(e,n,s,a){s=s||"float32";const r={dataId:e,shape:n,dtype:s};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,n){const{dataId:s,shape:a,dtype:r}=e,i=new Nt(a,r,s,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(e,n=!0,s,a){s=s||this.nextVariableId().toString(),a!=null&&a!==e.dtype&&(e=e.cast(a));const r=new Am(e,n,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*km(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Am||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*km(e.dtype);this.state.numBytes-=s}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,s,a,r,i){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:s,saved:r},l=u2(e);l!=null&&(a=l.gradFunc),a!=null&&(o.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=Sn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),a(u.length>1?u:u[0],r,i))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=vT(e),s=new Set(n.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(e,n,s,a=!1){if(N(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));N(r instanceof Nt,()=>"The result y returned by f() must be a tensor.");const i=gP(this.state.activeTape,n,r);if(!a&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[r.id]=s??NP(r.shape),yP(o,i,u=>this.tidy(u),kP);const l=n.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return N(F0(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{N(n.every(o=>o instanceof Nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const a={};n.forEach((o,l)=>{a[l]=o});const r=(o,l)=>(s=e(...n,l),N(s.value instanceof Nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(F0(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(o,l)=>{const u=s.gradFunc(o,l),c=Array.isArray(u)?u:[u];N(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(c.every(d=>d instanceof Nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=Gn(),s=await this.backend.time(e);return s.wallMs=Gn()-n,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b2;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}pu.nextTensorId=0;pu.nextVariableId=0;function NP(t){const e=Fw(L(t),"float32");return A.makeTensor(e,t,"float32")}function CT(){const t=iT();if(t._tfengine==null){const e=new KL(t);t._tfengine=new pu(e)}return JL(t._tfengine.ENV),wP(()=>t._tfengine),t._tfengine}const A=CT();function kP(t,e){const n={a:t,b:e};return A.runKernel(Yo,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IP(){return typeof navigator<"u"&&navigator!=null}function $T(t){if(t||IP()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function NT(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=M();Jn.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Jn.registerFlag("IS_BROWSER",()=>NT());Jn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Jn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Jn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Jn.registerFlag("PROD",()=>!1);Jn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Jn.getBool("DEBUG"));Jn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Jn.registerFlag("IS_TEST",()=>!1);Jn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Jn.getBool("DEBUG"));Jn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Jn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Jn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(t,e){let n=t;if(ua(t))return e==="string"?[]:[t.length];if(bT(t)){const a=t.channels||"RGBA";return[t.height,t.width*a.length]}else if(wT(t))return[t.buffer.size/(e==null?4:km(e))];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||ua(n)&&e!=="string";)s.push(n.length),n=n[0];return Array.isArray(t)&&M().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&kT(t,s,[]),s}function kT(t,e,n){if(n=n||[],!Array.isArray(t)&&!ua(t)){N(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}N(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),N(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const s=e.slice(1);for(let a=0;a<t.length;++a)kT(t[a],s,n.concat(a))}function w2(t,e,n,s){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function I(t,e,n,s="numeric"){if(t instanceof q())return w2(s,t.dtype,e,n),t;let a=Ko(t);if(a!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),w2(s,a,e,n),t==null||!ua(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const l=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const r=zi(t,a);!ua(t)&&!Array.isArray(t)&&(t=[t]);const o=a!=="string"?Zo(t,a):Or(t,[],!0);return A.makeTensor(o,r,a)}function _m(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((r,i)=>I(r,`${e}[${i}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT="__op";function R(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+IT;const a=(...r)=>{A.startScope(n);try{const i=s(...r);return Eo(i)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(i),i}catch(i){throw A.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(t,e){const n=I(t,"real","complex"),s=I(e,"imag","complex");ns(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:n,imag:s};return A.runKernel(Rg,a)}const Si=R({complex_:TP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(t,e,n,s){if(s==null)s=Ko(t);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(wT(t)||bT(t)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return A.backend.createTensorFromGPUData(t,e||n,s)}if(!ua(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){_s(e);const a=L(e),r=L(n);N(a===r,()=>`Based on the provided shape, [${e}], the tensor should have ${a} values but has ${r}`);for(let i=0;i<n.length;++i){const o=n[i],l=i===n.length-1?o!==L(e.slice(i)):!0;N(n[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!ua(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=s!=="string"?Zo(t,s):Or(t,[],!0),A.makeTensor(t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sa(t,e,n){const s=zi(t,n);return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ro={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class _a{static join(e){return new _a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>ua(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let s=0;s<e.length;s++){const a=e[s];s!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=n+a.byteLength;this.shards.push({buffer:a,start:n,end:r}),n=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const a=n-e,r=new ArrayBuffer(a),i=new Uint8Array(r);let o=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=e+o-u.start,d=o,f=Math.min(n,u.end)-u.start,m=new Uint8Array(u.buffer,h,f-h);if(i.set(m,d),o+=m.length,n<u.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(a){return e<a.start?-1:e>=a.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=EP(this.shards,n);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function EP(t,e){let n=0,s=t.length;for(;n<=s;){const a=Math.floor((s-n)/2)+n,r=e(t[a]);if(r===0)return a;r<0?s=a:n=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(){return A}function v2(){return A.memory()}function U(t,e){return A.tidy(t,e)}function _e(t){vT(t).forEach(n=>n.dispose())}function un(t){return A.keep(t)}function RP(t){return A.setBackend(t)}function DP(){return A.ready()}function AP(){return A.backendName}function Xw(t,e,n=1){return A.registerBackend(t,e,n)}function TT(){return A.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci=4;async function H0(t,e){const n=[],s=[],a=Array.isArray(t)?t.map(i=>i.name):Object.keys(t);for(let i=0;i<a.length;++i){const o=a[i],l=Array.isArray(t)?t[i].tensor:t[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((y,g)=>y+g.length,0)+Ci*d.length,f=new Uint8Array(p);let m=0;for(let y=0;y<d.length;y++){const g=d[y],x=new Uint8Array(new Uint32Array([g.length]).buffer);f.set(x,m),m+=Ci,f.set(g,m),m+=g.length}h(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),n.push(u)}const r=await Promise.all(s);return{data:FP(r),specs:n}}function ET(t,e){const n=new _a(t),s={};let a=0;for(const r of e){const i=_P(r,(o,l)=>n.slice(a+o,a+l));s[r.name]=RT(r,n.slice(a,a+i)),a+=i}return s}function _P(t,e){const n=L(t.shape);let s;if("quantization"in t){const a=t.quantization;s=Ro[a.dtype]}else if(t.dtype==="string"){let a=0;for(let r=0;r<n;r++)a+=Ci+new Uint32Array(e(a,a+Ci))[0];return a}else s=Ro[t.dtype];return n*s}async function OP(t,e){const n=L(t.shape);let s;if("quantization"in t){const a=t.quantization;s=Ro[a.dtype]}else if(t.dtype==="string"){let a=0;for(let r=0;r<n;r++)a+=Ci+new Uint32Array(await e(a,a+Ci))[0];return a}else s=Ro[t.dtype];return n*s}function RT(t,e){const n=t.name,s=t.dtype,a=t.shape,r=L(a);let i,o=0;if("quantization"in t){const l=t.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${t.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${t.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${t.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Ro[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];i[h]=d*l.scale+l.min}}else if(l.dtype==="float16")i=VP()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];i[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${s}`);o+=r*u}else if(s==="string"){const l=L(t.shape);i=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(o,o+Ci))[0];o+=Ci;const h=new Uint8Array(e.slice(o,o+c));i.push(h),o+=c}}else{const l=Ro[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let f=0;f<u.length;f++)u[f]=i[f*2],c[f]=i[f*2+1];const h=Sa(u,a,"float32"),d=Sa(c,a,"float32"),p=Si(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${n}': ${s}`);o+=r*l}return Sa(i,a,s)}async function S2(t,e,n){let s=new Uint8Array(e);for(;s.byteLength<n;){const{done:a,value:r}=await t.read();if(a&&r==null){const o=n-s.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const i=new Uint8Array(s.length+r.byteLength);i.set(s,0),i.set(new Uint8Array(r),s.length),s=i}return s.buffer}async function DT(t,e){const n={},s=t.getReader();let a=new ArrayBuffer(0);for(const r of e){const i=await OP(r,async(u,c)=>(a=await S2(s,a,c),a.slice(u,c)));a=await S2(s,a,i);const o=a.slice(0,i);a=a.slice(i);const l=RT(r,o);if(n[r.name]=l,AP()==="webgpu"){const u=TT();"uploadToGPU"in u&&L(l.shape)>=M().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return n}function FP(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(r=>{if(e+=r.byteLength,n.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let a=0;return n.forEach(r=>{s.set(new Uint8Array(r.buffer),a),a+=r.byteLength}),s.buffer}const Kw=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function C2(t){return Kw?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function zP(t){if(Kw)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let s=0,a=e.length;s<a;s++)n+=String.fromCharCode(e[s]);return btoa(n)}function LP(t){if(Kw){const s=Buffer.from(t,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let s=0;s<e.length;++s)n.set([e.charCodeAt(s)],s);return n.buffer}function AT(t){return _a.join(t)}function $2(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function _T(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function OT(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(s.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return t.signature!=null&&(s.signature=t.signature),t.userDefinedMetadata!=null&&(s.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(s.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(s.initializerSignature=t.initializerSignature),s}async function Yw(t,e){let n,s;return t.weightsManifest!=null&&([n,s]=await e(t.weightsManifest)),OT(t,n,s)}function Ep(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:C2(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:C2(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new _a(t.weightData).byteLength}}function j0(t){const e=[];for(const n of t)e.push(...n.weights);return e}function PP(){const t=n=>{let s=n<<13,a=0;for(;!(s&8388608);)a-=8388608,s<<=1;return s&=-8388609,a+=947912704,s|a},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function MP(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function BP(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function VP(){const t=PP(),e=MP(),n=BP();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const o=s[i],l=t[n[o>>10]+(o&1023)]+e[o>>10];r[i]=l}return new Float32Array(a)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $t{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return $t.instance==null&&($t.instance=new $t),$t.instance}static registerSaveRouter(e){$t.getInstance().saveRouters.push(e)}static registerLoadRouter(e){$t.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return $t.getHandlers(e,"save")}static getLoadHandlers(e,n){return $t.getHandlers(e,"load",n)}static getHandlers(e,n,s){const a=[];return(n==="load"?$t.getInstance().loadRouters:$t.getInstance().saveRouters).forEach(i=>{const o=i(e,s);o!==null&&a.push(o)}),a}}const UP=t=>$t.registerSaveRouter(t),WP=t=>$t.registerLoadRouter(t),FT=t=>$t.getSaveHandlers(t),GP=(t,e)=>$t.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q0="tensorflowjs",X0=1,co="models_store",ai="model_info_store";function zT(){if(!M().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function K0(t){const e=t.result;e.createObjectStore(co,{keyPath:"modelPath"}),e.createObjectStore(ai,{keyPath:"modelPath"})}class Do{constructor(e){if(this.indexedDB=zT(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((s,a)=>{const r=this.indexedDB.open(q0,X0);r.onupgradeneeded=()=>K0(r),r.onsuccess=()=>{const i=r.result;if(n==null){const o=i.transaction(co,"readonly"),u=o.objectStore(co).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(i.close(),a(u.error)),o.oncomplete=()=>i.close()}else{n.weightData=_a.join(n.weightData);const o=Ep(n),l=i.transaction(ai,"readwrite");let u=l.objectStore(ai),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(d){return a(d)}let h;c.onsuccess=()=>{h=i.transaction(co,"readwrite");const d=h.objectStore(co);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:o})}catch(f){return a(f)}p.onsuccess=()=>s({modelArtifactsInfo:o}),p.onerror=f=>{u=l.objectStore(ai);const m=u.delete(this.modelPath);m.onsuccess=()=>(i.close(),a(p.error)),m.onerror=y=>(i.close(),a(p.error))}},c.onerror=d=>(i.close(),a(c.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},r.onerror=i=>a(r.error)})}}Do.URL_SCHEME="indexeddb://";const LT=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Do.URL_SCHEME)?HP(t.slice(Do.URL_SCHEME.length)):null;$t.registerSaveRouter(LT);$t.registerLoadRouter(LT);function HP(t){return new Do(t)}function jP(t){return t.startsWith(Do.URL_SCHEME)?t.slice(Do.URL_SCHEME.length):t}class qP{constructor(){this.indexedDB=zT()}async listModels(){return new Promise((e,n)=>{const s=this.indexedDB.open(q0,X0);s.onupgradeneeded=()=>K0(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(ai,"readonly"),o=r.objectStore(ai).getAll();o.onsuccess=()=>{const l={};for(const u of o.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},o.onerror=l=>(a.close(),n(o.error)),r.oncomplete=()=>a.close()},s.onerror=a=>n(s.error)})}async removeModel(e){return e=jP(e),new Promise((n,s)=>{const a=this.indexedDB.open(q0,X0);a.onupgradeneeded=()=>K0(a),a.onsuccess=()=>{const r=a.result,i=r.transaction(ai,"readwrite"),o=i.objectStore(ai),l=o.get(e);let u;l.onsuccess=()=>{if(l.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=o.delete(e),h=()=>{u=r.transaction(co,"readwrite");const p=u.objectStore(co).delete(e);p.onsuccess=()=>n(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),r.close(),s(l.error))}},l.onerror=c=>(r.close(),s(l.error)),i.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},a.onerror=r=>s(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const br="/",Tl="tensorflowjs_models",PT="info",XP="model_topology",KP="weight_specs",YP="weight_data",QP="model_metadata";function MT(t){return{info:[Tl,t,PT].join(br),topology:[Tl,t,XP].join(br),weightSpecs:[Tl,t,KP].join(br),weightData:[Tl,t,YP].join(br),modelMetadata:[Tl,t,QP].join(br)}}function BT(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function ZP(t){const e=t.split(br);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(br)}function JP(t){return t.startsWith(Ao.URL_SCHEME)?t.slice(Ao.URL_SCHEME.length):t}class Ao{constructor(e){if(!M().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=MT(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),a=Ep(e),r=_a.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,zP(r));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw BT(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const o=JSON.parse(r);n.format=o.format,n.generatedBy=o.generatedBy,n.convertedBy=o.convertedBy,o.signature!=null&&(n.signature=o.signature),o.userDefinedMetadata!=null&&(n.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(n.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(n.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(n.trainingConfig=o.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=LP(i),n}}Ao.URL_SCHEME="localstorage://";const VT=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ao.URL_SCHEME)?eM(t.slice(Ao.URL_SCHEME.length)):null;$t.registerSaveRouter(VT);$t.registerLoadRouter(VT);function eM(t){return new Ao(t)}class tM{constructor(){N(M().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=Tl+br,s=br+PT;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(n)&&r.endsWith(s)){const i=ZP(r);e[i]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=JP(e);const n=MT(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return BT(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ql="://";class _n{constructor(){this.managers={}}static getInstance(){return _n.instance==null&&(_n.instance=new _n),_n.instance}static registerManager(e,n){N(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ql)&&(e=e.slice(0,e.indexOf(Ql))),N(e.length>0,()=>"scheme must not be an empty string.");const s=_n.getInstance();N(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=n}static getManager(e){const n=_n.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(_n.getInstance().managers)}}function Xf(t){if(t.indexOf(Ql)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${_n.getSchemes().join(",")}`);return{scheme:t.split(Ql)[0],path:t.split(Ql)[1]}}async function UT(t,e,n=!1){N(t!==e,()=>`Old path and new path are the same: '${t}'`);const s=$t.getLoadHandlers(t);N(s.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),N(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${t}.`);const a=s[0],r=$t.getSaveHandlers(e);N(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),N(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=r[0],o=Xf(t).scheme,l=Xf(t).path,u=o===Xf(t).scheme,c=await a.load();n&&u&&await _n.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await _n.getManager(o).removeModel(l),h.modelArtifactsInfo}async function nM(){const t=_n.getSchemes(),e={};for(const n of t){const s=await _n.getManager(n).listModels();for(const a in s){const r=n+Ql+a;e[r]=s[a]}}return e}async function sM(t){const e=Xf(t);return _n.getManager(e.scheme).removeModel(e.path)}async function aM(t,e){return UT(t,e,!1)}async function rM(t,e){return UT(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iM{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!M().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const a=this.functionRefs[s.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return uT(e)}}if(M().get("IS_BROWSER")){M().setPlatform("browser",new iM);try{_n.registerManager(Ao.URL_SCHEME,new tM)}catch{}try{_n.registerManager(Do.URL_SCHEME,new qP)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oM={importFetch:()=>require("node-fetch")};let Cb;class lM{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return M().global.fetch!=null?M().global.fetch(e,n):(Cb==null&&(Cb=oM.importFetch()),Cb(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}M().get("IS_NODE")&&!M().get("IS_BROWSER")&&M().setPlatform("node",new lM);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(t,e="float32",n){return e=e||"float32",_s(t),new Zt(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(t,e){const n=I(t,"x","cast");if(!jL(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},a={dtype:e};return A.runKernel(Vu,s,a)}const le=R({cast_:uM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(t){const n={x:I(t,"x","clone","string_or_numeric")};return A.runKernel(ec,n)}const Ir=R({clone_:cM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */CT();const hM={buffer:ke,cast:le,clone:Ir,print:WT};vP(hM);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(t,e){let n=I(t,"a","add"),s=I(e,"b","add");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel(Yo,a)}const K=R({add_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(t,e){let n=I(t,"a","floorDiv"),s=I(e,"b","floorDiv");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel(Zu,a)}const Qw=R({floorDiv_:pM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(t,e){let n=I(t,"a","div"),s=I(e,"b","div");if([n,s]=Ot(n,s),n.dtype==="int32"&&s.dtype==="int32")return Qw(n,s);const a={a:n,b:s},r={};return A.runKernel(ju,a,r)}const ge=R({div_:fM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(t,e){let n=I(t,"a","mul"),s=I(e,"b","mul");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel(uc,a)}const _=R({mul_:mM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(t){const e=I(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return A.runKernel(zd,n)}else{const n={x:e};return A.runKernel(Td,n)}}const Xt=R({abs_:gM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(t){const n={x:I(t,"x","acos")};return A.runKernel(Ou,n)}const GT=R({acos_:yM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(t){const n={x:I(t,"x","acosh")};return A.runKernel(Fu,n)}const HT=R({acosh_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(t){N(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),N(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((a,r)=>I(a,`tensors${r}`,"addN")),n=e[0];e.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(a=>{if(!Ee(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return A.runKernel(Ed,s)}const wM=R({addN_:bM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(t,e=null,n=!1){const a={x:I(t,"x","all","bool")},r={axis:e,keepDims:n};return A.runKernel(Cg,a,r)}const Zw=R({all_:vM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(t,e=null,n=!1){const a={x:I(t,"x","any","bool")},r={axis:e,keepDims:n};return A.runKernel($g,a,r)}const Om=R({any_:SM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(t,e=0){const s={x:I(t,"x","argMax")},a={axis:e};return A.runKernel(Rd,s,a)}const fu=R({argMax_:CM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(t,e=0){const s={x:I(t,"x","argMin")},a={axis:e};return A.runKernel(Dd,s,a)}const jT=R({argMin_:$M});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(t){const n={x:I(t,"x","asin")};return A.runKernel(zu,n)}const qT=R({asin_:NM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(t){const n={x:I(t,"x","asinh")};return A.runKernel(Lu,n)}const XT=R({asinh_:kM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(t){const n={x:I(t,"x","atan")};return A.runKernel(Pu,n)}const KT=R({atan_:IM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(t,e){let n=I(t,"a","atan2"),s=I(e,"b","atan2");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel(Bu,a)}const YT=R({atan2_:TM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(t){const n={x:I(t,"x","atanh")};return A.runKernel(Mu,n)}const QT=R({atanh_:EM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(t,e,n,s,a="NHWC",r){const i=t[3],o=[...e,i],l=bs(a);return ht(t,o,n,r,s,null,null,l)}function Rn(t,e,n,s,a,r,i="channelsLast"){const[o,l]=Jh(e);let u;if(i==="channelsLast")u=[o,l,t[3],t[3]];else if(i==="channelsFirst")u=[o,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return ht(t,u,n,s,a,r,!1,i)}function Os(t,e,n,s,a,r,i="NDHWC"){const[o,l,u]=Y0(e);let c,h;if(i==="NDHWC")h="channelsLast",c=[o,l,u,t[4],t[4]];else if(i==="NCDHW")h="channelsFirst",c=[o,l,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return Oa(t,c,n,s,a,!1,h,r)}function ht(t,e,n,s,a,r,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,h]=t;else if(o==="channelsFirst")[l,h,u,c]=t;else throw new Error(`Unknown dataFormat ${o}`);const[d,p,,f]=e,[m,y]=Jh(n),[g,x]=Jh(s),b=Zl(d,g),w=Zl(p,x),{padInfo:v,outHeight:C,outWidth:$}=AM(a,u,c,m,y,b,w,r,o),k=i?f*h:f;let T;return o==="channelsFirst"?T=[l,k,C,$]:o==="channelsLast"&&(T=[l,C,$,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:C,outWidth:$,outChannels:k,padInfo:v,strideHeight:m,strideWidth:y,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:g,dilationWidth:x,inShape:t,outShape:T,filterShape:e}}function Oa(t,e,n,s,a,r=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,h,d]=t;else if(i==="channelsFirst")[l,d,u,c,h]=t;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,y]=e,[g,x,b]=Y0(n),[w,v,C]=Y0(s),$=Zl(p,w),k=Zl(f,v),T=Zl(m,C),{padInfo:E,outDepth:O,outHeight:B,outWidth:W}=_M(a,u,c,h,g,x,b,$,k,T,o),V=r?y*d:y;let G;return i==="channelsFirst"?G=[l,V,O,B,W]:i==="channelsLast"&&(G=[l,O,B,W,V]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:O,outHeight:B,outWidth:W,outChannels:V,padInfo:E,strideDepth:g,strideHeight:x,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:k,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:v,dilationWidth:C,inShape:t,outShape:G,filterShape:e}}function RM(t,e,n,s,a){s==null&&(s=Jw(t,e,n));const r=t[0],i=t[1],o=ed((r-e+2*s)/n+1,a),l=ed((i-e+2*s)/n+1,a);return[o,l]}function DM(t,e,n,s,a,r){a==null&&(a=Jw(t,e[0],s[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)t[o]+2*a>=e[o]&&(i[o]=ed((t[o]-e[o]+2*a)/s[o]+1,r));return i}function Jw(t,e,n,s=1){const a=Zl(e,s);return Math.floor((t[0]*(n-1)-n+a)/2)}function Jh(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function Y0(t){return typeof t=="number"?[t,t,t]:t}function Zl(t,e){return e<=1?t:t+(t-1)*(e-1)}function AM(t,e,n,s,a,r,i,o,l){let u,c,h;if(typeof t=="number"){u={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const p=RM([e,n],r,s,t,o);c=p[0],h=p[1]}else if(t==="same"){c=Math.ceil(e/s),h=Math.ceil(n/a);const d=Math.max(0,(c-1)*s+r-e),p=Math.max(0,(h-1)*a+i-n),f=Math.floor(d/2),m=d-f,y=Math.floor(p/2),g=p-y;u={top:f,bottom:m,left:y,right:g,type:"SAME"}}else if(t==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-r+1)/s),h=Math.ceil((n-i+1)/a);else if(typeof t=="object"){const d=l==="channelsLast"?t[1][0]:t[2][0],p=l==="channelsLast"?t[1][1]:t[2][1],f=l==="channelsLast"?t[2][0]:t[3][0],m=l==="channelsLast"?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=ed((e-r+d+p)/s+1,o),h=ed((n-i+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:u,outHeight:c,outWidth:h}}function _M(t,e,n,s,a,r,i,o,l,u,c){let h,d,p,f;if(t==="valid"&&(t=0),typeof t=="number"){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const y=DM([e,n,s,1],[o,l,u],1,[a,r,i],t,c);d=y[0],p=y[1],f=y[2]}else if(t==="same"){d=Math.ceil(e/a),p=Math.ceil(n/r),f=Math.ceil(s/i);const m=(d-1)*a+o-e,y=(p-1)*r+l-n,g=(f-1)*i+u-s,x=Math.floor(m/2),b=m-x,w=Math.floor(y/2),v=y-w,C=Math.floor(g/2),$=g-C;h={top:w,bottom:v,left:C,right:$,front:x,back:b,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function ed(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function $i(t){const[e,n,s]=Jh(t);return e===1&&n===1&&s===1}function sn(t,e){return $i(t)||$i(e)}function _o(t){return Jh(t).every(e=>e>0)}function bs(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Vn(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")N(hu(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(a=>{N(hu(a),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(t,e){const s={x:I(t,"x","reshape","string_or_numeric")},a={shape:e};return A.runKernel(gp,s,a)}const F=R({reshape_:OM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(t,e,n,s,a){const r=I(t,"x","avgPool","float32"),i=1;N(sn(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=r,l=!1;r.rank===3&&(l=!0,o=F(r,[1,r.shape[0],r.shape[1],r.shape[2]])),N(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Vn("avgPool",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a};let h=A.runKernel(Ad,u,c);return h=le(h,r.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Sy=R({avgPool_:FM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(t,e,n,s,a,r="NDHWC"){const i=I(t,"x","avgPool3d","float32");let o=i,l=!1;i.rank===4&&(l=!0,o=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),N(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),N(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Vn("avgPool3d",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a,dataFormat:r};let h=A.runKernel(_d,u,c);return h=le(h,o.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const ZT=R({avgPool3d_:zM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(t,e=0){N(t.length>=1,()=>"Pass at least one tensor to concat");const n=_m(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),n.length===1)return Ir(n[0]);const s=n,a={axis:e};return A.runKernel(Ld,s,a)}const Mt=R({concat_:LM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(t,e,n=!1,s=!1){let a=I(t,"a","matMul"),r=I(e,"b","matMul");[a,r]=Ot(a,r);const i={a,b:r},o={transposeA:n,transposeB:s};return A.runKernel(Od,i,o)}const Pe=R({matMul_:PM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(t){const n={x:I(t,"x","sigmoid","float32")};return A.runKernel(wc,n)}const qa=R({sigmoid_:MM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(t,e,n){const s=I(t,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:e,size:n};return A.runKernel(vp,a,r)}const Ve=R({slice_:BM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(t){const n={x:I(t,"x","tanh","float32")};return A.runKernel(kc,n)}const Oo=R({tanh_:VM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(t,e,n,s,a,r){const i=I(t,"forgetBias","basicLSTMCell"),o=I(e,"lstmKernel","basicLSTMCell"),l=I(n,"lstmBias","basicLSTMCell"),u=I(s,"data","basicLSTMCell"),c=I(a,"c","basicLSTMCell"),h=I(r,"h","basicLSTMCell"),d=Mt([u,h],1),p=Pe(d,o),f=K(p,l),m=f.shape[0],y=f.shape[1]/4,g=[m,y],x=Ve(f,[0,0],g),b=Ve(f,[0,y],g),w=Ve(f,[0,y*2],g),v=Ve(f,[0,y*3],g),C=K(_(qa(x),Oo(b)),_(c,qa(K(i,w)))),$=_(Oo(C),qa(v));return[C,$]}const WM=R({basicLSTMCell_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(t,e,n){const s=I(t,"x","batchToSpaceND"),a=e.reduce((o,l)=>o*l);N(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),N(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),N(s.shape[0]%a===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${a}`);const r={x:s},i={blockShape:e,crops:n};return A.runKernel(Fd,r,i)}const Cy=R({batchToSpaceND_:GM});function HM(t){let e;return t.rank===0||t.rank===1?e=F(t,[1,1,1,t.size]):t.rank===2?e=F(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(t,e,n,s,a,r){r==null&&(r=.001);const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;s!=null&&(c=I(s,"offset","batchNorm")),N(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:HM(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:r},f=A.runKernel(jd,d,p);return F(f,i.shape)}const Rp=R({batchNorm_:jM});function qM(t,e,n,s,a,r){const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),N(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),N(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Rp(i,o,l,c,u,r)}const JT=R({batchNorm2d_:qM});function XM(t,e,n,s,a,r){const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),N(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),N(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Rp(i,o,l,c,u,r)}const eE=R({batchNorm3d_:XM});function KM(t,e,n,s,a,r){const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),N(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),N(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Rp(i,o,l,c,u,r)}const tE=R({batchNorm4d_:KM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(t,e,n){const s=I(t,"x","bincount"),a=I(e,"weights","bincount");N(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),N(n>=0,()=>`size must be non-negative, but got ${n}.`),N(a.size===s.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`);const r={x:s,weights:a},i={size:n};return A.runKernel(Ig,r,i)}const nE=R({bincount_:YM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(t,e){const n=I(t,"x","bitwiseAnd"),s=I(e,"y","bitwiseAnd");if(!Ee(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if(n.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const a={a:n,b:s};return A.runKernel(Tg,a)}const ZM=R({bitwiseAnd_:QM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(t,e){const n=I(t,"s0","broadcastArgs","int32"),s=I(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:n,s1:s};return A.runKernel(Eg,a)}const eB=R({broadcastArgs_:JM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(t,e){let n=I(t,"broadcastTo","x");const s=n.shape;if(_s(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const u=n.shape.slice();for(;u.length<e.length;)u.unshift(1);n=F(n,u)}const a=n.shape,r=Array.from(e);for(let u=e.length-1;u>=0;u--)if(a[u]===e[u])r[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Ir(n);const o={x:n},l={reps:r};return A.runKernel(Ic,o,l)}const Jl=R({broadcastTo_:tB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(t){const n={x:I(t,"x","ceil","float32")};return A.runKernel(Uu,n)}const sE=R({ceil_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(t,e,n){_s(t),n=n||Ko(e);const s={shape:t,value:e,dtype:n};return A.runKernel(Gg,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(t,e,n){const s=I(t,"x","clipByValue");if(N(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Ec(s.shape,e,s.dtype);const a={x:s},r={clipValueMin:e,clipValueMax:n};return A.runKernel(Wu,a,r)}const hs=R({clipByValue_:sB});function aB(t){return Mt(t,0)}const aE=R({concat1d_:aB});function rB(t,e){return Mt(t,e)}const rE=R({concat2d_:rB});function iB(t,e){return Mt(t,e)}const iE=R({concat3d_:iB});function oB(t,e){return Mt(t,e)}const oE=R({concat4d_:oB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(t,e,n,s,a="NHWC",r=[1,1],i){const o=I(t,"x","conv2d","float32"),l=I(e,"filter","conv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Vn("conv2d",s,i);const h=a==="NHWC"?u.shape[3]:u.shape[1];N(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),N(sn(n,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),N(_o(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),N(_o(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},f=A.runKernel(Pd,d,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ni=R({conv2d_:lB});function uB(t,e,n,s,a="NWC",r=1,i){const o=I(t,"x","conv1d"),l=I(e,"filter","conv1d");let u=o,c=!1;o.rank===2&&(c=!0,u=F(o,[1,o.shape[0],o.shape[1]])),N(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Vn("conv1d",s,i),N(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(sn(n,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${r}'`),N(_o(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),N(_o(n),()=>"Error in conv1D: Stride should be larger than 0."),N(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const h=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=F(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Ni(d,h,[1,n],s,"NHWC",[1,r],i);return c?F(y,[y.shape[2],y.shape[3]]):F(y,[y.shape[0],y.shape[2],y.shape[3]])}const ev=R({conv1d_:uB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(t,e,n,s,a,r="NHWC",i){N(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;e.rank===3&&(u=!0,l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),N(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=r==="NHWC"?o[3]:o[1],h=r==="NHWC"?l.shape[3]:l.shape[1];N(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),N(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Vn("conv2dDerInput",a,i);const d={dy:l,filter:n},p={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:o},f=A.runKernel(Md,d,p);return u?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const tv=R({conv2DBackpropInput_:cB});function hB(t,e,n,s,a,r){const i=I(t,"x","conv2dTranspose"),o=I(e,"filter","conv2dTranspose");return tv(n,i,o,s,a,"NHWC",r)}const nv=R({conv2dTranspose_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(t,e,n,s,a="NDHWC",r=[1,1,1]){const i=I(t,"x","conv3d"),o=I(e,"filter","conv3d");let l=i,u=!1;i.rank===4&&(u=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),N(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),N(sn(n,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),N(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),N(_o(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),N(_o(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:a,dilations:r},d=A.runKernel(Bd,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const lE=R({conv3d_:dB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(t,e,n,s,a){N(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let r=t,i=e,o=!1;e.rank===4&&(o=!0,i=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,t[0],t[1],t[2],t[3]]);const l=r[4],u=i.shape[4];N(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),N(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),N(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),N(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),N(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},h={pad:a,strides:s,inputShape:r},d=A.runKernel(_g,c,h);return o?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const uE=R({conv3DBackpropInput_:pB});function fB(t,e,n,s,a){const r=I(t,"x","conv3dTranspose"),i=I(e,"filter","conv3dTranspose");return uE(n,r,i,s,a)}const cE=R({conv3dTranspose_:fB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(t){const n={x:I(t,"x","cos","float32")};return A.runKernel(Gu,n)}const $y=R({cos_:mB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(t){const n={x:I(t,"x","cosh","float32")};return A.runKernel(Hu,n)}const sv=R({cosh_:gB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(t,e=0,n=!1,s=!1){const r={x:I(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:s};return A.runKernel(Og,r,i)}const Fm=R({cumprod_:yB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(t,e=0,n=!1,s=!1){const r={x:I(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return A.runKernel(Vd,r,i)}const av=R({cumsum_:xB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(t,e,n,s=!1){const a=I(t,"x","denseBincount"),r=I(e,"weights","denseBincount");N(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),N(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),N(n>=0,()=>`size must be non-negative, but got ${n}.`),N(r.size===a.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`);const i={x:a,weights:r},o={size:n,binaryOutput:s};return A.runKernel(zg,i,o)}const Q0=R({denseBincount_:bB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(t,e,n="NHWC"){const s=I(t,"x","depthToSpace","float32"),a=n==="NHWC"?s.shape[1]:s.shape[2],r=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];N(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),N(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${e}  for depthToSpace with input shape
    ${s.shape}`),N(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),N(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const o={x:s},l={blockSize:e,dataFormat:n};return A.runKernel(Lg,o,l)}const hE=R({depthToSpace_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(t,e,n,s,a="NHWC",r=[1,1],i){const o=I(t,"x","depthwiseConv2d","float32"),l=I(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=a==="NHWC"?u.shape[3]:u.shape[1];N(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Vn("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},f=A.runKernel(Ud,d,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Dp=R({depthwiseConv2d_:vB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(t){const n={x:I(t,"x","diag")};return A.runKernel(Bg,n)}const CB=R({diag_:SB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(t,e,n,s,a=[1,1],r="NHWC"){const i=I(t,"x","dilation2d"),o=I(e,"filter","dilation2d");N(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),N(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),N(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=i,u=!1;i.rank===3&&(l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),N(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},h={strides:n,pad:s,dilations:a},d=A.runKernel(Wd,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const dE=R({dilation2d_:$B});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(t,e){const n=t.length,s=[];for(let a=0;a<n;a++){const r=n-1-a,i=t[r]||1;(e[e.length-1-a]||1)>1&&i===1&&s.unshift(r)}return s}function nn(t,e){const n=[];for(let s=0;s<e.length;s++){const a=t[t.length-s-1],r=e.length-s-1,i=e[r];(a==null||a===1&&i>1)&&n.unshift(r)}return n}function Se(t,e){const n=Math.max(t.length,e.length),s=new Array(n);for(let a=0;a<n;a++){let r=t[t.length-a-1];r==null&&(r=1);let i=e[e.length-a-1];if(i==null&&(i=1),r===1)s[n-a-1]=i;else if(i===1)s[n-a-1]=r;else if(r!==i){const o=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(o)}else s[n-a-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(t,e){let n=I(t,"a","equal","string_or_numeric"),s=I(e,"b","equal","string_or_numeric");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Gd,a)}const Na=R({equal_:NB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(t,e,n){const s=I(e,"a","where"),a=I(n,"b","where"),r=I(t,"condition","where","bool"),i=Se(Se(r.shape,s.shape),a.shape),o=Jl(r,i),l=Jl(s,i),u=Jl(a,i),c={condition:o,t:l,e:u};return A.runKernel(wp,c)}const En=R({where_:kB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(t){const n={x:I(t,"x","zerosLike")};return A.runKernel(Tp,n)}const We=R({zerosLike_:IB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(t,e){let n=I(t,"a","div"),s=I(e,"b","div");[n,s]=Ot(n,s);const a=ge(n,s),r=We(a),i=Na(s,r);return En(i,r,a)}const pE=R({divNoNan_:TB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(t,e){const n=I(t,"t1","dot"),s=I(e,"t2","dot");N((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const a=n.rank===1?n.size:n.shape[1],r=s.rank===1?s.size:s.shape[0];if(N(a===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`),n.rank===1&&s.rank===1){const i=F(n,[1,-1]),o=F(s,[-1,1]),l=Pe(i,o);return F(l,[])}else if(n.rank===1&&s.rank===2){const i=F(n,[1,-1]),o=F(s,[s.shape[0],s.shape[1]]),l=Pe(i,o);return F(l,[l.size])}else if(n.rank===2&&s.rank===1){const i=F(s,[-1,1]),o=Pe(n,i);return F(o,[o.size])}else{const i=F(s,[s.shape[0],s.shape[1]]);return Pe(n,i)}}const fE=R({dot_:EB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(t,...e){const n=e.map((a,r)=>I(a,`tensors${r}`,"einsum")),s={equation:t};return A.runKernel(Vg,n,s)}const El=R({einsum_:RB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(t){const n={x:I(t,"x","elu","float32")};return A.runKernel(qu,n)}const Ap=R({elu_:DB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(t,e){const n=I(t,"x","ensureShape","string_or_numeric");if(!GL(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const _B=R({ensureShape_:AB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(t){let e=I(t,"x","erf");N(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=le(e,"float32"));const n={x:e};return A.runKernel(Xu,n)}const rv=R({erf_:OB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iv(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function mE(t,e,n){const s=t.length+e.length,a=[];let r=0,i=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?a.push(t[r++]):a.push(e[i++]);return a}function Bt(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&n.push(t[r]);const a=e.map(r=>t[r]);return[n,a]}function Ft(t,e){const n=e.map(s=>1);return mE(t,n,e)}function Ht(t,e,n){N(iv(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function tt(t,e){if(iv(t,e))return null;const n=[];for(let s=0;s<e;++s)t.indexOf(s)===-1&&n.push(s);return t.forEach(s=>n.push(s)),n}function sr(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function dt(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(t,e=null,n=!1){const a={x:I(t,"x","max")},r={reductionIndices:e,keepDims:n};return A.runKernel(np,a,r)}const ia=R({max_:FB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(t,e=null,n=!1){const a={x:I(t,"x","min")},r={axis:e,keepDims:n};return A.runKernel(ip,a,r)}const td=R({min_:zB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(t,e){let n=I(t,"base","pow"),s=I(e,"exp","pow");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel(cc,a)}const Fr=R({pow_:LB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(t,e){if((ua(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&ua(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Li(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(t){const n={x:I(t,"x","sqrt","float32")};return A.runKernel(Sc,n)}const Cn=R({sqrt_:PB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(t){const e=I(t,"x","square"),n={};return A.runKernel("Square",{x:e},n)}const at=R({square_:MB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(t,e=null,n=!1){let s=I(t,"x","sum");s.dtype==="bool"&&(s=le(s,"int32"));const a={x:s},r={axis:e,keepDims:n};return A.runKernel(Sp,a,r)}const fe=R({sum_:BB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(t,e="euclidean",n=null,s=!1){t=I(t,"x","norm");const a=gE(t,e,n);let r=a.shape;if(s){const i=Ie(n,t.shape);r=Ft(a.shape,i)}return F(a,r)}function gE(t,e,n=null){if(t.rank===0)return Xt(t);if(t.rank!==1&&n===null)return gE(F(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return fe(Xt(t),n);if(e===1/0)return ia(Xt(t),n);if(e===-1/0)return td(Xt(t),n);if(e==="euclidean"||e===2)return Cn(fe(Fr(Xt(t),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return ia(fe(Xt(t),n[0]),n[1]-1);if(e===1/0)return ia(fe(Xt(t),n[1]),n[0]);if(e===-1/0)return td(fe(Xt(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return Cn(fe(at(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const _p=R({norm_:VB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(t,e=null,n=!1){return _p(t,"euclidean",e,n)}const yE=R({euclideanNorm_:UB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(t){const n={x:I(t,"x","exp")};return A.runKernel(Ku,n)}const ds=R({exp_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(t,e=0){const n=I(t,"x","expandDims","string_or_numeric");N(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},a={dim:e};return A.runKernel(Hd,s,a)}const Fn=R({expandDims_:GB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(t){const n={x:I(t,"x","expm1")};return A.runKernel(Yu,n)}const xE=R({expm1_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(t,e){const n=I(t,"x","tile","string_or_numeric");N(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const s={x:n},a={reps:e};return A.runKernel(Ic,s,a)}const ta=R({tile_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(t,e,n,s="float32"){e==null&&(e=t);const a=ke([t,e],s),r=t<=e?t:e;for(let o=0;o<r;++o)a.set(1,o,o);const i=F(a.toTensor(),[t,e]);if(n==null)return i;if(n.length===1)return ta(Fn(i,0),[n[0],1,1]);if(n.length===2)return ta(Fn(Fn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return ta(Fn(Fn(Fn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const ov=R({eye_:qB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(t){const n={x:I(t,"x","floor","float32")};return A.runKernel(Qu,n)}const Op=R({floor_:XB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(t,e,n=0,s=0){const a=I(t,"x","gather"),r=I(e,"indices","gather","int32"),i={x:a,indices:r},o={axis:n,batchDims:s};return A.runKernel(qd,i,o)}const Fp=R({gather_:KB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(t,e){let n=I(t,"a","greater","string_or_numeric"),s=I(e,"b","greater","string_or_numeric");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Xd,a)}const ws=R({greater_:YB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(t,e){let n=I(t,"a","greaterEqual","string_or_numeric"),s=I(e,"b","greaterEqual","string_or_numeric");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Ju,a)}const Mi=R({greaterEqual_:QB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(t){const n={input:I(t,"input","imag")};return A.runKernel(Xg,n)}const Ny=R({imag_:ZB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(t){const n={x:I(t,"x","isFinite")};return A.runKernel(tc,n)}const bE=R({isFinite_:JB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(t){const n={x:I(t,"x","isInf")};return A.runKernel(nc,n)}const wE=R({isInf_:eV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(t){const n={x:I(t,"x","isNaN")};return A.runKernel(sc,n)}const vE=R({isNaN_:tV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(t,e=.2){const s={x:I(t,"x","leakyRelu")},a={alpha:e};return A.runKernel(Kd,s,a)}const ky=R({leakyRelu_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(t,e){let n=I(t,"a","less","string_or_numeric"),s=I(e,"b","less","string_or_numeric");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Yd,a)}const nd=R({less_:sV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(t,e){let n=I(t,"a","lessEqual","string_or_numeric"),s=I(e,"b","lessEqual","string_or_numeric");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Qd,a)}const Jo=R({lessEqual_:aV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return A.runKernel(Kg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(t,e=5,n=1,s=1,a=.5){const r=I(t,"x","localResponseNormalization");N(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),N(hu(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=r,o=!1;r.rank===3&&(o=!0,i=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:s,beta:a},c=A.runKernel(tp,l,u);return o?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const SE=R({localResponseNormalization_:iV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(t){const n={x:I(t,"x","log","float32")};return A.runKernel(ac,n)}const Ds=R({log_:oV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(t){const n={x:I(t,"x","log1p")};return A.runKernel(rc,n)}const Iy=R({log1p_:lV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(t,e){N(F0(t),()=>"The f passed in variableGrads(f) must be a function"),N(e==null||Array.isArray(e)&&e.every(u=>u instanceof Am),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const u in A.registeredVariables)e.push(A.registeredVariables[u])}const s=n?e.filter(u=>!u.trainable):null,a=e.length;e=e.filter(u=>u.trainable),N(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const r=!0,{value:i,grads:o}=A.gradients(t,e,null,r);N(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:i,grads:l}}function zr(t){return A.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(t){const n={x:I(t,"x","neg")};return A.runKernel(lp,n)}const yt=R({neg_:cV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(t){const n={x:I(t,"x","softplus")};return A.runKernel(vc,n)}const Rc=R({softplus_:hV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(t){const e=I(t,"x","logSigmoid");return zr(s=>({value:yt(Rc(yt(s))),gradFunc:i=>_(i,qa(yt(s)))}))(e)}const CE=R({logSigmoid_:dV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(t,e){let n=I(t,"a","sub"),s=I(e,"b","sub");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel($c,a)}const he=R({sub_:pV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(t,e=-1){const n=I(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return zr((a,r)=>{const o=ia(a,e,!0),l=he(a,o),u=he(le(l,"float32"),Ds(fe(ds(l),e,!0)));return r([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,m=ds(p);return he(h,_(fe(h,e,f),m))}}})(n)}const lv=R({logSoftmax_:fV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(t,e=null,n=!1){const s=I(t,"x","logSumExp"),a=Ie(e,s.shape),r=ia(s,a,!0),i=he(s,r),o=ds(i),l=fe(o,a),u=Ds(l),c=K(F(r,u.shape),u);if(n){const h=Ft(c.shape,a);return F(c,h)}return c}const Ty=R({logSumExp_:mV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(t,e){const n=I(t,"a","logicalAnd","bool"),s=I(e,"b","logicalAnd","bool");Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Zd,a)}const Qa=R({logicalAnd_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(t){const n={x:I(t,"x","logicalNot","bool")};return A.runKernel(Jd,n)}const Ey=R({logicalNot_:yV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(t,e){const n=I(t,"a","logicalOr","bool"),s=I(e,"b","logicalOr","bool");Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(ep,a)}const uv=R({logicalOr_:xV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(t,e){const n=I(t,"a","logicalXor","bool"),s=I(e,"b","logicalXor","bool");return Se(n.shape,s.shape),Qa(uv(t,e),Ey(Qa(t,e)))}const $E=R({logicalXor_:bV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bf=2147483648;function wV(t,e,n="left"){const s=I(t,"sortedSequence","searchSorted"),a=I(e,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],o=F(s,[-1,r]),l=F(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(L(l.shape)>=bf)throw new Error(`values tensor size must less than ${bf}`);if(o.shape[1]>=bf)throw new Error(`trailing dim_size must less than ${bf} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return A.runKernel(uy,u,c)}const cv=R({searchSorted_:wV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(t,e){return cv(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(t,e,n,s,a){const r=I(t,"x","maxPool"),i=1;let o=r,l=!1;r.rank===3&&(l=!0,o=F(r,[1,r.shape[0],r.shape[1],r.shape[2]])),N(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),N(sn(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Vn("maxPool",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a},h=A.runKernel(sp,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ry=R({maxPool_:SV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(t,e=[1,1,1],n,s,a,r="NDHWC"){const i=I(t,"x","maxPool3d");let o=i,l=!1;i.rank===4&&(l=!0,o=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),N(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Vn("maxPool3d",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a,dataFormat:r},h=A.runKernel(ap,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const NE=R({maxPool3d_:CV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(t,e,n,s,a=!1){const i={x:I(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:s,includeBatchInIndex:a},l=A.runKernel(Jg,i,o);return{result:l[0],indexes:l[1]}}const NV=R({maxPoolWithArgmax_:$V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(t,e){let n=I(t,"a","maximum"),s=I(e,"b","maximum");[n,s]=Ot(n,s),n.dtype==="bool"&&(n=le(n,"int32"),s=le(s,"int32")),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(ic,a)}const Pr=R({maximum_:kV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(t,e=null,n=!1){const a={x:I(t,"x","mean")},r={axis:e,keepDims:n};return A.runKernel(rp,a,r)}const Rt=R({mean_:IV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(t,e="float32"){if(_s(t),e==="complex64"){const s=Gt(t,"float32"),a=Gt(t,"float32");return Si(s,a)}const n=Sn(L(t),e);return A.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(t,e="float32"){if(_s(t),e==="complex64"){const s=Kn(t,"float32"),a=Gt(t,"float32");return Si(s,a)}const n=Fw(L(t),e);return A.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let s=I(t,"x","meshgrid",t instanceof Nt?t.dtype:"float32");if(e===void 0)return[s];let a=I(e,"y","meshgrid",e instanceof Nt?e.dtype:"float32");const r=L(s.shape),i=L(a.shape);return n==="xy"?(s=F(s,[1,-1]),a=F(a,[-1,1]),[Pe(Kn([i,1],s.dtype),s),Pe(a,Kn([1,r],a.dtype))]):(s=F(s,[-1,1]),a=F(a,[1,-1]),[Pe(s,Kn([1,i],s.dtype)),Pe(Kn([r,1],a.dtype),a)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(t,e){let n=I(t,"a","minimum"),s=I(e,"b","minimum");[n,s]=Ot(n,s),n.dtype==="bool"&&(n=le(n,"int32"),s=le(s,"int32")),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(oc,a)}const Fo=R({minimum_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(t,e,n){N(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=I(t,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const a=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)N(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(e[o][0]>=0&&e[o][0]<=s.shape[o]-a&&e[o][1]>=0&&e[o][1]<=s.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-a} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:n},i={x:s};return A.runKernel(op,i,r)}const kE=R({mirrorPad_:RV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(t,e){let n=I(t,"a","mod"),s=I(e,"b","mod");[n,s]=Ot(n,s);const a={a:n,b:s};return A.runKernel(lc,a)}const IE=R({mod_:DV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(t,e=null,n=!1){t=I(t,"x","moments");const s=Ie(e,t.shape),a=Rt(t,s,n);let r=a.shape;n||(r=Ft(a.shape,s));const i=at(he(le(t,"float32"),F(a,r))),o=Rt(i,s,n);return{mean:a,variance:o}}const Dy=R({moments_:AV});function _V(t,e,n,s){const a=I(e,"data","multiRNNCell"),r=_m(n,"c","multiRNNCell"),i=_m(s,"h","multiRNNCell");let o=a;const l=[];for(let h=0;h<t.length;h++){const d=t[h](o,r[h],i[h]);l.push(d[0]),l.push(d[1]),o=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const OV=R({multiRNNCell_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(t,e,n,s=!1){const a=I(t,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const l={logits:i===1?F(a,[1,-1]):a},u={numSamples:e,seed:n,normalized:s},c=A.runKernel(ey,l,u);return i===1?F(c,[c.size]):c}const zV=R({multinomial_:FV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(t,e){let n=I(t,"a","notEqual","string_or_numeric"),s=I(e,"b","notEqual","string_or_numeric");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(up,a)}const mu=R({notEqual_:LV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(t,e,n=1,s=0,a="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:I(t,"indices","oneHot","int32")},o={dtype:a,depth:e,onValue:n,offValue:s};return A.runKernel(hp,i,o)}const hv=R({oneHot_:PV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(t){const n={x:I(t,"x","onesLike")};return A.runKernel(cp,n)}const As=R({onesLike_:MV});function BV(t,e){const n=I(t,"v1","outerProduct"),s=I(e,"v2","outerProduct");N(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);const a=F(n,[-1,1]),r=F(s,[1,-1]);return Pe(a,r)}const VV=R({outerProduct_:BV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(t,e,n=0){const s=I(t,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:e,constantValue:n},r={x:s};return A.runKernel(pp,r,a)}const Bi=R({pad_:UV});function WV(t,e,n=0){return N(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Bi(t,[e],n)}const GV=R({pad1d_:WV});function HV(t,e,n=0){return N(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Bi(t,e,n)}const jV=R({pad2d_:HV});function qV(t,e,n=0){return N(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Bi(t,e,n)}const XV=R({pad3d_:qV});function KV(t,e,n=0){return N(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Bi(t,e,n)}const YV=R({pad4d_:KV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(t,e,n){const s=I(t,"x","spaceToBatchND");N(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),N(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),N(s.shape.reduce((i,o,l)=>l>0&&l<=e.length?i&&(o+n[l-1][0]+n[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const a={x:s},r={blockShape:e,paddings:n};return A.runKernel(Cp,a,r)}const Ay=R({spaceToBatchND_:QV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(t,e,n,s,a,r,i){a==null&&(a=[1,1]),r==null&&(r=1),s===0&&(s="valid");const o=I(t,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(sn(r,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`);const c=Rn(l.shape,e,r,a,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=e4([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=JV([c.inHeight,c.inWidth],h,d),y=p?s:"valid",g=p?l:Ay(l,h,f),b=(n==="avg"?()=>Sy(g,e,r,y,i):()=>Ry(g,e,r,y,i))(),w=p?b:Cy(b,h,m);return u?F(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function JV(t,e,n){const s=n.map(c=>c[0]),a=n.map(c=>c[1]),r=t.concat(s,a),i=e.map((c,h)=>(c-r[h]%c)%c),o=a.map((c,h)=>c+i[h]),l=e.map((c,h)=>[s[h],o[h]]),u=e.map((c,h)=>[0,i[h]]);return[l,u]}function e4(t,e){const s=t.map((i,o)=>i+(i-1)*(e[o]-1)).map(i=>i-1),a=s.map(i=>Math.floor(i/2)),r=s.map((i,o)=>i-a[o]);return s.map((i,o)=>[a[o],r[o]])}const TE=R({pool_:ZV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(t,e){const n=I(t,"x","prelu"),s=I(e,"alpha","prelu"),a={x:n,alpha:s};return A.runKernel(fp,a)}const _y=R({prelu_:t4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(t,e=null,n=!1){let s=I(t,"x","prod");s.dtype==="bool"&&(s=le(s,"int32"));const a={x:s},r={axis:e,keepDims:n};return A.runKernel(mp,a,r)}const EE=R({prod_:n4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(t,e,n,s){const a=t.map((c,h)=>I(c,`tensors${h}`,"raggedGather","int32")),r=I(e,"paramsDenseValues","raggedGather"),i=I(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:r,indices:i},l={outputRaggedRank:s},u=A.runKernel(Pw,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const a4=R({raggedGather_:s4});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(t,e,n){const s=I(t,"starts","raggedRange"),a=I(e,"limits","raggedRange",s.dtype),r=I(n,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},o=A.runKernel(Mw,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const i4=R({raggedRange_:r4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(t,e,n,s,a){const r=I(t,"shape","raggedTensorToTensor","int32"),i=I(e,"values","raggedTensorToTensor"),o=I(n,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((h,d)=>I(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:r,values:i,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:a};return A.runKernel(Bw,u,c)}const l4=R({raggedTensorToTensor_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(t,e,n){_s(t);const s=L(t);let a=null;if(n==null||n==="float32")a=new Float32Array(s);else if(n==="int32")a=new Int32Array(s);else if(n==="bool")a=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let r=0;r<s;r++)a[r]=e();return A.makeTensor(a,t,n)}const c4=R({rand_:u4});var dv={exports:{}};dv.exports;(function(t){(function(e,n,s){function a(l){var u=this,c=o();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function r(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var c=new a(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,c),d.state=function(){return r(c,{})}),d}function o(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:this.alea=i})(Uo,t)})(dv);var h4=dv.exports,pv={exports:{}};pv.exports;(function(t){(function(e,n,s){function a(o){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function r(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function i(o,l){var u=new a(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&r(c,u),h.state=function(){return r(u,{})}),h}n&&n.exports?n.exports=i:this.xor128=i})(Uo,t)})(pv);var d4=pv.exports,fv={exports:{}};fv.exports;(function(t){(function(e,n,s){function a(o){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function i(o,l){var u=new a(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&r(c,u),h.state=function(){return r(u,{})}),h}n&&n.exports?n.exports=i:this.xorwow=i})(Uo,t)})(fv);var p4=fv.exports,mv={exports:{}};mv.exports;(function(t){(function(e,n,s){function a(o){var l=this;l.next=function(){var c=l.x,h=l.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,l.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(l,o)}function r(o,l){return l.x=o.x.slice(),l.i=o.i,l}function i(o,l){o==null&&(o=+new Date);var u=new a(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&r(c,u),h.state=function(){return r(u,{})}),h}n&&n.exports?n.exports=i:this.xorshift7=i})(Uo,t)})(mv);var f4=mv.exports,gv={exports:{}};gv.exports;(function(t){(function(e,n,s){function a(o){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,p,f;return l.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,m,y,g=[],x=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,x=Math.max(x,h.length)),f=0,m=-32;m<x;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(y=y+1640531527|0,d=g[m&127]^=p+y,f=d==0?f+1:0);for(f>=128&&(g[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=g[f+34&127],d=g[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,g[f]=p^d;c.w=y,c.X=g,c.i=f}u(l,o)}function r(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function i(o,l){o==null&&(o=+new Date);var u=new a(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&r(c,u),h.state=function(){return r(u,{})}),h}n&&n.exports?n.exports=i:this.xor4096=i})(Uo,t)})(gv);var m4=gv.exports,yv={exports:{}};yv.exports;(function(t){(function(e,n,s){function a(o){var l=this,u="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):u+=o;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function r(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function i(o,l){var u=new a(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&r(c,u),h.state=function(){return r(u,{})}),h}n&&n.exports?n.exports=i:this.tychei=i})(Uo,t)})(yv);var g4=yv.exports,RE={exports:{}};const y4={},x4=Object.freeze(Object.defineProperty({__proto__:null,default:y4},Symbol.toStringTag,{value:"Module"})),b4=WO(x4);(function(t){(function(e,n,s){var a=256,r=6,i=52,o="random",l=s.pow(a,r),u=s.pow(2,i),c=u*2,h=a-1,d;function p(w,v,C){var $=[];v=v==!0?{entropy:!0}:v||{};var k=g(y(v.entropy?[w,b(n)]:w??x(),3),$),T=new f($),E=function(){for(var O=T.g(r),B=l,W=0;O<u;)O=(O+W)*a,B*=a,W=T.g(1);for(;O>=c;)O/=2,B/=2,W>>>=1;return(O+W)/B};return E.int32=function(){return T.g(4)|0},E.quick=function(){return T.g(4)/4294967296},E.double=E,g(b(T.S),n),(v.pass||C||function(O,B,W,V){return V&&(V.S&&m(V,T),O.state=function(){return m(T,{})}),W?(s[o]=O,B):O})(E,k,"global"in v?v.global:this==s,v.state)}function f(w){var v,C=w.length,$=this,k=0,T=$.i=$.j=0,E=$.S=[];for(C||(w=[C++]);k<a;)E[k]=k++;for(k=0;k<a;k++)E[k]=E[T=h&T+w[k%C]+(v=E[k])],E[T]=v;($.g=function(O){for(var B,W=0,V=$.i,G=$.j,D=$.S;O--;)B=D[V=h&V+1],W=W*a+D[h&(D[V]=D[G=h&G+B])+(D[G]=B)];return $.i=V,$.j=G,W})(a)}function m(w,v){return v.i=w.i,v.j=w.j,v.S=w.S.slice(),v}function y(w,v){var C=[],$=typeof w,k;if(v&&$=="object")for(k in w)try{C.push(y(w[k],v-1))}catch{}return C.length?C:$=="string"?w:w+"\0"}function g(w,v){for(var C=w+"",$,k=0;k<C.length;)v[h&k]=h&($^=v[h&k]*19)+C.charCodeAt(k++);return b(v)}function x(){try{var w;return d&&(w=d.randomBytes)?w=w(a):(w=new Uint8Array(a),(e.crypto||e.msCrypto).getRandomValues(w)),b(w)}catch{var v=e.navigator,C=v&&v.plugins;return[+new Date,e,C,e.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(s.random(),n),t.exports){t.exports=p;try{d=b4}catch{}}else s["seed"+o]=p})(typeof self<"u"?self:Uo,[],Math)})(RE);var w4=RE.exports,v4=h4,S4=d4,C4=p4,$4=f4,N4=m4,k4=g4,el=w4;el.alea=v4;el.xor128=S4;el.xorwow=C4;el.xorshift7=$4;el.xor4096=N4;el.tychei=k4;var Oy=el;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xv{constructor(e,n,s,a,r){this.mean=e,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Oy.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let e,n,s=!1;for(;!s;){let a,r,i;do a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r;while(i>=1||i===0);const o=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*o,n=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class I4{constructor(e,n,s,a){this.alpha=e,this.beta=1/n,this.dtype=s;const r=a||Math.random();this.randu=Oy.alea(r.toString()),this.randn=new xv(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,s,a,r,i;for(;;){do a=this.randn.nextValue(),i=1+this.c*a;while(i<=0);if(i*=i*i,e=a*a,n=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),r=this.randu(),r<n||Math.log(r)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class T4{constructor(e=0,n=1,s,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=s,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Oy.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(t,e,n=1,s="float32",a){if(_s(t),n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new I4(e,n,s,a),i=ke(t,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const R4=R({randomGamma_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(t,e=0,n=1,s,a){if(_s(t),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new xv(e,n,s,!1,a),i=ke(t,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const bv=R({randomNormal_:D4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return bv(t,0,1,e,n)}const _4=R({randomStandardNormal_:A4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(t,e=0,n=1,s="float32",a){_s(t);const r=ke(t,s),i=new T4(e,n,null,a);for(let o=0;o<r.values.length;o++)r.values[o]=i.nextValue();return r.toTensor()}const tl=R({randomUniform_:O4});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(t,e,n,s){return tl(t,e,n,"int32",s)}const z4=R({randomUniformInt_:F4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(t,e,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const a={start:t,stop:e,step:n,dtype:s};return A.runKernel(sy,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(t){const n={input:I(t,"input","real")};return A.runKernel(ay,n)}const sd=R({real_:L4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(t){const n={x:I(t,"x","reciprocal")};return A.runKernel(hc,n)}const DE=R({reciprocal_:P4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(t){const n={x:I(t,"x","relu")};return A.runKernel(dc,n)}const ar=R({relu_:M4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(t){const n={x:I(t,"x","relu6")};return A.runKernel(pc,n)}const wv=R({relu6_:B4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(t,e){const s={x:I(t,"x","reverse")},a={dims:e};return A.runKernel(bp,s,a)}const ca=R({reverse_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(t){const e=I(t,"x","reverse");return N(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),ca(e,0)}const W4=R({reverse1d_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(t,e){const n=I(t,"x","reverse");return N(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ca(n,e)}const H4=R({reverse2d_:G4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(t,e){const n=I(t,"x","reverse");return N(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ca(n,e)}const q4=R({reverse3d_:j4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(t,e){const n=I(t,"x","reverse");return N(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ca(n,e)}const K4=R({reverse4d_:X4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(t){const n={x:I(t,"x","round")};return A.runKernel(fc,n)}const vv=R({round_:Y4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(t){const n={x:I(t,"x","rsqrt","float32")};return A.runKernel(mc,n)}const Sv=R({rsqrt_:Q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(t){const n={x:I(t,"x","selu")};return A.runKernel(gc,n)}const Cv=R({selu_:Z4});function J4(t,e,n,s,a,r=[1,1],i="NHWC"){const o=I(t,"x","separableConv2d"),l=I(e,"depthwiseFilter","separableConv2d"),u=I(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(o.rank===3&&(h=!0,c=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),N(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];N(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Dp(c,l,s,a,i,r),y=Ni(f,u,1,"valid",i);return h?F(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const $v=R({separableConv2d_:J4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function eU(t,e){const n=I(t,"x","setdiff1d"),s=I(e,"y","setdiff1d");N(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),N(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),N(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const a=await n.data(),r=await s.data(),i=new Set(r);let o=0;for(let c=0;c<a.length;c++)i.has(a[c])||o++;const l=new Zt([o],n.dtype),u=new Zt([o],"int32");for(let c=0,h=0;c<a.length;c++)i.has(a[c])||(l.values[h]=a[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const tU=eU;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(t){const n={x:I(t,"x","sign")};return A.runKernel(bc,n)}const AE=R({sign_:nU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(t){const n={x:I(t,"x","sin","float32")};return A.runKernel(yc,n)}const Nv=R({sin_:sU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(t){const n={x:I(t,"x","sinh")};return A.runKernel(xc,n)}const kv=R({sinh_:aU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(t,e,n){const s=I(t,"x","slice1d");return N(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ve(s,[e],[n])}const Fy=R({slice1d_:rU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(t,e,n){const s=I(t,"x","slice2d");return N(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const Iv=R({slice2d_:iU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(t,e,n){const s=I(t,"x","slice3d");return N(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const zy=R({slice3d_:oU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(t,e,n){const s=I(t,"x","slice4d");return N(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const ad=R({slice4d_:lU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(t,e=-1){const n=I(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},a={dim:e};return A.runKernel(Np,s,a)}const Ly=R({softmax_:uU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(t){N(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return A.runKernel(Wg,e)}const Py=R({fft_:cU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(t){N(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return A.runKernel(qg,e)}const rd=R({ifft_:hU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const a=F(t,[n,e]);s=rd(a)}else{const a=[n,2*(e-1)],r=F(sd(t),[n,e]),i=F(Ny(t),[n,e]),o=ca(Ve(r,[0,1],[n,e-2]),1),l=_(ca(Ve(i,[0,1],[n,e-2]),1),we(-1)),u=Mt([r,o],1),c=Mt([i,l],1),h=F(Si(u,c),[a[0],a[1]]);s=rd(h)}if(s=sd(s),t.rank===3&&t.shape[0]!==0){const a=s,r=t.shape[0];s=F(s,[r,s.shape[0]/r,s.shape[1]]),a.dispose()}return s}const Tv=R({irfft_:dU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(t,e,n=0){const a={x:I(t,"x","split")},r={numOrSizeSplits:e,axis:n};return A.runKernel($p,a,r)}const us=R({split_:pU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(t,e){N(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const s=t.size/n;let a;if(e!=null&&e<n){const f=t.shape.map(y=>0),m=t.shape.map(y=>y);m[t.shape.length-1]=e,a=Ve(t,f,m),n=e}else if(e!=null&&e>n){const f=t.shape.map(m=>m);f[t.shape.length-1]=e-n,a=Mt([t,Gt(f)],t.shape.length-1),n=e}else a=t;const r=We(a),i=F(Si(a,r),[s,n]),o=Py(i),l=Math.floor(n/2)+1,u=sd(o),c=Ny(o),h=us(u,[l,n-l],u.shape.length-1),d=us(c,[l,n-l],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=l,F(Si(h[0],d[0]),p)}const My=R({rfft_:fU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(t,e){let n=I(t,"a","squaredDifference"),s=I(e,"b","squaredDifference");[n,s]=Ot(n,s),Se(n.shape,s.shape);const a={a:n,b:s},r={};return A.runKernel(Cc,a,r)}const Ev=R({squaredDifference_:mU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gU(t,e){const n=I(t,"x","squeeze","string_or_numeric");return F(n,Oi(n.shape,e).newShape)}const nl=R({squeeze_:gU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(t,e=0){const n=_m(t,"tensors","stack","string_or_numeric");N(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&N(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,a={axis:e};return A.runKernel(dp,s,a)}const ps=R({stack_:yU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(t,e=0){const s={x:I(t,"x","step")},a={alpha:e};return A.runKernel(Tc,s,a)}const Dc=R({step_:xU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(t,e,n,s,a=0,r=0,i=0,o=0,l=0){const c={x:I(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return A.runKernel(my,c,h)}const _E=R({stridedSlice_:bU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(t){const n={x:I(t,"x","tan","float32")};return A.runKernel(Nc,n)}const OE=R({tan_:wU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(t,e){Du(t);const n=zi(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Li(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(t,e,n){if(Du(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=zi(t,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(t,e,n){if(Du(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=zi(t,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(t,e,n){if(Du(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=zi(t,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(t,e,n){if(Du(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=zi(t,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(t,e,n){if(Du(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=zi(t,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Li(t,e,s,n)}function zE(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(r+` update.rank < ${a}. `);if(t.length<s+(n.rank-a))throw new Error(r+` Output shape length < ${s+(n.rank-a)}`);if(n.rank!==a+t.length-s)throw new Error(r+` update.rank != ${a+t.length-s}`);for(let i=0;i<a;++i)if(n.shape[i]!==e.shape[i])throw new Error(r+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==t[i+s])throw new Error(r+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${t[i+a]})`)}function Rv(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}zE(n,e,t)}function rr(t,e,n){const s=e.shape.length,a=s>1?e.shape[s-1]:1,r=n.length;let i=1;for(let h=a;h<r;++h)i*=n[h];const o=a<1?1:a,l=L(e.shape)/o,u=[...xe(n.slice(0,a)),1],c=L(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U(t,e,n){const s=I(t,"tensor","tensorScatterupdate"),a=I(e,"indices","tensorScatterupdate","int32"),r=I(n,"updates","tensorScatterupdate");if(Rv(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},o={};return A.runKernel(ly,i,o)}const NU=R({tensorScatterUpdate_:$U});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(t,e=1,n=!0){const s=I(t,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${e}`);const r={x:s},i={k:e,sorted:n},[o,l]=A.runKernel(yy,r,i);return{values:o,indices:l}}const LE=R({topk_:kU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(t,e=0,n=1,s,a){if(_s(t),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new xv(e,n,s,!0,a),i=ke(t,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const Dv=R({truncatedNormal_:IU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(t,e=0){const n=I(t,"x","unique","string_or_numeric");N(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},a={axis:e},[r,i]=A.runKernel(Hw,s,a);return{values:r,indices:i}}const PE=R({unique_:TU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(t,e,n){const s=I(t,"x","unsortedSegmentSum"),a=I(e,"segmentIds","unsortedSegmentSum","int32");N(hu(n),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:a},i={numSegments:n};return A.runKernel(Ip,r,i)}const Av=R({unsortedSegmentSum_:EU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(t,e=0){const n=I(t,"x","unstack","string_or_numeric");N(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},a={axis:e};return A.runKernel(kp,s,a)}const ha=R({unstack_:RU});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(t,e){return cv(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(t,e=!0,n,s){return A.makeVariable(t,e,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _v(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const s=ke(t,"int32"),a=ke([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const i=s.indexToLoc(n[r]),o=r*t.length;a.values.set(i,o)}return a.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function AU(t){const e=I(t,"condition","whereAsync","bool"),n=await e.data(),s=_v(e.shape,n);return t!==e&&e.dispose(),s}const BE=AU;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _U(t,e,n){const s=I(t,"tensor","boolMask"),a=I(e,"mask","boolMask","bool"),r=n??0,i=a.rank,o=s.shape;N(i>0,()=>"mask cannot be scalar"),ns(o.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=r;m<r+i;m++)l*=o[m];const u=o.slice(0,r).concat([l],o.slice(r+i)),c=F(s,u),h=F(a,[-1]),d=await BE(h),p=nl(d,[1]),f=Fp(c,p,r);return t!==s&&s.dispose(),e!==a&&a.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const OU=_U;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(t,e,n){const s=I(t,"x","transpose");if(e==null&&(e=s.shape.map((i,o)=>o).reverse()),N(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{N(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const a={x:s},r={perm:e};return s.dtype==="complex64"?U(()=>{let i=sd(s),o=Ny(s);return i=A.runKernel(bo,{x:i},r),o=A.runKernel(bo,{x:o},r),n&&(o=yt(o)),Si(i,o)}):A.runKernel(bo,a,r)}const Ue=R({transpose_:FU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(t,e,n,s,a=!0){const r=I(t,"v","movingAverage"),i=I(e,"x","movingAverage"),o=I(n,"decay","movingAverage");CP(r,i),N(Ee(r.shape,i.shape),()=>"Shape mismatch in v and x");const l=we(1),u=he(l,o);let c=_(he(i,r),u);if(a){N(s!=null,()=>"When using zeroDebias: true, step is required.");const h=I(s,"step","movingAverage");c=ge(c,he(l,Fr(o,h)))}return K(r,c)}const LU=R({movingAverage_:zU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(t,e,n){_s(n);const s=I(t,"indices","scatterND","int32"),a=I(e,"updates","scatterND");Rv(a,s,n);const r={indices:s,updates:a},i={shape:n};return A.runKernel(oy,r,i)}const MU=R({scatterND_:PU});function BU(t,e,n,s){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,r=t.rank>1?t.shape[1]:1;if(n.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${r}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(t,e,n,s=0){_s(n);const a=I(t,"sparseIndices","sparseToDense","int32"),r=I(e,"sparseValues","sparseToDense","string_or_numeric"),i=I(s,"defaultValue","sparseToDense",r.dtype);BU(a,r,n,i);const o={sparseIndices:a,sparseValues:r,defaultValue:i},l={outputShape:n};return A.runKernel(dy,o,l)}const UU=R({sparseToDense_:VU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(t,e){const n=I(e,"indices","gatherND","int32"),a={params:I(t,"x","gatherND","string_or_numeric"),indices:n};return A.runKernel(jg,a)}const GU=R({gatherND_:WU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(t,e){if(e==null)return t.shape.slice();if(Ee(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)e[s]==null&&t.shape[s]!=null?n.push(t.shape[s]):n.push(e[s]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(t,e,n,s){const a=I(t,"x","dropout");if(N(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),N(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof Nt?a.clone():a;const r=HU(a,n),i=1-e,o=ge(Op(K(tl(r,0,1,"float32",s),i)),i);return _(a,o)}const VE=R({dropout_:jU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Ov(t,e,n){const s=1-t%2,a=new Float32Array(t);for(let r=0;r<t;++r){const i=2*Math.PI*r/(t+s-1);a[r]=e-n*Math.cos(i)}return Mn(a,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qU(t,e,n=1){const s=I(t,"predictions","inTopK"),a=I(e,"targets","inTopK");N(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),N(s.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`),ns(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];N(n>0&&n<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${n}`);const i=await s.data(),o=await a.data(),[l,u]=[i.length/r,r],c=tn("bool",l);for(let h=0;h<l;h++){const d=h*u,p=i.subarray(d,d+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,y)=>y.value-m.value),c[h]=0;for(let m=0;m<n;m++)if(f[m].index===o[h]){c[h]=1;break}}return t!==s&&s.dispose(),e!==a&&a.dispose(),Sa(c,a.shape,"bool")}const XU=qU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(t,e,n,s,a,r="NHWC",i){let o=t;t.rank===3&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]])),N(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=r==="NHWC"?o.shape[3]:o.shape[1],c=r==="NHWC"?l.shape[3]:l.shape[1];N(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),N(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Vn("conv2dDerFilter",a,i);const h={x:o,dy:l},d={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:n};return A.runKernel(Dg,h,d)}const Fv=R({conv2DBackpropFilter_:KU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return _(t,Dc(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Vy(t,e){let n=e;const s=nn(t.shape,e.shape);return s.length>0&&(n=fe(n,s)),F(n,t.shape)}function Uy(t,e,n,s){if(e==="linear")return t;if(e==="relu")return ar(t);if(e==="elu")return Ap(t);if(e==="relu6")return wv(t);if(e==="prelu")return _y(t,n);if(e==="leakyrelu")return ky(t,s);if(e==="sigmoid")return qa(t);throw new Error(`Unknown fused activation ${e}.`)}const Wy=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU({x:t,filter:e,strides:n,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Wy(A.state.gradientDepth,l)===!1){N(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Ni(t,e,n,s,a,r,i);return o!=null&&(C=K(C,o)),Uy(C,l,u,c)}const h=I(t,"x","conv2d","float32"),d=I(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Vn("fused conv2d",s,i);const m=a==="NHWC"?p.shape[3]:p.shape[1];N(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),N(sn(n,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`);const y=ht(p.shape,d.shape,n,r,s,i);let g;o!=null&&(g=I(o,"bias","fused conv2d"),[g]=Ot(g,h),a==="NHWC"?Se(y.outShape,g.shape):(N(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),N(g.shape.length===0||g.shape[0]===y.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let x;if(u!=null){const C=u.shape;if(N(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)N(C[0]===1||C[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${y.outChannels}).`);else if(C.length===3)try{Se(C,y.outShape)}catch{const k=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(k)}x=I(u,"prelu weights","fused conv2d")}const b=(C,$)=>{N(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[k,T,E,O]=$,B=By(C,E,l);N($i(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const W=tv(T.shape,B,k,n,s),V=Fv(T,B,k.shape,n,s),G=[W,V];if(O!=null){const D=Vy(O,B);G.push(D)}return G},w={x:p,filter:d,bias:g,preluActivationWeights:x},v={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return o==null?zr(($,k,T)=>{let E=A.runKernel(Qh,w,v);return T([k,$,E]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d):zr(($,k,T,E)=>{let O=A.runKernel(Qh,w,v);return E([k,$,O,T]),f&&(O=F(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(p,d,g)}const WE=R({fusedConv2d_:YU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(t,e,n,s,a,r=[1,1],i){let o=t;t.rank===3&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:n};return A.runKernel(Pg,u,c)}const GE=R({depthwiseConv2dNativeBackpropFilter_:QU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(t,e,n,s,a,r=[1,1],i){let o=e,l=!1;e.rank===3&&(l=!0,o=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:t},h=A.runKernel(Mg,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const HE=R({depthwiseConv2dNativeBackpropInput_:ZU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU({x:t,filter:e,strides:n,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Wy(A.state.gradientDepth,l)===!1){let v=Dp(t,e,n,s,a,r,i);return o!=null&&(v=K(v,o)),Uy(v,l,u,c)}const h=I(t,"x","depthwiseConv2d","float32"),d=I(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),N(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),r==null&&(r=[1,1]),N(sn(n,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),Vn("fused depthwiseConv2d",s,i);const m=ht(p.shape,d.shape,n,r,s,i,!0);let y;o!=null&&(y=I(o,"bias","fused conv2d"),[y]=Ot(y,h),Se(m.outShape,y.shape));let g;u!=null&&(g=I(u,"prelu weights","fused depthwiseConv2d"));const x=(v,C)=>{N($i(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[$,k,T,E]=C,O=By(v,T,l),B=HE(k.shape,O,$,n,s,r,i),W=GE(k,O,$.shape,n,s,r,i);if(E!=null){const V=Vy(y,O);return[B,W,V]}return[B,W]},b={x:p,filter:d,bias:y,preluActivationWeights:g},w={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return o==null?zr((C,$,k)=>{let T=A.runKernel(Zh,b,w);return k([$,C,T]),f&&(T=F(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:x}})(p,d):zr((C,$,k,T)=>{let E=A.runKernel(Zh,b,w);return T([$,C,E,k]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(p,d,y)}const eW=R({fusedDepthwiseConv2d_:JU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Wy(A.state.gradientDepth,r)===!1){let O=Pe(t,e,n,s);return a!=null&&(O=K(O,a)),Uy(O,r,i,o)}let l=I(t,"a","fused matMul"),u=I(e,"b","fused matMul");[l,u]=Ot(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),y=L(f),g=L(m);N(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);const b=Se(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),w=n?F(l,[y,c,d]):F(l,[y,d,c]),v=s?F(u,[g,p,h]):F(u,[g,h,p]);let C;a!=null&&(C=I(a,"bias","fused matMul"),[C]=Ot(C,l),Se(b,C.shape));let $;i!=null&&($=I(i,"prelu weights","fused matMul"));const k=(O,B)=>{const[W,V,G,D]=B,H=By(F(O,G.shape),G,r);let P,j;if(!n&&!s?(P=Pe(H,V,!1,!0),j=Pe(W,H,!0,!1)):!n&&s?(P=Pe(H,V,!1,!1),j=Pe(H,W,!0,!1)):n&&!s?(P=Pe(V,H,!1,!0),j=Pe(W,H,!1,!1)):(P=Pe(V,H,!0,!0),j=Pe(H,W,!0,!0)),a!=null){const X=Vy(D,H);return[P,j,X]}else return[P,j]},T={a:w,b:v,bias:C,preluActivationWeights:$},E={transposeA:n,transposeB:s,activation:r,leakyreluAlpha:o};return a==null?zr((B,W,V)=>{const G=A.runKernel(Yh,T,E);return V([B,W,G]),{value:F(G,b),gradFunc:k}})(w,v):zr((B,W,V,G)=>{const D=A.runKernel(Yh,T,E);return G([B,W,D,V]),{value:F(D,b),gradFunc:k}})(w,v,C)}const Z0=R({fusedMatMul_:tW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=Object.freeze(Object.defineProperty({__proto__:null,conv2d:WE,depthwiseConv2d:eW,matMul:Z0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(t){return Ov(t,.54,.46)}const aW=R({hammingWindow_:sW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(t){return Ov(t,.5,.5)}const jE=R({hannWindow_:rW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(t,e,n,s=!1,a=0){let r=0;const i=[];for(;r+e<=t.size;)i.push(Ve(t,r,e)),r+=n;if(s)for(;r<t.size;){const o=r+e-t.size,l=Mt([Ve(t,r,e-o),Ec([o],a)]);i.push(l),r+=n}return i.length===0?Ah([],[0,e]):F(Mt(i),[i.length,e])}const qE=R({frame_:iW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(t,e,n,s,a=jE){s==null&&(s=UE(e));const r=qE(t,e,n),i=_(r,a(e));return My(i,s)}const lW=R({stft_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(t,e,n,s,a="bilinear",r=0){const i=I(t,"image","cropAndResize"),o=I(e,"boxes","cropAndResize","float32"),l=I(n,"boxInd","cropAndResize","int32"),u=o.shape[0];N(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),N(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),N(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),N(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),N(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),N(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const c={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:r,cropSize:s};return A.runKernel(Fg,c,h)}const cW=R({cropAndResize_:uW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(t){const e=I(t,"image","flipLeftRight","float32");N(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return A.runKernel(Hg,n,{})}const dW=R({flipLeftRight_:hW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(t){const e=I(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];N(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),N(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const a=new Array(e.rank);return a.fill(1,0,n),a[n]=3,ta(e,a)}const fW=R({grayscaleToRGB_:pW});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(t){const e=I(t,"image","RGBToGrayscale"),n=e.rank-1,s=e.shape[n];N(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),N(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const a=e.dtype,r=le(e,"float32"),i=Mn([.2989,.587,.114]);let o;switch(e.rank){case 2:o=El("ij,j->i",r,i);break;case 3:o=El("ijk,k->ij",r,i);break;case 4:o=El("ijkl,l->ijk",r,i);break;case 5:o=El("ijklm,m->ijkl",r,i);break;case 6:o=El("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Fn(o,-1),le(o,a)}const gW=R({rgbToGrayscale_:mW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(t,e,n=0,s=.5){const a=I(t,"image","rotateWithOffset","float32");N(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const r={image:a},i={radians:e,fillValue:n,center:s};return A.runKernel(by,r,i)}const xW=R({rotateWithOffset_:yW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ac(t,e,n,s,a,r){s==null&&(s=.5),a==null&&(a=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=t.shape[0];return n=Math.min(n,i),N(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),N(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),N(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),N(e.rank===1,()=>"scores must be a 1D tensor"),N(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),N(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY){const r=I(t,"boxes","nonMaxSuppression","float32"),i=I(e,"scores","nonMaxSuppression","float32"),o=Ac(r,i,n,s,a);n=o.maxOutputSize,s=o.iouThreshold,a=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:a};return A.runKernel(ty,{boxes:r,scores:i},l)}const wW=R({nonMaxSuppression_:bW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(t,e,n){const s=SW(t,e,n),a=s<0?-(s+1):s;t.splice(a,0,e)}function SW(t,e,n){return $W(t,e,n||CW)}function CW(t,e){return t>e?1:t<e?-1:0}function $W(t,e,n){let s=0,a=t.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const o=n(e,t[r]);o>0?s=r+1:(a=r,i=!o)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gy(t,e,n,s,a){return Lv(t,e,n,s,a,0)}function zv(t,e,n,s,a,r){return Lv(t,e,n,s,a,0,!1,r,!0)}function Hy(t,e,n,s,a,r){return Lv(t,e,n,s,a,r,!0)}function Lv(t,e,n,s,a,r,i=!1,o=!1,l=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>a&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(N2);const c=r>0?-.5/r:0,h=[],d=[];for(;h.length<n&&u.length>0;){const y=u.pop(),{score:g,boxIndex:x,suppressBeginIndex:b}=y;if(g<a)break;let w=!1;for(let v=h.length-1;v>=b;--v){const C=NW(t,x,h[v]);if(C>=s){w=!0;break}if(y.score=y.score*kW(s,c,C),y.score<=a)break}y.suppressBeginIndex=h.length,w||(y.score===g?(h.push(x),d.push(y.score)):y.score>a&&vW(u,y,N2))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function NW(t,e,n){const s=t.subarray(e*4,e*4+4),a=t.subarray(n*4,n*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-r)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(r,u),y=Math.max(i,c),g=Math.min(o,h),x=Math.min(l,d),b=Math.max(g-m,0)*Math.max(x-y,0);return b/(p+f-b)}function kW(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function N2(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function IW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY){const r=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),o=Ac(r,i,n,s,a);n=o.maxOutputSize,s=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Gy(u,c,n,s,a);return r!==t&&r.dispose(),i!==e&&i.dispose(),Mn(h,"int32")}const TW=IW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=I(t,"boxes","nonMaxSuppression"),o=I(e,"scores","nonMaxSuppression"),l=Ac(i,o,n,s,a,r);n=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold,r=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},h=A.runKernel(ny,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const RW=R({nonMaxSuppressionWithScore_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function DW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=I(t,"boxes","nonMaxSuppressionAsync"),o=I(e,"scores","nonMaxSuppressionAsync"),l=Ac(i,o,n,s,a,r);n=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold,r=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Hy(c,h,n,s,a,r);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Mn(d,"int32"),selectedScores:Mn(p)}}const AW=DW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=I(t,"boxes","nonMaxSuppression"),o=I(e,"scores","nonMaxSuppression"),l=Ac(i,o,n,s,a,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:r},f=A.runKernel(Lw,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const OW=R({nonMaxSuppressionPadded_:_W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=I(t,"boxes","nonMaxSuppressionAsync"),o=I(e,"scores","nonMaxSuppressionAsync"),l=Ac(i,o,n,s,a,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=zv(d,p,u,c,h,r);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Mn(f,"int32"),validOutputs:we(m,"int32")}}const zW=FW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(t,e,n=!1,s=!1){const a=I(t,"images","resizeBilinear");N(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),N(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),N(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:r},l={alignCorners:n,halfPixelCenters:s,size:e},u=A.runKernel(xp,o,l);return i?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const XE=R({resizeBilinear_:LW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(t,e,n=!1,s=!1){const a=I(t,"images","resizeNearestNeighbor");N(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),N(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),N(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:r},l={alignCorners:n,halfPixelCenters:s,size:e},u=A.runKernel(yp,o,l);return i?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const KE=R({resizeNearestNeighbor_:PW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(t,e="binary",n=!1,s=.5){const a=I(t,"image","threshold"),r=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1];let u=_(Mn([s]),255),c,h,d,p;if(N(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),N(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),N(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),N(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),a.shape[2]===3){[c,h,d]=us(a,[1,1,1],-1);const y=_(c,r),g=_(h,i),x=_(d,o);p=K(K(y,g),x)}else p=t;if(e==="otsu"){const y=nE(le(vv(p),"int32"),Sa([]),256);u=BW(y,l)}const f=n?Jo(p,u):ws(p,u);return le(_(f,255),"int32")}function BW(t,e){let n=Mn([-1]),s=Mn([0]),a=Mn([0]),r,i,o,l,u,c;for(let h=0;h<t.size-1;h++){r=Ve(t,0,h+1),i=Ve(t,h+1),u=ge(fe(r),e),c=ge(fe(i),e);const d=fe(_(r,gu(0,r.size)));o=ge(d,fe(r));const p=Ec(i.shape,r.size),f=K(gu(0,i.size),p),m=_(i,f);l=ge(fe(m),fe(i));const y=he(o,l),g=he(o,l),x=_(u,c);a=_(_(x,y),g);const b=ws(a,s);s=En(b,a,s),n=En(b,Mn([h]),n)}return n}const VW=R({threshold_:MW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(t,e,n="nearest",s="constant",a=0,r){const i=I(t,"image","transform","float32"),o=I(e,"transforms","transform","float32");N(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),N(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:a,outputShape:r};return A.runKernel(xy,l,u)}const WW=R({transform_:UW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(t,e,n){const s=I(t,"a","bandPart");N(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const a=s.shape,[r,i]=s.shape.slice(-2);let o,l;typeof e=="number"?(N(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),N(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),o=I(e<0?r:e,"numLower","bandPart")):(N(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=En(nd(e,0),r,Fo(e,r))),typeof n=="number"?(N(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),N(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=I(n<0?i:n,"numUpper","bandPart")):(N(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=En(nd(n,0),i,Fo(n,i)));const u=F(gu(0,r,1,"int32"),[-1,1]),c=gu(0,i,1,"int32"),h=he(u,c),d=Qa(Jo(h,o),Mi(h,yt(l))),p=Gt([r,i],s.dtype);return F(ps(ha(F(s,[-1,r,i])).map(f=>En(d,f,p))),a)}const HW=R({bandPart_:GW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(t){let e;if(Array.isArray(t)){e=!1,N(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=t[0].shape[0];for(let r=1;r<t.length;++r)N(t[r].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[r].shape[0]} vs. ${a})`)}else e=!0,t=us(t,t.shape[0],0).map(a=>nl(a,[0]));N(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],s=t;for(let a=0;a<t.length;++a)n.push(A.tidy(()=>{let r=s[a];if(a>0)for(let i=0;i<a;++i){const o=_(fe(_(n[i],r)),n[i]);r=he(r,o)}return ge(r,_p(r,"euclidean"))}));return e?ps(n,0):n}const qW=R({gramSchmidt_:jW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(t,e=!1){if(N(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return k2(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((l,u)=>l*u),s=ha(F(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],r=[];s.forEach(l=>{const[u,c]=k2(l,e);a.push(u),r.push(c)});const i=F(ps(a,0),t.shape),o=F(ps(r,0),t.shape);return[i,o]}}function k2(t,e=!1){return A.tidy(()=>{N(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],s=t.shape[1];let a=ov(n),r=Ir(t);const i=Ah([[1]],[1,1]);let o=Ir(i);const l=n>=s?s:n;for(let u=0;u<l;++u){const c=r,h=o,d=a;[o,r,a]=A.tidy(()=>{const p=Ve(r,[u,u],[n-u,1]),f=_p(p),m=Ve(r,[u,u],[1,1]),y=En(ws(m,0),Ah([[-1]]),Ah([[1]])),g=he(m,_(y,f)),x=ge(p,g);x.shape[0]===1?o=Ir(i):o=Mt([i,Ve(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const b=yt(ge(Pe(y,g),f)),w=Ve(r,[u,0],[n-u,s]),v=_(b,o),C=Ue(o);if(u===0)r=he(w,Pe(v,Pe(C,w)));else{const T=he(w,Pe(v,Pe(C,w)));r=Mt([Ve(r,[0,0],[u,s]),T],0)}const $=Ue(v),k=Ve(a,[0,u],[n,a.shape[1]-u]);if(u===0)a=he(k,Pe(Pe(k,o),$));else{const T=he(k,Pe(Pe(k,o),$));a=Mt([Ve(a,[0,0],[n,u]),T],1)}return[o,r,a]}),_e([c,h,d])}return!e&&n>s&&(a=Ve(a,[0,0],[n,s]),r=Ve(r,[0,0],[s,s])),[a,r]})}const KW=R({qr_:XW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qn;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(qn||(qn={}));function YW(t,e,n=qn.SUM_BY_NONZERO_WEIGHTS){const s=I(t,"losses","computeWeightedLoss");let a=null;e!=null&&(a=I(e,"weights","computeWeightedLoss"));const r=a==null?s:_(s,a);if(n===qn.NONE)return r;if(n===qn.SUM)return fe(r);if(n===qn.MEAN){if(a==null)return Rt(r);{const i=s.size/a.size,o=ge(fe(r),fe(a));return i>1?ge(o,we(i)):o}}if(n===qn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return ge(fe(r),we(s.size));{const i=_(a,Kn(s.shape)),o=le(fe(mu(i,we(0))),"float32");return ge(fe(r),o)}}throw Error(`Unknown reduction: ${n}`)}const Mr=R({computeWeightedLoss_:YW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(t,e,n,s=qn.SUM_BY_NONZERO_WEIGHTS){const a=I(t,"labels","absoluteDifference"),r=I(e,"predictions","absoluteDifference");let i=null;n!=null&&(i=I(n,"weights","absoluteDifference")),ns(a.shape,r.shape,"Error in absoluteDifference: ");const o=Xt(he(a,r));return Mr(o,i,s)}const ZW=R({absoluteDifference_:QW});function JW(t,e,n,s,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","cosineDistance"),i=I(e,"predictions","cosineDistance");let o=null;s!=null&&(o=I(s,"weights","cosineDistance")),ns(r.shape,i.shape,"Error in cosineDistance: ");const l=we(1),u=he(l,fe(_(r,i),n,!0));return Mr(u,o,a)}const eG=R({cosineDistance_:JW});function tG(t,e,n,s=qn.SUM_BY_NONZERO_WEIGHTS){let a=I(t,"labels","hingeLoss");const r=I(e,"predictions","hingeLoss");let i=null;n!=null&&(i=I(n,"weights","hingeLoss")),ns(a.shape,r.shape,"Error in hingeLoss: ");const o=we(1);a=he(_(we(2),a),o);const l=ar(he(o,_(a,r)));return Mr(l,i,s)}const nG=R({hingeLoss_:tG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(t,e,n,s=1,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","huberLoss"),i=I(e,"predictions","huberLoss");let o=null;n!=null&&(o=I(n,"weights","huberLoss")),ns(r.shape,i.shape,"Error in huberLoss: ");const l=we(s),u=Xt(he(i,r)),c=Fo(u,l),h=he(u,c),d=K(_(we(.5),at(c)),_(l,h));return Mr(d,o,a)}const aG=R({huberLoss_:sG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(t,e,n,s=1e-7,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","logLoss"),i=I(e,"predictions","logLoss");let o=null;n!=null&&(o=I(n,"weights","logLoss")),ns(r.shape,i.shape,"Error in logLoss: ");const l=we(1),u=we(s),c=yt(_(r,Ds(K(i,u)))),h=_(he(l,r),Ds(K(he(l,i),u))),d=he(c,h);return Mr(d,o,a)}const iG=R({logLoss_:rG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(t,e,n,s=qn.SUM_BY_NONZERO_WEIGHTS){const a=I(t,"labels","meanSquaredError"),r=I(e,"predictions","meanSquaredError");let i=null;n!=null&&(i=I(n,"weights","meanSquaredError")),ns(a.shape,r.shape,"Error in meanSquaredError: ");const o=Ev(a,r);return Mr(o,i,s)}const lG=R({meanSquaredError_:oG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(t,e){const n=I(t,"labels","sigmoidCrossEntropyWithLogits"),s=I(e,"logits","sigmoidCrossEntropyWithLogits");ns(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ar(s),r=_(s,n),i=Iy(ds(yt(Xt(s))));return K(he(a,r),i)}function cG(t,e,n,s=0,a=qn.SUM_BY_NONZERO_WEIGHTS){let r=I(t,"multiClassLabels","sigmoidCrossEntropy");const i=I(e,"logits","sigmoidCrossEntropy");let o=null;if(n!=null&&(o=I(n,"weights","sigmoidCrossEntropy")),ns(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=we(s),c=we(1),h=we(.5);r=K(_(r,he(c,u)),_(h,u))}const l=uG(r,i);return Mr(l,o,a)}const hG=R({sigmoidCrossEntropy_:cG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return zr((a,r,i)=>{const l=Ty(r,[n],!0),u=he(le(r,"float32"),l);i([a,u]);const c=yt(_(u,a));return{value:fe(c,[n]),gradFunc:(p,f)=>{const[m,y]=f,g=Ft(p.shape,[n]);return[_(F(p,g),he(le(m,"float32"),ds(y))),_(F(p,g),he(ds(y),le(m,"float32")))]}}})(t,e)}function pG(t,e,n,s=0,a=qn.SUM_BY_NONZERO_WEIGHTS){let r=I(t,"onehotLabels","softmaxCrossEntropy");const i=I(e,"logits","softmaxCrossEntropy");let o=null;if(n!=null&&(o=I(n,"weights","softmaxCrossEntropy")),ns(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=we(s),c=we(1),h=we(r.shape[1]);r=K(_(r,he(c,u)),ge(u,h))}const l=dG(r,i);return Mr(l,o,a)}const fG=R({softmaxCrossEntropy_:pG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(t,e,n,s){const a=I(t,"indices","sparseFillEmptyRows","int32"),r=I(e,"values","sparseFillEmptyRows"),i=I(n,"denseShape","sparseFillEmptyRows","int32"),o=I(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:r,denseShape:i,defaultValue:o},u=A.runKernel(Vw,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const gG=R({sparseFillEmptyRows_:mG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(t,e,n){const s=I(t,"inputIndices","sparseReshape","int32"),a=I(e,"inputShape","sparseReshape","int32"),r=I(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},o=A.runKernel(Uw,i);return{outputIndices:o[0],outputShape:o[1]}}const xG=R({sparseReshape_:yG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bG(t,e,n){const s=I(t,"data","sparseSegmentMean"),a=I(e,"indices","sparseSegmentMean","int32"),r=I(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return A.runKernel(cy,i)}const wG=R({sparseSegmentMean_:bG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(t,e,n){const s=I(t,"data","sparseSegmentSum"),a=I(e,"indices","sparseSegmentSum","int32"),r=I(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return A.runKernel(hy,i)}const SG=R({sparseSegmentSum_:vG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(t,e,n,s,a,r,i,o){const l=I(t,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=I(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=A.runKernel(gy,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const $G=R({stringNGrams_:CG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(t,e,n=!0){const s=I(t,"input","stringSplit","string"),a=I(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:n},i={input:s,delimiter:a},o=A.runKernel(Ww,i,r);return{indices:o[0],values:o[1],shape:o[2]}}const kG=R({stringSplit_:NG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(t,e){const n=I(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return A.runKernel(Gw,a,s)}const TG=R({stringToHashBucketFast_:IG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(t,e,n,s=!0){const a=I(t,"input","staticRegexReplace","string"),r={pattern:e,rewrite:n,replaceGlobal:s};return A.runKernel(fy,{x:a},r)}const RG=R({staticRegexReplace_:EG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG={fft:Py,ifft:rd,rfft:My,irfft:Tv},AG={hammingWindow:aW,hannWindow:jE,frame:qE,stft:lW},na={flipLeftRight:dW,grayscaleToRGB:fW,resizeNearestNeighbor:KE,resizeBilinear:XE,rgbToGrayscale:gW,rotateWithOffset:xW,cropAndResize:cW,nonMaxSuppression:wW,nonMaxSuppressionAsync:TW,nonMaxSuppressionWithScore:RW,nonMaxSuppressionWithScoreAsync:AW,nonMaxSuppressionPadded:OW,nonMaxSuppressionPaddedAsync:zW,threshold:VW,transform:WW},YE={bandPart:HW,gramSchmidt:qW,qr:KW},_G={absoluteDifference:ZW,computeWeightedLoss:Mr,cosineDistance:eG,hingeLoss:nG,huberLoss:aG,logLoss:iG,meanSquaredError:lG,sigmoidCrossEntropy:hG,softmaxCrossEntropy:fG},OG={sparseFillEmptyRows:gG,sparseReshape:xG,sparseSegmentMean:wG,sparseSegmentSum:SG},FG={stringNGrams:$G,stringSplit:kG,stringToHashBucketFast:TG,staticRegexReplace:RG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=new Map,LG=new Map;class _c{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class Ks{constructor(){this.classNameMap={}}static getMap(){return Ks.instance==null&&(Ks.instance=new Ks),Ks.instance}static register(e){Ks.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Z(t,e,n){N(t.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),N(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof n>"u"&&(n=t.className);const s=n,a=e+">"+s;return Ks.register(t),zG.set(a,t),LG.set(t,a),t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vi extends _c{minimize(e,n=!1,s){const{value:a,grads:r}=this.computeGradients(e,s);if(s!=null){const i=s.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(i)}else this.applyGradients(r);return _e(r),n?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return uV(e,n)}dispose(){this.iterations_!=null&&_e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Vi,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QE extends Vi{static get className(){return"Adadelta"}constructor(e,n,s=null){super(),this.learningRate=e,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s],i=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accum_grad`,variable:U(()=>We(r).variable(i))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${s}/accum_var`,variable:U(()=>We(r).variable(i))});const o=Array.isArray(e)?e[a].tensor:e[s];if(o==null)return;const l=this.accumulatedGrads[a].variable,u=this.accumulatedUpdates[a].variable;U(()=>{const c=K(_(l,this.rho),_(at(o),1-this.rho)),h=_(ge(Cn(K(u,this.epsilon)),Cn(K(l,this.epsilon))),o),d=K(_(u,this.rho),_(at(h),1-this.rho));l.assign(c),u.assign(d);const p=K(_(h,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_e(this.accumulatedGrads.map(e=>e.variable)),_e(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedUpdates=e.slice(n,n*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZE extends Vi{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accumulator`,variable:U(()=>Ec(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[a].tensor:e[s];if(i==null)return;const o=this.accumulatedGrads[a].variable;U(()=>{const l=K(o,at(i));o.assign(l);const u=K(_(ge(i,Cn(K(l,A.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_e(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JE extends Vi{static get className(){return"Adam"}constructor(e,n,s,a=null){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],U(()=>{this.accBeta1=we(n).variable(),this.accBeta2=we(s).variable()}),a==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);U(()=>{const s=he(1,this.accBeta1),a=he(1,this.accBeta2);n.forEach((r,i)=>{const o=A.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:U(()=>We(o).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:U(()=>We(o).variable(l))});const u=Array.isArray(e)?e[i].tensor:e[r];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=K(_(c,this.beta1),_(u,1-this.beta1)),p=K(_(h,this.beta2),_(at(u),1-this.beta2)),f=ge(d,s),m=ge(p,a);c.assign(d),h.assign(p);const y=K(_(ge(f,K(Cn(m),this.epsilon)),-this.learningRate),o);o.assign(y)}),this.accBeta1.assign(_(this.accBeta1,this.beta1)),this.accBeta2.assign(_(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&_e(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),U(()=>{this.accBeta1.assign(Fr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fr(this.beta2,this.iterations_+1))});const n=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eR extends Vi{static get className(){return"Adamax"}constructor(e,n,s,a=null,r=0){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],U(()=>{this.iteration=we(0).variable(),this.accBeta1=we(n).variable()}),a==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);U(()=>{const s=he(1,this.accBeta1),a=ge(-this.learningRate,K(_(this.iteration,this.decay),1));n.forEach((r,i)=>{const o=A.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:We(o).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:We(o).variable(l)});const u=Array.isArray(e)?e[i].tensor:e[r];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=K(_(c,this.beta1),_(u,1-this.beta1)),p=_(h,this.beta2),f=Xt(u),m=Pr(p,f);c.assign(d),h.assign(m);const y=K(_(ge(a,s),ge(d,K(m,this.epsilon))),o);o.assign(y)}),this.iteration.assign(K(this.iteration,1)),this.accBeta1.assign(_(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&_e(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pv extends Vi{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=Array.isArray(e)?e[a].tensor:e[s];if(r==null)return;const i=A.registeredVariables[s];U(()=>{const o=K(_(this.c,r),i);i.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=un(we(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tR extends Pv{static get className(){return"Momentum"}constructor(e,n,s=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${s}/momentum`,variable:U(()=>We(r).variable(!1))});const i=this.accumulations[a].variable,o=Array.isArray(e)?e[a].tensor:e[s];o!=null&&U(()=>{let l;const u=K(_(this.m,i),o);this.useNesterov?l=K(_(this.c,K(o,_(u,this.m))),r):l=K(_(this.c,u),r),i.assign(u),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_e(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nR extends Vi{static get className(){return"RMSProp"}constructor(e,n=.9,s=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=s,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=A.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s],i=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${s}/rms`,variable:U(()=>We(r).variable(i))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${s}/momentum`,variable:U(()=>We(r).variable(i))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${s}/mg`,variable:U(()=>We(r).variable(i))});const o=Array.isArray(e)?e[a].tensor:e[s];if(o==null)return;const l=this.accumulatedMeanSquares[a].variable,u=this.accumulatedMoments[a].variable;U(()=>{const c=K(_(l,this.decay),_(at(o),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[a].variable,d=K(_(h,this.decay),_(o,1-this.decay)),p=ge(_(o,this.learningRate),Cn(he(c,K(at(d),this.epsilon)))),f=K(_(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const m=he(r,f);r.assign(m)}else{const h=K(_(l,this.decay),_(at(o),1-this.decay)),d=K(_(u,this.momentum),ge(_(o,this.learningRate),Cn(K(h,this.epsilon))));l.assign(h),u.assign(d);const p=he(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_e(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_e(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&_e(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedMoments=e.slice(n,n*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG=[QE,ZE,JE,eR,tR,nR,Pv];function MG(){for(const t of PG)Z(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG="model",VG=".json",UG=".weights.bin";function I2(t){return new Promise(e=>setTimeout(e)).then(t)}class zo{constructor(e){if(!M().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(zo.URL_SCHEME)&&(e=e.slice(zo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=BG),this.modelJsonFileName=e+VG,this.weightDataFileName=e+UG}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=_a.join(e.weightData),s=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=_T(e,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await I2(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await I2(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ep(e)}}}}zo.URL_SCHEME="downloads://";class WG{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const s=new FileReader;s.onload=a=>{const r=JSON.parse(a.target.result),i=r.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=Yw(r,u=>this.loadWeights(u));e(l)},s.onerror=a=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const n=[],s=[];for(const i of e)n.push(...i.weights),s.push(...i.paths);const a=this.checkManifestAndWeightFiles(e),r=s.map(i=>this.loadWeightsFile(i,a[i]));return Promise.all(r).then(i=>[n,i])}loadWeightsFile(e,n){return new Promise((s,a)=>{const r=new FileReader;r.onload=i=>{const o=i.target.result;s(o)},r.onerror=i=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],s=this.weightsFiles.map(r=>$2(r.name)),a={};for(const r of e)r.paths.forEach(i=>{const o=$2(i);if(n.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),s.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);a[i]=this.weightsFiles[s.indexOf(o)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}const GG=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(zo.URL_SCHEME)?HG(t.slice(zo.URL_SCHEME.length)):null;$t.registerSaveRouter(GG);function HG(t="model"){return new zo(t)}function jG(t){return new WG(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(t,e,n,s){i(t),n=n??0,s=s??1,o(n,s);let a=0;const r=l=>(l.then(u=>{const c=n+ ++a/t.length*(s-n);return e(c),u}),l);function i(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),N(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(t.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sR(t,e){e==null&&(e={});const n=e.fetchFunc==null?M().platform.fetch:e.fetchFunc,s=t.map(h=>n(h,e.requestInit,{isBinary:!0})),o=(e.onProgress==null?await Promise.all(s):await T2(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(o):await T2(o,e.onProgress,.5,1)}function qG(t,e){var n;const s=e.fetchFunc==null?M().platform.fetch:e.fetchFunc;let a=0,r;return(n=e.onProgress)===null||n===void 0||n.call(e,0),new ReadableStream({pull:async i=>{for(var o;a<t.length;){r||(r=(await s(t[a],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await r.read();if(l){a++,r=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,a/t.length);continue}i.enqueue(u);return}i.close()}})}async function XG(t,e="",n,s){return aR(i=>sR(i,{requestInit:s}))(t,e,n)}function aR(t){return async(e,n="",s)=>{const a=e.map(()=>!1),r={},i=s!=null?s.map(()=>!1):[],o=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(y=>{const g="quantization"in y?y.quantization.dtype:y.dtype,x=Ro[g]*L(y.shape),b=()=>{a[f]=!0,r[f]==null&&(r[f]=[]),r[f].push({manifestEntry:y,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((w,v)=>{w===y.name&&(b(),i[v]=!0)}):b(),o.push(y.name),m+=x})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=a.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});const c=await t(u),h={};let d=0;return l.forEach(p=>{const f=e[p].paths.length,m=new _a(c.slice(d,d+f));r[p].forEach(g=>{const x=m.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=ET(x,[g.manifestEntry]);for(const w in b)h[w]=b[w]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG="application/octet-stream",YG="application/json";class Mv{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(N(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=M().platform.fetch,N(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&N(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=_T(e,s);if(n.body.append("model.json",new Blob([JSON.stringify(a)],{type:YG}),"model.json"),e.weightData!=null){const i=_a.join(e.weightData);n.body.append("model.weights.bin",new Blob([i],{type:KG}),"model.weights.bin")}const r=await this.fetch(this.path,n);if(r.ok)return{modelArtifactsInfo:Ep(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=n.modelTopology,a=n.weightsManifest;if(s==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Yw(e,n=>this.loadWeights(n))}async loadStream(){const e=await this.loadModelJSON(),n=await this.getWeightUrls(e.weightsManifest),s=j0(e.weightsManifest),a=()=>qG(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:a})}async getWeightUrls(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,a]=QG(n),r=this.weightPathPrefix||s,i=[],o=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):i.push(r+u+a);return this.weightUrlConverter&&i.push(...await Promise.all(o)),i}async loadWeights(e){const n=await this.getWeightUrls(e),s=j0(e),a=await sR(n,this.loadOptions);return[s,a]}}Mv.URL_SCHEME_REGEX=/^https?:\/\//;function QG(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),a=n>e?t.substring(n):"";return[s+"/",a]}function J0(t){return t.match(Mv.URL_SCHEME_REGEX)!=null}const rR=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(s=>J0(s)):n=J0(t),n)return Bv(t,e)}return null};$t.registerSaveRouter(rR);$t.registerLoadRouter(rR);function Bv(t,e){return new Mv(t,e)}function ZG(t,e){return Bv(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $b{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class iR{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class JG{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function eH(t,e,n,s){const a=arguments;return new JG(oR(...a))}function oR(t,e,n,s){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new $b(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $b({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $b({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:s}))}function tH(t){return new iR(t)}function nH(t){return new iR(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lR=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:_a,browserFiles:jG,browserHTTPRequest:ZG,concatenateArrayBuffers:AT,copyModel:aM,decodeWeights:ET,decodeWeightsStream:DT,encodeWeights:H0,fromMemory:eH,fromMemorySync:oR,getLoadHandlers:GP,getModelArtifactsForJSON:Yw,getModelArtifactsForJSONSync:OT,getModelArtifactsInfoForJSON:Ep,getSaveHandlers:FT,getWeightSpecs:j0,http:Bv,isHTTPScheme:J0,listModels:nM,loadWeights:XG,moveModel:rM,registerLoadRouter:WP,registerSaveRouter:UP,removeModel:sM,weightsLoaderFactory:aR,withSaveHandler:tH,withSaveHandlerSync:nH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xi;function sH(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,a=!1,r=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&t instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)r=!0;else if(t.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&t instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(P0(Em,A.backendName)!=null){const f={pixels:t},m={numChannels:e};return A.runKernel(Em,f,m)}const[u,c]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h;if(i)h=t.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)h=t.data;else if(r||a||o){if(Xi==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Xi=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Xi=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Xi.canvas.width=u,Xi.canvas.height=c,Xi.drawImage(t,0,0,u,c),h=Xi.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*e);for(let m=0;m<f;m++)for(let y=0;y<e;++y)d[m*e+y]=h[m*4+y]}return FE(d,[c,u,e],"int32")}const aH=R({fromPixels_:sH});function jy(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(L(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const a=e.shape,r=a[a.length-1];let i=1;for(let h=0;h<a.length-1;++h)i*=a[h];const o=t.shape,l=a.slice();l.pop();let u=1;for(let h=r;h<n;++h)u*=o[h],l.push(o[h]);const c=[...xe(t.shape).map(h=>h/u),1].slice(0,r);return[l,i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e1=-2,rH=-1;function qy(t,e,n){const s=t.shape.length;N(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),N(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)N(e[a]+n[a]<=t.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${e[a]+n[a]}) would overflow input.shape[${a}] (${t.shape[a]})`)}function iH(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function Xy(t,e,n){const s=[];for(let a=0;a<t.length;a++)s[a]=Math.ceil((e[a]-t[a])/n[a]);return s}function uR(t,e,n,s){const a=[...t];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<n;r++)r===0?a[e]=1:(a.splice(e,0,1),a.pop());return a}function cR(t,e,n){return n<=t?n:n-(e-1)}function hR(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function oH(t,e,n,s,a,r,i,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const p=e[0],f=n+1;c=dR(i,p,f,s,t),h=pR(o,p,f,a,t),d=uR(r,p,f,t)}else for(let p=0;p<u;p++)c[p]=mR(i,s,r,t,p,l),h[p]=gR(o,a,r,t,p,l),d[p]=fR(r,p,l);return{begin:c,end:h,strides:d}}function dR(t,e,n,s,a){const r=[...a],i=hR(n,e);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=0;else{const l=cR(e,n,o);let u=s[l];t&1<<l&&(u=0),r[o]=u}return r}function pR(t,e,n,s,a){const r=[...a],i=hR(n,e);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=Number.MAX_SAFE_INTEGER;else{const l=cR(e,n,o);let u=s[l];t&1<<l&&(u=Number.MAX_SAFE_INTEGER),r[o]=u}for(let o=0;o<r.length;o++){const l=a[o];r[o]<0&&(r[o]+=l),r[o]=To(0,r[o],a[o])}return r}function fR(t,e,n){let s=t[e];return(n&1<<e||s==null)&&(s=1),s}function mR(t,e,n,s,a,r){let i=e[a];const o=n[a]||1;(t&1<<a||r&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=To(0,i,l-1),i}function gR(t,e,n,s,a,r){let i=e[a];const o=n[a]||1;(t&1<<a||r&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),o>0?i=To(0,i,l):i=To(-1,i,l-1),i}function Vv(t,e,n){let s=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){s=a;break}for(let a=s+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function Uv(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function zp(t,e,n){let s;const a=t.shape.length;typeof e=="number"?s=[e,...new Array(a-1).fill(0)]:e.length<a?s=e.concat(new Array(a-e.length).fill(0)):s=e.slice(),s.forEach(i=>{N(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return n==null?r=new Array(a).fill(-1):typeof n=="number"?r=[n,...new Array(a-1).fill(-1)]:n.length<a?r=n.concat(new Array(a-n.length).fill(-1)):r=n,r=r.map((i,o)=>i>=0?i:(N(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),t.shape[o]-s[o])),[s,r]}function Ky(t,e,n,s,a,r,i,o,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};lH(h,d);let p=!0,f=!0,m=!0;const y=[],g=[];for(let b=0;b<t.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<b),v=t[b];if(v===-1){y.push(w?1:-1);continue}const C=[d.beginMask&1<<b,d.endMask&1<<b],$=[d.strides[b]>0?0:-1,d.strides[b]>0?v:v-1];if(w&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[b]===1;const k=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(w){const B=d.begin[b]<0?v+d.begin[b]:d.begin[b];if(d.begin[b]=B,d.end[b]=d.begin[b]+1,B<0||B>=v)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=E2(d.begin[b],0,d.strides[b],v,C,$),d.end[b]=E2(d.end[b],1,d.strides[b],v,C,$);const O=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===v;p=p&&O,f=f&&(b===0&&d.strides[b]===1||O)}else p=p&&d.strides[b]===1&&k,f=f&&(b===0&&d.strides[b]===1||k);let T,E=!1;if(d.beginValid&&d.endValid?(T=d.end[b]-d.begin[b],E=!0):w?(T=1,E=!0):k&&v>=0&&(d.strides[b]<0?T=-v:T=v,E=!0),E){let O;T===0||T<0!=d.strides[b]<0?O=0:O=Math.trunc(T/d.strides[b])+(T%d.strides[b]!==0?1:0),y.push(O)}else y.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const w=d.finalShapeGatherIndices[b];w>=0?g.push(y[w]):w===e1&&g.push(1)}return{finalShapeSparse:g.filter((b,w)=>d.finalShapeGatherIndices[w]!==e1),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function lH(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const a=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<a;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(e1),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[s]),t.end!=null&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(rH),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}function E2(t,e,n,s,a,r){if(a[e])return n>0?r[e]:r[e+1&1];{const i=t<0?s+t:t;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const uH=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:qy,computeFlatOffset:Uv,computeOutShape:Xy,getNormalizedAxes:oH,isSliceContinous:Vv,maskToAxes:iH,parseSliceParams:zp,sliceInfo:Ky,startForAxis:mR,startIndicesWithElidedDims:dR,stopForAxis:gR,stopIndicesWithElidedDims:pR,stridesForAxis:fR,stridesWithElidedDims:uR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cH{static sgd(e){return new Pv(e)}static momentum(e,n,s=!1){return new tR(e,n,s)}static rmsprop(e,n=.9,s=0,a=null,r=!1){return new nR(e,n,s,a,r)}static adam(e=.001,n=.9,s=.999,a=null){return new JE(e,n,s,a)}static adadelta(e=.001,n=.95,s=null){return new QE(e,n,s)}static adamax(e=.002,n=.9,s=.999,a=null,r=0){return new eR(e,n,s,a,r)}static adagrad(e,n=.1){return new ZE(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yl=cH;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t();function yR(){return new Promise(t=>hH(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yy(t,e){const n=t[0].length;t.forEach((a,r)=>{N(a.length===n,()=>`Error in concat${n}D: rank of tensors[${r}] must be the same as the rank of the rest (${n})`)}),N(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=t[0];t.forEach((a,r)=>{for(let i=0;i<n;i++)N(i===e||a[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Qn(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var wa;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(wa||(wa={}));function xR(t,e,n){let s=new Array;if(n==null&&e==null)return s;if(e==null)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(n==null)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let a=1;a<n.length;++a){const r=n[a],i=s[s.length-n.length+a],o=s[i];if(r>=0)if(o>=0){if(o!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${a+t}] = ${r} but shape[${a+t}] = ${o}`)}else s[i]=r}return s}function bR(t){const e={FIRST_DIM_SIZE:wa.FIRST_DIM_SIZE,VALUE_ROWIDS:wa.VALUE_ROWIDS,ROW_LENGTHS:wa.ROW_LENGTHS,ROW_SPLITS:wa.ROW_SPLITS,ROW_LIMITS:wa.ROW_LIMITS,ROW_STARTS:wa.ROW_STARTS},n=[];for(const s of t)if(s in e)n.push(e[s]);else break;return n}function wR(t){return t.length===0?0:t[0]===wa.FIRST_DIM_SIZE?t.length-1:t.length}function vR(t,e){if(t==null||e==null)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(n,s-1);++a){const r=t[a],i=e[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${a-t.length}] = ${r} but ragged tensor input.flatValues.shape[${a-t.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wv=30;function Qy(t){return t<=Wv?t:z0(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(t,e,n){const s=n*(typeof t=="number"?t:t[0]),a=e*(typeof t=="number"?t:t[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(t,e,n,s=!0){let a=[];if(s)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const r=e.length;for(let i=0;i<r;++i)a=a.concat([t[i+1]/e[i],e[i]]);a=a.concat(t.slice(r+1))}return a}function al(t,e,n=!0){const s=[];if(n){s.push(e);for(let a=e+1;a<t;++a)a<=2*e?(s.push(a),s.push(a-(e+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<t;++i)i>=e*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function rl(t,e,n,s=!0){const a=[];s?a.push(t[0]/n):a.push(t[0]*n);for(let r=1;r<t.length;++r)r<=e.length?s?a.push(e[r-1]*t[r]):a.push(t[r]/e[r-1]):a.push(t[r]);return a}function Jy(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function ex(t,e,n){const s=t.slice(0,1);for(let a=0;a<n;++a)s.push(t[a+1]-e[a][0]-e[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lp=1.7580993408473768,Pp=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tx=.3275911,nx=.254829592,sx=-.284496736,ax=1.421413741,rx=-1.453152027,ix=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function SR(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function CR(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],s[Math.floor(a/4)]=t[a+1];return{real:n,imag:s}}function $R(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],s[Math.floor(a/4)]=t[a+1];return{real:n,imag:s}}function Gv(t,e){const n=t[e*2],s=t[e*2+1];return{real:n,imag:s}}function NR(t,e,n,s){t[s*2]=e,t[s*2+1]=n}function kR(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const r=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:n,imag:s}}function IR(t,e,n){const s=(n?2:-2)*Math.PI*(t/e),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nb="->",dH=/->/g,R2=",",D2="...";function ox(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(dH,"").length)/Nb.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Nb}").`);const[s,a]=t.split(Nb);N(s.indexOf(D2)===-1,()=>`The ellipsis notation ("${D2}") is not supported yet.`);const r=s.split(R2),i=r.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const p=a[d];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let d=0;d<s.length;++d){const p=s[d];o.indexOf(p)===-1&&p!==R2&&o.push(p)}const l=new Array(r.length);for(let d=0;d<i;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<r[d].length;++p)l[d].push(o.indexOf(r[d][p]))}const u=o.length,c=a.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function lx(t,e){let n=new Array(t);n.fill(-1);for(let a=0;a<e.length;++a)n[e[a]]=a;const s=[];for(let a=0;a<t;++a)n[a]===-1&&s.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:s}}function ux(t,e,n){const s=new Array(t);for(let a=0;a<n.length;++a){const r=n[a].shape;for(let i=0;i<e[a].length;++i)s[e[a][i]]===void 0?s[e[a][i]]=r[i]:N(s[e[a][i]]===r[i],()=>`Expected dimension ${s[e[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function cx(t,e){const n=t,s=[];let a=0;t.length===0&&n.push(-1),a=t.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<n.length;++i){const o=n[i],l=pH(e,o);for(const u of l)r.indexOf(u)===-1&&(s[i].push(u),r.push(u))}return{path:n,steps:s}}function hx(t){return t.every((e,n)=>e===n)}function pH(t,e){const n=[];for(let s=0;s<t.length;++s)(t[s].length===0||t[s].indexOf(e)!==-1||e===-1)&&n.push(s);return n}function dx(t,e,n=0){let s=[];if(typeof e=="number")N(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((i,o)=>(o===-1&&(i+=1),i),0);N(a<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const i=e.reduce((o,l)=>l>0?o+l:o);e[r]=t.shape[n]-i}N(t.shape[n]===e.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function ER(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function RR(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function AR(t,e){return`size ${t} must be non-negative, not ${e}`}function _R(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function OR(t,e){const n=L(t),s=L(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${t} outputShape= ${e}`}function FR(t,e){const n=L(t),s=L(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(){return"segment ids must be >= 0"}function zR(){return"segment ids are not increasing"}function LR(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function PR(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(t,e){let n=!1,s;for(t<=Wv?(s=t,n=!0):s=z0(t,Math.floor(Math.sqrt(t)));!n;)s>e||s===t?n=!0:s=z0(t,s+1);return s}function Hv(t,e,n){const s=[],a=t.length;for(let r=0;r<a;r++)r!==e?s.push(t[r]):s.push(n);return s}function px(t,e,n,s){const a=e.shape.length,r=t.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=t.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(t.shape[h]),l*=t.shape[h];for(let h=s;h<n;h++)o.push(t.shape[h]),u*=t.shape[h];for(let h=s;h<a;h++)o.push(e.shape[h]);for(let h=n+1;h<r;h++)o.push(t.shape[h]),c*=t.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}const fH=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:px,computeOutShape:Hv,segOpComputeOptimalWindowSize:MR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ia(t){try{return t.map(e=>$a(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function BR(t){return t.map(e=>kr(e))}const mH=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:nx,ERF_A2:sx,ERF_A3:ax,ERF_A4:rx,ERF_A5:ix,ERF_P:tx,PARALLELIZE_THRESHOLD:Wv,get RowPartitionType(){return wa},SELU_SCALE:Pp,SELU_SCALEALPHA:Lp,applyActivation:Uy,assertAndGetBroadcastShape:Se,assertAxesAreInnerMostDims:Ht,assertParamsConsistent:Yy,assignToTypedArray:NR,axesAreInnerMostDims:iv,calculateShapes:rr,checkEinsumDimSizes:ux,checkPadOnDimRoundingMode:Vn,combineLocations:mE,combineRaggedTensorToTensorShapes:xR,complexWithEvenIndex:CR,complexWithOddIndex:$R,computeConv2DInfo:ht,computeConv3DInfo:Oa,computeDefaultPad:Jw,computeDilation2DInfo:Pi,computeOptimalWindowSize:Qy,computeOutAndReduceShapes:Bt,computeOutShape:Qn,computePool2DInfo:Rn,computePool3DInfo:Os,convertConv2DDataFormat:bs,decodeEinsumEquation:ox,eitherStridesOrDilationsAreOne:sn,expandShapeToKeepDim:Ft,exponent:IR,exponents:kR,fromStringArrayToUint8:BR,fromUint8ToStringArray:Ia,getAxesPermutation:tt,getBroadcastDims:ki,getComplexWithIndex:Gv,getEinsumComputePath:cx,getEinsumPermutation:lx,getFusedBiasGradient:Vy,getFusedDyActivation:By,getImageCenter:Zy,getInnerMostAxes:dt,getPermuted:al,getRaggedRank:wR,getReductionAxes:nn,getReshaped:sl,getReshapedPermuted:rl,getRowPartitionTypesHelper:bR,getSliceBeginCoords:Jy,getSliceSize:ex,getSparseFillEmptyRowsIndicesDenseShapeMismatch:TR,getSparseFillEmptyRowsNegativeIndexErrorMessage:ER,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:RR,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:_R,getSparseReshapeInputOutputMismatchErrorMessage:FR,getSparseReshapeInputOutputMultipleErrorMessage:OR,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:DR,getSparseReshapeNegativeOutputDimErrorMessage:AR,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:PR,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:t1,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:zR,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:LR,getUndoAxesPermutation:sr,isIdentityPermutation:hx,log:sP,mergeRealAndImagArrays:ka,prepareAndValidate:jy,prepareSplitSize:dx,segment_util:fH,shouldFuse:Wy,slice_util:uH,splitRealAndImagArrays:SR,stridesOrDilationsArePositive:_o,tupleValuesAreOne:$i,upcastType:dn,validateDefaultValueShape:vR,validateInput:Rv,validateUpdateShape:zE,warn:Ns},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */MG();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VR={kernelName:Td,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,Dc(le(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH={kernelName:Ou,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=at(le(n,"float32")),a=Cn(he(we(1),s));return yt(ge(t,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH={kernelName:Fu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Cn(he(at(le(n,"float32")),1));return ge(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH={kernelName:Yo,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{let o=t;const l=nn(n.shape,a);return l.length>0&&(o=fe(o,l)),F(o,n.shape)},b:()=>{let o=t;const l=nn(s.shape,a);return l.length>0&&(o=fe(o,l)),F(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={kernelName:Ed,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((s,a)=>{n[a]=()=>t.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH={kernelName:Rd,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>We(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vH={kernelName:Dd,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>We(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH={kernelName:zu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,Cn(he(we(1),at(le(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH={kernelName:Lu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Cn(K(we(1),at(le(n,"float32"))));return ge(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:Bu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=K(at(n),at(s));let l=_(t,ge(s,o));const u=nn(n.shape,a);return u.length>0&&(l=fe(l,u)),F(l,n.shape)},b:()=>{const o=K(at(n),at(s));let l=yt(_(t,ge(n,o)));const u=nn(s.shape,a);return u.length>0&&(l=fe(l,u)),F(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH={kernelName:Pu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,K(at(le(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH={kernelName:Mu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,he(we(1),at(le(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(t,e,n,s,a,r){const i=I(t,"dy","avgPool3dGrad"),o=I(e,"input","avgPool3dGrad");let l=i,u=o,c=!1;o.rank===4&&(c=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Vn("avgPool3dGrad",a,r);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:a,dimRoundingMode:r},p=A.runKernel(kg,h,d);return c?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const TH=R({avgPool3dGrad_:IH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH={kernelName:_d,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:a,strides:r,pad:i,dimRoundingMode:o}=n;return{x:()=>TH(t,s,a,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(t,e,n,s,a){const r=I(t,"dy","avgPoolGrad"),i=I(e,"input","avgPoolGrad");N(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let o=i,l=r,u=!1;i.rank===3&&(u=!0,o=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=F(r,[1,r.shape[0],r.shape[1],r.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:n,strides:s,pad:a},d=A.runKernel(Ng,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const DH=R({avgPoolGrad_:RH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH={kernelName:Ad,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:a,strides:r,pad:i}=n;return{x:()=>DH(t,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H={kernelName:Od,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,a]=e,{transposeA:r,transposeB:i}=n;return!r&&!i?{a:()=>Pe(t,a,!1,!0),b:()=>Pe(s,t,!0,!1)}:!r&&i?{a:()=>Pe(t,a,!1,!1),b:()=>Pe(t,s,!0,!1)}:r&&!i?{a:()=>Pe(a,t,!1,!0),b:()=>Pe(s,t,!1,!1)}:{a:()=>Pe(a,t,!0,!0),b:()=>Pe(t,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH={kernelName:Fd,gradFunc:(t,e,n)=>{const{blockShape:s,crops:a}=n;return{x:()=>Ay(t,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH={kernelName:tP,gradFunc:(t,e,n)=>{const s=n,a=s.inputShape,r=s.shape,i=Array.from(r);for(let l=a.length-1;l>=0;l--)if(a[l]===r[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>fe(t,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH={kernelName:Vu,gradFunc:t=>({x:()=>t.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:Uu,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH={kernelName:Wu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:a,clipValueMax:r}=n;return{x:()=>En(Qa(Mi(s,a),Jo(s,r)),t,We(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH={kernelName:zd,inputsToSave:["x"],gradFunc:VR.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH={kernelName:Ld,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map(l=>l.shape),{axis:a}=n,r=Ie(a,e[0].shape)[0],i=s.map(l=>l[r]);return us(t,i,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:Pd,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,a]=e,{dilations:r,strides:i,pad:o,dataFormat:l}=n;return N($i(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>tv(s.shape,t,a,i,o,l),filter:()=>Fv(s,t,a.shape,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:Md,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,a]=e,{strides:r,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ni(t,a,r,i,o,1,l),filter:()=>Fv(t,s,a.shape,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(t,e,n,s,a){let r=t;t.rank===4&&(r=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;i.rank===4&&(i=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),N(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),N(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),N(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),N(r.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${n[3]}.`),N(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:r,dy:i},l={strides:s,pad:a,filterShape:n};return A.runKernel(Ag,o,l)}const GH=R({conv3DBackpropFilter_:WH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:Bd,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:a,pad:r}=n;N($i(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,o]=e;return{x:()=>uE(i.shape,t,o,a,r),filter:()=>GH(i,t,o.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:Gu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(yt(Nv(le(n,"float32"))),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:Hu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(kv(le(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH={kernelName:Vd,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:a,exclusive:r,reverse:i}=n;return{x:()=>{const o=tt([a],s.rank);let l=av(t,a,r,!i);return o!=null&&(l=Ue(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH={kernelName:Ud,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=n,o=s??[1,1];N($i(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),N(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),N(sn(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),Vn("depthwiseConv2d",r,i),{x:()=>HE(l.shape,t,u,a,r,o,i),filter:()=>GE(l,t,u.shape,a,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH={kernelName:Wd,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,a]=e,r={x:s,filter:a,dy:t},i={x:s,filter:a,dy:t};return{x:()=>A.runKernel(Im,r,n),filter:()=>A.runKernel(Tm,i,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:qu,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>A.runKernel(Ug,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:Xu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=_(ds(yt(at(n))),2/Math.sqrt(Math.PI));return{x:()=>_(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH={kernelName:Ku,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:Hd,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>F(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6={kernelName:Yu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,ds(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:Qu,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:Zu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=ge(t,le(s,"float32")),l=nn(n.shape,a);return l.length>0?F(fe(o,l),n.shape):o},b:()=>{let o=_(t,le(n,"float32"));const l=nn(s.shape,a);l.length>0&&(o=F(fe(o,l),s.shape));const u=at(s);return yt(ge(o,le(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6={kernelName:jd,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[a,r,i,o]=e,l=o??we(1),u=nn(r.shape,a.shape),c=[];if(r.rank===1){for(let w=0;w<a.shape.length-1;++w)c.push(a.shape[w]);c.push(1)}const h=he(a,r),d=_(t,l),p=Sv(K(i,we(s))),f=_(_(_(p,p),p),we(-.5));return{x:()=>r.rank===1?F(_(_(t,ta(F(p,[1,1,1,r.shape[0]]),c)),l),a.shape):F(_(_(t,p),l),a.shape),mean:()=>{let w=_(_(p,we(-1)),d);return r.rank===1&&(w=fe(w,u)),F(w,r.shape)},variance:()=>{let w=_(_(f,h),d);return r.rank===1&&(w=fe(w,u)),F(w,r.shape)},scale:()=>{const w=_(h,p);let v=_(t,w);return r.rank===1&&(v=fe(v,u)),F(v,r.shape)},offset:()=>{let w=t;return r.rank===1&&(w=fe(w,u)),F(w,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:qd,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,a]=e,{axis:r,batchDims:i}=n,o=Ie(r,s.shape)[0],l=(u,c,h)=>()=>{const d=u.shape,p=c.size,f=d.slice(0,o),m=f.length,y=d.slice(r,d.length).slice(1),g=y.length,x=A2(0,m),b=A2(m+1,m+1+g),w=_2([f,[p],y]),v=F(h,w),C=F(c,[p]),$=_2([[m],x,b]),k=Ue(v,$);let T=Av(k,C,u.shape[o]);const E=sr($);return T=Ue(T,E),T};if(i===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>ps(c.map((p,f)=>l(p,a.slice(f,1),t.slice(f,1))())).reshape(s.shape),indices:()=>a}}else return{x:l(s,a,t),indices:()=>a}}};function A2(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function _2(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:Ju,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>We(n),b:()=>We(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={kernelName:ec,gradFunc:t=>({x:()=>le(t,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:tc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:nc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:sc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6={kernelName:Kd,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:a}=n,r=ws(s,0);return{x:()=>En(r,t,_(t,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6={kernelName:rc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,K(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:ac,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,le(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6={kernelName:nP,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:a}=n;return{logits:()=>{const i=ds(s);return he(t,_(fe(t,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(t,e,n,s=5,a=1,r=1,i=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:a,alpha:r,beta:i};return A.runKernel(Yg,o,l)}const g6=R({localResponseNormalizationBackprop_:m6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:tp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,a]=e,{depthRadius:r,bias:i,alpha:o,beta:l}=n;return{x:()=>g6(s,a,t,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(t,e,n,s){return e.rank<n.rank&&(e=F(e,Ft(e.shape,s))),t.rank<n.rank&&(t=F(t,Ft(t.shape,s))),{x:()=>_(t,le(Na(n,e),t.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2={kernelName:np,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:a}=s,r=e[0],i=e[1],o=Ie(a,r.shape),l=UR(t,i,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:ic,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>_(t,le(Mi(n,s),"float32")),b:()=>_(t,le(nd(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(t,e,n,s,a,r,i){const o=I(t,"dy","maxPool3dGrad"),l=I(e,"input","maxPool3dGrad"),u=I(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=F(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),N(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),N(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),N(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Vn("maxPool3dGrad",r,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:a,pad:r,dimRoundingMode:i},y=A.runKernel(Zg,f,m);return p?F(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const w6=R({maxPool3dGrad_:b6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:ap,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,a]=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>w6(t,s,a,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(t,e,n,s,a,r,i){const o=I(t,"dy","maxPoolGrad"),l=I(e,"input","maxPoolGrad"),u=I(n,"output","maxPoolGrad");N(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),N(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Vn("maxPoolGrad",r,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return A.runKernel(Qg,c,h)}const C6=R({maxPoolGrad_:S6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:sp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,a]=e,{filterSize:r,strides:i,pad:o}=n;return{x:()=>C6(t,s,a,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:rp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:a}=n,r=Ie(a,s.shape),o=Bt(s.shape,r)[1],l=L(o);return{x:()=>{const c=s.shape.slice();r.forEach(p=>{c[p]=1});const h=F(t,c);return ge(_(h,Kn(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:ip,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:a}=s,[r,i]=e,o=Ie(a,r.shape),l=UR(t,i,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:oc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>_(t,le(Jo(n,s),"float32")),b:()=>_(t,le(ws(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6={kernelName:op,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:a}=n,r=a.map(i=>i[0]);return{x:()=>Ve(t,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6={kernelName:lc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=nn(n.shape,a);return o.length>0?F(fe(t,o),n.shape):t},b:()=>{const o=_(t,yt(Op(ge(n,s)))),l=nn(s.shape,a);return l.length>0?F(fe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:uc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=_(t,le(s,"float32")),l=nn(n.shape,a);return l.length>0?F(fe(o,l),n.shape):o},b:()=>{const o=_(t,le(n,"float32")),l=nn(s.shape,a);return l.length>0?F(fe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:lp,gradFunc:t=>({x:()=>yt(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:hp,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Gt(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:cp,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:dp,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return ha(t,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F2={kernelName:pp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:a}=n,r=a.map(i=>i[0]);return{x:()=>Ve(t,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:cc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,a]=e,r=n,i=s,o=Se(r.shape,i.shape);return{a:()=>{const c=le(i,"float32");let h=_(t,_(c,Fr(r,he(c,we(1)))));const d=nn(r.shape,o);return d.length>0&&(h=fe(h,d)),F(h,r.shape)},b:()=>{const c=ws(r,0),h=En(c,Ds(r),We(r));let d=_(t,_(a,h));const p=nn(i.shape,o);return p.length>0&&(d=fe(d,p)),F(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6={kernelName:fp,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,a=ws(n,0);return{x:()=>En(a,t,_(t,s)),alpha:()=>{let r=En(a,We(t),_(t,n));const i=nn(s.shape,t.shape);return i.length>0&&(r=fe(r,i)),F(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(t,e,n){const s=t.shape.slice();s[n]=1;const a=F(e,s),r=Fm(t,n,!0,!1),i=Fm(t,n,!0,!0),o=_(r,i);return _(a,o)}function P6(t,e,n){const s=t.shape.length,a=s-n.length,r=tt(n,s);let i=t;r!=null&&(i=Ue(t,r));const o=i.shape.slice(),u=o.splice(s-n.length,n.length).reduce((d,p)=>d*p,1);o.push(u);const c=i.reshape(o);let h=L6(c,e,a);if(h=h.reshape(i.shape),r!=null){const d=sr(r);h=Ue(h,d)}return h}const M6={kernelName:mp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:a}=n;let r=[];return a==null?r=s.shape.map((i,o)=>o):typeof a=="number"?r=[a]:r=a,{x:()=>P6(s,t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:ju,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=ge(t,le(s,"float32")),l=nn(n.shape,a);return l.length>0?F(fe(o,l),n.shape):o},b:()=>{let o=_(t,le(n,"float32"));const l=nn(s.shape,a);l.length>0&&(o=F(fe(o,l),s.shape));const u=at(s);return yt(ge(o,le(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6={kernelName:hc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,yt(at(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6={kernelName:pc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=_(Jo(n,6),Dc(n));return{x:()=>_(t,le(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6={kernelName:dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,le(Dc(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6={kernelName:gp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>F(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:xp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,a={dy:t,images:s};return{images:()=>A.runKernel(iy,a,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:yp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,a={dy:t,images:s};return{images:()=>A.runKernel(ry,a,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={kernelName:bp,gradFunc:(t,e,n)=>{const{dims:s}=n,a=Ie(s,t.shape);return{x:()=>ca(t,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6={kernelName:fc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yt(ge(t,_(Fr(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6={kernelName:wp,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>le(We(n),"float32"),t:()=>_(t,le(n,t.dtype)),e:()=>_(t,le(Ey(n),t.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=ws(n,we(0)),a=we(Lp),r=we(Pp),i=_(t,r),o=_(_(t,a),ds(le(n,"float32")));return En(s,i,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6={kernelName:wc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,_(n,he(we(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:bc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:yc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_($y(le(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:xc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(sv(le(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:vp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:a,size:r}=n,i=s.shape,[o,l]=zp(s,a,r),u=[];for(let c=0;c<t.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>Bi(t,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:Np,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:a}=n,r=!0,i=_(t,s);return{logits:()=>he(i,_(fe(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:vc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,qa(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z2={kernelName:Cp,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:a}=n;return{x:()=>Cy(t,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L2={kernelName:$p,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Mt(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:Sc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,_(Cn(le(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:py,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,_(le(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:Cc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=we(2);return{a:()=>_(t,_(a,he(n,s))),b:()=>_(t,_(a,he(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:Tc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:$c,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{let o=t;const l=nn(n.shape,a);return l.length>0&&(o=fe(o,l)),F(o,n.shape)},b:()=>{let o=t;const l=nn(s.shape,a);return l.length>0&&(o=fe(o,l)),F(yt(o),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:Sp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,a=s.shape.slice(),{axis:r}=n;Ie(r,s.shape).forEach(u=>{a[u]=1});const o=F(t,a),l=_(o,Kn(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:Nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,at($y(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:kc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(he(we(1),at(n)),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:Ic,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:a}=n;return{x:()=>{let i=We(s);if(s.rank===1)for(let o=0;o<a[0];++o)i=K(i,Ve(t,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)i=K(i,Ve(t,[o*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)for(let u=0;u<a[2];++u)i=K(i,Ve(t,[o*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)for(let u=0;u<a[2];++u)for(let c=0;c<a[3];++c)i=K(i,Ve(t,[o*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:bo,gradFunc:(t,e,n)=>{const s=n,{perm:a}=s,r=sr(a);return{x:()=>Ue(t,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:kp,gradFunc:(t,e,n)=>{const s=n,{axis:a}=s;return{value:()=>ps(t,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:Ip,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yj(t,n)}}};function yj(t,e){const n=Pr(e,We(e)),s=Fp(t,n);let a=Mi(e,we(0,"int32"));const r=s.rank-a.rank;for(let o=0;o<r;++o)a=Fn(a,o+1);a=Qa(a,Kn(s.shape,"bool"));const i=We(s);return En(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj={kernelName:Tp,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj=[VR,gH,yH,xH,bH,wH,vH,SH,CH,$H,NH,kH,EH,AH,_H,OH,FH,zH,LH,PH,MH,BH,UH,VH,HH,jH,qH,XH,KH,YH,B6,QH,ZH,JH,e6,t6,s6,n6,a6,r6,i6,o6,l6,u6,c6,h6,d6,p6,f6,y6,O2,O2,x6,v6,$6,N6,k6,I6,T6,E6,R6,D6,A6,_6,O6,F2,F2,F6,z6,M6,V6,U6,W6,G6,H6,j6,q6,X6,K6,Y6,Q6,Z6,J6,ej,tj,nj,sj,aj,z2,z2,L2,L2,rj,oj,ij,lj,uj,cj,hj,dj,pj,fj,mj,gj,xj];for(const t of bj)aP(t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.abs=function(){return this.throwIfDisposed(),Xt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acos=function(){return this.throwIfDisposed(),GT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acosh=function(){return this.throwIfDisposed(),HT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.add=function(t){return this.throwIfDisposed(),K(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.all=function(t,e){return this.throwIfDisposed(),Zw(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.any=function(t,e){return this.throwIfDisposed(),Om(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMax=function(t){return this.throwIfDisposed(),fu(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMin=function(t){return this.throwIfDisposed(),jT(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),F(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asType=function(t){return this.throwIfDisposed(),le(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as2D=function(t,e){return this.throwIfDisposed(),F(this,[t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),F(this,[t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),F(this,[t,e,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as5D=function(t,e,n,s,a){return this.throwIfDisposed(),F(this,[t,e,n,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asin=function(){return this.throwIfDisposed(),qT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asinh=function(){return this.throwIfDisposed(),XT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan=function(){return this.throwIfDisposed(),KT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan2=function(t){return this.throwIfDisposed(),YT(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atanh=function(){return this.throwIfDisposed(),QT(this)};q().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),Sy(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Cy(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchNorm=function(t,e,n,s,a){return this.throwIfDisposed(),Rp(this,t,e,n,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Jl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cast=function(t){return this.throwIfDisposed(),le(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ceil=function(){return this.throwIfDisposed(),sE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),hs(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Nt&&(t=[t]),Mt([this,...t],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv1d=function(t,e,n,s,a,r){return this.throwIfDisposed(),ev(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2dTranspose=function(t,e,n,s,a){return this.throwIfDisposed(),nv(this,t,e,n,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2d=function(t,e,n,s,a,r){return this.throwIfDisposed(),Ni(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cos=function(){return this.throwIfDisposed(),$y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cosh=function(){return this.throwIfDisposed(),sv(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Fm(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),av(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),hE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthwiseConv2d=function(t,e,n,s,a,r){return this.throwIfDisposed(),Dp(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dilation2d=function(t,e,n,s,a){return this.throwIfDisposed(),dE(this,t,e,n,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.divNoNan=function(t){return this.throwIfDisposed(),pE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.div=function(t){return this.throwIfDisposed(),ge(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dot=function(t){return this.throwIfDisposed(),fE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.elu=function(){return this.throwIfDisposed(),Ap(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.equal=function(t){return this.throwIfDisposed(),Na(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.erf=function(){return this.throwIfDisposed(),rv(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),yE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.exp=function(){return this.throwIfDisposed(),ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expandDims=function(t){return this.throwIfDisposed(),Fn(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expm1=function(){return this.throwIfDisposed(),xE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.fft=function(){return this.throwIfDisposed(),Py(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floor=function(){return this.throwIfDisposed(),Op(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floorDiv=function(t){return this.throwIfDisposed(),Qw(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.gather=function(t,e,n){return this.throwIfDisposed(),Fp(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Mi(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greater=function(t){return this.throwIfDisposed(),ws(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ifft=function(){return this.throwIfDisposed(),rd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.irfft=function(){return this.throwIfDisposed(),Tv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isFinite=function(){return this.throwIfDisposed(),bE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isInf=function(){return this.throwIfDisposed(),wE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isNaN=function(){return this.throwIfDisposed(),vE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.leakyRelu=function(t){return this.throwIfDisposed(),ky(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.lessEqual=function(t){return this.throwIfDisposed(),Jo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.less=function(t){return this.throwIfDisposed(),nd(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),SE(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSigmoid=function(){return this.throwIfDisposed(),CE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSoftmax=function(t){return this.throwIfDisposed(),lv(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Ty(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log=function(){return this.throwIfDisposed(),Ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log1p=function(){return this.throwIfDisposed(),Iy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Qa(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalNot=function(){return this.throwIfDisposed(),Ey(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalOr=function(t){return this.throwIfDisposed(),uv(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalXor=function(t){return this.throwIfDisposed(),$E(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Pe(this,t,e,n)};q().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Ry(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.max=function(t,e){return this.throwIfDisposed(),ia(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.maximum=function(t){return this.throwIfDisposed(),Pr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mean=function(t,e){return this.throwIfDisposed(),Rt(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.min=function(t,e){return this.throwIfDisposed(),td(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.minimum=function(t){return this.throwIfDisposed(),Fo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),kE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mod=function(t){return this.throwIfDisposed(),IE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mul=function(t){return this.throwIfDisposed(),_(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.neg=function(){return this.throwIfDisposed(),yt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.norm=function(t,e,n){return this.throwIfDisposed(),_p(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.notEqual=function(t){return this.throwIfDisposed(),mu(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),hv(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.onesLike=function(){return this.throwIfDisposed(),As(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pad=function(t,e){return this.throwIfDisposed(),Bi(this,t,e)};q().prototype.pool=function(t,e,n,s,a,r){return this.throwIfDisposed(),TE(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pow=function(t){return this.throwIfDisposed(),Fr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prelu=function(t){return this.throwIfDisposed(),_y(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prod=function(t,e){return this.throwIfDisposed(),EE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reciprocal=function(){return this.throwIfDisposed(),DE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu=function(){return this.throwIfDisposed(),ar(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu6=function(){return this.throwIfDisposed(),wv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshapeAs=function(t){return this.throwIfDisposed(),F(this,t.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshape=function(t){return this.throwIfDisposed(),F(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),XE(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),KE(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reverse=function(t){return this.throwIfDisposed(),ca(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rfft=function(){return this.throwIfDisposed(),My(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.round=function(){return this.throwIfDisposed(),vv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rsqrt=function(){return this.throwIfDisposed(),Sv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.selu=function(){return this.throwIfDisposed(),Cv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.separableConv2d=function(t,e,n,s,a,r){return this.throwIfDisposed(),$v(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sigmoid=function(){return this.throwIfDisposed(),qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sign=function(){return this.throwIfDisposed(),AE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sin=function(){return this.throwIfDisposed(),Nv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sinh=function(){return this.throwIfDisposed(),kv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.slice=function(t,e){return this.throwIfDisposed(),Ve(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softmax=function(t){return this.throwIfDisposed(),Ly(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softplus=function(){return this.throwIfDisposed(),Rc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Ay(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.split=function(t,e){return this.throwIfDisposed(),us(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sqrt=function(){return this.throwIfDisposed(),Cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.square=function(){return this.throwIfDisposed(),at(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Ev(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squeeze=function(t){return this.throwIfDisposed(),nl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Nt?[this,t]:[this,...t];return ps(n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.step=function(t){return this.throwIfDisposed(),Dc(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stridedSlice=function(t,e,n,s,a,r,i,o){return this.throwIfDisposed(),_E(this,t,e,n,s,a,r,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sub=function(t){return this.throwIfDisposed(),he(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sum=function(t,e){return this.throwIfDisposed(),fe(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tan=function(){return this.throwIfDisposed(),OE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tanh=function(){return this.throwIfDisposed(),Oo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tile=function(t){return this.throwIfDisposed(),ta(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toBool=function(){return this.throwIfDisposed(),le(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toFloat=function(){return this.throwIfDisposed(),le(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toInt=function(){return this.throwIfDisposed(),le(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.topk=function(t,e){return this.throwIfDisposed(),LE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.transpose=function(t){return this.throwIfDisposed(),Ue(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unique=function(t){return this.throwIfDisposed(),PE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Av(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unstack=function(t){return this.throwIfDisposed(),ha(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.where=function(t,e){return this.throwIfDisposed(),En(t,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.zerosLike=function(){return this.throwIfDisposed(),We(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class La extends Error{constructor(e){super(e),Object.setPrototypeOf(this,La.prototype)}}class sa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sa.prototype)}}class z extends Error{constructor(e){super(e),Object.setPrototypeOf(this,z.prototype)}}class Ae extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ae.prototype)}}class jv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jv.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class WR{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let n;return this.cache.has(e)&&(n=this.cache.get(e),this.cache.delete(e),this.cache.set(e,n)),n}put(e,n){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let n=0;n<this.maxEntries-e;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lo(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}else{const n=new Array(e);return n.fill(t),n}}function Pa(t,e){if(!t)throw new jv(e)}function P2(t,e){let n=0;for(const s of t)s===e&&n++;return n}function Hn(t){return t.length===1?t[0]:t}function Qe(t){return Array.isArray(t)?t:[t]}function pr(t){const n=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function so(t){return t.length<=1||t.indexOf("_")===-1?t:t.replace(/[_]+(\w|$)/g,(e,n)=>n.toUpperCase())}let Ms={};function qv(t){if(t==null)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function n1(t){if(!(t==null||typeof t!="object"))if(Array.isArray(t))t.forEach(e=>n1(e));else{const e=Object.keys(t);for(const n of e){const s=t[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?t[n]=s.value:n1(s))}}}function Mp(t,e={},n={},s="object",a=!1){if(typeof t=="string"){const r=t;let i;if(r in n)i=n[r];else if(r in Ms)i=Ms[r];else if(i=e[r],i==null)throw new z(`Unknown ${s}: ${t}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=t;if(r.className==null||r.config==null)throw new z(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let o,l;if(i in n?[o,l]=n[i]:i in Ms?[o,l]=Ms.className:i in e&&([o,l]=e[i]),o==null)throw new z(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(Ms))u[p]=Ms[p];for(const p of Object.keys(n))u[p]=n[p];const c=r.config;c.customObjects=u;const h=Object.assign({},Ms);for(const p of Object.keys(n))Ms[p]=n[p];n1(r.config);const d=l(o,r.config,n,a);return Ms=Object.assign({},h),d}else{const u=Object.assign({},Ms);for(const h of Object.keys(n))Ms[h]=n[h];const c=new o(r.config);return Ms=Object.assign({},u),c}}}function wj(t,e){return t<e?-1:t>e?1:0}function wf(t,e){return-1*wj(t,e)}function gi(t){if(t==null)return t;const e=[];for(const n of t)e.indexOf(n)===-1&&e.push(n);return e}function vj(t){if(t==null)throw new z(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function il(t,e,n){if(n!=null&&t.indexOf(n)<0)throw new z(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Xv(t,e,n=0,s=1/0){return Pa(n>=0),Pa(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every(a=>typeof a===e)}function cn(t,e){Array.isArray(t)?(N(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((n,s)=>cn(n,`element ${s+1} of ${e}`))):N(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${GR(t)}.`)}function GR(t){return t===null?"null":Array.isArray(t)?"["+t.map(e=>GR(e)).join(",")+"]":typeof t=="string"?`"${t}"`:`${t}`}function Sj(t,e,n){let s=n!=null?n():Gn(),a;return(...i)=>{const o=n!=null?n():Gn();return o-s<e||(s=o,a=t(...i)),a}}function HR(t){return t==="relu"?"relu":t==="linear"?"linear":t==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Cj=0;function jR(){return Cj++}const vf={};function fx(t=""){return t in vf||(vf[t]=0),vf[t]+=1,t+vf[t].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $j=["channelsFirst","channelsLast"],Nj=["nearest","bilinear"],kj=["valid","same","causal"],Ij=["max","avg"],Tj=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xl=new Map;function Vt(t){il($j,"DataFormat",t)}function Ej(t){il(Nj,"InterpolationFormat",t)}function Fs(t){il(kj,"PaddingMode",t)}function qR(t){il(Ij,"PoolMode",t)}const _h=[],M2="/";function wo(t,e){_h.push(t);try{const n=e();return _h.pop(),n}catch(n){throw _h.pop(),n}}function Rj(){return _h.length===0?"":_h.join(M2)+M2}function XR(t){if(!YR(t))throw new Error("Not a valid tensor name: '"+t+"'");return Rj()+t}function KR(t){if(!YR(t))throw new Error("Not a valid tensor name: '"+t+"'");xl.has(t)||xl.set(t,0);const e=xl.get(t);if(xl.set(t,xl.get(t)+1),e>0){const n=`${t}_${e}`;return xl.set(n,1),n}else return t}const Dj=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function YR(t){return!!t.match(Dj)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Aj(t){return t===parseInt(t.toString(),10)}function yi(t,e,n){e==null&&(e=0),n==null&&(n=t.length);let s=1;for(let a=e;a<n;++a)s*=t[a];return s}function yu(t){if(t.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function Ii(t){if(t.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function Ta(t,e){if(e<t)throw new z(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let kb;function Kt(){return kb==null&&(kb=TT().epsilon()),kb}function Ea(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xa(t,e){return le(t,e)}function Bp(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),F(t,n)}function _j(t,e){return U(()=>{if(t.shape.length!==2)throw new z(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=Bp(t,1);return s1(n,[1,e,1])})}function Oj(t){const e=[yi(t.shape)];return F(t,e)}function Fj(t){if(t.rank<=1)throw new z(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],yi(t.shape,1)];return F(t,e)}function vo(t,e,n){return U(()=>{switch(t.rank){case 1:return Fy(t,e,n);case 2:return Iv(t,[e,0],[n,t.shape[1]]);case 3:return zy(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return ad(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Ve(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Ve(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Ib(t,e,n){return U(()=>{switch(t.rank){case 1:return Fy(t,e,n);case 2:return Iv(t,[0,e],[t.shape[0],n]);case 3:return zy(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return ad(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Sf(t,e,n,s){return U(()=>{switch(t.rank){case 1:return Fy(t,e,n);case 2:switch(s){case 1:return vo(t,e,n);case 2:return Ib(t,e,n);default:throw new z(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return vo(t,e,n);case 2:return zy(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Ib(t,e,n);default:throw new z(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return vo(t,e,n);case 2:return ad(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return ad(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Ib(t,e,n);default:throw new z(`The axis is not within the rank of the tensor ${s}`)}default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Kv(t,e=-1){let n;return e<0&&(n=t[0].rank,n!==0?e=n:e=0),e===t[0].rank&&(e=-1),Mt(t,e)}function B2(t,e){switch(t.rank){case 1:return aE([t,e]);case 2:return rE([t,e],0);case 3:return iE([t,e],0);case 4:return oE([t,e],0);default:throw new z(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function s1(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new z(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return ta(t,e)}function mx(t,e=0,n=1,s,a){return bv(t,e,n,s,a)}function Ka(t,e,n,s){if(t.rank<2||e.rank<2)throw new Ae(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const a=t.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(a!==r)throw new Ae(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(t.rank===2&&e.rank===2)return Z0({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?a1(t.rank,s,Ea()):null,activation:n});{const a=t.shape.slice(),r=a.pop();t=F(t,[-1,r]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=F(Ue(e,c),[l,-1]);const h=[...a,...u];return F(Z0({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?a1(t.rank,s,Ea()):null,activation:n}),h)}}function QR(t,e,n){return U(()=>(Array.isArray(e)?e=Mn(e,"int32"):e=le(e,"int32"),Fp(t,e,n)))}function Vp(t){return _(t,t)}function a1(t,e,n){const s=e.shape;if(e.rank!==1&&e.rank!==t)throw new z(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(t===5){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1,1]):F(e,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,1,1,s[0]]):F(e,[1].concat(s))}else if(t===4){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1]):F(e,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,1,s[0]]):F(e,[1].concat(s))}else if(t===3){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1]):F(e,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,s[0]]):F(e,[1].concat(s))}else if(t<3)return e;throw new z(`Unsupported input rank by biasAdd: ${e.rank}`)}function Fa(t,e,n){return U(()=>(n==null&&(n=Ea()),Vt(n),K(t,a1(t.rank,e,n))))}function zj(t,e=1){if(e!==1)throw new Ae(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ap(t)}function Lj(t){return U(()=>ge(t,K(Xt(t),1)))}function ZR(t,e,n,s){return U(()=>VE(t,e,n,s))}function Pj(t){return U(()=>{const e=K(.5,_(.2,t));return hs(e,0,1)})}function Up(t,e,n=!1){return n?t():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Mj=["fanIn","fanOut","fanAvg"],Bj=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vj(t){il(Mj,"FanMode",t)}function Uj(t){il(Bj,"Distribution",t)}class da extends _c{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class JR extends da{apply(e,n){return Gt(e,n)}}JR.className="Zeros";Z(JR);class Yv extends da{apply(e,n){return Kn(e,n)}}Yv.className="Ones";Z(Yv);class eD extends da{constructor(e){if(super(),typeof e!="object")throw new z(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new z(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return U(()=>_(we(this.value),Kn(e,n)))}getConfig(){return{value:this.value}}}eD.className="Constant";Z(eD);class tD extends da{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return tl(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}tD.className="RandomUniform";Z(tD);class nD extends da{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`randomNormal does not support dType ${n}.`);return mx(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}nD.className="RandomNormal";Z(nD);class sD extends da{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`truncatedNormal does not support dType ${n}.`);return Dv(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sD.className="TruncatedNormal";Z(sD);class aD extends da{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return U(()=>{if(e.length!==2||e[0]!==e[1])throw new z("Identity matrix initializer can only be used for 2D square matrices.");return _(this.gain,ov(e[0]))})}getConfig(){return{gain:this.gain}}}aD.className="Identity";Z(aD);function Wj(t,e="channelsLast"){let n,s;if(Vt(e),t.length===2)n=t[0],s=t[1];else if([3,4,5].indexOf(t.length)!==-1){if(e==="channelsFirst"){const a=yi(t,2);n=t[1]*a,s=t[0]*a}else if(e==="channelsLast"){const a=yi(t,0,t.length-2);n=t[t.length-2]*a,s=t[t.length-1]*a}}else{const a=yi(t);n=Math.sqrt(a),s=Math.sqrt(a)}return[n,s]}class fs extends da{constructor(e){if(super(),e.scale<0)throw new z(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Vj(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Uj(this.distribution),this.seed=e.seed}apply(e,n){const s=Wj(e),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const o=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`${this.getClassName()} does not support dType ${n}.`);return Dv(e,0,o,n,this.seed)}else{const o=Math.sqrt(3*i);return tl(e,-o,o,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}fs.className="VarianceScaling";Z(fs);class Qv extends fs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return fs.className}}Qv.className="GlorotUniform";Z(Qv);class Zv extends fs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return fs.className}}Zv.className="GlorotNormal";Z(Zv);class Jv extends fs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return fs.className}}Jv.className="HeNormal";Z(Jv);class eS extends fs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return fs.className}}eS.className="HeUniform";Z(eS);class tS extends fs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return fs.className}}tS.className="LeCunNormal";Z(tS);class nS extends fs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return fs.className}}nS.className="LeCunUniform";Z(nS);class rD extends da{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,n){return U(()=>{if(e.length<2)throw new Ae("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;const s=L(e.slice(0,-1)),a=e[e.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],o=mx(i,0,1,n,this.seed),l=YE.qr(o,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return u=_(u,h.sign()),s<a&&(u=u.transpose()),_(we(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}rD.className="Orthogonal";Z(rD);const V2={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function U2(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"initializer")}function It(t){return qv(t)}function bt(t){if(typeof t=="string"){const e=t in V2?V2[t]:t;if(e==="GlorotNormal")return new Zv;if(e==="GlorotUniform")return new Qv;if(e==="HeNormal")return new Jv;if(e==="HeUniform")return new eS;if(e==="LeCunNormal")return new tS;if(e==="LeCunUniform")return new nS;{const n={};return n.className=e,n.config={},U2(n)}}else return t instanceof da?t:U2(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function r1(t){return Array.isArray(t)&&Array.isArray(t[0])}function zm(t){return t.length===0?[]:Array.isArray(t[0])?t:[t]}function Ne(t){let e;if(Array.isArray(t)){if(t.length!==1)throw new z(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Xe(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(t.length===1)return t=t,t[0];throw new z(`Expected exactly 1 Shape; got ${t.length}`)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lm(t){let e=0;for(const n of t)n.shape.length===0?e+=1:e+=n.shape.reduce((s,a)=>s*a);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const W2="Variable";class Gj{constructor(e,n="float32",s=W2,a=!0,r=null){this.dtype=n??"float32",this.shape=e.shape,this.id=jR(),s=s??W2,this.originalName=XR(s),this.name=KR(this.originalName),this.trainable_=a,this.constraint=r,this.val=ME(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),Hj(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Hj(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function i1(t){return t.map(e=>e.read())}function sS(t){t.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Za{constructor(e,n,s,a,r,i,o){this.dtype=e,this.shape=n,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=jR(),i!=null&&(this.originalName=XR(i),this.name=KR(this.originalName)),this.rank=n.length}}let jj=0;class gx{constructor(e,n){this.callArgs=n,this.id=jj++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const n of this.inboundLayers)n!=null?e.push(n.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let qj=0;class Le extends _c{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=qj++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){const s=this.getClassName();n=pr(s)+"_"+fx(s)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new sa(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new z(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Hn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Hn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new La(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new La(`Layer ${this.name} is not connected, no input to return.`);return Hn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new La(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new La(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const n=Qe(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Qe(this.inputSpec);if(n.length!==s.length)throw new z(`Layer ${this.name} expects ${s.length} inputs, but it received ${n.length} input tensors. Input received: ${e}`);for(let a=0;a<n.length;a++){const r=n[a],i=s[a];if(i==null)continue;const o=r.rank;if(i.ndim!=null&&o!==i.ndim)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${o}`);if(i.maxNDim!=null&&o>i.maxNDim)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${o}`);if(i.minNDim!=null&&o<i.minNDim)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${o}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new z(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const l=r.shape;for(const u in i.axes){const c=Number(u),h=i.axes[u],d=c>=0?l[c]:l[l.length+c];if(h!=null&&[h,null].indexOf(d)===-1)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const u=i.shape[l],c=r.shape[l];if(u!=null&&c!=null&&u!==c)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();const s=Qe(e),a=Yj(e),r=Qj(e);if(a===r)throw new z("Arguments to apply() must be all SymbolicTensors or all Tensors");return wo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const o of Qe(e))i.push(o.shape);this.build(Hn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let i=this.call(e,n);this.supportsMasking&&this.setMaskMetadata(e,i);const o=Qe(i),l=[];for(let u of o)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=Hn(l),this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=Xj(e),o=this.computeOutputShape(i);let l;const u=Kj(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((c,h)=>new Za(u,c,this,Qe(e),n,this.name,h)):l=new Za(u,o,this,Qe(e),n,this.name),this.addInboundNode(e,l,null,null,i,o,n),this._refCount++,this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&e[a]!=null&&e[a]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new La(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new La(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new sa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Lm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return i1(e?this.trainableWeights:this.weights)}setWeights(e){U(()=>{const n=this.weights;if(n.length!==e.length)throw new z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;const s=[],a=i1(n);for(let r=0;r<a.length;++r){const i=a[r],o=n[r],l=e[r];if(!Ee(i.shape,l.shape))throw new z(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}sS(s)})}addWeight(e,n,s,a,r,i,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new z(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=l!=null?l():bt("zeros"));const u=a.apply(n,s),c=new Gj(u,s,e,i,o);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Qe(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}setMaskMetadata(e,n,s){if(!this.supportsMasking)return;const a=this.computeMask(e,s),r=Qe(n),i=Qe(a);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let o=0;o<r.length;o++)r[o].kerasMask=i[o]}addInboundNode(e,n,s,a,r,i,o=null){const l=Qe(e);n=Qe(n),s=Qe(s),a=Qe(a),r=zm(r),i=zm(i);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new gx({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:n,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},o);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Xj(t){t=Qe(t);const e=[];for(const n of t)e.push(n.shape);return Hn(e)}function Kj(t){return"float32"}function iD(t,e,n){if((e==null||n!=null&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),e.inboundNodes.length===0)return[t];{const s=e.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],o=s.inboundLayers[r],l=s.nodeIndices[r],u=iD(i,o,l);for(const c of u)a.indexOf(c)===-1&&a.push(c)}return a}}}function Yj(t){let e=!0;for(const n of Qe(t))if(!(n instanceof Za)){e=!1;break}return e}function Qj(t){let e=!0;for(const n of Qe(t))if(n instanceof Za){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wp extends Le{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:fx("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const a=new Za(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new gx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Wp.className="InputLayer";Z(Wp);function Zj(t){if(t.batchShape==null&&t.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(t.batchShape!=null&&t.shape!=null)throw new z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;t.shape!=null&&e==null&&(e=[null].concat(t.shape));let n=t.dtype;return n==null&&(n="float32"),new Wp({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jj(t,e){if(t.dtype==null||t.dtype===e.dtype)return e;try{return le(e,t.dtype)}catch{throw new z(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class ri{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ri)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(e==null)return;for(const n of e)this.add(n.key,n.value)}}add(e,n,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Jj(e,n),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new z(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Za){if(this.id2Value[e.id]==null)throw new z(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const n=this.name2Id[e];if(n==null)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[n]}}getMask(e){if(e instanceof Za){if(this.id2Value[e.id]==null)throw new z(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const n=this.name2Id[e];if(n==null)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&_e(this.id2Mask)}}const Pm=new WR,Mm=new WR;function eq(t){Pm!=null&&Pm.setMaxEntries(t),Mm!=null&&Mm.setMaxEntries(t)}function hh(t,e,n,s){const a=n==null?!1:n.training,r=Array.isArray(t),i=r?t:[t],o=i.map(f=>f.name),l=[],u=e.names();for(const f of o)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const c=o.join(",")+"|"+e.names().sort().join(",");let h=Pm.get(c),d;if(h==null){const f=tq(i,e);h=f.sorted,d=f.recipientCounts,Pm.put(c,h),Mm.put(c,d)}d={},a||Object.assign(d,Mm.get(c));const p=new ri(e);for(let f=0;f<h.length;++f){const m=h[f],y=m.sourceLayer;if(y instanceof Wp)continue;const g=[],x=[],b=[];let w=!1;for(const T of m.inputs){const E=p.getValue(T),O=p.getMask(T);g.push(E),x.push(O),O!=null&&(w=!0),a||(d[T.name]--,d[T.name]===0&&!e.hasKey(T)&&o.indexOf(T.name)===-1&&!E.isDisposed&&T.sourceLayer.stateful!==!0&&b.push(E))}w&&(n=n||{},n.mask=x[0]);const v=Qe(y.apply(g,n));let C=null;y.supportsMasking&&(C=y.computeMask(g,x));const $=sq(m),k=Array.isArray($)?$:[$];for(let T=0;T<k.length;++T){p.hasKey(k[T])||p.add(k[T],v[T],Array.isArray(C)?C[0]:C);const E=o.indexOf(k[T].name);E!==-1&&(l[E]=v[T])}a||_e(b)}return p.disposeMasks(),r?l:l[0]}function tq(t,e){N(t!=null&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(t.length===1){const a=G2(t[0],e);n=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of t){const{sorted:i,recipientMap:o}=G2(r,e);for(const l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:nq(s)}}function nq(t){const e={};for(const n in t)e[n]=t[n].size;return e}function G2(t,e){const n=new Set,s=[],a={};for(const o of e.names())n.add(o);const r=[],i=[];for(r.push(t);r.length>0;){const o=r[r.length-1];if(n.has(o.name)){r.pop();continue}const l=i[i.length-1]===r.length-1;if(o.inputs.length===0||l)r.pop(),s.push(o),n.add(o.name),l&&i.pop();else{i.push(r.length-1);for(const u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!n.has(u.name)&&r.push(u)}}return{sorted:s,recipientMap:a}}function sq(t){let e;if(t.sourceLayer.inboundNodes.length===1)e=t.sourceLayer.output;else{let n=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const a of t.sourceLayer.inboundNodes[s].outputTensors)if(a.id===t.id){n=s;break}e=t.sourceLayer.getOutputAt(n)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq=M();aq.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,eq);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aS(t,e){return U(()=>Cn(fe(_(t,t),e,!0)))}class Gp extends _c{getConfig(){return{}}}class oD extends Gp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{const n=aS(e,this.axis),s=hs(n,0,this.maxValue);return _(e,ge(s,K(Kt(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}oD.className="MaxNorm";Z(oD);class lD extends Gp{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>ge(e,K(Kt(),aS(e,this.axis))))}getConfig(){return{axis:this.axis}}}lD.className="UnitNorm";Z(lD);class uD extends Gp{apply(e){return ar(e)}}uD.className="NonNeg";Z(uD);class cD extends Gp{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{const n=aS(e,this.axis),s=K(_(this.rate,hs(n,this.minValue,this.maxValue)),_(1-this.rate,n));return _(e,ge(s,K(Kt(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}cD.className="MinMaxNorm";Z(cD);const H2={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Jt(t){return qv(t)}function j2(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"constraint")}function en(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in H2?H2[t]:t,config:{}};return j2(n)}else return t instanceof Gp?t:j2(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ki(t){if(t==null)return;const e=[],n=[],s=[];for(const a in t){const r=t[a];if(typeof r!="number"){const i=r;e.push(i.data()),n.push(a),s.push(i)}}if(e.length>0){const a=await Promise.all(e);for(let r=0;r<a.length;++r)t[n[r]]=a[r][0];_e(s)}}function hD(t){if(t!=null)for(const e in t){const n=t[e];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var q2;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(q2||(q2={}));const rq=125;class id{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,n){}async onEpochEnd(e,n){}async onBatchBegin(e,n){}async onBatchEnd(e,n){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class iq{constructor(e,n=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=n}append(e){this.callbacks.push(e)}setParams(e){for(const n of this.callbacks)n.setParams(e)}setModel(e){for(const n of this.callbacks)n.setModel(e)}async onEpochBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(e,n)}async onEpochEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(e,n)}async onBatchBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(e,n)}async onBatchEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(e,n)}async onTrainBegin(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainEnd(e)}}class oq extends id{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const a in n){const r=n[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const o=U(()=>K(this.totals[a],_(r,s)));this.totals[a]=o,i!=null&&i.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:U(()=>{const a=_(ge(1,this.seen),this.totals[s]);n[s]=a,this.totals[s].dispose(),un(n[s])}))}}class lq extends id{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const e=[],n=[],s=[];for(const r in this.history){const i=this.history[r];for(let o=0;o<i.length;++o)if(typeof i[o]!="number"){const l=i[o];e.push(l.data()),n.push(r),s.push(o)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r)this.history[n[r]][s[r]].dispose(),this.history[n[r]][s[r]]=a[r][0]}}class uq extends id{constructor(e,n){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||yR,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=rq),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");O0(this.yieldEvery)&&(this.maybeWait=Sj(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,s){const a=[];this.yield!=null&&(await Ki(s),a.push(this.yield(e,n,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await Ki(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){const s=[];this.epochEnd!=null&&(await Ki(n),s.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,n){this.batchBegin!=null&&(await Ki(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){const s=[];this.batchEnd!=null&&(await Ki(n),s.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):O0(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Ki(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ki(e),await this.trainEnd(e))}}function dD(t,e){return t==null&&(t={}),t instanceof id?[t]:Array.isArray(t)&&t[0]instanceof id?t:Qe(t).map(s=>new uq(s,e))}class Vs{constructor(){}static registerCallbackConstructor(e,n){N(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Vs.checkForDuplicate(n),Vs.constructors[e]==null&&(Vs.constructors[e]=[]),Vs.constructors[e].push(n)}static checkForDuplicate(e){for(const n in Vs.constructors)Vs.constructors[+n].forEach(a=>{if(a===e)throw new z("Duplicate callback constructor.")})}static clear(){Vs.constructors={}}static createCallbacks(e){const n=[];for(const s in Vs.constructors){const a=+s;e>=a&&n.push(...Vs.constructors[a])}return n.map(s=>new s)}}Vs.constructors={};function pD(t,e,n,s,a,r,i,o,l){const u=new lq,c=[new oq,...Vs.createCallbacks(e)];t!=null&&c.push(...t),c.push(u);const h=new iq(c);return h.setParams({epochs:n,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tr(t,e={},n=!1){return Mp(t,Ks.getMap().classNameMap,e,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bm(t,e){return U(()=>{t.dtype!=="float32"&&(t=le(t,"float32"));const n=fe(Vp(t),e,!0),s=Ec(n.shape,Kt()),a=Cn(Pr(n,s));return ge(t,a)})}function yx(t,e){return U(()=>Rt(Vp(he(e,t)),-1))}function rS(t,e){return U(()=>Rt(Xt(he(e,t)),-1))}function iS(t,e){return U(()=>{const n=he(t,e),s=hs(Xt(t),Kt(),Number.MAX_VALUE),a=Xt(ge(n,s));return _(100,Rt(a,-1))})}function cq(t,e){return U(()=>{const n=hs(e,Kt(),Number.MAX_VALUE),s=Ds(K(1,n)),a=hs(t,Kt(),Number.MAX_VALUE),r=Ds(K(1,a));return Rt(Vp(he(s,r)),-1)})}function hq(t,e){return U(()=>{const n=Pr(0,he(1,_(t,e)));return Rt(Vp(n),-1)})}function dq(t,e){return U(()=>{const n=Pr(0,he(1,_(t,e)));return Rt(n,-1)})}function pq(t,e){return U(()=>{const n=fe(_(t,e),-1),s=ia(_(he(1,t),e),-1);return Pr(0,K(1,he(s,n)))})}function fq(t,e){return U(()=>{const n=Math.log(2),s=he(e,t),a=he(K(s,Rc(_(-2,s))),n);return Rt(a,-1)})}function od(t,e,n=!1){return U(()=>{if(n)e=Ly(e);else{const s=fe(e,e.shape.length-1,!0);e=ge(e,s)}return e=hs(e,Kt(),1-Kt()),yt(fe(_(le(t,"float32"),Ds(e)),e.shape.length-1))})}function Vm(t,e,n=!1){return U(()=>{const s=le(Op(Oj(t)),"int32");e=hs(e,Kt(),1-Kt());const a=e.shape,r=F(hv(s,a[a.length-1]),a);return od(r,e,n)})}function mq(t,e){if(!Ee(t.shape,e.shape))throw new z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return U(()=>{const n=ar(e),s=yt(Xt(e));return K(he(n,_(e,t)),Iy(ds(s)))})}function xx(t,e){return U(()=>{let n;return n=hs(e,Kt(),1-Kt()),n=Ds(ge(n,he(1,n))),Rt(mq(t,n),-1)})}function gq(t,e){return U(()=>{const n=hs(t,Kt(),1),s=hs(e,Kt(),1);return fe(_(t,Ds(ge(n,s))),-1)})}function yq(t,e){return U(()=>{const n=Ds(K(Kt(),e));return Rt(he(e,_(t,n)),-1)})}function fD(t,e){return U(()=>{const n=Bm(t,-1),s=Bm(e,-1),a=_(n,s);return yt(fe(a,-1))})}const Um={meanSquaredError:yx,meanAbsoluteError:rS,meanAbsolutePercentageError:iS,meanSquaredLogarithmicError:cq,squaredHinge:hq,hinge:dq,categoricalHinge:pq,logcosh:fq,categoricalCrossentropy:od,sparseCategoricalCrossentropy:Vm,binaryCrossentropy:xx,kullbackLeiblerDivergence:gq,poisson:yq,cosineProximity:fD};function Tb(t){if(typeof t=="string"){if(t in Um)return Um[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new z(e)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mD(t,e){return U(()=>{const n=_(.5,As(e)),s=Xa(ws(e,n),t.dtype);return Rt(Na(t,s),-1)})}function gD(t,e){return U(()=>Xa(Na(fu(t,-1),fu(e,-1)),"float32"))}function xq(t,e){return U(()=>le(fe(Qa(Na(t,1),Na(e,1))),"float32"))}function bq(t,e){return U(()=>le(fe(Qa(Na(t,0),Na(e,1))),"float32"))}function wq(t,e){return U(()=>{const n=xq(t,e),s=bq(t,e),a=K(n,s);return le(En(ws(a,0),ge(n,a),0),"float32")})}function vq(t,e){return xx(t,e)}function Sq(t,e){return t.rank===e.rank&&(t=nl(t,[t.rank-1])),e=fu(e,-1),e.dtype!==t.dtype&&(e=le(e,t.dtype)),le(Na(t,e),"float32")}const Cq=yx,$q=yx,Nq=rS,kq=rS,Iq=iS,Tq=iS,yD=od,Eq=fD,xD=Vm,Wm={binaryAccuracy:mD,categoricalAccuracy:gD,precision:wq,categoricalCrossentropy:yD,sparseCategoricalCrossentropy:xD,mse:Cq,MSE:$q,mae:Nq,MAE:kq,mape:Iq,MAPE:Tq,cosine:Eq};function Rq(t){if(typeof t=="string"&&t in Wm)return Wm[t];if(typeof t!="string"&&t!=null)return t;throw new z(`Unknown metric ${t}`)}function Cf(t){if(Pa(t!==null,`Unknown LossOrMetricFn ${t}`),typeof t=="string")return t;{let e;for(const n of Object.keys(Um))if(Um[n]===t){e=n;break}if(e!==void 0)return e;for(const n of Object.keys(Wm))if(Wm[n]===t){e=n;break}return e!==void 0?e:t.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dq(t){const e={Adagrad:()=>yl.adagrad(.01),Adadelta:()=>yl.adadelta(1,.95,Kt()),Adam:()=>yl.adam(.001,.9,.999,Kt()),Adamax:()=>yl.adamax(.002,.9,.999,Kt(),0),RMSProp:()=>yl.rmsprop(.001,.9,0,Kt()),SGD:()=>yl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new z(`Unknown Optimizer ${t}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const X2=1*1024*1024;function K2(t,e,n=!1){if(t==null||typeof t!="object"||Object.getPrototypeOf(t)!==Object.prototype||!o1(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(t);s.length>X2&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${X2}.`)}}function o1(t){if(t===null)return!0;if(typeof t=="object")if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if(typeof n!="string"||!o1(t[n]))return!1;return!0}else if(Array.isArray(t)){for(const e of t)if(!o1(e))return!1;return!0}else return!1;else{const e=typeof t;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Aq(t,e,n,s=console.log){const a=Oq(t),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(e*c)));let i;if(!a){r.push("Receives inputs"),i=[];for(const c in t.nodesByDepth)i.push(...t.nodesByDepth[c])}s("_".repeat(e)),Gm(r,n,s),s("=".repeat(e));const o=t.layers;for(let c=0;c<o.length;++c)a?Fq(o[c],n,s):zq(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=_q(t),u=Lm(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function _q(t){let e;return t.collectedTrainableWeights!=null?e=Lm(t.collectedTrainableWeights):e=Lm(t.trainableWeights),e}function Oq(t){let e=!0;const n=[],s=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){e=!1;break}s.push(...a)}if(e)for(const a of t.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function Gm(t,e,n=console.log){let s="";for(let a=0;a<t.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=t[a],s=s.slice(0,e[a]),s+=" ".repeat(e[a]-s.length);n(s)}function Fq(t,e,n){let s,a;try{a=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(t.outputShape)}catch{s="multiple"}const r=t.name,i=t.getClassName(),o=[`${r} (${i})`,a,s,t.countParams().toString()];Gm(o,e,n)}function zq(t,e,n,s){let a,r;try{r=t.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(t.outputShape)}catch{a="multiple"}const i=[];for(const h of t.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const o=t.name,l=t.getClassName(),u=i.length===0?"":i[0],c=[`${o} (${l})`,r,a,t.countParams().toString(),u];Gm(c,e,s);for(let h=1;h<i.length;++h)Gm(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bD(t,e,n){return(t==="inboundNodes"||t==="outputLayers"||t==="inputLayers")&&e===0&&typeof n=="string"}function l1(t,e){if(t===null)return null;if(typeof t=="string")return so(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let a=0;a<s;++a){const r=t[a];bD(e,a,r)?n.push(r):n.push(l1(r,e))}return n}else{const n={};for(const s of Object.keys(t)){const a=t[s];if(s==="name"&&typeof a=="string")n[s]=a;else{const r=so(s);n[r]=l1(a,r)}}return n}}function u1(t,e){if(t==null)return null;if(typeof t=="string")return pr(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let a=0;a<s;++a){const r=t[a];bD(e,a,r)?n.push(r):n.push(u1(r,e))}return n}else{const n={};for(const s of Object.keys(t)){const a=t[s],r=pr(s);(s==="name"||s==="className")&&typeof a=="string"?n[r]=a:n[r]=u1(a,s)}return n}}/** @license See the LICENSE file. */const wD="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Lq=t=>{const e=Object.keys(t);if(e.length===0)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))};class ga extends Le{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=fx(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],gi(this.inputs).length!==this.inputs.length)throw new z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);gi(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const b=x.sourceLayer,w=x.nodeIndex,v=x.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(const x of this.inputs){const b=x.sourceLayer,w=x.nodeIndex,v=x.tensorIndex;Pa(w===0,"input layer has >1 nodes"),Pa(v===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const b=this.inputLayers[x];if(!(b instanceof Wp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const n={},s={},a={},r={},i={},o=[],l=(x,b,w,v,C,$)=>{(v==null||C==null||$==null)&&(v=x.sourceLayer,C=x.nodeIndex,$=x.tensorIndex);const k=v.inboundNodes[C];if(w.indexOf(k)!==-1)throw new sa(`The tensor ${x.name} at layer "${v.name}" is part of a cycle.`);if(b.indexOf(k)!==-1)return;this.containerNodes.add(ga.nodeKey(v,C)),v.id in i||(i[v.id]=Object.keys(i).length),w.indexOf(k)===-1&&w.push(k);const T=k.inboundLayers.length;for(let E=0;E<T;E++){const O=k.inputTensors[E],B=k.inboundLayers[E],W=k.nodeIndices[E],V=k.tensorIndices[E];l(O,b,w,B,W,V)}for(b.push(k);w.indexOf(k)>=0;)w.splice(w.indexOf(k),1);o.push(k)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=o.slice().reverse();for(const x of h){s[x.id]=x,x.id in n||(n[x.id]=0);let b=n[x.id];const w=a[x.outboundLayer.id]==null?0:a[x.outboundLayer.id];b=Math.max(b,w),a[x.outboundLayer.id]=b,r[x.outboundLayer.id]=x.outboundLayer,n[x.id]=b;for(let v=0;v<x.inboundLayers.length;v++){const C=x.inboundLayers[v],$=x.nodeIndices[v],k=C.inboundNodes[$],T=n[k.id]==null?0:n[k.id];n[k.id]=Math.max(b+1,T),s[k.id]=k}}const d={};for(const x in n){const b=n[x];b in d||(d[b]=[]),d[b].push(s[x])}const p={};for(const x in a){const b=a[x];b in p||(p[b]=[]),p[b].push(r[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(wf);this.layers=[];for(const x of f){const b=p[x];b.sort((w,v)=>{const C=i[w.id],$=i[v.id];return C<$?-1:C>$?1:0});for(const w of b)w instanceof ga&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(wf);const m=this.inputs.slice(),y=[];for(const x of f)for(const b of d[x]){const w=b.outboundLayer;if(w!=null){for(const v of b.inputTensors)if(m.indexOf(v)===-1)throw new sa(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${y}`);for(const v of b.outputTensors)m.push(v);y.push(w.name)}}this.nodesByDepth=d;const g=this.layers.map(x=>x.name);for(const x of g){const b=g.filter(w=>w===x).length;if(b!==1)throw new sa(`The name "${x}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new gx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){const s={};let a=0;const r=Lq(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[l,u]of o.weights.entries()){const c=r?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new z(`Duplicate weight name: ${c}`);s[c]=u,a++}const i=[];for(const o in e){let l=o;if(s[o]==null){const u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[o]]);else if(n)throw new z(`Provided weight data has no target variable: ${o}`);delete s[l]}if(n){const o=[];for(const l in s)o.push(l);if(o.length>0)throw new z(`${o.length} of ${a} weights are not set: ${o}`)}sS(i)}parseWeights(e){for(const n in Object.keys(e)){const s=n.split("/"),a=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");r!==n&&(e[r]=e[n],delete e[n])}}updatedConfig(){const e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${wD}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){const s=u1(this.updatedConfig());return n?JSON.stringify(s):s}call(e,n){return U(()=>{e=Qe(e);const s=new ri;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],e[a]);return hh(this.outputs,s,n)})}computeMask(e,n){return U(()=>{e=Qe(e);let s;return n==null?s=Lo(null,e.length):s=Qe(n),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const n=zm(e);if(n.length!==this.inputLayers.length)throw new z(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<n.length;o++){const l=this.inputLayers[o],u=n[o],c=l.name+"_0_0";s[c]=u}const a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(wf);if(a.length>1)for(const o of a){const l=this.nodesByDepth[o];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const y=u.inboundLayers[m],g=u.nodeIndices[m],x=u.tensorIndices[m],b=`${y.name}_${g}_${x}`,w=s[b];h.push(w)}const d=c.computeOutputShape(Hn(h)),p=zm(d),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const y=`${c.name}_${f}_${m}`;s[y]=p[m]}}}const r=[],i=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${c}`;i.push(h)}for(let o=0;o<i.length;o++){const l=i[o];Pa(l in s),r.push(s[l])}return Hn(r)}runInternalGraph(e,n){n==null&&(n=Lo(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=n[l];s[u.id]=[c,h]}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(wf);for(const l of a){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},y,g,x,b;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[w,v]=f[0];m.mask==null&&(m.mask=v),x=Qe(h.call(w,m)),b=Qe(h.computeMask(w,v)),y=[w],g=[v]}else y=f.map(w=>w[0]),g=f.map(w=>w[1]),m.mask==null&&(m.mask=g),x=Qe(h.call(y,m)),b=Qe(h.computeMask(y,g));if(h.activityRegularizer)throw new Ae("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const v=p[w],C=x[w],$=b[w];s[v.id]=[C,$]}}}}const r=[],i=[],o=[];for(const l of this.outputs){Pa(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];o.push(u.shape),r.push(u),i.push(c)}return[r,i,o]}buildNodeConversionMap(e){const n={};let s;for(const a of this.layers){s=a instanceof ga?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=ga.nodeKey(a,r);this.containerNodes.has(i)&&(n[i]=s,s+=1)}}return n}getLayer(e,n){if(n!=null)return this.findLayer(n);if(e==null)throw new z("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new z(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new z(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return U(()=>{const e=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const a=ga.nodeKey(n,s);this.containerNodes.has(a)&&e.push(...n.calculateLosses())}return e})}getConfig(){const e={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const o=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=ga.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let y=0;y<d.inboundLayers.length;y++){const g=d.inboundLayers[y],x=d.nodeIndices[y],b=d.tensorIndices[y],w=ga.nodeKey(g,x);let v=n[w];v==null&&(v=0),m.push([g.name,v,b,f])}u.push(m)}}}const c={};c.name=i.name,c.className=o,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=ga.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[i];a.push([o.name,c,h])}e.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=ga.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[i];r.push([o.name,c,h])}return e.outputLayers=r,e}static fromConfig(e,n,s={},a=!1){const r={},i={};function o(y,g){y.name in i?i[y.name].push(g):i[y.name]=[g]}function l(y,g){const x=[];let b;for(const w of g){const v=w[0],C=w[1],$=w[2];if(b=w[3]==null?{}:w[3],!(v in r)){o(y,g);return}const k=r[v];if(k.inboundNodes.length<=C){o(y,g);return}const T=k.inboundNodes[C];x.push(T.outputTensors[$])}x.length>0&&y.apply(Hn(x),b)}function u(y){const g=y.name,x=Tr(y,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(a),r[g]=x,y.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new z(`Corrupted configuration, expected array for nodeData: ${w}`);o(x,w)})}const c=n.name,h=n.layers;for(const y of h)u(y);for(;!vj(i);)for(const y of h){const g=r[y.name];if(g.name in i){const x=i[g.name];delete i[g.name];for(const b of x)l(g,b)}}const d=[],p=[],f=n.inputLayers;for(const y of f){const g=y[0],x=y[1],b=y[2];Pa(g in r);const v=r[g].inboundNodes[x].outputTensors;d.push(v[b])}const m=n.outputLayers;for(const y of m){const g=y[0],x=y[1],b=y[2];Pa(g in r);const v=r[g].inboundNodes[x].outputTensors;p.push(v[b])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){U(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pq(t,e,n){const s=e.length;if(t==null||Array.isArray(t)&&t.length===0)return e.map(a=>null);if(s===1)return Array.isArray(t)&&t.length===1?t:typeof t=="object"&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}else if(typeof t=="object"&&Object.keys(t).length>0&&typeof t[Object.keys(t)[0]]=="object"){const a=[];return e.forEach(r=>{r in t?a.push(t[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function vD(t,e){return Pq(t,e,"classWeight")}async function SD(t,e,n,s){if(n!=null){const a=U(()=>{if(t.shape.length===1)return Ir(t);if(t.shape.length===2){if(t.shape[1]>1)return fu(t,1);if(t.shape[1]===1)return F(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());_e(a);const i=[];return r.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Mn(i,"float32")}else return null}function Mq(t,e){return _(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Bq=32;function CD(t,e){let n,s;const a=e;n=a.xs,s=a.ys,N(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=Y2("input",t.inputNames,n),i=Y2("output",t.outputNames,s),o=r[0].shape[0];N(r.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),N(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<r.length;l++)N(r[l].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${r[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let l=0;l<i.length;l++)N(i[l].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:r,ys:i}}function Y2(t,e,n){if(n instanceof Nt)return[n];if(Array.isArray(n))return N(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const s=[];for(const a of e){if(n[a]==null)throw new z(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);s.push(n[a])}return s}}function Vq(t){if(t.length===3)throw new Ae("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function Uq(t,e,n){const s=n.batchesPerEpoch!=null;if(N(t.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),N(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),N(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),N(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),N(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=n.validationData!=null;let r,i;if(a)if(Q2(n.validationData))N(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const y=Vq(n.validationData);r=y.xs,i=y.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;a?u=l.slice().concat(l.map(y=>"val_"+y)):u=l.slice();const c=dD(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=pD(c,h,n.epochs,null,null,Wq(e,n),null,a,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const y={};await d.onEpochBegin(f);let g=0,x=0;for(s||(m=await e.iterator());!s||g<n.batchesPerEpoch;){const b=await m.next();if(s&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${g} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(b.value!=null){const{xs:w,ys:v}=CD(t,b.value),C={};C.batch=x,C.size=w[0].shape[0],await d.onBatchBegin(x,C);const $=[];if(n.classWeight!=null){const E=vD(n.classWeight,t.outputNames);for(let O=0;O<E.length;++O)$.push(await SD(v[O],null,E[O]))}const k=w.concat(v).concat($),T=o(k);_e(k);for(let E=0;E<l.length;++E){const O=l[E],B=T[E];C[O]=B,un(B)}await d.onBatchEnd(x,C),hD(C),x++,g++}if(s?g>=n.batchesPerEpoch:b.done){if(a){let w;Q2(n.validationData)?w=Qe(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=Qe(t.evaluate(r,i,{batchSize:n.validationBatchSize==null?Bq:n.validationBatchSize,verbose:0}));for(let v=0;v<t.metricsNames.length;++v)y[`val_${t.metricsNames[v]}`]=w[v]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,y),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Wq(t,e){let n=null;return e.batchesPerEpoch!=null?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function Q2(t){return typeof t.iterator=="function"}function Gq(t){return typeof t.next=="function"}async function Hq(t,e,n){n=n||{};const s=n.batches!=null,a=t.testFunction;let r=[];if(n.verbose>0)throw new Ae("Verbose mode is not implemented yet.");N(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i=Gq(e)?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const u=await i.next();if(r=U(()=>{if(u.value){const{xs:c,ys:h}=CD(t,u.value),d=c.concat(h),p=U(()=>a(d));if(_e(d),l===0)for(let m=0;m<p.length;++m)r.push(we(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const y=p[m],g=r[m];r[m]=U(()=>K(r[m],_(f,y))),l>0&&_e(g)}_e(p),o+=f,++l}return r}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<r.length;++u){const c=r[u];r[u]=ge(r[u],o),_e(c)}return Hn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Eb(t){N(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function th(t,e,n){return t==null?[null]:Array.isArray(t)?t.map(s=>vo(s,e,n-e)):vo(t,e,n-e)}function c1(t,e){return U(()=>t==null?null:Array.isArray(t)?t.map(n=>c1(n,e)):QR(t,e.dtype==="int32"?e:le(e,"int32")))}function Rb(t,e){const n=[];let s=0,a=null;for(;s<t;)a=s+e,a>=t&&(a=t),n.push([s,a]),s=a;return n}function $D(t){const e=[];t instanceof Nt&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(s.rank===1)e.push(Bp(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ma(t,e){if(t==null)return;const n=[];if(e instanceof Nt)n.push(e.id);else if(Array.isArray(e))e.forEach(a=>n.push(a.id));else if(e!=null)for(const a in e){const r=e[a];n.push(r.id)}const s=[];if(t instanceof Nt)n.indexOf(t.id)===-1&&s.push(t);else if(Array.isArray(t))t.forEach(a=>{n.indexOf(a.id)===-1&&s.push(a)});else if(t!=null)for(const a in t){const r=t[a];n.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jq(t){return t instanceof Nt}function h1(t){return Array.isArray(t)}function Z2(t){return!jq(t)&&!h1(t)}function J2(t,e,n,s=!0,a=""){if(e==null||e.length===0){if(t!=null){let i=!1;if(h1(t)&&t.length>0)i=!0;else if(Z2(t)){for(const o in t)if(t.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new z(`Error when checking model ${a} expected no data, but got ${t}`)}return[]}if(t==null)return e.map(i=>null);let r;if(Z2(t)){t=t,r=[];for(const i of e){if(t[i]==null)throw new z(`No data provided for "${i}". Need data for each key in: ${e}`);r.push(t[i])}}else if(h1(t)){if(t=t,t.length!==e.length)throw new z(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);r=t}else{if(t=t,e.length>1)throw new z(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);r=[t]}if(r=$D(r),n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const o=r[i];if(o.shape.length!==n[i].length)throw new z(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=n[i][l];if(c!=null&&c>=0&&u!==c)throw new z(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return r}function qq(t,e,n){const s=gi(t.map(r=>r.shape[0]));s.sort();const a=gi(e.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(a.length>1)throw new z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!Ee(s,a))throw new z(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function Xq(t,e,n){const s=[yx,xx,od];for(let a=0;a<t.length;++a){const r=t[a],i=e[a],o=n[a];if(i!=null){if(i===od&&r.shape[r.shape.length-1]===1)throw new z(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=r.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new z(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function e$(t,e,n,s=!0,a=""){let r;if(Array.isArray(t)){if(t.length!==e.length)throw new z(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);r=t}else{if(e.length>1)throw new z(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);r=[t]}if(n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const o=r[i];if(o.shape.length!==n[i].length)throw new z(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=n[i][l];if(c!=null&&c!==u)throw new z(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function Kq(t,e){if(t==null||Array.isArray(t)&&t.length===0)return e.map(s=>[]);let n;if(typeof t=="string"||typeof t=="function")n=[t];else if(Array.isArray(t)||typeof t=="object")n=t;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);if(Array.isArray(n))return e.map(s=>n);{const s=[];for(const a of e){let r=n.hasOwnProperty(a)?n[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const Yq="layers-model";class eu extends ga{constructor(e){super(e),this.isTraining=!1}summary(e,n,s=console.log){if(!this.built)throw new z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Aq(this,e,n,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=Dq(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vi))throw new z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new z(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(Tb(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(o=>Tb(o))}else{const i=Tb(e.loss);this.outputs.forEach(o=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const o=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wo("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const o=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([o,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=Kq(e.metrics,this.outputNames),r=(i,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[i]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,i])};wo("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const o=a[i];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const y=this.internalOutputShapes[i];y[y.length-1]===1||this.lossFunctions[i]===xx?["accuracy","acc"].indexOf(f)!==-1?d=mD:["crossentropy","ce"].indexOf(f)!==-1&&(d=vq):this.lossFunctions[i]===Vm?["accuracy","acc"].indexOf(f)!==-1?d=Sq:["crossentropy","ce"].indexOf(f)!==-1&&(d=xD):["accuracy","acc"].indexOf(f)!==-1?d=gD:["crossentropy","ce"].indexOf(f)!==-1&&(d=yD);let g;["accuracy","acc"].indexOf(f)!==-1?g="acc":["crossentropy","ce"].indexOf(f)!==-1&&(g="ce"),p=d,h=c+g}else p=Rq(f),h=c+Cf(f);let m;wo(h,()=>{m=p}),r(i,h,m)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,s={}){const a=s.batchSize==null?32:s.batchSize;Eb(a);const i=this.standardizeUserDataXY(e,n,!0,a);try{const o=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,o,a,s.verbose,s.steps);return Hn(u)}finally{ma(i[0],e),ma(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),Hq(this,e,n)}checkNumSamples(e,n,s,a="steps"){let r;if(s!=null){if(r=null,n!=null)throw new z(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new z(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new z("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),a=s?n:[n],r=this.retrieveSymbolicTensors(a),i=new ri;if(e instanceof Nt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new z(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new z(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const o=hh(r,i);return s?o:o[0]}retrieveSymbolicTensors(e){const n=Lo(null,e.length);let s=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(o=>o.name);for(let o=0;o<e.length;++o){const l=i.indexOf(e[o]);if(l!==-1&&(n[o]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw n.forEach((r,i)=>{r==null&&a.push(e[i])}),new z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return n}predictLoop(e,n=32,s=!1){return U(()=>{const a=this.checkNumSamples(e);if(s)throw new Ae("Verbose predictLoop() is not implemented yet.");const r=Rb(a,n),i=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)U(()=>{const u=r[o][0],c=r[o][1],h=th(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new ri(d);return hh(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return Hn(i.map(o=>Mt(o,0)))})}predict(e,n={}){const s=$D(e);e$(s,this.inputNames,this.feedInputShapes,!1);try{const a=n.batchSize==null?32:n.batchSize;return Eb(a),this.predictLoop(s,a)}finally{ma(s,e)}}predictOnBatch(e){e$(e,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,s=!0,a){if(this.optimizer_==null)throw new sa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const o=this.feedOutputShapes[i];this.feedLossFns[i]===Vm?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=J2(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=J2(n,this.feedOutputNames,r,!1,"target"),qq(e,n),Xq(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!==0)throw new z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,s,a,r=!0,i){const[o,l]=this.standardizeUserDataXY(e,n,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(a!=null){const c=vD(a,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await SD(l[h],null,c[h]))}return[o,l,u]}testLoop(e,n,s,a=0,r){return U(()=>{const i=this.checkNumSamples(n,s,r,"steps"),o=[];if(a>0)throw new Ae("Verbose mode is not implemented yet.");if(r!=null)throw new Ae("steps mode in testLoop() is not implemented yet");{const l=Rb(i,s),u=Mn(Ta(0,i));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=vo(u,h,d-h),f=c1(n,p),m=e(f);if(c===0)for(let y=0;y<m.length;++y)o.push(we(0));for(let y=0;y<m.length;++y){const g=m[y];o[y]=K(o[y],_(d-h,g))}}for(let c=0;c<o.length;++c)o[c]=ge(o[c],i)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,n=[];for(let s=0;s<e.length;++s){const a=e[s];let r=a;if(P2(e,a)>1){const i=P2(e.slice(0,s),a);r+=`_${i}`}n.push(r)}return n}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],o=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new ri(h),p=hh(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const y=this.lossFunctions[m];let g=y(a[m],p[m]);r[m]!=null&&(g=Mq(g,r[m]));const x=Rt(g);n.push(x),m===0?f=g:f=K(f,g)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=n[m];else{const g=this.metricsTensors[m][0],x=this.metricsTensors[m][1];y=Rt(g(a[x],p[x]))}un(y),i.push(y)}return f=Rt(f),this.calculateLosses().forEach(m=>{f=K(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(o,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>U(()=>{const n=[];let s;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:a[u]});const o=new ri(i),l=hh(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=Rt(c(r[u],l[u]));u===0?s=h:s=K(s,h),n.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=Rt(c(r[h],l[h]));n.push(d)}return n})}async fit(e,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,o,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;Eb(p);const m=await this.standardizeUserData(e,n,s.sampleWeight,s.classWeight,!1,p);a=m[0],r=m[1],d=m[2];let y=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new Ae("validationData including sample weights is not supported yet."):new z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const E=await this.standardizeUserData(l,u,null,null,!0,p);c=E[0],h=E[1],g=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const T=Math.floor(a[0].shape[0]*(1-s.validationSplit)),E=a[0].shape[0];c=th(a,T,E),i=a,a=th(a,0,T),h=th(r,T,E),o=r,r=th(r,0,T),g=c.concat(h)}else s.validationSteps!=null&&(y=!0);const x=a.concat(r).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let v,C;y?(this.makeTestFunction(),v=this.testFunction,C=w.slice().concat(w.map(T=>"val_"+T))):(v=null,g=[],C=w.slice());const $=dD(s.callbacks,s.yieldEvery);return await this.fitLoop(b,x,w,p,s.epochs,s.verbose,$,v,g,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,ma(a,e),ma(r,n),ma(i,e),ma(o,n),ma(c,l),ma(h,u),d!=null&&_e(d)}}async fitLoop(e,n,s,a,r,i,o,l,u,c,h,d,p,f){a==null&&(a=32),r==null&&(r=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(n,a,p,"steps_per_epoch");let g;y!=null&&(g=Ta(0,y)),i==null&&(i=1);const{callbackList:x,history:b}=pD(o,i,r,d,y,p,a,m,h);x.setModel(this),this.history=b,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=d;w<r;++w){await x.onEpochBegin(w);const v={};if(p!=null)throw new Ae("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Ae("batch shuffling is not implemneted yet");c&&WL(g);const C=Mn(g),$=Rb(y,a);for(let k=0;k<$.length;++k){const T={};if(await x.onBatchBegin(k,T),U(()=>{const E=$[k][0],O=$[k][1],B=vo(C,E,O-E);T.batch=k,T.size=O-E;const W=c1(n,B),V=e(W);for(let G=0;G<s.length;++G){const D=s[G],H=V[G];T[D]=H,un(H)}if(k===$.length-1&&m){const G=this.testLoop(l,u,a);for(let D=0;D<s.length;++D){const H=s[D],P=G[D];un(P),v["val_"+H]=P}}}),await x.onBatchEnd(k,T),hD(T),this.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(w,v),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,n){return Uq(this,e,n)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),a=s[0],r=s[1],o=this.makeTrainFunction()(a.concat(r)),l=[];for(const u of o){const c=await u.data();l.push(c[0])}return _e(o),ma(s[0],e),ma(s[1],n),Hn(l)}getNamedWeights(e){const n=[],s=e!=null&&e.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||n.push({name:a[i].originalName,tensor:r[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=v2().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-v2().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=pr(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>pr(n))}else{const n=Object.keys(this.loss);e={};const s=this.loss;for(const a of n)if(typeof s[a]=="string")e[a]=pr(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[pr(Cf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>pr(Cf(e)));{const e={};for(const n in this.metrics)e[n]=pr(Cf(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=l1(e.optimizer_config),s=Tr(n);let a;if(typeof e.loss=="string")a=so(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(i=>so(i));else if(e.loss!=null){a={};for(const i in e.loss)a[i]=so(e.loss[i])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(i=>so(i));else if(e.metrics!=null){r={};for(const i in e.metrics)r[i]=so(e.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(e,n){if(typeof e=="string"){const u=FT(e);if(u.length===0)throw new z(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new z(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await H0(this.getNamedWeights(n)),o={modelTopology:this.toJSON(null,!1),format:Yq,generatedBy:`TensorFlow.js tfjs-layers v${wD}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await H0(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=AT([s.data,c])}return this.userDefinedMetadata!=null&&(K2(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,e.save(o)}setUserDefinedMetadata(e){K2(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}eu.className="Model";Z(eu);class ND extends eu{}ND.className="Functional";Z(ND);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ld extends eu{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:fx("sequential_"),e.layers!=null)for(const n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new z(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof ld||e instanceof eu;let s;if(n){if(s=e,s.outputs.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=Zj({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=iD(this.outputs[0])}this.inboundNodes=[],new gx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Lo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(Xe(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new eu({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,s=console.log){this.built||this.build(),super.summary(e,n,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,s={}){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.evaluate(e,n,s)}async evaluateDataset(e,n){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,s={}){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.fit(e,n,s)}async fitDataset(e,n){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,s={},a=!1){let r,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new z("Legacy serialization format not supported yet.");r=n}else N(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=n.layers,delete n.layers,i=n;const o=new e(i);if(!(o instanceof ld))throw new Ae(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of r){const c=Tr(l,void 0,a);a&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),e.push(s)}return{name:this.name,layers:e}}}ld.className="Sequential";Z(ld);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Dn=class extends _c{getConfig(){return{}}};class kD extends Dn{apply(e,n=1){return zj(e,n)}}kD.className="elu";Z(kD);class ID extends Dn{apply(e){return Cv(e)}}ID.className="selu";Z(ID);class TD extends Dn{apply(e){return ar(e)}}TD.className="relu";Z(TD);class ED extends Dn{apply(e){return U(()=>Fo(6,ar(e)))}}ED.className="relu6";Z(ED);class RD extends Dn{apply(e){return e}}RD.className="linear";Z(RD);class DD extends Dn{apply(e){return qa(e)}}DD.className="sigmoid";Z(DD);class AD extends Dn{apply(e){return Pj(e)}}AD.className="hardSigmoid";Z(AD);class _D extends Dn{apply(e){return Rc(e)}}_D.className="softplus";Z(_D);class OD extends Dn{apply(e){return Lj(e)}}OD.className="softsign";Z(OD);class FD extends Dn{apply(e){return Oo(e)}}FD.className="tanh";Z(FD);let oS=class extends Dn{apply(e,n=-1){return Ly(e,n)}};oS.className="softmax";Z(oS);class zD extends Dn{apply(e,n=-1){return lv(e,n)}}zD.className="logSoftmax";Z(zD);class LD extends Dn{apply(e){return U(()=>U(()=>{const n=Math.sqrt(2),s=_(.5,K(1,rv(ge(e,n))));return _(e,s)}))}}LD.className="gelu";Z(LD);class PD extends Dn{apply(e){return U(()=>_(.5,_(e,K(1,Oo(_(Cn(ge(2,Math.PI)),K(e,_(.044715,Fr(e,3)))))))))}}PD.className="gelu_new";Z(PD);class MD extends Dn{apply(e){return U(()=>_(e,Oo(Rc(e))))}}MD.className="mish";Z(MD);class BD extends Dn{apply(e,n=1){return U(()=>_(qa(_(e,n)),e))}}BD.className="swish";Z(BD);function Ti(t){return t.getClassName()}function Db(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"activation")}function Ei(t){if(t==null){const e={};return e.className="linear",e.config={},Db(e)}if(typeof t=="string"){const e={};return e.className=t,e.config={},Db(e)}else return t instanceof Dn?t:Db(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qq(t){if(t!=null&&typeof t!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}class VD extends _c{}class UD extends VD{constructor(e){super(),Qq(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return U(()=>{let n=Gt([1]);return this.hasL1&&(n=K(n,fe(_(this.l1,Xt(e))))),this.hasL2&&(n=K(n,fe(_(this.l2,Vp(e))))),F(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}UD.className="L1L2";Z(UD);const t$={l1l2:"L1L2"};function rt(t){return qv(t)}function n$(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"regularizer")}function vt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in t$?t$[t]:t,config:{}};return n$(n)}else return t instanceof VD?t:n$(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class WD extends Le{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Ne(e);let s=ar(e);return this.maxValue!=null&&(s=hs(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}WD.className="ReLU";Z(WD);class GD extends Le{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ne(e);return ky(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}GD.className="LeakyReLU";Z(GD);class HD extends Le{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=bt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vt(e.alphaRegularizer),this.alphaConstraint=en(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new z(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Xe(e);const n=e.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)n[a-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)s[a]=e[a];this.inputSpec=[new Yt({ndim:e.length,axes:s})],this.built=!0}call(e,n){return e=Ne(e),_y(e,this.alpha.read())}getConfig(){const e={alphaInitializer:It(this.alphaInitializer),alphaRegularizer:rt(this.alphaRegularizer),alphaConstraint:Jt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}HD.className="PReLU";Z(HD);let jD=class extends Le{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ae(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ne(e);return Ap(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};jD.className="ELU";Z(jD);class qD extends Le{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){const s=Ne(e);return _(s,le(ws(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}qD.className="ThresholdedReLU";Z(qD);class XD extends Le{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new oS().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){return U(()=>{let s=Ne(e);const a=n.mask;if(a!=null){const r=_(he(Kn(s.shape),le(a,s.dtype)),we(-1e9));s=K(s,r)}return this.axis instanceof Array?this.axis.length>1?ds(he(s,Ty(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}XD.className="Softmax";Z(XD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tu(t,e,n){if(typeof t=="number")return Lo(t,e);if(t.length!==e)throw new z(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if(!Aj(a))throw new z(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t}function Ca(t,e,n,s,a=1){if(t==null)return t;const r=e+(e-1)*(a-1);let i;return n==="same"?i=t:i=t-r+1,Math.floor((i+s-1)/s)}function Ma(t,e,n,s){if(t==null)return null;if(s==="valid")t=t*e+Ii([n-e,0]);else if(s==="same")t=t*e;else throw new z(`Unsupport padding mode: ${s}.`);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lS(t,e){return U(()=>(Vt(e),e==="channelsFirst"?Ue(t,[0,2,3,1]):t))}function KD(t,e){return U(()=>(Vt(e),e==="channelsFirst"?Ue(t,[0,2,3,4,1]):t))}function Zq(t,e,n,s=1,a="valid",r,i=1){return U(()=>{if(r==null&&(r=Ea()),Vt(r),t.shape.length!==3)throw new z(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(e.shape.length!==3)throw new z(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new z(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if(r==="channelsFirst"&&(t=Ue(t,[0,2,1])),a==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ev(t,e,s,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Fa(o,n)),o})}function s$(t,e,n,s=[1,1],a="valid",r,i,o=null){return U(()=>{if(r==null&&(r=Ea()),Vt(r),t.rank!==3&&t.rank!==4)throw new z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(e.rank!==3&&e.rank!==4)throw new z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=lS(t,r);if(a==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=WE({x:l,filter:e,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),r==="channelsFirst"&&(l=Ue(l,[0,3,1,2])),l})}function Jq(t,e,n,s=[1,1,1],a="valid",r,i){return U(()=>{if(r==null&&(r=Ea()),Vt(r),t.rank!==4&&t.rank!==5)throw new z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(e.rank!==4&&e.rank!==5)throw new z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=KD(t,r);if(a==="causal")throw new Ae("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=lE(o,e,s,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Fa(o,n)),r==="channelsFirst"&&(o=Ue(o,[0,4,1,2,3])),o})}class bx extends Le{constructor(e,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bx.verifyArgs(n),this.rank=e,cn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ae(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tu(n.kernelSize,e,"kernelSize"),this.strides=tu(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,Fs(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Vt(this.dataFormat),this.activation=Ei(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=bt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=en(n.biasConstraint),this.biasRegularizer=vt(n.biasRegularizer),this.activityRegularizer=vt(n.activityRegularizer),this.dilationRate=tu(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Pa("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Xv(e.kernelSize,"number",1,3))throw new z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ti(this.activation),useBias:this.useBias,biasInitializer:It(this.biasInitializer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),biasConstraint:Jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}class Oc extends bx{constructor(e,n){super(e,n),this.kernel=null,Oc.verifyArgs(n),this.filters=n.filters,cn(this.filters,"filters"),this.kernelInitializer=bt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=en(n.kernelConstraint),this.kernelRegularizer=vt(n.kernelRegularizer)}build(e){e=Xe(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new z(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(e,n){return U(()=>{e=Ne(e);let s;const a=this.bias==null?null:this.bias.read(),r=HR(this.activation.getClassName());if(r!=null&&this.rank===2)s=s$(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=Zq(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=s$(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=Jq(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ae("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Xe(e);const n=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const i=Ca(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);n.push(i)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(n),a.push(this.filters)):(a.push(this.filters),a=a.concat(n)),a}getConfig(){const e={filters:this.filters,kernelInitializer:It(this.kernelInitializer),kernelRegularizer:rt(this.kernelRegularizer),kernelConstraint:Jt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Hp extends Oc{constructor(e){super(2,e),Hp.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Xv(e.kernelSize,"number",1,2))throw new z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Hp.className="Conv2D";Z(Hp);class jp extends Oc{constructor(e){super(3,e),jp.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}jp.className="Conv3D";Z(jp);class YD extends Hp{constructor(e){if(super(e),this.inputSpec=[new Yt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Xe(e),e.length!==4)throw new z("Input should have rank 4; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:4,axes:{[n]:s}})],this.built=!0}call(e,n){return U(()=>{let s=Ne(e);if(s.shape.length!==4)throw new z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,o;this.dataFormat==="channelsFirst"?(i=2,o=3):(i=1,o=2);const l=a[i],u=a[o],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=Ma(l,d,c,this.padding),m=Ma(u,p,h,this.padding),y=[r,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,1]));let g=nv(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ue(g,[0,3,1,2])),this.bias!=null&&(g=Fa(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Xe(e);const n=e.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[s]=this.filters,n[a]=Ma(n[a],l,i,this.padding),n[r]=Ma(n[r],u,o,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}YD.className="Conv2DTranspose";Z(YD);class QD extends jp{constructor(e){if(super(e),this.inputSpec=[new Yt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Xe(e),e.length!==5)throw new z("Input should have rank 5; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:5,axes:{[n]:s}})],this.built=!0}call(e,n){return U(()=>{let s=Ne(e);if(s.shape.length!==5)throw new z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,o,l;this.dataFormat==="channelsFirst"?(l=2,i=3,o=4):(l=1,i=2,o=3);const u=a[l],c=a[i],h=a[o],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],y=this.strides[1],g=this.strides[2],x=Ma(u,m,d,this.padding),b=Ma(c,y,p,this.padding),w=Ma(h,g,f,this.padding),v=[r,x,b,w,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,4,1]));let C=cE(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Ue(C,[0,4,1,2,3])),this.bias!==null&&(C=Fa(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(e){e=Xe(e);const n=e.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[a]=Ma(n[a],c,o,this.padding),n[r]=Ma(n[r],h,l,this.padding),n[i]=Ma(n[i],d,u,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}QD.className="Conv3DTranspose";Z(QD);class ZD extends Oc{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=bt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vt(n.depthwiseRegularizer),this.depthwiseConstraint=en(n.depthwiseConstraint),this.pointwiseInitializer=bt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vt(n.pointwiseRegularizer),this.pointwiseConstraint=en(n.pointwiseConstraint)}build(e){if(e=Xe(e),e.length<this.rank+2)throw new z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);const s=e[n],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Yt({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(e,n){return U(()=>{e=Ne(e);let s;if(this.rank===1)throw new Ae("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),s=$v(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Fa(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ue(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=It(this.depthwiseInitializer),e.pointwiseInitializer=It(this.pointwiseInitializer),e.depthwiseRegularizer=rt(this.depthwiseRegularizer),e.pointwiseRegularizer=rt(this.pointwiseRegularizer),e.depthwiseConstraint=Jt(this.depthwiseConstraint),e.pointwiseConstraint=Jt(this.pointwiseConstraint),e}}ZD.className="SeparableConv";class JD extends ZD{constructor(e){super(2,e)}}JD.className="SeparableConv2D";Z(JD);class wx extends Oc{constructor(e){super(1,e),wx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Xv(e.kernelSize,"number",1,1))throw new z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}wx.className="Conv1D";Z(wx);class eA extends Le{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return U(()=>{if(e=Ne(e),this.dataFormat==="channelsLast"){const s=Sf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sf(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Sf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sf(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}eA.className="Cropping2D";Z(eA);class tA extends Le{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Vt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Ej(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const n=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,s]}else{const n=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],n,s,e[3]]}}call(e,n){return U(()=>{let s=Ne(e);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=Ue(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],o=this.interpolation==="nearest"?na.resizeNearestNeighbor(s,[r,i]):na.resizeBilinear(s,[r,i]);return Ue(o,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?na.resizeNearestNeighbor(s,[r,i]):na.resizeBilinear(s,[r,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}tA.className="UpSampling2D";Z(tA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function e5(t,e,n=[1,1],s="valid",a,r){return U(()=>{a==null&&(a=Ea()),Vt(a);let i=lS(t,a);if(t.rank!==4)throw new z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(e.rank!==4)throw new z(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Dp(i,e,n,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}class nA extends bx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=bt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=en(e.depthwiseConstraint),this.depthwiseRegularizer=vt(e.depthwiseRegularizer)}build(e){if(e=Xe(e),e.length<4)throw new z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);const s=e[n],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return U(()=>{e=Ne(e);let s=e5(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Fa(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Xe(e);const n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ca(n,this.kernelSize[0],this.padding,this.strides[0]),i=Ca(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,r,i]:[e[0],r,i,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=It(this.depthwiseInitializer),e.depthwiseRegularizer=rt(this.depthwiseRegularizer),e.depthwiseConstraint=Jt(this.depthwiseRegularizer),e}}nA.className="DepthwiseConv2D";Z(nA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sA(t,e,n,s){if(Array.isArray(t)){if(e!=null||n!=null)throw new z("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return e=a(e),n=a(n),{inputs:t,initialState:e,constants:n}}function aA(t,e,n,s=!1,a,r,i=!1,o=!1){return U(()=>{const l=e.shape.length;if(l<3)throw new z(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ta(2,l));e=Ue(e,u),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=le(le(a,"bool"),"float32"),a.rank===l-1&&(a=Fn(a,-1)),a=Ue(a,u)),s&&(e=ca(e,0),a!=null&&(a=ca(a,0)));const c=[];let h,d=n;const p=e.shape[0],f=ha(e);let m;a!=null&&(m=ha(a));for(let g=0;g<p;++g){const x=f[g],b=U(()=>t(x,d));if(a==null)h=b[0],d=b[1];else{const w=U(()=>{const v=m[g],C=he(As(v),v),$=K(_(b[0],v),_(d[0],C)),k=d.map((T,E)=>K(_(b[1][E],v),_(T,C)));return{output:$,newStates:k}});h=w.output,d=w.newStates}o&&c.push(h)}let y;return o&&(y=ps(c,1)),[h,y,d]})}class Ui extends Le{constructor(e){super(e);let n;if(e.cell==null)throw new z("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new hS({cells:e.cell}):n=e.cell,n.stateSize==null)throw new z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Yt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ta(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){r1(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let a;if(this.returnSequences?a=[e[0],e[1],s]:a=[e[0],s],this.returnState){const r=[];for(const i of n)r.push([e[0],i]);return[a].concat(r)}else return a}computeMask(e,n){return U(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<e;++s)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ae("Constants support is not implemented in RNN yet.");r1(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Yt({shape:[n,null,...s]});const a=[e[0]].concat(e.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ee(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new Yt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){U(()=>{if(!this.stateful)throw new La("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Gt([s,a])):this.states_=[Gt([s,this.cell.stateSize])];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Gt([s,a])):this.states_[0]=Gt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let a=0;a<this.states_.length;++a){const r=e[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,o=[s,i];if(!Ee(r.shape,o))throw new z(`State ${a} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>un(a.clone()))})}apply(e,n){let s=n==null?null:n.initialState,a=n==null?null:n.constants;n==null&&(n={});const r=sA(e,s,a,this.numConstants);e=r.inputs,s=r.initialState,a=r.constants;let i=[],o=[];if(s!=null){n.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Yt({shape:u.shape}));o=o.concat(this.stateSpec)}if(a!=null&&(n.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof Za){const u=[e].concat(i),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return U(()=>{const s=n==null?null:n.mask,a=n==null?null:n.training;let r=n==null?null:n.initialState;e=Ne(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new z(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},u=aA((f,m)=>{const y=this.cell.call([f].concat(m),o);return[y[0],y.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,a);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return U(()=>{let n=Gt(e.shape);return n=fe(n,[1,2]),n=Bp(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?s1(n,[1,s]):n):this.cell.stateSize>1?[s1(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Ui.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),n)}static fromConfig(e,n,s={}){const a=n.cell,r=Tr(a,s);return new e(Object.assign(n,{cell:r}))}}Ui.className="RNN";Z(Ui);class vx extends Le{}class uS extends vx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cn(this.units,"units"),this.activation=Ei(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=en(e.kernelConstraint),this.recurrentConstraint=en(e.recurrentConstraint),this.biasConstraint=en(e.biasConstraint),this.dropout=yu([1,Ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yu([1,Ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xe(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return U(()=>{if(e=e,e.length!==2)throw new z(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const a=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,o=this.recurrentDropoutMask;i!=null?r=Ka(_(e,i),this.kernel.read()):r=Ka(e,this.kernel.read()),this.bias!=null&&(r=Fa(r,this.bias.read())),o!=null&&(s=_(s,o));let l=K(r,Ka(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Ti(this.activation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:rt(this.kernelRegularizer),recurrentRegularizer:rt(this.recurrentRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:Jt(this.kernelConstraint),recurrentConstraint:Jt(this.recurrentConstraint),biasConstraint:Jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),n)}}uS.className="SimpleRNNCell";Z(uS);class rA extends Ui{constructor(e){e.cell=new uS(e),super(e)}call(e,n){return U(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,n){return new e(n)}}rA.className="SimpleRNN";Z(rA);class cS extends vx{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new z("GRUCell does not support reset_after parameter set to true.");this.units=e.units,cn(this.units,"units"),this.activation=Ei(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ei(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=en(e.kernelConstraint),this.recurrentConstraint=en(e.recurrentConstraint),this.biasConstraint=en(e.biasConstraint),this.dropout=yu([1,Ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yu([1,Ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xe(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return U(()=>{if(e=e,e.length!==2)throw new z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training==null?!1:n.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=_(e,r[0]));let c=Ka(e,this.kernel.read());this.useBias&&(c=Fa(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=_(a,i[0]));const h=this.recurrentKernel.read(),[d,p]=us(h,[2*this.units,this.units],h.rank-1),f=Ka(a,d),[m,y,g]=us(c,3,c.rank-1),[x,b]=us(f,2,f.rank-1);o=this.recurrentActivation.apply(K(m,x)),l=this.recurrentActivation.apply(K(y,b));const w=Ka(_(l,a),p);u=this.activation.apply(K(g,w));const v=K(_(o,a),_(K(1,yt(o)),u));return[v,v]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Ti(this.activation),recurrentActivation:Ti(this.recurrentActivation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:rt(this.kernelRegularizer),recurrentRegularizer:rt(this.recurrentRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:Jt(this.kernelConstraint),recurrentConstraint:Jt(this.recurrentConstraint),biasConstraint:Jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),n)}}cS.className="GRUCell";Z(cS);class iA extends Ui{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cS(e),super(e)}call(e,n){return U(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}iA.className="GRU";Z(iA);class Sx extends vx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cn(this.units,"units"),this.activation=Ei(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ei(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=en(e.kernelConstraint),this.recurrentConstraint=en(e.recurrentConstraint),this.biasConstraint=en(e.biasConstraint),this.dropout=yu([1,Ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yu([1,Ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=Xe(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(n=class extends da{apply(l,u){const c=r.apply([i]),h=new Yv().apply([i]),d=r.apply([i*2]);return B2(B2(c,h),d)}},n.className="CustomInit",n)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return U(()=>{const s=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=_(e,i[0]));let d=Ka(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=_(a,o[0])),d=K(d,Ka(a,this.recurrentKernel.read())),this.useBias&&(d=Fa(d,this.bias.read()));const[p,f,m,y]=us(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=K(_(u,r),_(l,this.activation.apply(m))),h=this.recurrentActivation.apply(y);const g=_(h,this.activation.apply(c));return[g,g,c]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Ti(this.activation),recurrentActivation:Ti(this.recurrentActivation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),recurrentInitializer:It(this.recurrentInitializer),biasInitializer:It(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:rt(this.kernelRegularizer),recurrentRegularizer:rt(this.recurrentRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:Jt(this.kernelConstraint),recurrentConstraint:Jt(this.recurrentConstraint),biasConstraint:Jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),n)}}Sx.className="LSTMCell";Z(Sx);class oA extends Ui{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sx(e),super(e)}call(e,n){return U(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}oA.className="LSTM";Z(oA);class hS extends vx{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return U(()=>{e=e;let s=e.slice(1);const a=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?a.push(s.splice(0,o.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=a[o],o===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,n),r.push(i.slice(1))}s=[];for(const o of r.slice().reverse())s.push(...o);return[i[0]].concat(s)})}build(e){r1(e)&&(e=e[0]),e=e;let n;this.cells.forEach((s,a)=>{wo(`RNNCell_${a}`,()=>{s.build(e),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){const e=super.getConfig(),n=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(n)};return Object.assign(Object.assign({},e),a)}static fromConfig(e,n,s={}){const a=[];for(const r of n.cells)a.push(Tr(r,s));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(e)}return e}getWeights(){const e=[];for(const n of this.cells)e.push(...n.weights);return i1(e)}setWeights(e){const n=[];for(const s of this.cells){const a=s.weights.length,r=e.splice(a);for(let i=0;i<s.weights.length;++i)n.push([s.weights[i],r[i]])}sS(n)}}hS.className="StackedRNNCells";Z(hS);function Ri(t){const{ones:e,rate:n,training:s=!1,count:a=1,dropoutFunc:r}=t,i=()=>r!=null?r(e(),n):ZR(e(),n),o=()=>Up(i,e,s);return!a||a<=1?un(o().clone()):Array(a).fill(void 0).map(o).map(u=>un(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t5=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(t);a<s.length;a++)e.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(t,s[a])&&(n[s[a]]=t[s[a]]);return n};class lA extends Ui{constructor(e){if(e.unroll)throw new Ae("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ae("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Yt({ndim:5})]}call(e,n){return U(()=>{if(this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new z("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return U(()=>{const{stateSize:n}=this.cell,s=e.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=Gt(r);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){U(()=>{if(!this.stateful)throw new La("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Gt(r)):this.states_=[Gt(r)];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Gt(r)):this.states_[0]=Gt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let o=0;o<this.states_.length;++o){const l=e[o],u=r;if(!Ee(l.shape,u))throw new z(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[o]=l}}this.states_=this.states_.map(o=>un(o.clone()))})}computeSingleOutputShape(e){const{dataFormat:n,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:o}=this.cell,l=n==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=Ca(u,a[0],r,i[0],o[0]),d=Ca(c,a[1],r,i[1],o[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}lA.className="ConvRNN2D";class dS extends Sx{constructor(e){const{filters:n,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:n})),this.filters=n,cn(this.filters,"filters"),this.kernelSize=tu(s,2,"kernelSize"),this.kernelSize.forEach(l=>cn(l,"kernelSize")),this.strides=tu(a||1,2,"strides"),this.strides.forEach(l=>cn(l,"strides")),this.padding=r||"valid",Fs(this.padding),this.dataFormat=i||"channelsLast",Vt(this.dataFormat),this.dilationRate=tu(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>cn(l,"dilationRate"))}build(e){var n;e=Xe(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new z(`The channel dimension of the input should be defined. Found ${e[s]}`);const a=e[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(n=class extends da{apply(d,p){const f=u.apply([c]),m=Kn([c]),y=u.apply([c*2]);return Kv([f,m,y])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return U(()=>{if(e.length!==3)throw new z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,a=e[0],r=e[1],i=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(a),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(X,Q,ee)=>!Q||!Q[ee]?X:_(Q[ee],X);let c=u(a,l,0),h=u(a,l,1),d=u(a,l,2),p=u(a,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(r),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(r,f,0),y=u(r,f,1),g=u(r,f,2),x=u(r,f,3);const b=3,[w,v,C,$]=us(this.kernel.read(),o,b),[k,T,E,O]=this.useBias?us(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,w,k,this.padding),h=this.inputConv(h,v,T,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,$,O,this.padding);const[B,W,V,G]=us(this.recurrentKernel.read(),o,b);m=this.recurrentConv(m,B),y=this.recurrentConv(y,W),g=this.recurrentConv(g,V),x=this.recurrentConv(x,G);const D=this.recurrentActivation.apply(K(c,m)),H=this.recurrentActivation.apply(K(h,y)),P=K(_(H,i),_(D,this.activation.apply(K(d,g)))),j=_(this.recurrentActivation.apply(K(p,x)),this.activation.apply(P));return[j,j,P]})}getConfig(){const e=super.getConfig(),n=t5(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,n,s,a){const r=Ni(e,n,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Fa(r,s,this.dataFormat):r}recurrentConv(e,n){return Ni(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}dS.className="ConvLSTM2DCell";Z(dS);class uA extends lA{constructor(e){const n=new dS(e);super(Object.assign(Object.assign({},e),{cell:n}))}static fromConfig(e,n){return new e(n)}}uA.className="ConvLSTM2D";Z(uA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pS extends Le{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const n=e.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?n[a]:this.noiseShape[a]);return s}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);if(0<this.rate&&this.rate<1){const a=n.training==null?!1:n.training,r=this.getNoiseShape(s);return Up(()=>ZR(s,this.rate,r,this.seed),()=>s,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}pS.className="Dropout";Z(pS);class cA extends pS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const n=e.shape;return[n[0],1,n[2]]}}cA.className="SpatialDropout1D";Z(cA);class hA extends Le{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,cn(this.units,"units"),this.activation=Ei(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=en(e.kernelConstraint),this.biasConstraint=en(e.biasConstraint),this.kernelRegularizer=vt(e.kernelRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Xe(e);const n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=Xe(e);const n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e),a=HR(this.activation.getClassName());let r;return a!=null?r=Ka(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ka(s,this.kernel.read()),this.bias!=null&&(r=Fa(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Ti(this.activation),useBias:this.useBias,kernelInitializer:It(this.kernelInitializer),biasInitializer:It(this.biasInitializer),kernelRegularizer:rt(this.kernelRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:Jt(this.kernelConstraint),biasConstraint:Jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}hA.className="Dense";Z(hA);class dA extends Le{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Xe(e);for(const n of e.slice(1))if(n==null)throw new z(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],yi(e,1)]}call(e,n){return U(()=>{this.invokeCallHook(e,n);let s=Ne(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=Ue(s,a)}return Fj(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(e,n),e}}dA.className="Flatten";Z(dA);class pA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ei(e.activation)}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);return this.activation.apply(s)})}getConfig(){const e={activation:Ti(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}pA.className="Activation";Z(pA);class fA extends Le{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return U(()=>(e=Ne(e),_j(e,this.n)))}getConfig(){const e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}fA.className="RepeatVector";Z(fA);class mA extends Le{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){const s="Total size of new array must be unchanged.",a=n.slice();let r=1,i=null;for(let l=0;l<a.length;++l){const u=a[l];if(this.isUnknown(u))if(i===null)i=l;else throw new z("Can only specifiy one unknown dimension.");else r*=u}const o=yi(e);if(i!==null){if(r===0||o%r!==0)throw new z(s);a[i]=o/r}else if(o!==r)throw new z(s);return a}computeOutputShape(e){let n=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return F(s,r)})}getConfig(){const e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}mA.className="Reshape";Z(mA);class gA extends Le{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const n=Ta(1,e.dims.length+1);if(!Ee(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Yt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Xe(e);const n=e.slice();return this.dims.forEach((s,a)=>{n[a+1]=e[s]}),n}call(e,n){return Ue(Ne(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}gA.className="Permute";Z(gA);class yA extends Le{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){const s=Ne(e);return Om(mu(s,this.maskValue),-1)}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e),i=Om(mu(s,this.maskValue),-1,!0);return _(s,le(i,s.dtype))})}}yA.className="Masking";Z(yA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xA extends Le{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(Qe(e.inputLength))}this.inputDim=e.inputDim,cn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,cn(this.outputDim,"outputDim"),this.embeddingsInitializer=bt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vt(e.embeddingsRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.embeddingsConstraint=en(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return U(()=>this.maskZero?(e=Ne(e),mu(e,We(e))):null)}computeOutputShape(e){if(e=Xe(e),this.inputLength==null)return[...e,this.outputDim];const n=Qe(this.inputLength);if(n.length!==e.length-1)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let a=0;a<n.length;++a){const r=n[a],i=e[a+1];if(r!=null&&i!=null&&r!==i)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(n[s]=i),s++}}return[e[0],...n,this.outputDim]}call(e,n){return U(()=>{this.invokeCallHook(e,n);let s=Ne(e);s.dtype!=="int32"&&(s=Xa(s,"int32"));const a=QR(this.embeddings.read(),F(s,[s.size]));return F(a,Xe(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:It(this.embeddingsInitializer),embeddingsRegularizer:rt(this.embeddingsRegularizer),activityRegularizer:rt(this.activityRegularizer),embeddingsConstraint:Jt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}xA.className="Embedding";Z(xA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ol extends Le{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ae}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;const s=e.slice(0,e.length-n.length);for(let a=0;a<n.length;++a){const r=e[e.length-n.length+a],i=n[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new z("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Xe(e)]),e=e,e.length<2)throw new z(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(const r of e)r!=null&&r[0]!==null&&n.push(r[0]);if(n=gi(n),n.length>1)throw new z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=e.map(r=>r.length);e.indexOf(null)===-1&&gi(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return U(()=>{if(e=e,this.reshapeRequired){const s=[],a=e.map(r=>r.rank);if(a.indexOf(null)===-1){const r=Ii(a);for(let i of e){const o=i.rank;for(let l=0;l<r-o;++l)i=Bp(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=F(l,[h].concat(yi(c.slice(1))));p=Ue(p,[1,0]),p=F(p,d),s.push(p),r=!0}else if(u>1){const c=Ta(1,u).concat([0]);s.push(Ue(l,c)),r=!0}else s.push(l)}let i=this.mergeFunction(s);const o=i.rank;if(r){if(o==null){const l=i.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));i=F(Ue(F(i,[-1,c]),[1,0]),h)}else if(o>1){const l=[o-1].concat(Ta(0,o-1));i=Ue(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let a=1;a<e.length;++a){const r=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let s=[];for(const a of e)a!=null&&a[0]!==null&&s.push(a[0]);return s=gi(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(e,n){return U(()=>{if(n==null)return null;if(!Array.isArray(n))throw new z("`mask` should be an Array");if(!Array.isArray(e))throw new z("`inputs` should be an Array");if(n.length!==e.length)throw new z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(a=>a==null))return null;n=n.map(a=>a==null?a:Fn(a,0));let s=n[0];for(let a=1;a<n.length-1;++a)s=Qa(s,n[a]);return s})}}class bA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=K(n,e[s]);return n})}}bA.className="Add";Z(bA);class wA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=_(n,e[s]);return n})}}wA.className="Multiply";Z(wA);class vA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=K(n,e[s]);return _(1/e.length,n)})}}vA.className="Average";Z(vA);class SA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Pr(n,e[s]);return n})}}SA.className="Maximum";Z(SA);class CA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Fo(n,e[s]);return n})}}CA.className="Minimum";Z(CA);class $A extends ol{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new z("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(const a of e)if(a!=null){n=!1;break}if(n)return;const s=[];for(let a=0;a<e.length;++a){const r=e[a].slice();r.splice(this.axis,1);let i=!1;for(const o of s)if(Ee(o,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return U(()=>Kv(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new z("A `Concatenate` layer should be called on a list of inputs.");const n=e,s=n[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of n.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new z("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new z("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new z(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return U(()=>{let s=!0;if(n.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<e.length;++i)n[i]==null?a.push(le(As(e[i]),"bool")):n[i].rank<e[i].rank?a.push(Fn(n[i],-1)):a.push(n[i]);const r=Mt(a,this.axis);return Zw(r,-1,!1)})}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}$A.className="Concatenate";Z($A);function nh(t,e){for(;t<0;)t+=e;return t}function n5(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Ae("batchDot is not implemented for tensors of 4D or higher rank yet");if(N(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),N(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof n=="number"&&(n=[n,n]),t.dtype==="complex64"||e.dtype==="complex64")throw new Ae("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,a=e.shape.length;n==null&&(n=[s-1,a-2]);const r=n;return U(()=>{let i;if(s>a){i=s-a;const l=[];for(let u=0;u<i;++u)l.push(1);e=F(e,e.shape.concat(l))}else if(a>s){i=a-s;const l=[];for(let u=0;u<i;++u)l.push(1);t=F(t,t.shape.concat(l))}else i=0;let o;if(t.shape.length===2&&e.shape.length===2)r[0]===r[1]?o=fe(_(t,e),r[0]):o=fe(_(Ue(t,[1,0]),e),r[1]);else{const l=r[0]!==t.shape.length-1,u=r[1]===e.shape.length-1;o=Pe(t,e,l,u)}if(i>0){let l;s>a?l=s+a-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);o=nl(o,u)}return o.shape.length===1&&(o=Fn(o,1)),o})}class NA extends ol{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(n,s);if(n[a[0]]!==s[a[1]])throw new z(`Dimension incompatibility: ${n[a[0]]} !== ${s[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],s=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>nh(r,e[i].shape.length)):a=[nh(this.axes,n.shape.length),nh(this.axes,s.shape.length)],this.normalize&&(n=Bm(n,a[0]),s=Bm(s,a[1])),n5(n,s,a)}interpretAxes(e,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[nh(this.axes,e.length),nh(this.axes,n.length)],s}computeOutputShape(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(n,s);n.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=n.concat(s);return r.length===1&&r.push(1),r}computeMask(e,n){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}NA.className="Dot";Z(NA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);return Up(()=>K(mx(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}kA.className="GaussianNoise";Z(kA);class IA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);return this.rate>0&&this.rate<1?Up(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return _(s,mx(s.shape,1,r))},()=>s,n.training||!1):s})}}IA.className="GaussianDropout";Z(IA);class TA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ne(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return U(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Up(()=>{const r=Ne(e),l=-1.6732632423543772*1.0507009873554805;let u=Mi(tl(s),this.rate);u=Xa(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,d=K(_(r,u),_(K(u,-1),l));return K(_(d,c),h)},()=>Ne(e),n.training||!1)}return e})}}TA.className="AlphaDropout";Z(TA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ud(t,e,n,s,a,r=.001){let i;if(t.rank===2)i=JT(t,e,n,s,a,r);else if(t.rank===3)i=eE(t,e,n,s,a,r);else if(t.rank===4)i=tE(t,e,n,s,a,r);else throw new Ae(`batchNormalization is not implemented for array of rank ${t.rank} yet`);return i}function s5(t,e,n,s,a=.001){return U(()=>{const r=Dy(t,s),i=r.mean,o=r.variance;return[ud(t,i,o,n,e,a),i,o]})}function a5(t,e,n,s,a=.001){return U(()=>{const r=Dy(t,s),i=r.mean,o=r.variance,l=[];for(const f of Ta(0,t.rank))s.indexOf(f)!==-1?l.push(1):l.push(t.shape[f]);const u=F(i,l),c=F(o,l),h=e==null?null:F(e,l),d=n==null?null:F(n,l);return[ud(t,u,c,d,h,a),i,o]})}function r5(t,e,n,s,a=.001){return Ee(s.slice().sort(),Ta(0,t.rank-1))?s5(t,e,n,s,a):a5(t,e,n,s,a)}class EA extends Le{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.movingMeanInitializer=bt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=bt(e.movingVarianceInitializer||"ones"),this.betaConstraint=en(e.betaConstraint),this.gammaConstraint=en(e.gammaConstraint),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer)}build(e){e=Xe(e);const n=this.axis>=0?this.axis:this.axis+e.length,s=e[n];if(s==null)throw new z(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Yt({ndim:e.length,axes:{[n]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return U(()=>{const s=n.training==null?!1:n.training,a=Ne(e),r=a.shape,i=r.length,o=Ta(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Lo(1,i);u[l]=r[l];const c=o.slice();c.sort();const h=!Ee(c,Ta(0,i).slice(0,i-1)),d=()=>{if(h){const x=F(this.movingMean.read(),u),b=F(this.movingVariance.read(),u),w=this.center?F(this.beta.read(),u):null,v=this.scale?F(this.gamma.read(),u):null;return ud(a,x,b,w,v,this.epsilon)}else return ud(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=r5(a,this.gamma.read(),this.beta.read(),o,this.epsilon),y=(x,b,w)=>{U(()=>{const v=1-w,C=x.read(),$=_(he(C,b),v);x.write(he(C,$))})};return(()=>{y(this.movingMean,f,this.momentum),y(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:It(this.betaInitializer),gammaInitializer:It(this.gammaInitializer),movingMeanInitializer:It(this.movingMeanInitializer),movingVarianceInitializer:It(this.movingVarianceInitializer),betaRegularizer:rt(this.betaRegularizer),gammaRegularizer:rt(this.gammaRegularizer),betaConstraint:Jt(this.betaConstraint),gammaConstraint:Jt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}EA.className="BatchNormalization";Z(EA);class RA extends Le{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Xe(e);const n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=n);for(const r of this.axis)if(r<0||r>=n)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==gi(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,n){const s=Ne(e),a=s.shape,r=a.length;return U(()=>{let{mean:o,variance:l}=Dy(s,this.axis,!0);const u=Lo(1,r);for(const m of this.axis)u[m]=a[m];const c=m=>m!=null&&m.shape.length!==r?F(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(p.push(a[m]),f.push(1)):(p.push(1),f.push(a[m]));return o=ta(o,p),l=ta(l,p),h!=null&&(h=ta(h,f)),d!=null&&(d=ta(d,f)),ud(s,o,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:It(this.betaInitializer),gammaInitializer:It(this.gammaInitializer),betaRegularizer:rt(this.betaRegularizer),gammaRegularizer:rt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}RA.className="LayerNormalization";Z(RA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function i5(t,e,n){return U(()=>{if(t.rank!==4)throw new z(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ea()),n!=="channelsLast"&&n!=="channelsFirst")throw new z(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Bi(t,s)})}class DA extends Le{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ea():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,s;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[n,s]}this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=Xe(e);let n,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],n,s]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],n,s,e[3]])}call(e,n){return U(()=>i5(Ne(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}DA.className="ZeroPadding2D";Z(DA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cx(t,e,n,s,a,r){return U(()=>{Vt(a),qR(r),Fs(s),n==null&&(n=[1,1]),s==null&&(s="valid"),a==null&&(a=Ea()),r==null&&(r="max"),t=lS(t,a);let i;const o=s==="same"?"same":"valid";return r==="max"?i=Ry(t,e,n,o):i=Sy(t,e,n,o),a==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}function AA(t,e,n,s,a,r){return U(()=>{Vt(a),qR(r),Fs(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),a==null&&(a=Ea()),r==null&&(r="max"),t=KD(t,a);let i;const o=s==="same"?"same":"valid";return r==="max"?i=NE(t,e,n,o):i=ZT(t,e,n,o),a==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}class _A extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(cn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);cn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Fs(this.padding),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){e=Xe(e);const n=Ca(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return U(()=>{this.invokeCallHook(e,n),e=Bp(Ne(e),2);const s=this.poolingFunction(Ne(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nl(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}}class OA extends _A{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Vt(r),Fs(a),Cx(e,n,s,a,r,"max")}}OA.className="MaxPooling1D";Z(OA);class FA extends _A{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Vt(r),Fs(a),Cx(e,n,s,a,r,"avg")}}FA.className="AveragePooling1D";Z(FA);class zA extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];cn(this.poolSize,"poolSize"),cn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Vt(this.dataFormat),Fs(this.padding),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=Xe(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=Ca(n,this.poolSize[0],this.padding,this.strides[0]),s=Ca(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s]:[e[0],n,s,e[3]]}call(e,n){return U(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ne(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class LA extends zA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Vt(r),Fs(a),Cx(e,n,s,a,r,"max")}}LA.className="MaxPooling2D";Z(LA);class PA extends zA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Vt(r),Fs(a),Cx(e,n,s,a,r,"avg")}}PA.className="AveragePooling2D";Z(PA);class MA extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];cn(this.poolSize,"poolSize"),cn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Vt(this.dataFormat),Fs(this.padding),this.inputSpec=[new Yt({ndim:5})]}computeOutputShape(e){e=Xe(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=Ca(n,this.poolSize[0],this.padding,this.strides[0]),s=Ca(s,this.poolSize[1],this.padding,this.strides[1]),a=Ca(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s,a]:[e[0],n,s,a,e[4]]}call(e,n){return U(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ne(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class BA extends MA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Vt(r),Fs(a),AA(e,n,s,a,r,"max")}}BA.className="MaxPooling3D";Z(BA);class VA extends MA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Vt(r),Fs(a),AA(e,n,s,a,r,"avg")}}VA.className="AveragePooling3D";Z(VA);class UA extends Le{constructor(e){super(e),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,n){throw new Ae}}class WA extends UA{constructor(e){super(e||{})}call(e,n){return U(()=>{const s=Ne(e);return Rt(s,1)})}}WA.className="GlobalAveragePooling1D";Z(WA);class GA extends UA{constructor(e){super(e||{})}call(e,n){return U(()=>{const s=Ne(e);return ia(s,1)})}}GA.className="GlobalMaxPooling1D";Z(GA);class HA extends Le{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Vt(this.dataFormat),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new Ae}getConfig(){const e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class jA extends HA{call(e,n){return U(()=>{const s=Ne(e);return this.dataFormat==="channelsLast"?Rt(s,[1,2]):Rt(s,[2,3])})}}jA.className="GlobalAveragePooling2D";Z(jA);class qA extends HA{call(e,n){return U(()=>{const s=Ne(e);return this.dataFormat==="channelsLast"?ia(s,[1,2]):ia(s,[2,3])})}}qA.className="GlobalMaxPooling2D";Z(qA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class XA extends Le{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,s={}){const a=n.layer,r=Tr(a,s);delete n.layer;const i={layer:r};return Object.assign(i,n),new e(i)}}class KA extends XA{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Xe(e),e.length<3)throw new z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Xe(e);const n=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(n),a=e[1];return[s[0],a].concat(s.slice(1))}call(e,n){return U(()=>(e=Ne(e),aA((i,o)=>[Ne(this.layer.call(i,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}KA.className="TimeDistributed";Z(KA);function o5(t){il(Tj,"BidirectionalMergeMode",t)}const l5="concat";class YA extends XA{constructor(e){super(e);const n=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=n,this.forwardLayer=Tr(s),n.goBackwards=n.goBackwards!==!0;const a={};if(a.className=e.layer.getClassName(),a.config=n,this.backwardLayer=Tr(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?l5:e.mergeMode,o5(this.mergeMode),e.weights)throw new Ae("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const n=e.length,s=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,a,r;return this.returnState&&(r=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):Hn(a)}apply(e,n){let s=n==null?null:n.initialState,a=n==null?null:n.constants;n==null&&(n={});const r=sA(e,s,a,this.numConstants);if(e=r.inputs,s=r.initialState,a=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&a==null)return super.apply(e,n);const i=[],o=[];if(s!=null){const u=s.length;if(u%2>0)throw new z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,i.push(...s);const c=s.map(h=>new Yt({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(a!=null)throw new Ae("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Za;for(const u of i)if(u instanceof Za!==l)throw new z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return U(()=>{const s=n.initialState;let a,r;if(s==null)a=this.forwardLayer.call(e,n),r=this.backwardLayer.call(e,n);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);a=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(n,{initialState:u}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=ca(r,1));let o;return this.mergeMode==="concat"?o=Kv([a,r]):this.mergeMode==="sum"?o=K(a,r):this.mergeMode==="ave"?o=_(.5,K(a,r)):this.mergeMode==="mul"?o=_(a,r):this.mergeMode==null&&(o=[a,r]),this.returnState?this.mergeMode==null?o.concat(i):[o].concat(i):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){const s=Tr(n.layer);if(delete n.layer,n.numConstants!=null)throw new Ae("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=n;return a.layer=s,new e(a)}}YA.className="Bidirectional";Z(YA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class QA extends Le{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return U(()=>(e=Ne(e),e.dtype!=="float32"&&(e=Xa(e,"float32")),K(_(e,this.scale),this.offset)))}}QA.className="Rescaling";Z(QA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:u5,cropAndResize:c5}=na;class ZA extends Le{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,n,s,a,r,i,o,l){return U(()=>{let u,c=!1;const h=n/i,d=s/o,p=(a+n)/i,f=(r+s)/o,m=[h,d,p,f],y=[];e.rank===3?(c=!0,u=ps([e])):u=e;for(let v=0;v<u.shape[0];v++)y.push(m);const g=Sa(y,[y.length,4]),x=gu(0,y.length,1,"int32"),w=c5(u,g,x,[a,r],"nearest");return Xa(c?Ne(ha(w)):w,l)})}upsize(e,n,s,a){return U(()=>{const r=u5(e,[n,s]);return Xa(r,a)})}call(e,n){return U(()=>{const s=Ne(e),a=s.dtype,r=s.shape,i=r[r.length-3],o=r[r.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,o,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Xe(e);const n=e.length-3,s=e.length-2;return e[n]=this.height,e[s]=this.width,e}}ZA.className="CenterCrop";Z(ZA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h5(t,e,n,s){let a=Ne(t);if(a.dtype!=="int32"&&(a=Xa(a,"int32")),e==="int")return a;const r=a.shape;if(a.rank===0&&(a=Fn(a,-1)),e==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Fn(a,-1)),a.rank>2)throw new z(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(e),o=a;let l;if(typeof s<"u"&&e==="count"?l=Q0(o,s,n,i):l=Q0(o,[],n,i),e!=="tfIdf")return l;if(s)return _(l,s);throw new z("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class JA extends Le{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=Xe(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return U(()=>{e=Ne(e),e.dtype!=="int32"&&(e=Xa(e,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new z(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=Ne(n.countWeights)}const a=ia(e),r=td(e),i=ws(this.numTokens,a).bufferSync().get(0),o=Mi(r,0).bufferSync().get(0);if(!(i&&o))throw new z(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return h5(e,this.outputMode,this.numTokens,s)})}}JA.className="CategoryEncoding";Z(JA);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const d5=["bilinear","nearest"],a$=new Set(d5);class e3 extends Le{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(a$.has(e.interpolation))this.interpolation=e.interpolation;else throw new z(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Xe(e);const n=e[2];return[this.height,this.width,n]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return U(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return na.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return na.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...a$]} are supported`)})}}e3.className="Resizing";Z(e3);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class t3{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}t3.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class n3 extends Le{constructor(e){super(e),this.randomGenerator=new t3(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(e,n),e}}n3.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const p5=["bilinear","nearest"],r$=new Set(p5);class s3 extends n3{constructor(e){super(e);const{factor:n,interpolation:s="bilinear"}=e;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new z(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new z(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new z(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(r$.has(s))this.interpolation=s;else throw new z(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Xe(e);const n=e[2];return[this.imgHeight,-1,n]}call(e,n){return U(()=>{const s=Ne(e);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=tl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return na.resizeBilinear(e,i);case"nearest":return na.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...r$]} are supported`)}})}}s3.className="RandomWidth";Z(s3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5=M();f5.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var as;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(as||(as={}));var i$;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(i$||(i$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={};function a3(t){return m5[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(t,e,n,s,a){const r=e.inputParams[t];if(r&&r.inputIndexStart!==void 0){const o=r.inputIndexStart,l=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?o+1:r.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(r.type==="tensor")return xn(e.inputNames[u],n,s,a);if(r.type==="tensors"){const d=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((f,m)=>{var y;return((y=d[m])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(f=>xn(f,n,s,a))}const c=xn(e.inputNames[u],n,s,a),h=c.dataSync();return r.type==="number"?h[0]:ra(c.shape,h)}const i=e.attrParams[t];return i&&i.value}function xn(t,e,n,s){const[a,r]=is(t,n);if(s!=null){const o=s.getHashTableHandleByName(a);if(o!=null)return o}const i=n.currentContextIds.find(o=>!!e[Hm(a,o)]);return i!==void 0?e[Hm(a,i)][r]:void 0}function o$(t,e,n){return e[Hm(t,n.currentContextId)]}function fr(t,e){const[n,s,a]=is(t,e);return[Hm(n,e&&e.currentContextId),s,a]}function Hm(t,e){return e?`${t}-${e}`:t}function is(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const r=e.parseNodeNameCache.get(t);if(r!=null)return r}const s=t.split(":");let a;if(s.length===1)a=[t,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,o=Number(s[s.length-1]);a=[r,o,i]}return n&&e.parseNodeNameCache.set(t,a),a}function Kf(t,e,n){let s=S("pad",t,e,n);if(s==="explicit"){s=S("explicitPaddings",t,e,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function mr(t){return t.kept?t:Ir(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],y5=Object.freeze(Object.defineProperty({__proto__:null,json:g5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],b5=Object.freeze(Object.defineProperty({__proto__:null,json:x5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],v5=Object.freeze(Object.defineProperty({__proto__:null,json:w5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],C5=Object.freeze(Object.defineProperty({__proto__:null,json:S5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],N5=Object.freeze(Object.defineProperty({__proto__:null,json:$5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],I5=Object.freeze(Object.defineProperty({__proto__:null,json:k5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],E5=Object.freeze(Object.defineProperty({__proto__:null,json:T5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],D5=Object.freeze(Object.defineProperty({__proto__:null,json:R5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],_5=Object.freeze(Object.defineProperty({__proto__:null,json:A5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],F5=Object.freeze(Object.defineProperty({__proto__:null,json:O5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],L5=Object.freeze(Object.defineProperty({__proto__:null,json:z5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],M5=Object.freeze(Object.defineProperty({__proto__:null,json:P5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],V5=Object.freeze(Object.defineProperty({__proto__:null,json:B5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],W5=Object.freeze(Object.defineProperty({__proto__:null,json:U5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],H5=Object.freeze(Object.defineProperty({__proto__:null,json:G5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],q5=Object.freeze(Object.defineProperty({__proto__:null,json:j5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],K5=Object.freeze(Object.defineProperty({__proto__:null,json:X5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Q5=Object.freeze(Object.defineProperty({__proto__:null,json:Y5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],J5=Object.freeze(Object.defineProperty({__proto__:null,json:Z5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l${static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[y5,b5,v5,C5,N5,I5,E5,D5,_5,F5,L5,M5,V5,W5,H5,q5,K5,Q5,J5],n=[].concat(...e.map(s=>s.json));this.opMappers=n.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(e,n={}){const s=e.node,a=[],r=[],i=[],o=s.reduce((m,y)=>(m[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?a.push(m[y.name]):y.op==="Const"?r.push(m[y.name]):(y.input==null||y.input.length===0)&&i.push(m[y.name]),m),{});let l=[];const u=[];let c={},h={};n!=null&&(c=this.mapSignatureEntries(n.inputs),h=this.mapSignatureEntries(n.outputs));const d=Object.keys(o);d.forEach(m=>{const y=o[m];y.inputNames.forEach((g,x)=>{const[b,,w]=fr(g),v=o[b];if(v.outputs!=null){const C=v.outputs.indexOf(w);if(C!==-1){const $=`${b}:${C}`;y.inputNames[x]=$}}y.inputs.push(v),v.children.push(y)})}),Object.keys(h).length===0?d.forEach(m=>{const y=o[m];y.children.length===0&&u.push(y)}):Object.keys(h).forEach(m=>{const[y]=fr(m),g=o[y];g!=null&&(g.signatureKey=h[m],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[y]=fr(m),g=o[y];g&&(g.signatureKey=c[m],l.push(g))}):l=a;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,y)=>(m[y.signature.name]=this.mapFunction(y),m),{}));const f={nodes:o,inputs:l,outputs:u,weights:r,placeholders:a,signature:n,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,s)=>(n[e[s].name]=s,n),{})}mapNode(e){const n=a3(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(s.inputParams=n.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),n.attrs!=null&&(s.attrParams=n.attrs.reduce((a,r)=>{const i=r.type;let o;switch(r.type){case"string":o=d1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=d1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=b1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=b1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=f1(e.attr,r.tfName,r.defaultValue||0),o===void 0&&r.tfDeprecatedName&&(o=f1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=x1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=x1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=p1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=p1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=v1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=v1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=y1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=y1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=w1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=w1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=m1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=m1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=g1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=g1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=u$(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=u$(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return a[r.name]={value:o,type:i},a},{})),s}mapFunction(e){const n=e.nodeDef,s=[],a=[];let r={};n!=null&&(r=n.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&a.push(h[d.name]),h),{}));const i=[],o=[];e.signature.inputArg.forEach(h=>{const[d]=fr(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:fS(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),r[d]=p}),Object.keys(r).forEach(h=>{const d=r[h];d.inputNames.forEach((p,f)=>{const[m,,y]=fr(p),g=r[m];if(g.outputs!=null){const x=g.outputs.indexOf(y);if(x!==-1){const b=`${m}:${x}`;d.inputNames[f]=b}}d.inputs.push(g),g.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=fr(u[h.name]),f=r[d];f!=null&&(f.defaultOutput=p,o.push(f))});const c=this.mapArgsToSignature(e);return{nodes:r,inputs:i,outputs:o,weights:a,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s),n),{}),outputs:e.signature.outputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s,e.ret),n),{})}}mapArgToTensorInfo(e,n){let s=e.name;return n!=null&&(s=n[s]),{name:s,dtype:e.type}}}function eX(t){const e=M().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function r3(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):eX(t);return e?n:n.toLowerCase()}function d1(t,e,n,s=!1){const a=t[e];return a!=null?r3(a.s,s):n}function p1(t,e,n){const s=t[e];return s?s.b:n}function f1(t,e,n){const s=t[e]||{},a=s.i!=null?s.i:s.f!=null?s.f:n;return typeof a=="number"?a:parseInt(a,10)}function fS(t){switch(typeof t=="string"&&(t=as[t]),t){case as.DT_FLOAT:case as.DT_HALF:return"float32";case as.DT_INT32:case as.DT_INT64:case as.DT_INT8:case as.DT_UINT8:return"int32";case as.DT_BOOL:return"bool";case as.DT_DOUBLE:return"float32";case as.DT_STRING:return"string";case as.DT_COMPLEX64:case as.DT_COMPLEX128:return"complex64";default:return null}}function u$(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function m1(t,e,n){const s=t[e];return s&&s.type?fS(s.type):n}function g1(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map(a=>fS(a)):n}function i3(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function y1(t,e,n){const s=t[e];return s&&s.shape?i3(s.shape):n}function x1(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function b1(t,e,n,s=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(r=>r3(r,s)):n}function w1(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map(a=>i3(a)):n}function v1(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tX{constructor(e,n,s){this.node=e,this.tensorMap=n,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(a=>this.getInput(a)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(e){return xn(e,this.tensorMap,this.context)}getAttr(e,n){const s=this.node.rawAttrs[e];if(s.tensor!=null)return xn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return f1(this.node.rawAttrs,e,n);if(s.s!=null)return d1(this.node.rawAttrs,e,n);if(s.b!=null)return p1(this.node.rawAttrs,e,n);if(s.shape!=null)return y1(this.node.rawAttrs,e,n);if(s.type!=null)return m1(this.node.rawAttrs,e,n);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return x1(this.node.rawAttrs,e,n);if(s.list.s!=null)return b1(this.node.rawAttrs,e,n);if(s.list.shape!=null)return w1(this.node.rawAttrs,e,n);if(s.list.b!=null)return v1(this.node.rawAttrs,e,n);if(s.list.type!=null)return g1(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:IT,abs:Xt,acos:GT,acosh:HT,add:K,addN:wM,all:Zw,any:Om,argMax:fu,argMin:jT,asin:qT,asinh:XT,atan:KT,atan2:YT,atanh:QT,avgPool:Sy,avgPool3d:ZT,basicLSTMCell:WM,batchNorm:Rp,batchNorm2d:JT,batchNorm3d:eE,batchNorm4d:tE,batchToSpaceND:Cy,bincount:nE,bitwiseAnd:ZM,booleanMaskAsync:OU,broadcastArgs:eB,broadcastTo:Jl,buffer:ke,cast:le,ceil:sE,clipByValue:hs,clone:Ir,complex:Si,concat:Mt,concat1d:aE,concat2d:rE,concat3d:iE,concat4d:oE,conv1d:ev,conv2d:Ni,conv2dTranspose:nv,conv3d:lE,conv3dTranspose:cE,cos:$y,cosh:sv,cosineWindow:Ov,cumprod:Fm,cumsum:av,denseBincount:Q0,depthToSpace:hE,depthwiseConv2d:Dp,diag:CB,dilation2d:dE,div:ge,divNoNan:pE,dot:fE,dropout:VE,einsum:El,elu:Ap,enclosingPowerOfTwo:UE,ensureShape:_B,equal:Na,erf:rv,euclideanNorm:yE,exp:ds,expandDims:Fn,expm1:xE,eye:ov,fft:Py,fill:Ec,floor:Op,floorDiv:Qw,fused:nW,gather:Fp,gatherND:GU,greater:ws,greaterEqual:Mi,ifft:rd,imag:Ny,image:na,inTopKAsync:XU,irfft:Tv,isFinite:bE,isInf:wE,isNaN:vE,leakyRelu:ky,less:nd,lessEqual:Jo,linalg:YE,linspace:rV,localResponseNormalization:SE,log:Ds,log1p:Iy,logSigmoid:CE,logSoftmax:lv,logSumExp:Ty,logicalAnd:Qa,logicalNot:Ey,logicalOr:uv,logicalXor:$E,losses:_G,lowerBound:vV,matMul:Pe,max:ia,maxPool:Ry,maxPool3d:NE,maxPoolWithArgmax:NV,maximum:Pr,mean:Rt,meshgrid:TV,min:td,minimum:Fo,mirrorPad:kE,mod:IE,moments:Dy,movingAverage:LU,mul:_,multiRNNCell:OV,multinomial:zV,neg:yt,norm:_p,notEqual:mu,oneHot:hv,ones:Kn,onesLike:As,op:R,outerProduct:VV,pad:Bi,pad1d:GV,pad2d:jV,pad3d:XV,pad4d:YV,pool:TE,pow:Fr,prelu:_y,print:WT,prod:EE,raggedGather:a4,raggedRange:i4,raggedTensorToTensor:l4,rand:c4,randomGamma:R4,randomNormal:bv,randomStandardNormal:_4,randomUniform:tl,randomUniformInt:z4,range:gu,real:sd,reciprocal:DE,relu:ar,relu6:wv,reshape:F,reverse:ca,reverse1d:W4,reverse2d:H4,reverse3d:q4,reverse4d:K4,rfft:My,round:vv,rsqrt:Sv,scalar:we,scatterND:MU,searchSorted:cv,selu:Cv,separableConv2d:$v,setdiff1dAsync:tU,sigmoid:qa,sign:AE,signal:AG,sin:Nv,sinh:kv,slice:Ve,slice1d:Fy,slice2d:Iv,slice3d:zy,slice4d:ad,softmax:Ly,softplus:Rc,spaceToBatchND:Ay,sparse:OG,sparseToDense:UU,spectral:DG,split:us,sqrt:Cn,square:at,squaredDifference:Ev,squeeze:nl,stack:ps,step:Dc,stridedSlice:_E,string:FG,sub:he,sum:fe,tan:OE,tanh:Oo,tensor:Sa,tensor1d:Mn,tensor2d:Ah,tensor3d:FE,tensor4d:vU,tensor5d:SU,tensor6d:CU,tensorScatterUpdate:NU,tile:ta,topk:LE,transpose:Ue,truncatedNormal:Dv,unique:PE,unsortedSegmentSum:Av,unstack:ha,upperBound:DU,variable:ME,where:En,whereAsync:BE,zeros:Gt,zerosLike:We},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX=(t,e,n,s=$n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(S("a",t,e,n),S("b",t,e,n))];case"AddN":return[s.addN(S("tensors",t,e,n))];case"FloorMod":case"Mod":return[s.mod(S("a",t,e,n),S("b",t,e,n))];case"Mul":return[s.mul(S("a",t,e,n),S("b",t,e,n))];case"RealDiv":case"Div":return[s.div(S("a",t,e,n),S("b",t,e,n))];case"DivNoNan":return[s.divNoNan(S("a",t,e,n),S("b",t,e,n))];case"FloorDiv":return[s.floorDiv(S("a",t,e,n),S("b",t,e,n))];case"Sub":return[s.sub(S("a",t,e,n),S("b",t,e,n))];case"Minimum":return[s.minimum(S("a",t,e,n),S("b",t,e,n))];case"Maximum":return[s.maximum(S("a",t,e,n),S("b",t,e,n))];case"Pow":return[s.pow(S("a",t,e,n),S("b",t,e,n))];case"SquaredDifference":return[s.squaredDifference(S("a",t,e,n),S("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=(t,e,n,s=$n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[s.abs(S("x",t,e,n))];case"Acos":return[s.acos(S("x",t,e,n))];case"Acosh":return[s.acosh(S("x",t,e,n))];case"Asin":return[s.asin(S("x",t,e,n))];case"Asinh":return[s.asinh(S("x",t,e,n))];case"Atan":return[s.atan(S("x",t,e,n))];case"Atan2":return[s.atan2(S("x",t,e,n),S("y",t,e,n))];case"Atanh":return[s.atanh(S("x",t,e,n))];case"Ceil":return[s.ceil(S("x",t,e,n))];case"Complex":return[s.complex(S("real",t,e,n),S("imag",t,e,n))];case"Cos":return[s.cos(S("x",t,e,n))];case"Cosh":return[s.cosh(S("x",t,e,n))];case"Elu":return[s.elu(S("x",t,e,n))];case"Erf":return[s.erf(S("x",t,e,n))];case"Exp":return[s.exp(S("x",t,e,n))];case"Expm1":return[s.expm1(S("x",t,e,n))];case"Floor":return[s.floor(S("x",t,e,n))];case"Log":return[s.log(S("x",t,e,n))];case"Log1p":return[s.log1p(S("x",t,e,n))];case"Imag":return[s.imag(S("x",t,e,n))];case"Neg":return[s.neg(S("x",t,e,n))];case"Reciprocal":return[s.reciprocal(S("x",t,e,n))];case"Real":return[s.real(S("x",t,e,n))];case"Relu":return[s.relu(S("x",t,e,n))];case"Round":return[s.round(S("x",t,e,n))];case"Selu":return[s.selu(S("x",t,e,n))];case"Sigmoid":return[s.sigmoid(S("x",t,e,n))];case"Sin":return[s.sin(S("x",t,e,n))];case"Sign":return[s.sign(S("x",t,e,n))];case"Sinh":return[s.sinh(S("x",t,e,n))];case"Softplus":return[s.softplus(S("x",t,e,n))];case"Sqrt":return[s.sqrt(S("x",t,e,n))];case"Square":return[s.square(S("x",t,e,n))];case"Tanh":return[s.tanh(S("x",t,e,n))];case"Tan":return[s.tan(S("x",t,e,n))];case"ClipByValue":return[s.clipByValue(S("x",t,e,n),S("clipValueMin",t,e,n),S("clipValueMax",t,e,n))];case"Relu6":return[s.relu6(S("x",t,e,n))];case"Rsqrt":return[s.rsqrt(xn(t.inputNames[0],e,n))];case"LeakyRelu":return[s.leakyRelu(S("x",t,e,n),S("alpha",t,e,n))];case"Prelu":return[s.prelu(S("x",t,e,n),S("alpha",t,e,n))];case"IsNan":return[s.isNaN(xn(t.inputNames[0],e,n))];case"IsInf":return[s.isInf(xn(t.inputNames[0],e,n))];case"IsFinite":return[s.isFinite(xn(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){N(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let s=0;s<t.length;s++){const a=t[s],r=e[s];N(a<0||r<0||a===r,()=>n+` Shapes ${t} and ${e} must match`)}}}function c$(t){return!(typeof t=="number"||t.some(e=>e<0))}function sh(t,e,n){let s=S1(t,n);const a=!c$(s);if(a&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&e.forEach(r=>{s=S1(r.shape,s)}),!c$(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function S1(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const a=t[s],r=e[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=a>=0?a:r}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aX{constructor(e,n,s,a,r,i,o){this.name=e,this.dtype=n,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=we(0),un(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Ws(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=n,un(n),s.written=!0,this.tensors[e]=s}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((s,a)=>this.write(s,n[a]))}gather(e,n){if(n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let a=0;a<this.size();a++)e.push(a)}if(e.length===0)return Sa([],[0].concat(this.elementShape));const s=this.readMany(e);return Ws(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ps(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Sa([],[0].concat(this.elementShape));const n=[];for(let a=0;a<this.size();a++)n.push(a);const s=this.readMany(n);return Ws(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Mt(s,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,ha(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let s=0;const a=e.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:n.size/s,i=[];U(()=>{n=F(n,[1,s,r]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:a[l-1],0],h=[1,e[l],r];i[l]=F(Ve(n,c,h),this.elementShape)}return i});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Po{get id(){return this.idTensor.id}constructor(e,n,s,a=-1){this.tensors=e,this.elementShape=n,this.elementDtype=s,e!=null&&e.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);Ws(n,r.shape,"TensorList shape mismatch: "),un(r)}),this.idTensor=we(0),this.maxNumElements=a,un(this.idTensor)}copy(){return new Po([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,s=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ws(e,this.elementShape,"TensorList shape mismatch: ");const a=sh(this.elementShape,this.tensors,e);return U(()=>{const r=this.tensors.map(i=>F(i,a));return ps(r,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=sh(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Ws(a.shape,e,"TensorList shape mismatch: "),F(a,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ws(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");un(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new Po([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)n.tensors[s]=this.tensors[s];return n}getItem(e,n,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ws(this.tensors[e].shape,n,"TensorList shape mismatch: ");const a=sh(this.elementShape,this.tensors,n);return F(this.tensors[e],a)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ws(this.elementShape,n.shape,"TensorList shape mismatch: "),un(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,s){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Ws(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=sh(this.elementShape,this.tensors,s);return e.length===0?Sa([],[0].concat(a)):U(()=>{const r=e.map(i=>F(this.tensors[i],a));return ps(r,0)})}concat(e,n){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ws(this.elementShape,n,"TensorList shape mismatch: ");const s=sh(this.elementShape,this.tensors,n);return this.size()===0?Sa([],[0].concat(s)):U(()=>{const a=this.tensors.map(r=>F(r,s));return Mt(a,0)})}}function rX(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const a=t.shape.slice(1);Ws(a,e,"TensorList shape mismatch: ");const r=ha(t);return new Po(r,e,s)}function iX(t,e,n,s){return new Po([],t,e,s)}function oX(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const a=Math.max(...e);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new Po([],n,t.dtype,s),i=ha(t,0);return e.forEach((o,l)=>{r.setItem(o,i[l])}),r}function lX(t,e,n){let s=0;const a=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);const r=t.shape.slice(1),i=S1(r,n),o=s===0?0:t.size/s,l=U(()=>{const c=[];t=F(t,[1,s,o]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:a[h-1],0],f=[1,e[h],o];c[h]=F(Ve(t,p,f),i)}return t.dispose(),c}),u=new Po([],n,t.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=S("thenBranch",t,e,n),a=S("elseBranch",t,e,n),r=S("cond",t,e,n),i=S("args",t,e,n);return(await r.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=S("body",t,e,n),a=S("cond",t,e,n),r=S("args",t,e,n),i=await n.functionMap[a].executeFunctionAsync(r,n.tensorArrayMap,n.tensorListMap),o=r.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=r;for(;l[0];){const c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=S("pred",t,e,n);return[mr(s)]}case"Switch":{const s=S("pred",t,e,n);let a=S("data",t,e,n);return a.kept||(a=mr(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=t.inputNames.find(a=>xn(a,e,n)!==void 0);if(s){const a=xn(s,e,n);return[mr(a)]}return}case"Enter":{const s=S("frameName",t,e,n),a=S("tensor",t,e,n);return n.enterFrame(s),[mr(a)]}case"Exit":{const s=S("tensor",t,e,n);return n.exitFrame(),[mr(s)]}case"NextIteration":{const s=S("tensor",t,e,n);return n.nextIteration(),[mr(s)]}case"TensorArrayV3":{const s=S("size",t,e,n),a=S("dtype",t,e,n),r=S("elementShape",t,e,n),i=S("dynamicSize",t,e,n),o=S("clearAfterRead",t,e,n),l=S("identicalElementShapes",t,e,n),u=S("name",t,e,n),c=new aX(u,a,s,r,l,i,o);return n.addTensorArray(c),[c.idTensor,we(1)]}case"TensorArrayWriteV3":{const s=S("tensorArrayId",t,e,n),a=S("index",t,e,n),r=S("tensor",t,e,n),i=n.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=S("tensorArrayId",t,e,n),a=S("index",t,e,n);return[n.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=S("tensorArrayId",t,e,n),a=S("indices",t,e,n),r=S("dtype",t,e,n);return[n.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=S("tensorArrayId",t,e,n),a=S("indices",t,e,n),r=S("tensor",t,e,n),i=n.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=S("tensorArrayId",t,e,n),a=n.getTensorArray(s.id),r=S("dtype",t,e,n);return[a.concat(r)]}case"TensorArraySplitV3":{const s=S("tensorArrayId",t,e,n),a=S("tensor",t,e,n),r=S("lengths",t,e,n),i=n.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=S("tensorArrayId",t,e,n),a=n.getTensorArray(s.id);return[we(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=S("tensorArrayId",t,e,n),a=n.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=S("tensorListId",t,e,n),a=S("index",t,e,n),r=S("tensor",t,e,n),i=n.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=S("tensorListId",t,e,n),a=S("index",t,e,n),r=S("elementShape",t,e,n),i=S("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=S("indices",t,e,n),a=S("tensor",t,e,n),r=S("elementShape",t,e,n),i=S("numElements",t,e,n),o=oX(a,s,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=S("elementShape",t,e,n),a=S("elementDType",t,e,n);let r;t.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=S(r,t,e,n),o=t.op==="TensorListReserve"?-1:i,l=iX(s,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=S("tensorListId",t,e,n),a=S("indices",t,e,n),r=S("elementShape",t,e,n),i=S("elementDType",t,e,n);return[n.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=S("tensorListId",t,e,n),a=S("elementShape",t,e,n),r=S("elementDType",t,e,n),i=S("numElements",t,e,n);return[n.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=S("tensor",t,e,n),a=S("elementShape",t,e,n),r=S("elementDType",t,e,n),i=rX(s,a,r);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=S("tensorListId",t,e,n),a=n.getTensorList(s.id),r=S("dtype",t,e,n),i=S("elementShape",t,e,n);return[a.concat(r,i)]}case"TensorListPushBack":{const s=S("tensorListId",t,e,n),a=S("tensor",t,e,n),r=n.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=S("tensorListId",t,e,n),a=S("elementShape",t,e,n),r=S("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=S("tensor",t,e,n),a=S("elementShape",t,e,n),r=S("lengths",t,e,n),i=lX(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=S("tensorListId",t,e,n),a=n.getTensorList(s.id);return[we(a.size(),"int32")]}case"TensorListResize":{const s=S("tensorListId",t,e,n),a=S("size",t,e,n),i=n.getTensorList(s.id).resize(a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(t,e,n){const[s,a]=S("fusedOps",t,e,n),r=s==="biasadd",i=!r,o=a==="prelu",l=s==="fusedbatchnorm",u=S("numArgs",t,e,n);if(r){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&r&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=S("strides",t,e,n),h=Kf(t,e,n),d=S("dataFormat",t,e,n).toUpperCase(),p=S("dilations",t,e,n);let[f,m]=S("args",t,e,n);i&&(m=f,f=void 0);const y=S("leakyreluAlpha",t,e,n);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:y}}const cX=(t,e,n,s=$n)=>{switch(t.op){case"Conv1D":{const a=S("stride",t,e,n),r=S("pad",t,e,n),i=S("dataFormat",t,e,n).toUpperCase(),o=S("dilation",t,e,n);return[s.conv1d(S("x",t,e,n),S("filter",t,e,n),a,r,i,o)]}case"Conv2D":{const a=S("strides",t,e,n),r=Kf(t,e,n),i=S("dataFormat",t,e,n).toUpperCase(),o=S("dilations",t,e,n);return[s.conv2d(S("x",t,e,n),S("filter",t,e,n),[a[1],a[2]],r,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=h$(t,e,n);return[s.fused.conv2d({x:S("x",t,e,n),filter:S("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=h$(t,e,n);return[s.fused.depthwiseConv2d({x:S("x",t,e,n),filter:S("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=S("outputShape",t,e,n),r=S("strides",t,e,n),i=Kf(t,e,n);return[s.conv2dTranspose(S("x",t,e,n),S("filter",t,e,n),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=S("strides",t,e,n),r=Kf(t,e,n),i=S("dilations",t,e,n),o=S("dataFormat",t,e,n).toUpperCase();return[s.depthwiseConv2d(S("input",t,e,n),S("filter",t,e,n),[a[1],a[2]],r,o,[i[1],i[2]])]}case"Conv3D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("dataFormat",t,e,n).toUpperCase(),o=S("dilations",t,e,n);return[s.conv3d(S("x",t,e,n),S("filter",t,e,n),[a[1],a[2],a[3]],r,i,[o[1],o[2],o[3]])]}case"AvgPool":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.avgPool(S("x",t,e,n),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.maxPool(S("x",t,e,n),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n),o=S("includeBatchInIndex",t,e,n),{result:l,indexes:u}=s.maxPoolWithArgmax(S("x",t,e,n),[i[1],i[2]],[a[1],a[2]],r,o);return[l,u]}case"AvgPool3D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.avgPool3d(S("x",t,e,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.maxPool3d(S("x",t,e,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("dilations",t,e,n),o=a[1],l=a[2],u=i[1],c=i[2];return[s.dilation2d(S("x",t,e,n),S("filter",t,e,n),[o,l],r,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX=(t,e,n,s=$n)=>{switch(t.op){case"Fill":{const a=S("shape",t,e,n),r=S("dtype",t,e,n),i=S("value",t,e,n);return[s.fill(a,i,r)]}case"LinSpace":{const a=S("start",t,e,n),r=S("stop",t,e,n),i=S("num",t,e,n);return[s.linspace(a,r,i)]}case"Multinomial":{const a=S("logits",t,e,n),r=S("numSamples",t,e,n),i=S("seed",t,e,n);return[s.multinomial(a,r,i)]}case"OneHot":{const a=S("indices",t,e,n),r=S("depth",t,e,n),i=S("onValue",t,e,n),o=S("offValue",t,e,n),l=S("dtype",t,e,n);return[s.oneHot(a,r,i,o,l)]}case"Ones":return[s.ones(S("shape",t,e,n),S("dtype",t,e,n))];case"OnesLike":return[s.onesLike(S("x",t,e,n))];case"RandomStandardNormal":return[s.randomStandardNormal(S("shape",t,e,n),S("dtype",t,e,n),S("seed",t,e,n))];case"RandomUniform":return[s.randomUniform(S("shape",t,e,n),S("minval",t,e,n),S("maxval",t,e,n),S("dtype",t,e,n))];case"RandomUniformInt":return[s.randomUniformInt(S("shape",t,e,n),S("minval",t,e,n),S("maxval",t,e,n),S("seed",t,e,n))];case"Range":{const a=S("start",t,e,n),r=S("stop",t,e,n),i=S("step",t,e,n);return[s.range(a,r,i,S("dtype",t,e,n))]}case"TruncatedNormal":{const a=S("shape",t,e,n),r=S("mean",t,e,n),i=S("stdDev",t,e,n),o=S("seed",t,e,n);return[s.truncatedNormal(a,r,i,S("dtype",t,e,n),o)]}case"Zeros":return[s.zeros(S("shape",t,e,n),S("dtype",t,e,n))];case"ZerosLike":return[s.zerosLike(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(t,e,n){const s=S("boxes",t,e,n),a=S("scores",t,e,n),r=S("maxOutputSize",t,e,n),i=S("iouThreshold",t,e,n),o=S("scoreThreshold",t,e,n),l=S("softNmsSigma",t,e,n);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}const dX=async(t,e,n,s,a=$n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Ab(t,e,n),h=await a.image.nonMaxSuppressionWithScoreAsync(r,i,o,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Ab(t,e,n),c=S("padToMaxOutputSize",t,e,n),h=await a.image.nonMaxSuppressionPaddedAsync(r,i,o,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Ab(t,e,n);return[await a.image.nonMaxSuppressionAsync(r,i,o,l,u)]}case"Where":{const r=a.cast(S("condition",t,e,n),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(S("x",t,e,n),S("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX=(t,e,n,s=$n)=>{switch(t.op){case"LowerBound":{const a=S("sortedSequence",t,e,n),r=S("values",t,e,n);return[s.lowerBound(a,r)]}case"TopKV2":{const a=S("x",t,e,n),r=S("k",t,e,n),i=S("sorted",t,e,n),o=s.topk(a,r,i);return[o.values,o.indices]}case"UpperBound":{const a=S("sortedSequence",t,e,n),r=S("values",t,e,n);return[s.upperBound(a,r)]}case"Unique":{const a=S("x",t,e,n),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=S("x",t,e,n),r=S("axis",t,e,n),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX=(t,e,n,s=$n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const a=S("default",t,e,n);return[xn(t.name,e,n)||a];case"Placeholder":return[xn(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=S("x",t,e,n);return[mr(c)]}case"IdentityN":return S("x",t,e,n).map(c=>mr(c));case"Snapshot":const r=S("x",t,e,n);return[mr(r)];case"Shape":return[s.tensor1d(S("x",t,e,n).shape,"int32")];case"ShapeN":return S("x",t,e,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(S("x",t,e,n).size,"int32")];case"Rank":return[s.scalar(S("x",t,e,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=S("x",t,e,n),o=S("data",t,e,n),l=S("message",t,e,n),u=S("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mX{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=we(0),this.tensorMap=new Map,un(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),U(()=>{const a=ha(n),r=s.length,i=a.length;N(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let o=0;o<r;o++){const l=s[o],u=a[o];un(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return U(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],o=this.findWithDefault(i,n);a.push(o)}return ps(a)})}findWithDefault(e,n){const s=this.tensorMap.get(e);return s??n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX=async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(t.name);if(a!=null)return[a];{const r=S("keyDType",t,e,n),i=S("valueDType",t,e,n),o=new mX(r,i);return s.addHashTable(t.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=S("tableHandle",t,e,n,s),r=S("keys",t,e,n),i=S("values",t,e,n);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=S("tableHandle",t,e,n,s),r=S("keys",t,e,n),i=S("defaultValue",t,e,n);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=S("tableHandle",t,e,n,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=(t,e,n,s=$n)=>{switch(t.op){case"ResizeBilinear":{const a=S("images",t,e,n),r=S("size",t,e,n),i=S("alignCorners",t,e,n),o=S("halfPixelCenters",t,e,n);return[s.image.resizeBilinear(a,[r[0],r[1]],i,o)]}case"ResizeNearestNeighbor":{const a=S("images",t,e,n),r=S("size",t,e,n),i=S("alignCorners",t,e,n),o=S("halfPixelCenters",t,e,n);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,o)]}case"CropAndResize":{const a=S("image",t,e,n),r=S("boxes",t,e,n),i=S("boxInd",t,e,n),o=S("cropSize",t,e,n),l=S("method",t,e,n),u=S("extrapolationValue",t,e,n);return[s.image.cropAndResize(a,r,i,o,l,u)]}case"ImageProjectiveTransformV3":{const a=S("images",t,e,n),r=S("transforms",t,e,n),i=S("outputShape",t,e,n),o=S("fillValue",t,e,n),l=S("interpolation",t,e,n),u=S("fillMode",t,e,n);return[s.image.transform(a,r,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xX=(t,e,n,s=$n)=>{switch(t.op){case"Equal":return[s.equal(S("a",t,e,n),S("b",t,e,n))];case"NotEqual":return[s.notEqual(S("a",t,e,n),S("b",t,e,n))];case"Greater":return[s.greater(S("a",t,e,n),S("b",t,e,n))];case"GreaterEqual":return[s.greaterEqual(S("a",t,e,n),S("b",t,e,n))];case"Less":return[s.less(S("a",t,e,n),S("b",t,e,n))];case"LessEqual":return[s.lessEqual(S("a",t,e,n),S("b",t,e,n))];case"LogicalAnd":return[s.logicalAnd(S("a",t,e,n),S("b",t,e,n))];case"LogicalNot":return[s.logicalNot(S("a",t,e,n))];case"LogicalOr":return[s.logicalOr(S("a",t,e,n),S("b",t,e,n))];case"Select":case"SelectV2":return[s.where(S("condition",t,e,n),S("a",t,e,n),S("b",t,e,n))];case"BitwiseAnd":return[s.bitwiseAnd(S("a",t,e,n),S("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX=(t,e,n,s=$n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(S("a",t,e,n),S("b",t,e,n),S("transposeA",t,e,n),S("transposeB",t,e,n))];case"Einsum":return[s.einsum(S("equation",t,e,n),...S("tensors",t,e,n))];case"Transpose":return[s.transpose(S("x",t,e,n),S("perm",t,e,n))];case"_FusedMatMul":const[a,r]=S("fusedOps",t,e,n),i=a==="biasadd",o=r==="prelu",l=S("numArgs",t,e,n),u=S("leakyreluAlpha",t,e,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=S("args",t,e,n);return[s.fused.matMul({a:S("a",t,e,n),b:S("b",t,e,n),transposeA:S("transposeA",t,e,n),transposeB:S("transposeB",t,e,n),bias:c,activation:r,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(S("a",t,e,n),S("numLower",t,e,n),S("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wX=(t,e,n,s=$n)=>{switch(t.op){case"EuclideanNorm":return[s.euclideanNorm(S("x",t,e,n),S("axis",t,e,n),S("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(S("x",t,e,n),S("mean",t,e,n),S("variance",t,e,n),S("offset",t,e,n),S("scale",t,e,n),S("epsilon",t,e,n))];case"FusedBatchNormV3":return[s.batchNorm(S("x",t,e,n),S("mean",t,e,n),S("variance",t,e,n),S("offset",t,e,n),S("scale",t,e,n),S("epsilon",t,e,n))];case"LRN":return[s.localResponseNormalization(S("x",t,e,n),S("radius",t,e,n),S("bias",t,e,n),S("alpha",t,e,n),S("beta",t,e,n))];case"Softmax":return[s.softmax(S("x",t,e,n))];case"LogSoftmax":return[s.logSoftmax(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX=(t,e,n,s=$n)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(S("paramsNestedSplits",t,e,n),S("paramsDenseValues",t,e,n),S("indices",t,e,n),S("outputRaggedRank",t,e,n));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(S("starts",t,e,n),S("limits",t,e,n),S("splits",t,e,n));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(S("shape",t,e,n),S("values",t,e,n),S("defaultValue",t,e,n),S("rowPartitionTensors",t,e,n),S("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SX=(t,e,n,s=$n)=>{switch(t.op){case"Max":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.max(S("x",t,e,n),o,l)]}case"Mean":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.mean(S("x",t,e,n),o,l)]}case"Min":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.min(S("x",t,e,n),o,l)]}case"Sum":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.sum(S("x",t,e,n),o,l)]}case"All":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.all(S("x",t,e,n),o,l)]}case"Any":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.any(S("x",t,e,n),o,l)]}case"ArgMax":{const o=S("axis",t,e,n);return[s.argMax(S("x",t,e,n),o)]}case"ArgMin":{const o=S("axis",t,e,n);return[s.argMin(S("x",t,e,n),o)]}case"Prod":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.prod(S("x",t,e,n),o,l)]}case"Cumprod":{const o=S("axis",t,e,n),l=S("exclusive",t,e,n),u=S("reverse",t,e,n);return[s.cumprod(S("x",t,e,n),o,l,u)]}case"Cumsum":{const o=S("axis",t,e,n),l=S("exclusive",t,e,n),u=S("reverse",t,e,n);return[s.cumsum(S("x",t,e,n),o,l,u)]}case"Bincount":const a=S("x",t,e,n),r=S("weights",t,e,n),i=S("size",t,e,n);return[s.bincount(a,r,i)];case"DenseBincount":{const o=S("x",t,e,n),l=S("weights",t,e,n),u=S("size",t,e,n),c=S("binaryOutput",t,e,n);return[s.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX=(t,e,n,s=$n)=>{switch(t.op){case"ConcatV2":case"Concat":{const a=S("n",t,e,n),r=S("axis",t,e,n);let i=S("tensors",t,e,n);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=S("x",t,e,n),r=S("indices",t,e,n);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=S("axis",t,e,n),r=S("batchDims",t,e,n),i=S("x",t,e,n),o=S("indices",t,e,n);return[s.gather(i,s.cast(o,"int32"),a,r)]}case"Reverse":{const a=S("dims",t,e,n),r=[];for(let o=0;o<a.length;o++)a[o]&&r.push(o);const i=S("x",t,e,n);return[s.reverse(i,r)]}case"ReverseV2":{const a=S("axis",t,e,n),r=S("x",t,e,n);return[s.reverse(r,a)]}case"Slice":{const a=S("begin",t,e,n),r=S("size",t,e,n);return[s.slice(S("x",t,e,n),a,r)]}case"StridedSlice":{const a=S("begin",t,e,n),r=S("end",t,e,n),i=S("strides",t,e,n),o=S("beginMask",t,e,n),l=S("endMask",t,e,n),u=S("ellipsisMask",t,e,n),c=S("newAxisMask",t,e,n),h=S("shrinkAxisMask",t,e,n),d=S("x",t,e,n);return[s.stridedSlice(d,a,r,i,o,l,u,c,h)]}case"Pack":return U(()=>{const a=S("axis",t,e,n),r=S("tensors",t,e,n),i=r[0].shape,o=s.squeeze(r[0]).shape,l=r.map(u=>{const c=Ee(u.shape,i);if(!c&&!Ee(s.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,a)]});case"Unpack":{const a=S("axis",t,e,n),r=S("tensor",t,e,n);return s.unstack(r,a)}case"Tile":{const a=S("reps",t,e,n);return[s.tile(S("x",t,e,n),a)]}case"Split":case"SplitV":{const a=S("axis",t,e,n),r=S("numOrSizeSplits",t,e,n),i=S("x",t,e,n);return s.split(i,r,a)}case"ScatterNd":{const a=S("indices",t,e,n),r=S("values",t,e,n),i=S("shape",t,e,n);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=S("x",t,e,n),r=S("indices",t,e,n);return[s.gatherND(a,r)]}case"SparseToDense":{const a=S("sparseIndices",t,e,n),r=S("outputShape",t,e,n),i=S("sparseValues",t,e,n),o=S("defaultValue",t,e,n);return[s.sparseToDense(a,i,r,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}case"TensorScatterUpdate":{const a=S("indices",t,e,n),r=S("values",t,e,n),i=S("tensor",t,e,n);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X=(t,e,n,s=$n)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(S("indices",t,e,n),S("values",t,e,n),S("denseShape",t,e,n),S("defaultValue",t,e,n));return[a,r,i,o]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(S("inputIndices",t,e,n),S("inputShape",t,e,n),S("newShape",t,e,n));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(S("data",t,e,n),S("indices",t,e,n),S("segmentIds",t,e,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(S("data",t,e,n),S("indices",t,e,n),S("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NX=(t,e,n,s=$n)=>{switch(t.op){case"FFT":return[s.fft(S("x",t,e,n))];case"IFFT":return[s.ifft(S("x",t,e,n))];case"RFFT":return[s.rfft(S("x",t,e,n))];case"IRFFT":return[s.irfft(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX=(t,e,n,s=$n)=>{switch(t.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(S("input",t,e,n),S("pattern",t,e,n),S("rewrite",t,e,n),S("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(S("data",t,e,n),S("dataSplits",t,e,n),S("separator",t,e,n),S("nGramWidths",t,e,n),S("leftPad",t,e,n),S("rightPad",t,e,n),S("padWidth",t,e,n),S("preserveShortSequences",t,e,n));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(S("input",t,e,n),S("delimiter",t,e,n),S("skipEmpty",t,e,n));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(S("input",t,e,n),S("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=(t,e,n,s=$n)=>{switch(t.op){case"Cast":return[s.cast(S("x",t,e,n),S("dtype",t,e,n))];case"ExpandDims":{const a=S("axis",t,e,n);return[s.expandDims(S("x",t,e,n),a)]}case"Squeeze":{const a=S("axis",t,e,n);return[s.squeeze(S("x",t,e,n),a)]}case"Reshape":return[s.reshape(S("x",t,e,n),S("shape",t,e,n))];case"EnsureShape":return[s.ensureShape(S("x",t,e,n),S("shape",t,e,n))];case"MirrorPad":return[s.mirrorPad(S("x",t,e,n),S("padding",t,e,n),S("mode",t,e,n))];case"PadV2":case"Pad":return[s.pad(S("x",t,e,n),S("padding",t,e,n),S("constantValue",t,e,n))];case"SpaceToBatchND":{const a=S("blockShape",t,e,n),r=S("paddings",t,e,n);return[s.spaceToBatchND(S("x",t,e,n),a,r)]}case"BatchToSpaceND":{const a=S("blockShape",t,e,n),r=S("crops",t,e,n);return[s.batchToSpaceND(S("x",t,e,n),a,r)]}case"DepthToSpace":{const a=S("blockSize",t,e,n),r=S("dataFormat",t,e,n).toUpperCase();return[s.depthToSpace(S("x",t,e,n),a,r)]}case"BroadcastTo":return[s.broadcastTo(S("x",t,e,n),S("shape",t,e,n))];case"BroadcastArgs":return[s.broadcastArgs(S("s0",t,e,n),S("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(t,e,n,s,a=U){const r=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>nX(i,o,l));case"basic_math":return a(()=>sX(i,o,l));case"control":return uX(i,o,l);case"convolution":return a(()=>cX(i,o,l));case"creation":return a(()=>hX(i,o,l));case"dynamic":return dX(i,o,l);case"evaluation":return a(()=>pX(i,o,l));case"image":return a(()=>yX(i,o,l));case"graph":return a(()=>fX(i,o,l));case"logical":return a(()=>xX(i,o,l));case"matrices":return a(()=>bX(i,o,l));case"normalization":return a(()=>wX(i,o,l));case"ragged":return a(()=>vX(i,o,l));case"reduction":return a(()=>SX(i,o,l));case"slice_join":return a(()=>CX(i,o,l));case"sparse":return a(()=>$X(i,o,l));case"spectral":return a(()=>NX(i,o,l));case"string":return a(()=>kX(i,o,l));case"transformation":return a(()=>IX(i,o,l));case"hash_table":return gX(i,o,l,s);case"custom":const u=a3(i.op);if(u&&u.customExecutor)return u.customExecutor(new tX(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Eo(r)?r.then(i=>[].concat(i)):[].concat(r)}class p${constructor(e={},n={},s={},a={},r){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const s=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(t,e,n,s){const a=new Set,r=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(t).map(d=>is(d)[0]));s=s||[];const c=new Set(s.map(d=>is(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((ao(d)||FX(d)||zX(d))&&i==null&&(i=d,o=i.children.map(p=>p.name).filter(p=>a.has(p))),a.add(d.name),n[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){r.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:t,outputs:e,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:o}}function TX(t,e){const{usedNodes:n,inputs:s}=e,a=Object.keys(s).map(y=>is(y)[0]).map(y=>t.nodes[y]),r=t.initNodes||[],i=y=>n.has(typeof y=="string"?y:y.name);function o(y){return[...new Map(y.map(g=>[g.name,g])).values()]}const l=o([...a,...t.weights,...r]).filter(i),u=o([...l,...Object.values(t.nodes)]).filter(i),c=new Map(u.map(y=>[y.name,y])),h={};for(const y of u){h[y.name]=h[y.name]||0;for(const g of y.children)i(g)||(h[g.name]=Number.POSITIVE_INFINITY),h[g.name]=(h[g.name]||0)+1}const d=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),p=[...d];for(;d.length>0;){const y=d.pop(),g=c.get(y);for(const x of g.children.filter(i))--h[x.name]===0&&(p.push(x.name),d.push(x.name))}const f=p.map(y=>c.get(y)),m=EX(f,l);return RX(m,l),m}function EX(t,e){const n=new Map(t.map(i=>[i.name,i])),s=e.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),o=n.get(i);for(const l of o.children)!n.has(l.name)||a.has(l.name)||(a.add(l.name),s.push(l.name))}return t.filter(i=>a.has(i.name))}class $f extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function RX(t,e){const n=new Map(t.map((o,l)=>[o.name,l])),s=new Set(e.map(o=>o.name)),a=o=>s.has(typeof o=="string"?o:o.name),r=new Set(t.map(o=>o.name)),i=o=>r.has(typeof o=="string"?o:o.name);for(const o of t){for(const l of o.children.filter(i)){if(!n.has(l.name))throw new $f(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new $f(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(const l of o.inputs){if(!n.has(l.name))throw new $f(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new $f(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function DX(t){const e=new Map(t.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,s=t.map((o,l)=>ao(o)?n:l),a=o=>{const l=s[e.get(o.name)];return l??-1},r=t.map((o,l)=>o.children.map(a).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let o=0;o<t.length;++o){const l=r[o];if(l===n)continue;const u=t[o],c=t[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}const AX=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),_X=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),OX=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ao(t){return AX.has(t.op)}function FX(t){return _X.has(t.op)}function zX(t){return OX.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jm{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(s=>e[s].map(a=>a.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new jm(e.functions[s],this)})}getCompilationKey(e,n){const s=e.map(r=>r.name).sort(),a=n.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,n){const s=f$(e,n,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const u=n.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${a}]`)}const o=TX(this.graph,s),l=DX(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return un(n),n}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,s])=>[n,this.cloneTensorList(s)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const a=s.map(d=>this.graph.nodes[is(d)[0]]),r=n.map(d=>is(d)[0]),i=new Set(r);let o=r.map(d=>this.graph.nodes[d]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(a,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return U(()=>{const d=new p$(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[x,b]=is(g,d),w=[];w[b]=e[g],p[x]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(w))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:y}=u;for(const g of m){if(p[g.name])continue;const x=d$(g,p,d,this._resourceManager);if(Eo(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);p[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,p,d,f,i,y.get(g.name))}return this.parent==null&&d.dispose(f),n.map(g=>xn(g,p,d))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(a=>a.id)));return new Set(n)}checkTensorForDisposal(e,n,s,a,r,i,o){if(!(ao(n)||i.has(e))){for(const l of s[e])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(const l of n.inputs){if(ao(l))continue;const u=o$(l.name,s,a);if(u!=null)for(const c of u){if(!c||c.kept||r.has(c.id))continue;const h=o[c.id];h===1?(c.dispose(),delete o[c.id]):h!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,s,a,r,i){function o(l){return ao(l)||r.has(l.name)}if(!(ao(e)||i==null))for(const l of i){if(o(l))continue;const u=o$(l.name,n,s);for(const c of u)!c||c.kept||a.has(c.id)||c.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const i=new p$(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,i,n,s),l=n.map(d=>xn(d,o,i)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(e,n,s){const a=e.reduce((r,i,o)=>(r[this.inputs[o].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,n,s)}async executeWithControlFlow(e,n,s,a){const r=Object.keys(e),i=r.map(w=>this.graph.nodes[is(w)[0]]),o=s.map(w=>is(w)[0]),l=new Set(o);let u=o.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:p}=f$(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[v,C]=is(w),$=[];$[C]=e[w],m[v]=$});const y={},g=this.getFrozenTensorIds(m),x={};for(;f.length>0;){const w=this.processStack(i,f,n,m,x,g,l,y,c);await Promise.all(w)}d==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter(w=>!ao(w)&&!xn(w.name,m,n)).map(w=>w.name);if(b.length>0){let w="";throw d!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${h}]. ${w}`)}return m}processStack(e,n,s,a,r,i,o,l,u){const c=[];for(;n.length>0;){const h=n.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&S("isConstant",h.node,a,s)&&([d]=fr(h.node.name,s)),a[h.node.name]==null){const p=d$(h.node,a,s,this._resourceManager);d||([d]=fr(h.node.name,s));const f=s.currentContext;Eo(p)?c.push(p.then(m=>(a[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,a,s,i,o,l),this.processChildNodes(h.node,n,s,a,r,u),m))):(a[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,a,s,i,o,l),this.processChildNodes(h.node,n,s,a,r,u))}else this.processChildNodes(h.node,n,s,a,r,u)}return c}processChildNodes(e,n,s,a,r,i){e.children.forEach(o=>{const[l]=fr(o.name,s);r[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!xn(u,a,s))&&(r[l]=!0,n.push({contexts:s.currentContext,node:o})):o.inputNames.every(u=>!!xn(u,a,s))&&(r[l]=!0,n.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const s=e[n],[a]=is(n),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,o=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);N(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&N(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var n,s;const a={};for(const r in e){const i=(s=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const n=Object.keys(e).filter(s=>{const[a]=is(s);return this.graph.nodes[a]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[n];return r!=null?r.name:n},{})}checkOutputs(e){e.forEach(n=>{const[s]=is(n);if(!this.graph.nodes[s])throw new Error(`The output '${n}' is not found in the graph`)})}}class LX{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX="?tfjs-format=file",MX="model.json";class BX{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},s=lR){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=s,n==null&&(this.loadOptions={}),this.resourceManager=new LX}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Eo(e)?e.then(n=>n.getWeightStream==null?this.loadSync(n):this.loadStreaming(n)):this.loadSync(e)}loadSync(e){const n=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,n)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const n=await DT(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,n)}loadWithWeightMap(e,n){this.artifacts=e;const s=this.artifacts.modelTopology;let a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=a,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new jm(l$.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const r=l$.Instance.transformGraph(e.modelInitializer);this.initializer=new jm(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof Nt?[e]:e,s={};return n.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return e}predict(e,n){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,n){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var n;if(!(e instanceof Nt)&&!Array.isArray(e)){const r=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(r!=null)for(const i in r){const o=r[i];o.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?r[i]=this.resourceIdToCapturedInput[c]:r[i]=e[a++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,s=Object.keys(n);for(let a=0;a<s.length;a++){const r=s[a],i=n[r];this.resourceIdToCapturedInput[i.resourceId]=e[a]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=this.executor.execute(e,n);return s.length>1?s:s[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=await this.executor.executeAsync(e,n);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,s)=>(n[s]=[e[s]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&_e(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function VX(t,e={},n=lR){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=UX(t));const s=new BX(t,e,n);return await s.load(),s}function UX(t){return t.endsWith("/")||(t=t+"/"),`${t}${MX}${PX}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var m$;(function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"})(m$||(m$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&N(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX=_v;class $x extends Sg{nextDataId(){return $x.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Dw(this,Wn())}write(e,n,s){this.firstUse&&(this.firstUse=!1,M().get("IS_NODE")&&Ns(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:s,refCount:1}),a}makeTensorInfo(e,n,s){let a;if(n==="string"&&s!=null&&s.length>0&&Au(s[0])){const r=s.map(i=>kr(i));a=this.write(r,e,n)}else a=this.write(s,e,n);return{dataId:a,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,s,a,r){this.data.set(e,{values:n,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:s}=this.data.get(e);if(n==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return ka(a,r)}return jf(this.data.get(e).values,n)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(a=>$a(a));return ke(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}makeOutput(e,n,s){return Wn().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=Gn();return e(),{kernelMs:Gn()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){me([e],"where");const n=this.readSync(e.dataId);return WX(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}$x.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const GX=t=>{const{x:e}=t.inputs,n=t.backend;me(e,"abs");let s=new Float32Array(L(e.shape));const a=n.data.get(e.dataId).values;return s=o3(a),n.makeOutput(s,e.shape,e.dtype)},HX={kernelName:Td,backendName:"cpu",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(t){return(e,n,s,a,r)=>{const i=Se(e,n),o=i.length,l=xe(i),u=L(i),c=tn(r,u),h=e.length,d=n.length,p=xe(e),f=xe(n),m=ki(e,i),y=ki(n,i);if(m.length+y.length===0)for(let g=0;g<c.length;++g)c[g]=t(s[g%s.length],a[g%a.length]);else for(let g=0;g<c.length;++g){const x=_u(g,o,l),b=x.slice(-h);m.forEach($=>b[$]=0);const w=ja(b,h,p),v=x.slice(-d);y.forEach($=>v[$]=0);const C=ja(v,d,f);c[g]=t(s[w],a[C])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(t){const{inputs:e,backend:n}=t,{real:s,imag:a}=e,r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",r),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const jX={kernelName:Rg,backendName:"cpu",kernelFunc:os};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(t,e,n="float32"){if(n==="complex64"){const a=qm(t,e,"float32"),r=qm(t,e,"float32");return os({inputs:{real:a,imag:r},backend:t})}const s=Sn(L(e),n);return t.makeTensorInfo(e,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const qX={kernelName:ec,backendName:"cpu",kernelFunc:Ja};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mo(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.data.get(s.dataId).complexTensorInfos.real,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const XX={kernelName:ay,backendName:"cpu",kernelFunc:Mo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(t,e,n,s){if(s==="int32"){const a=Int32Array.from(t);return[e,"int32",a]}if(s==="bool"){const a=Zo([0],n),[r,i]=Ut((o,l)=>o!==l?1:0)(e,[],t,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Di(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return Ja({inputs:{x:a},backend:n});const c=qm(n,a.shape,a.dtype),h=Di({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),d=os({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(a.dtype==="complex64"){const c=Mo({inputs:{input:a},backend:n}),h=Di({inputs:{x:c},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(c),h}if(!Ow(a.dtype,r)){const c=Ja({inputs:{x:a},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:r}}const i=n.data.get(a.dataId).values,[o,l,u]=l3(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}const KX={kernelName:Vu,backendName:"cpu",kernelFunc:Di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(t,e,n,s){return n==null?({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;me([i,o],t);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h=i.dtype==="string"?Ia(u):u,d=i.dtype==="string"?Ia(c):c,p=s||i.dtype,[f,m]=e(i.shape,o.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;if(i.dtype==="complex64"||o.dtype==="complex64"){const u=Di({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Di({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(m.dataId),g=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,b=l.data.get(g.dataId).values,w=l.data.get(x.dataId).values,[v,C,$]=n(i.shape,o.shape,p,f,b,w),k=l.makeTensorInfo($,"float32",v),T=l.makeTensorInfo($,"float32",C),E=os({inputs:{real:k,imag:T},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(k),l.disposeIntermediateTensorInfo(T),E}else{const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,o.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function mS(t){return(e,n,s,a,r,i)=>{const o=Se(e,n),l=L(o),u=o.length,c=xe(o),h=tn("float32",l),d=tn("float32",l),p=ki(e,o),f=ki(n,o),m=ka(s,a),y=ka(r,i),g=e.length,x=xe(e),b=n.length,w=xe(n);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const C=v%m.length,$=v%y.length,k=t(m[C*2],m[C*2+1],y[$*2],y[$*2+1]);h[v]=k.real,d[v]=k.imag}else for(let v=0;v<h.length;v++){const C=_u(v,u,c),$=C.slice(-g);p.forEach(B=>$[B]=0);const k=ja($,g,x),T=C.slice(-b);f.forEach(B=>T[B]=0);const E=ja(T,b,w),O=t(m[k*2],m[k*2+1],y[E*2],y[E*2+1]);h[v]=O.real,d[v]=O.imag}return[h,d,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3=Ut((t,e)=>t+e),YX=mS((t,e,n,s)=>({real:t+n,imag:e+s})),xu=an(Yo,u3,YX),QX={kernelName:Yo,backendName:"cpu",kernelFunc:xu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(t,e,n,s,a){const r=L(s),i=Sn(a,n);for(let o=0;o<t.length;o++){const l=t[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(r>0?i[l]+=e[o]:i[l]+=1)}return i}function c3(t,e,n,s=!1){const a=t.shape[0],r=t.shape[1],i=ke([a,n],e.dtype);for(let o=0;o<a;o++)for(let l=0;l<r;l++){const u=t.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?i.set(1,o,u):e.size>0?i.set(i.get(o,u)+e.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h3=Ut((t,e)=>t&e),ZX=an(Tg,h3),JX={kernelName:Tg,backendName:"cpu",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(t){return(e,n,s)=>{const a=_t(n,e.length);for(let r=0;r<e.length;++r)a[r]=t(e[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(t,e,n){const s=ir(e);return Wi(t,s,n)}function Wi(t,e,n){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;me(i,t);const o=r,l=o.data.get(i.dataId).values;let u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Ia(l)}else u=l;const c=n||i.dtype,h=e(u,c,a);return o.makeTensorInfo(i.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d3=ir(t=>Math.ceil(t)),eK=Wi(Uu,d3),tK={kernelName:Uu,backendName:"cpu",kernelFunc:eK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(t,e,n,s){const a=_t(n,L(e));if(s&&n!=="string"){let r=0;t.forEach(i=>{const o=L(i.shape);a.set(i.vals,r),r+=o})}else{let r=0;t.forEach(i=>{const o=n==="string"?Ia(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+r;for(let h=0;h<i.shape[1];++h)a[c+h]=o[l++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=Ut((t,e)=>t===e?1:0),m3=an(Gd,f3,null,"bool"),nK={kernelName:Gd,backendName:"cpu",kernelFunc:m3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3=ir(t=>Math.exp(t)),y3=Wi(Ku,g3,"float32"),sK={kernelName:Ku,backendName:"cpu",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x3=ir(t=>Math.expm1(t)),aK=Wi(Yu,x3),rK={kernelName:Yu,backendName:"cpu",kernelFunc:aK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b3=ir(t=>Math.floor(t)),iK=Wi(Qu,b3),oK={kernelName:Qu,backendName:"cpu",kernelFunc:iK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3=Ut((t,e)=>Math.floor(t/e)),lK=an(Zu,w3,null,"int32"),uK={kernelName:Zu,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(t,e,n,s,a,r,i,o,l){const u=ke([s,r],n);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<a;p++){const f=t[c*a+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let p=0;p<r;p++)u.values[c*r+p]=e.get(...e.indexToLoc(d*r+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(t,e,n){const s=ke(n,t.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),o=i[0],l=i[2],u=e.locToIndex([o,l]);i[2]=e.values[u];const c=t.locToIndex(i);0<=c&&c<t.values.length&&(s.values[a]=t.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3=Ut((t,e)=>t>e?1:0),cK=an(Xd,C3,null,"bool"),hK={kernelName:Xd,backendName:"cpu",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3=Ut((t,e)=>t>=e?1:0),dK=an(Ju,$3,null,"bool"),pK={kernelName:Ju,backendName:"cpu",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3=Ut((t,e)=>t<e?1:0),fK=an(Yd,N3,null,"bool"),mK={kernelName:Yd,backendName:"cpu",kernelFunc:fK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k3=Ut((t,e)=>t<=e?1:0),gK=an(Qd,k3,null,"bool"),yK={kernelName:Qd,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(t,e,n){const s=(e-t)/(n-1),a=Sn(n,"float32");a[0]=t;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=ir(t=>Math.log(t)),xK=Wi(ac,T3),bK={kernelName:ac,backendName:"cpu",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(t,e,n,s){const a=tn(s,L(n));for(let r=0;r<a.length;++r){const i=r*e;let o=t[i];for(let l=0;l<e;++l){const u=t[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[r]=o}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3=Ut((t,e)=>Math.max(t,e)),wK=an(ic,R3),vK={kernelName:ic,backendName:"cpu",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D3=Ut((t,e)=>Math.min(t,e)),SK=an(oc,D3),CK={kernelName:oc,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS=Ut((t,e)=>t*e),$K=mS((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n})),Nx=an(uc,yS,$K),NK={kernelName:uc,backendName:"cpu",kernelFunc:Nx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(t,e,n){const s=Fi(-1,n);return yS([],e,s,t,n)}function kK(t){const{inputs:e,backend:n}=t,{x:s}=e;me(s,"neg");const a=n.data.get(s.dataId).values,[r,i]=A3(a,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,r)}const IK={kernelName:lp,backendName:"cpu",kernelFunc:kK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _3=Ut((t,e)=>t!==e?1:0),TK=an(up,_3,null,"bool"),EK={kernelName:up,backendName:"cpu",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(t,e,n,s,a){const r=e.length,i=L(e),o=xe(e),l=xe(a),u=tn(n,L(a));for(let c=0;c<i;++c){const h=_u(c,r,o),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=ja(d,r,l);u[p]=t[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(t){const{inputs:e,attrs:n,backend:s}=t,{x:a}=e,{perm:r}=n;me(a,"transpose");const i=a.shape.length,o=new Array(i);for(let h=0;h<o.length;h++)o[h]=a.shape[r[h]];const l=s.data.get(a.dataId).values,u=xS(l,a.shape,a.dtype,r,o);return{dataId:s.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const RK={kernelName:bo,backendName:"cpu",kernelFunc:es};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(t,e,n,s){const[a,r]=Bt(t,s),i=dn(e,"int32"),o=Sn(L(a),i),l=L(r);for(let u=0;u<o.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=n[c+d];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}function DK(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"prod");const o=a.shape.length,l=Ie(r,a.shape),u=tt(l,o);let c=l,h=a;const d=[];u!=null&&(h=es({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(h),c=dt(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:y}=O3(h.shape,h.dtype,p,c);let g=m;return i&&(g=Ft(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(g,y,f)}const AK={kernelName:mp,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(t,e,n){t.forEach((s,a)=>{if(s<0||s>=n){const r=_u(a,e.length,xe(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${n})`)}})}function OK(t,e){for(let n=0;n<t.length;++n){const s=t[n],a=n===t.length-1?e:t[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function FK(t,e,n,s){const a=[];let r=0;const i=e.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);OK(n,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)o[u].push(h*c)}for(let u=0;u<t.length;++u){let c=t[u],h=t[u]+1;for(let d=0;d<n.length;++d){const p=n[d],f=d+e.length-1;if(f>=0){const m=o[f],y=m[m.length-1]-p[c];for(let g=c;g<h;++g)o[f].push(p[g+1]+y)}c=p[c],h=p[h]}h!==c&&(a.push([c,h]),r+=h-c)}return{outSplits:o,valueSlices:a,numValues:r}}function zK(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,a=_t("int32",s);e.push(a),t[n].forEach((r,i)=>a[i]=r)}return e}function g$(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function LK(t,e,n,s,a,r){const i=g$(e,2)[1],o=g$(r,2)[1];let l=0;for(const u of n)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)a[l*o+h]=t[c*i+h];++l}}function PK(t,e,n,s,a){const r=e.slice();r[0]=a;const i=_t(n,L(r)),o=t.length,l=o===0?0:o/e[0];return LK(t,e,s,l,i,r),[i,r]}function F3(t,e,n,s,a,r,i,o){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(_K(r,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=FK(r,i,t,u),p=zK(c),f=PK(n,s,a,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y$=2147483647;function z3(t,e,n,s,a,r,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=a.length===0,u=i.length===0,c=[];o||c.push(e[0]),l||c.push(a[0]),u||c.push(i[0]);for(let y=1;y<c.length;++y)if(c[y]!==c[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=_t("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const g=o?t[0]:t[y],x=l?s[0]:s[y],b=u?r[0]:r[y];if(b===0)throw new Error("Requires delta != 0");let w;if(b>0&&x<g||b<0&&x>g)w=0;else if(w=Math.ceil(Math.abs((x-g)/b)),w>y$)throw new Error(`Requires ((limit - start) / delta) <= ${y$}`);d[y+1]=d[y]+w}const p=d[h],f=_t(n,p);let m=0;for(let y=0;y<h;++y){const g=d[y+1]-d[y];let x=o?t[0]:t[y];const b=u?r[0]:r[y];for(let w=0;w<g;++w)f[m++]=x,x+=b}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bs=wa;class Xm{constructor(e,n,s,a,r,i,o,l,u,c){this.shape=e,this.shapeShape=n,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=bR(c),this.raggedRank=wR(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Bs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Bs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Bs.VALUE_ROWIDS:return Xm.getMaxWidthValueRowID(n);case Bs.ROW_SPLITS:return Xm.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Bs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let s=0;for(let a=0;a<n-1;++a){const r=e[a+1]-e[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let s=0,a=e[0],r=0;for(let i=1;i<n;++i){const o=e[i];o!==a&&(a=o,r=Math.max(i-s,r),s=i)}return Math.max(n-s,r)}tensorShapeFromTensor(e,n,s=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return b$(e,s)}calculateOutputSize(e){const n=this.valuesShape,s=this.defaultValueShape;vR(s,n);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=xR(this.raggedRank,a,n);i[0]<0&&(i[0]=e);for(let o=1;o<=this.raggedRank;++o)i[o]<0&&(i[o]=this.getMaxWidth(o));return i}calculateFirstParentOutputIndex(e,n,s){const a=Math.min(e,s),r=[];let i=0;for(let o=0;o<a;++o,i+=n)r.push(i);for(let o=a;o<e;++o)r.push(-1);return N(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,n,s,a){const r=e.length,i=[];for(let o=0;o<r-1;++o){const l=e[o+1]-e[o];let u=Math.min(a,l),c=n[o];c===-1&&(u=0);for(let h=0;h<u;++h)i.push(c),c+=s;for(let h=0;h<l-u;++h)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,n,s,a){const r=e.length,i=[];if(r===0)return[];let o=0,l=e[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];i.push(u);for(let c=1;c<r;++c){const h=e[c];if(h===l)u>=0&&(++o,o<a?u+=s:u=-1);else{if(o=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,n,s,a){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Bs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,n,s,a);case Bs.ROW_SPLITS:if(r.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(r,n,s,a);default:throw new Error(`Unsupported partition type: ${Bs[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Bs.FIRST_DIM_SIZE:return e[0];case Bs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Bs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Bs[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let l=a.length-2;l>=0;--l)a[l]=a[l+1]*s[l+1];const r=b$(s,!1),i=_t(this.valuesDType,L(r));if(a[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(n,a[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,a[u],s[u]);this.setOutput(this.raggedRank,l,i,r)}return[r,i]}setOutput(e,n,s,a){if(s.length===0)return;const r=this.values,i=s;let o=a.slice();o=o.slice(e+1);const l=L(o),u=n.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;U(()=>{const m=F(c,f);c=Jl(m,o).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let m=f<u?n[f]:-1;if(m===p){++p;continue}if(d<p){const y=r.subarray(h*l),g=i.subarray(d*l),x=(p-d)*l;x$(g,y,x)}if(f>=u){const y=s.length;m=Math.floor(y/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const y=i.slice(p*l);x$(y,c,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function x$(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function b$(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function L3(t,e,n,s,a,r,i,o,l,u){return new Xm(t,e,n,s,a,r,i,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(t,e,n,s){const a=t===e,r=t<e&&n<0,i=e<t&&n>1;if(a||r||i)return Sn(0,s);const o=Math.abs(Math.ceil((e-t)/n)),l=Sn(o,s);e<t&&n===1&&(n=-1),l[0]=t;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M3=ir(t=>1/Math.sqrt(t)),MK=Wi(mc,M3),BK={kernelName:mc,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(t,e,n,s,a,r,i,o,l,u){const c=[s/a,a],h=t.values,d=e.values;if(s===0)return ke(n,e.dtype);const p=l instanceof Zt?l:ke(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<r;f++){const m=[];let y=0;for(let g=0;g<i;g++){const x=h[f*i+g];m.push(x),y+=x*o[g]}if(y<0||y>=s/a)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let g=0;g<a;g++)u?p.values[y*a+g]+=d[f*a+g]:p.values[y*a+g]=e.rank===0?d[0]:d[f*a+g]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=ir(t=>1/(1+Math.exp(-t))),B3=Ze(wc,t=>1/(1+Math.exp(-t))),UK={kernelName:wc,backendName:"cpu",kernelFunc:B3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(t,e,n,s,a){const r=Vv(s,e,n),i=L(n),o=xe(s);if(r){const h=Uv(e,o);return a==="string"?t.slice(h,h+i):t.subarray(h,h+i)}const l=a==="string"?Ia(t):t,u=ke(s,a,l),c=ke(n,a);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+e[m]);c.set(u.get(...p),...d)}return a==="string"?BR(c.values):c.values}function Bo(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,size:i}=s;me(a,"slice");const[o,l]=zp(a,r,i);qy(a,o,l);const u=n.data.get(a.dataId).values,c=V3(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,c)}const WK={kernelName:vp,backendName:"cpu",kernelFunc:Bo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(t,e,n,s,a,r,i){const o=e[0],l=r[0],u=new Array(l),c=new Array(o),h=e[1];if(l===0){if(o!==0)throw new Error(TR(o));const y=_t(n,0),g=_t(a,0);return[y,[0,h],g,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let y=0;y<o;++y){const g=t[y*h];if(g<0)throw new Error(ER(y,g));if(g>=l)throw new Error(RR(y,g,l));++f[g],d=d&&g>=p,p=g}let m=!0;for(let y=0;y<l;++y){const g=f[y]===0;u[y]=g,m=m&&!g,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(m&&d){const y=t,g=s;for(let x=0;x<o;++x)c[x]=x;return[y,[o,h],g,u,c]}else{const y=f[l-1],g=_t(n,y*h),x=_t(a,y),b=new Array(l).fill(0);for(let w=0;w<o;++w){const v=t[w*h],C=b[v],$=(v===0?0:f[v-1])+C;b[v]++;for(let k=0;k<h;++k)g[$*h+k]=t[w*h+k];x[$]=s[w],c[w]=$}for(let w=0;w<l;++w)if(b[w]===0){const C=w===0?0:f[w-1];g[C*h+0]=w;for(let $=1;$<h;++$)g[C*h+$]=0;x[C]=i}return[g,[y,h],x,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(t,e,n,s,a){const r=L(s),i=e[0],o=a.length,l=[];let u=1,c=-1;for(let y=0;y<o;++y){const g=a[y];if(g===-1){if(c!==-1)throw new Error(DR(c,y));c=y,l.push(1)}else{if(g<0)throw new Error(AR(y,g));u*=g,l.push(g)}}if(c!==-1){if(u<=0)throw new Error(_R());const y=Math.trunc(r/u);if(u*y!==r)throw new Error(OR(s,l));l[c]=y}if(L(l)!==r)throw new Error(FR(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let y=d-2;y>=0;--y)p[y]=p[y+1]*s[y+1]}const f=[];if(o>0){f[o-1]=1;for(let y=o-2;y>=0;--y)f[y]=f[y+1]*l[y+1]}const m=_t(n,i*o);for(let y=0;y<i;++y){let g=0;for(let x=0;x<d;++x)g+=t[y*d+x]*p[x];for(let x=0;x<o;++x)m[y*o+x]=Math.trunc(g/f[x]),g%=f[x]}return[m,[i,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(t,e,n,s,a,r=!1,i=0){const o=s.length,l=[e[0],t.length/e[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(t1());const d=e.slice();d[0]=h;const p=d.reduce((b,w)=>b*w,1),f=_t(n,p);if(o===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(t1());let m=0,y=1,g=0,x=a[m];for(;;){let b=0;if(y<o){if(b=a[y],x===b){++y;continue}if(x>=b)throw new Error(zR())}if(x<0||x>=h)throw new Error(LR(x,h));x>g&&f.fill(i,g*u,x*u);for(let w=m;w<y;++w){const v=s[w];if(v<0||v>=l[0])throw new Error(PR(w,s[w],l[0]));for(let C=0;C<u;C++)f[x*u+C]+=t[v*u+C]}if(r)for(let w=0;w<u;w++)f[x*u+w]/=y-m;if(m=y,++y,g=x+1,x=b,y>o)break}return g<h&&f.fill(i,g*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK=ir(t=>Math.sqrt(t)),HK=Ze(Sc,t=>Math.sqrt(t)),jK={kernelName:Sc,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G3=Ut((t,e)=>{const n=t-e;return n*n}),qK=an(Cc,G3),XK={kernelName:Cc,backendName:"cpu",kernelFunc:qK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3=ir((t,e)=>{const{pattern:n,replaceGlobal:s,rewrite:a}=e;return t.replace(new RegExp(n,s?"g":""),a)}),KK=Wi(fy,H3),YK={kernelName:fy,backendName:"cpu",kernelFunc:KK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(t,e,n,s){const a=ke(t,e.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+s[l];a.set(e.get(...o),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QK{constructor(e,n,s,a,r,i){this.separator=kr(e),this.nGramWidths=n,this.leftPad=kr(s),this.rightPad=kr(a),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const s=this.getPadWidth(n);return Math.max(0,e+2*s-n+1)}createNGrams(e,n,s,a,r,i){for(let o=0;o<r;++o){const l=this.getPadWidth(i),u=Math.max(0,l-o),c=Math.max(0,l-(r-(o+1))),h=i-(u+c),d=n+(u>0?0:o-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=e[d+x].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[a+o]=new Uint8Array(p);const m=s[a+o];let y=0;const g=x=>x.forEach(b=>m[y++]=b);for(let x=0;x<u;++x)g(this.leftPad),g(this.separator);for(let x=0;x<h-1;++x)g(e[d+x]),g(this.separator);if(h>0){g(e[d+h-1]);for(let x=0;x<c;++x)g(this.separator),g(this.rightPad)}else{for(let x=0;x<c-1;++x)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,n){const s=e.length,a=n.length;if(a>0){let l=n[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<a;++u){let c=n[u]>=l;if(c=c&&n[u]<=s,!c)throw new Error(`Invalid split value ${n[u]}, must be in [${l}, ${s}]`);l=n[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=a-1,i=_t("int32",a);if(s===0||a===0){const l=new Array(s);for(let u=0;u<=r;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=r;++l){const u=n[l]-n[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const o=new Array(i[r]);for(let l=0;l<r;++l){const u=n[l];let c=i[l];if(this.nGramWidths.forEach(h=>{const d=n[l+1]-n[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,o,c,p,h),c+=p}),this.preserveShort&&c===i[l]){const h=n[l+1]-n[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,u,o,c,1,d)}}return[o,i]}}function q3(t,e,n,s,a,r,i,o){return new QK(n,s,a,r,i,o).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(t,e,n,s){if(!t.length)return;if(e.length===0){for(let r=0;r<t.length;++r)s.push(t.subarray(r,r+1));return}if(e.length===1){const r=e[0];let i=t.indexOf(r);for(;i!==-1;){const o=t.subarray(0,i);(!n||o.length!==0)&&s.push(o),t=t.subarray(i+1),i=t.indexOf(r)}(!n||t.length!==0)&&s.push(t);return}let a=0;for(let r=0;r<t.length+1;r++)if(r===t.length||e.indexOf(t[r])!==-1){const i=t.subarray(a,r);(!n||i.length!==0)&&s.push(i),a=r+1}}function X3(t,e,n){const s=t.length,a=[];let r=0,i=0;const o=new Array(s);for(let d=0;d<s;++d){const p=a.length;ZK(t[d],e,n,a);const f=a.length-p;o[d]=f,r+=f,i=Math.max(i,f)}const l=_t("int32",r*2),u=new Array(r),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<o[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=a[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(t,e){const n=_t("int32",t.length);for(let s=0;s<t.length;++s)n[s]=hP(t[s]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y3=Ut((t,e)=>t-e),JK=mS((t,e,n,s)=>({real:t-n,imag:e-s})),wS=an($c,Y3,JK),e8={kernelName:$c,backendName:"cpu",kernelFunc:wS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const s=ke(n,t.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(t.rank);for(let l=0;l<i.length;l++)i[l]=r[l]%t.shape[l];const o=t.locToIndex(i);s.values[a]=t.values[o]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dh=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function Z3(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const o=s-n+1,l=e-n+1,u=Math.log(o),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(o-c)/o)*Math.sign(l-o/2),d=Math.max(n,Math.floor(e-l*c/o+h)),p=Math.min(s,Math.floor(e+(o-l)*c/o+h));Z3(t,e,d,p)}const a=t[e];let r=n,i=s;for(kl(t,n,e),dh(t[s],a)>0&&kl(t,n,s);r<i;){for(kl(t,r,i),r++,i--;dh(t[r],a)<0;)r=r+1;for(;dh(t[i],a)>0;)i=i-1}dh(t[n],a)===0?kl(t,n,i):(i=i+1,kl(t,i,s)),i<=e&&(n=i+1),e<=i&&(s=i-1)}}function J3(t,e,n,s,a){const r=e[e.length-1],[i,o]=[t.length/r,r],l=tn(n,i*s),u=tn("int32",i*s);for(let h=0;h<i;h++){const d=h*o,p=t.subarray(d,d+o);let f=new Array(p.length);p.forEach((x,b)=>f[b]={value:x,index:b}),s<f.length&&(Z3(f,s),f=f.slice(0,s)),a&&f.sort(dh);const m=h*s,y=l.subarray(m,m+s),g=u.subarray(m,m+s);for(let x=0;x<s;x++)y[x]=f[x].value,g[x]=f[x].index}const c=e.slice();return c[c.length-1]=s,[ke(c,n,l),ke(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(t,e,n,s){const a=Ie(e,n)[0],r=[1,n[0],1];for(let f=0;f<a;f++)r[0]*=n[f];r[1]=n[a];for(let f=a+1;f<n.length;f++)r[2]*=n[f];const i=new Map,o=new Int32Array(n[a]),l=new Zt(r,s,t),u=[],c=r[0]===1&&r[2]===1;for(let f=0;f<n[a];f++){let m;if(c)m=t[f].toString();else{const g=[];for(let x=0;x<r[0];x++)for(let b=0;b<r[2];b++)g.push(l.get(x,f,b));m=g.join(",")}const y=i.get(m);if(y!=null)o[f]=y;else{const g=i.size;i.set(m,g),o[f]=g,u.push(f)}}const h=r.slice();h[1]=i.size;const d=new Zt(h,s);u.forEach((f,m)=>{for(let y=0;y<r[0];y++)for(let g=0;g<r[2];g++)d.set(l.get(y,f,g),y,m,g)});const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t_=Object.freeze(Object.defineProperty({__proto__:null,addImpl:u3,bincountImpl:gS,bincountReduceImpl:c3,bitwiseAndImpl:h3,castImpl:l3,ceilImpl:d3,concatImpl:p3,equalImpl:f3,expImpl:g3,expm1Impl:x3,floorDivImpl:w3,floorImpl:b3,gatherNdImpl:v3,gatherV2Impl:S3,greaterEqualImpl:$3,greaterImpl:C3,lessEqualImpl:k3,lessImpl:N3,linSpaceImpl:I3,logImpl:T3,maxImpl:E3,maximumImpl:R3,minimumImpl:D3,multiplyImpl:yS,negImpl:A3,notEqualImpl:_3,prodImpl:O3,raggedGatherImpl:F3,raggedRangeImpl:z3,raggedTensorToTensorImpl:L3,rangeImpl:P3,rsqrtImpl:M3,scatterImpl:ho,sigmoidImpl:VK,simpleAbsImpl:o3,sliceImpl:V3,sparseFillEmptyRowsImpl:U3,sparseReshapeImpl:W3,sparseSegmentReductionImpl:bS,sqrtImpl:GK,squaredDifferenceImpl:G3,staticRegexReplaceImpl:H3,stridedSliceImpl:j3,stringNGramsImpl:q3,stringSplitImpl:X3,stringToHashBucketFastImpl:K3,subImpl:Y3,tileImpl:Q3,topKImpl:J3,transposeImpl:xS,uniqueImpl:e_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Xw("cpu",()=>new $x,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n_=Ze(qu,t=>t>=0?t:Math.exp(t)-1),t8={kernelName:qu,backendName:"cpu",kernelFunc:n_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{alpha:r}=s;me([a],"leakyRelu");const i=L(a.shape),o=n.data.get(a.dataId).values,l=tn("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?r*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}const n8={kernelName:Kd,backendName:"cpu",kernelFunc:s_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s8=Ut((t,e)=>t<0?e*t:t);function a_(t){const{inputs:e,backend:n}=t,{x:s,alpha:a}=e;me([s,a],"prelu");const r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,[o,l]=s8(s.shape,a.shape,r,i,"float32");return n.makeTensorInfo(l,"float32",o)}const a8={kernelName:fp,backendName:"cpu",kernelFunc:a_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r_=Ze(dc,t=>Math.max(0,t)),r8={kernelName:dc,backendName:"cpu",kernelFunc:r_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i_=Ze(pc,t=>Math.min(Math.max(0,t),6)),i8={kernelName:pc,backendName:"cpu",kernelFunc:i_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(t,e,n,s,a){if(n==="linear")return Ja({inputs:{x:e},backend:t});if(n==="relu")return r_({inputs:{x:e},backend:t});if(n==="elu")return n_({inputs:{x:e},backend:t});if(n==="relu6")return i_({inputs:{x:e},backend:t});if(n==="prelu")return a_({inputs:{x:e,alpha:s},backend:t});if(n==="leakyrelu")return s_({inputs:{x:e},backend:t,attrs:{alpha:a}});if(n==="sigmoid")return B3({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{shape:r}=s,i=L(a.shape),o=_w(r,i),l=L(o);N(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const u=n.data.get(a.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const o8={kernelName:gp,backendName:"cpu",kernelFunc:ct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r}=e,{transposeA:i,transposeB:o}=s;me([a,r],"matMul");const l=a.shape.length,u=r.shape.length,c=i?a.shape[l-2]:a.shape[l-1],h=o?r.shape[u-1]:r.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],p=o?r.shape[u-2]:r.shape[u-1],f=a.shape.slice(0,-2),m=r.shape.slice(0,-2),y=L(f),g=L(m),b=Se(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);N(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${o} must match.`);const w=i?[y,c,d]:[y,d,c],v=o?[g,p,h]:[g,h,p],C=ct({inputs:{x:a},backend:n,attrs:{shape:w}}),$=ct({inputs:{x:r},backend:n,attrs:{shape:v}}),k=i?C.shape[1]:C.shape[2],T=i?C.shape[2]:C.shape[1],E=o?$.shape[1]:$.shape[2],O=Math.max(y,g),B=n.data.get(C.dataId).values,W=n.data.get($.dataId).values,V=xe(C.shape),G=xe($.shape),[D,H,P]=i?[V[0],1,V[1]]:[V[0],V[1],1],[j,X,Q]=o?[1,G[1],G[0]]:[G[1],1,G[0]],ee=T*E,J=ke([O,T,E],C.dtype),se=J.values,te=n.blockSize;for(let de=0;de<O;de++){const be=de%y,Ce=de%g;for(let ve=0;ve<T;ve+=te){const Re=Math.min(ve+te,T);for(let Fe=0;Fe<E;Fe+=te){const Ye=Math.min(Fe+te,E);for(let it=0;it<k;it+=te){const Tt=Math.min(it+te,k);for(let ot=ve;ot<Re;ot++)for(let Je=Fe;Je<Ye;Je++){let Ct=0;for(let xt=it;xt<Tt;xt++){const or=B[be*D+ot*H+xt*P],fn=W[xt*j+Je*X+Ce*Q];Ct+=or*fn}se[de*ee+(ot*E+Je)]+=Ct}}}}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(b,J.dtype,J.values)}const l8={kernelName:Od,backendName:"cpu",kernelFunc:o_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=o_({inputs:{a,b:r},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=xu({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=Km(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}const c8={kernelName:Yh,backendName:"cpu",kernelFunc:u8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8=Ze(Ou,t=>Math.acos(t)),d8={kernelName:Ou,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8=Ze(Fu,t=>Math.acosh(t)),f8={kernelName:Fu,backendName:"cpu",kernelFunc:p8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(t){const{inputs:e,backend:n}=t,s=e;me(e,"addN");const a=s.map(o=>n.data.get(o.dataId).values),r=ke(s[0].shape,s[0].dtype),i=r.values;for(let o=0;o<s.length;o++){const l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}const g8={kernelName:Ed,backendName:"cpu",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"all");const o=Ie(r,a.shape);let l=o;const u=tt(l,a.shape.length);let c=a;u!=null&&(c=es({inputs:{x:a},backend:n,attrs:{perm:u}}),l=dt(l.length,a.shape.length)),Ht("all",l,c.shape.length);const[h,d]=Bt(c.shape,l),p=L(d),f=Sn(L(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x];for(let w=0;w<p;++w){const v=m[x+w];b=b&&v}f[g]=b}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(i){const g=Ft(h,o),x=ct({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const x8={kernelName:Cg,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"any");const o=Ie(r,a.shape);let l=o;const u=tt(l,a.shape.length);let c=a;u!=null&&(c=es({inputs:{x:a},backend:n,attrs:{perm:u}}),l=dt(l.length,a.shape.length)),Ht("any",l,c.shape.length);const[h,d]=Bt(c.shape,l),p=L(d),f=Sn(L(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x];for(let w=0;w<p;++w){const v=m[x+w];b=b||v}f[g]=b}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(i){const g=Ft(h,o),x=ct({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const w8={kernelName:$g,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;me(a,"argMax");let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=es({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=dt(i.length,l.shape.length)),i=[i[0]],Ht("argMax",i,l.shape.length);const[c,h]=Bt(l.shape,i),d=L(c),p=Sn(d,"int32"),f=L(h),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let x=m[g],b=0;for(let w=0;w<f;++w){const v=m[g+w];v>x&&(x=v,b=w)}p[y]=b}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const S8={kernelName:Rd,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;me(a,"argMin");let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=es({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=dt(i.length,l.shape.length)),i=[i[0]],Ht("argMin",i,l.shape.length);const[c,h]=Bt(l.shape,i),d=L(c),p=Sn(d,"int32"),f=L(h),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let x=m[g],b=0;for(let w=0;w<f;++w){const v=m[g+w];v<x&&(x=v,b=w)}p[y]=b}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const $8={kernelName:Dd,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8=Ze(zu,t=>Math.asin(t)),k8={kernelName:zu,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=Ze(Lu,t=>Math.asinh(t)),T8={kernelName:Lu,backendName:"cpu",kernelFunc:I8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=Ze(Pu,t=>Math.atan(t)),R8={kernelName:Pu,backendName:"cpu",kernelFunc:E8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8=Ut((t,e)=>Math.atan2(t,e)),A8=an(Bu,D8),_8={kernelName:Bu,backendName:"cpu",kernelFunc:A8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8=Ze(Mu,t=>Math.atanh(t)),F8={kernelName:Mu,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(t,e,n,s,a,r){const i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ke(a.outShape,n),y=m.values,g=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let w=0;w<a.batchSize;++w){const v=w*g,C=w*s[0];for(let $=0;$<a.inChannels;++$)for(let k=0;k<a.outHeight;++k){const T=k*i-d,E=Math.max(0,T),O=Math.min(a.inHeight,c+T),B=v+k*x;for(let W=0;W<a.outWidth;++W){const V=W*o-p,G=Math.max(0,V),D=Math.min(a.inWidth,h+V);let H=f,P=0,j=0;for(let Q=E;Q<O;Q+=l){const ee=C+Q*s[1];for(let J=G;J<D;J+=u){const se=ee+J*s[2],te=t[se+$];r==="max"&&te>H?H=te:r==="avg"&&(P+=te,j++)}if(isNaN(H))break}const X=B+W*b+$;y[X]=r==="avg"?P/j:H}}}return m}function l_(t,e,n,s,a=!1,r=!1){const i=ke(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ke(e,n,t);for(let y=0;y<s.batchSize;++y)for(let g=0;g<s.inChannels;++g)for(let x=0;x<s.outHeight;++x){const b=x*o-p;let w=b;for(;w<0;)w+=u;const v=Math.min(s.inHeight,h+b);for(let C=0;C<s.outWidth;++C){const $=C*l-f;let k=$;for(;k<0;)k+=c;const T=Math.min(s.inWidth,d+$);let E=Number.NEGATIVE_INFINITY,O=-1;for(let B=w;B<v;B+=u){const W=B-b;for(let V=k;V<T;V+=c){const G=V-$,D=m.get(y,B,V,g);D>E&&(E=D,a?O=r?((y*s.inHeight+B)*s.inWidth+V)*s.inChannels+g:(B*s.inWidth+V)*s.inChannels+g:O=W*d+G)}}i.set(O,y,x,C,g)}}return i}function u_(t,e,n,s,a,r){const i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,y=a.padInfo.top,g=a.padInfo.left,x=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=ke(a.outShape,n),w=b.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[2]*a.outShape[3]*a.outShape[4],$=a.outShape[3]*a.outShape[4],k=a.outShape[4];for(let T=0;T<a.batchSize;++T){const E=T*v,O=T*s[0];for(let B=0;B<a.inChannels;++B)for(let W=0;W<a.outDepth;++W){const V=W*i-m;let G=V;for(;G<0;)G+=u;const D=Math.min(a.inDepth,d+V),H=E+W*C;for(let P=0;P<a.outHeight;++P){const j=P*o-y;let X=j;for(;X<0;)X+=c;const Q=Math.min(a.inHeight,p+j),ee=H+P*$;for(let J=0;J<a.outWidth;++J){const se=J*l-g;let te=se;for(;te<0;)te+=h;const de=Math.min(a.inWidth,f+se),be=ee+J*k;let Ce=x,ve=0,Re=0;for(let Ye=G;Ye<D;Ye+=u){const it=O+Ye*s[1];for(let Tt=X;Tt<Q;Tt+=c){const ot=it+Tt*s[2];for(let Je=te;Je<de;Je+=h){const Ct=ot+Je*s[3],xt=t[Ct+B];if(r==="max"&&xt>Ce?Ce=xt:r==="avg"&&(ve+=xt,Re++),isNaN(Ce))break}if(isNaN(Ce))break}if(isNaN(Ce))break}const Fe=be+B;w[Fe]=r==="avg"?ve/Math.max(Re,1):Ce}}}}return b}function z8(t,e){const n=ke(e.outShape,"int32"),s=e.strideDepth,a=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let y=0;y<e.inChannels;++y)for(let g=0;g<e.outDepth;++g){const x=g*s-d;let b=x;for(;b<0;)b+=i;const w=Math.min(e.inDepth,u+x);for(let v=0;v<e.outHeight;++v){const C=v*a-p;let $=C;for(;$<0;)$+=o;const k=Math.min(e.inHeight,c+C);for(let T=0;T<e.outWidth;++T){const E=T*r-f;let O=E;for(;O<0;)O+=l;const B=Math.min(e.inWidth,h+E);let W=Number.NEGATIVE_INFINITY,V=-1;for(let G=b;G<w;G+=i){const D=G-x;for(let H=$;H<k;H+=o){const P=H-C;for(let j=O;j<B;j+=l){const X=j-E,Q=t.get(m,G,H,j,y);Q>=W&&(W=Q,V=D*c*h+P*c+X)}}}n.set(V,m,g,v,T,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;me(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(sn(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))h=Ja({inputs:{x:a},backend:n});else{const d=n.data.get(a.dataId).values,p=xe(a.shape),f=vS(d,a.shape,a.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,f.values)}return h}const P8={kernelName:Ad,backendName:"cpu",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;me(a,"avgPool3d");const c=Os(a.shape,r,i,1,o,l,u),h=n.data.get(a.dataId).values,d=u_(h,a.shape,a.dtype,xe(a.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const B8={kernelName:_d,backendName:"cpu",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;me([a,r],"avgPool3DGrad");const c=Os(r.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,y=c.filterWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,C=c.effectiveFilterWidth,$=w-1-c.padInfo.front,k=C-1-c.padInfo.left,T=v-1-c.padInfo.top,E=ke(r.shape,"float32"),O=1/(f*m*y),B=n.bufferSync(a);for(let W=0;W<c.batchSize;++W)for(let V=0;V<c.inChannels;++V)for(let G=0;G<c.inDepth;++G)for(let D=0;D<c.inHeight;++D)for(let H=0;H<c.inWidth;++H){const P=G-$,j=D-T,X=H-k;let Q=0;for(let ee=0;ee<w;ee+=g){const J=(P+ee)/h;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let se=0;se<v;se+=x){const te=(j+se)/d;if(!(te<0||te>=c.outHeight||Math.floor(te)!==te))for(let de=0;de<C;de+=b){const be=(X+de)/p;if(be<0||be>=c.outWidth||Math.floor(be)!==be)continue;const Ce=B.get(W,J,te,be,V);Q+=Ce}}}E.set(Q*O,W,G,D,H,V)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const U8={kernelName:kg,backendName:"cpu",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r;me([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rn(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,g=c.effectiveFilterHeight,x=c.effectiveFilterWidth,b=x-1-c.padInfo.left,w=g-1-c.padInfo.top,v=ke(i.shape,"float32"),C=1/(p*f),$=n.data.get(a.dataId).values,k=ke(a.shape,"float32",$);for(let T=0;T<c.batchSize;++T)for(let E=0;E<c.inChannels;++E)for(let O=0;O<c.inHeight;++O)for(let B=0;B<c.inWidth;++B){const W=O-w,V=B-b;let G=0;for(let D=0;D<g;D+=m){const H=(W+D)/h;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let P=0;P<x;P+=y){const j=(V+P)/d;if(j<0||j>=c.outWidth||Math.floor(j)!==j)continue;const X=k.get(T,H,j,E);G+=X}}v.set(G*C,T,O,B,E)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const G8={kernelName:Ng,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,scale:r,offset:i,mean:o,variance:l}=e;N(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(r==null||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),me([a,o,l,r,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=r?n.data.get(r.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),y=f.length,g=p.length,x=d.length,b=h.length;let w=0,v=0,C=0,$=0;for(let k=0;k<c.length;++k)m[k]=f[w++]+(c[k]-h[v++])*p[C++]/Math.sqrt(d[$++]+u),w>=y&&(w=0),v>=b&&(v=0),C>=g&&(C=0),$>=x&&($=0);return n.makeTensorInfo(a.shape,a.dtype,m)}const j8={kernelName:jd,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,crops:i}=s;me([a],"batchToSpaceND");const o=r.reduce((g,x)=>g*x),l=sl(a.shape,r,o),u=al(l.length,r.length),c=rl(a.shape,r,o),h=Jy(i,r.length),d=ex(c,i,r.length),p=ct({inputs:{x:a},backend:n,attrs:{shape:l}}),f=es({inputs:{x:p},backend:n,attrs:{perm:u}}),m=ct({inputs:{x:f},backend:n,attrs:{shape:c}}),y=Bo({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const X8={kernelName:Fd,backendName:"cpu",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i}=s,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=gS(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}const Y8={kernelName:Ig,backendName:"cpu",kernelFunc:K8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(t){const{inputs:e,backend:n}=t,{s0:s,s1:a}=e,r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,o=Se(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const Z8={kernelName:Eg,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8=Ze(Wu,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),e7={kernelName:Wu,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(L(e.shape)),a=n.data.get(e.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const c=o[u],h=l[u];s[u]=Math.hypot(c,h)}return n.makeOutput(s,e.shape,"float32")},n7={kernelName:zd,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.data.get(s.dataId).complexTensorInfos.imag,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const s7={kernelName:Xg,backendName:"cpu",kernelFunc:bu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,r=Ie(a,e[0].shape)[0],i=e.map(m=>m.shape);Yy(i,r);let o=Qn(e.map(m=>m.shape),r);if(L(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(m=>L(m.shape)>0);if(l.length===1)return Ja({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){const m=l.map(w=>Mo({inputs:{input:w},backend:n})),y=l.map(w=>bu({inputs:{input:w},backend:n})),g=wu({inputs:m,backend:n,attrs:{axis:r}}),x=wu({inputs:y,backend:n,attrs:{axis:r}}),b=os({inputs:{real:g,imag:x},backend:n});return m.forEach(w=>n.disposeIntermediateTensorInfo(w)),y.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),b}const u=l.map(m=>{const g=[-1,L(m.shape.slice(r))];return ct({inputs:{x:m},backend:n,attrs:{shape:g}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=Qn(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=p3(c,o,e[0].dtype,h),p=Qn(l.map(m=>m.shape),r),f=n.makeTensorInfo(p,e[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const a7={kernelName:Ld,backendName:"cpu",kernelFunc:wu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;me([a,r],"conv2d");const h=bs(l),d=ht(a.shape,r.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,y=d.dilationWidth,g=d.padInfo.left,x=d.padInfo.top,b=d.dataFormat==="channelsLast",w=new Zt(d.outShape,a.dtype),v=xe(a.shape),C=xe(r.shape),$=v[0],k=b?v[1]:v[2],T=b?v[2]:1,E=b?1:v[1],O=w.strides[0],B=b?w.strides[1]:w.strides[2],W=b?w.strides[2]:1,V=b?1:w.strides[1],G=n.data.get(a.dataId).values,D=n.data.get(r.dataId).values,H=w.values;for(let P=0;P<d.batchSize;++P){const j=P*$,X=P*O;for(let Q=0;Q<d.outHeight;++Q){const ee=X+Q*B,J=Q*d.strideHeight-x;for(let se=0;se<p;++se){const te=J+se*m;if(te<0||te>=d.inHeight)continue;const de=se*C[0],be=j+te*k;for(let Ce=0;Ce<d.outWidth;++Ce){const ve=ee+Ce*W,Re=Ce*d.strideWidth-g;for(let Fe=0;Fe<f;++Fe){const Ye=Re+Fe*y;if(Ye<0||Ye>=d.inWidth)continue;const it=de+Fe*C[1],Tt=be+Ye*T;let ot=it;for(let Je=0;Je<d.inChannels;++Je){const Ct=G[Tt+Je*E];for(let xt=0;xt<d.outChannels;++xt)H[ve+xt*V]+=Ct*D[ot+xt];ot+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,H)}const r7={kernelName:Pd,backendName:"cpu",kernelFunc:c_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;me([a,r],"conv2dBackpropFilter");const h=bs(l),d=ht(a.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:y}=d,g=d.dataFormat==="channelsLast",x=new Zt(d.filterShape,"float32"),b=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,C=n.data.get(r.dataId).values,$=new Zt(a.shape,a.dtype,v),k=new Zt(r.shape,r.dtype,C);for(let T=0;T<m;++T){const E=Math.max(0,Math.ceil((w-T)/p)),O=Math.min(d.outHeight,(d.inHeight+w-T)/p);for(let B=0;B<y;++B){const W=Math.max(0,Math.ceil((b-B)/f)),V=Math.min(d.outWidth,(d.inWidth+b-B)/f);for(let G=0;G<d.inChannels;++G)for(let D=0;D<d.outChannels;++D){let H=0;for(let P=0;P<d.batchSize;++P)for(let j=E;j<O;++j){const X=T+j*p-w;for(let Q=W;Q<V;++Q){const ee=B+Q*f-b;g?H+=$.get(P,X,ee,G)*k.get(P,j,Q,D):H+=$.get(P,G,X,ee)*k.get(P,D,j,Q)}}x.set(H,T,B,G,D)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const o7={kernelName:Dg,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;me([a,r],"conv2dBackpropInput");const h=xe(r.shape),d=xe(a.shape);let p=bs(u);const f=ht(i,r.shape,o,1,l,c,!1,p),m=new Zt(f.inShape,"float32"),y=m.values,g=n.data.get(a.dataId).values,x=n.data.get(r.dataId).values,[b,w,v]=h,{batchSize:C,filterHeight:$,filterWidth:k,inChannels:T,inHeight:E,inWidth:O,outChannels:B,outHeight:W,outWidth:V,strideHeight:G,strideWidth:D}=f;p=f.dataFormat;const H=$-1-f.padInfo.top,P=k-1-f.padInfo.left,j=p==="channelsLast",X=m.strides[0],Q=j?m.strides[1]:m.strides[2],ee=j?m.strides[2]:1,J=j?1:m.strides[1],se=d[0],te=j?d[1]:d[2],de=j?d[2]:1,be=j?1:d[1];for(let Ce=0;Ce<C;++Ce)for(let ve=0;ve<T;++ve)for(let Re=0;Re<E;++Re){const Fe=Re-H,Ye=Math.max(0,Math.ceil(Fe/G)),it=Math.min(W,($+Fe)/G);for(let Tt=0;Tt<O;++Tt){const ot=Tt-P,Je=Math.max(0,Math.ceil(ot/D)),Ct=Math.min(V,(k+ot)/D);let xt=0;for(let fn=Ye;fn<it;++fn){const Ur=fn*G-Fe;for(let vs=Je;vs<Ct;++vs){const ji=vs*D-ot,fa=se*Ce+te*fn+de*vs,lr=b*($-1-Ur)+w*(k-1-ji)+v*ve;for(let Wr=0;Wr<B;++Wr){const Gr=g[fa+be*Wr],Hr=x[lr+Wr];xt+=Gr*Hr}}}const or=X*Ce+Q*Re+ee*Tt+J*ve;y[or]=xt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const u7={kernelName:Md,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s;me([a,r],"conv3d");const u=Oa(a.shape,r.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:y}=u,g=y.front,x=y.left,b=y.top,w=new Zt(u.outShape,a.dtype),v=n.data.get(a.dataId).values,C=n.data.get(r.dataId).values,$=w.values,k=xe(a.shape),T=xe(r.shape);for(let E=0;E<u.batchSize;++E){const O=E*k[0],B=E*w.strides[0];for(let W=0;W<u.outDepth;++W){const V=B+W*w.strides[1],G=W*u.strideDepth-g;for(let D=0;D<c;++D){const H=G+D*p;if(H<0||H>=u.inDepth)continue;const P=D*T[0],j=O+H*k[1];for(let X=0;X<u.outHeight;++X){const Q=V+X*w.strides[2],ee=X*u.strideHeight-b;for(let J=0;J<h;++J){const se=ee+J*f;if(se<0||se>=u.inHeight)continue;const te=P+J*T[1],de=j+se*k[2];for(let be=0;be<u.outWidth;++be){const Ce=Q+be*u.outChannels,ve=be*u.strideWidth-x;for(let Re=0;Re<d;++Re){const Fe=ve+Re*m;if(Fe<0||Fe>=u.inWidth)continue;const Ye=te+Re*T[2],it=de+Fe*u.inChannels;let Tt=Ye;for(let ot=0;ot<u.inChannels;++ot){const Je=v[it+ot];for(let Ct=0;Ct<u.outChannels;++Ct)$[Ce+Ct]+=Je*C[Tt+Ct];Tt+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const h7={kernelName:Bd,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s;me([a,r],"conv3dBackpropFilterV2");const u=xe(a.shape),c=xe(r.shape),h=Oa(a.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,y=h.filterHeight,g=h.filterWidth,x=new Zt(h.filterShape,"float32"),b=x.values,[w,v,C,$]=x.strides,k=n.data.get(r.dataId).values,[T,E,O,B]=c,W=n.data.get(a.dataId).values,[V,G,D,H]=u,P=h.padInfo.front,j=h.padInfo.left,X=h.padInfo.top;for(let Q=0;Q<m;++Q){const ee=Math.max(0,Math.ceil((P-Q)/d)),J=Math.min(h.outDepth,(h.inDepth+P-Q)/d),se=Q*w;for(let te=0;te<y;++te){const de=Math.max(0,Math.ceil((X-te)/p)),be=Math.min(h.outHeight,(h.inHeight+X-te)/p),Ce=te*v+se;for(let ve=0;ve<g;++ve){const Re=Math.max(0,Math.ceil((j-ve)/f)),Fe=Math.min(h.outWidth,(h.inWidth+j-ve)/f),Ye=ve*C+Ce;for(let it=0;it<h.inChannels;++it){const Tt=it*$+Ye;for(let ot=0;ot<h.outChannels;++ot){let Je=0;for(let Ct=0;Ct<h.batchSize;++Ct){const xt=Ct*V,or=Ct*T;for(let fn=ee;fn<J;++fn){const vs=(Q+fn*d-P)*G+xt,ji=fn*E+or;for(let fa=de;fa<be;++fa){const Wr=(te+fa*p-X)*D+vs,Gr=fa*O+ji;for(let Hr=Re;Hr<Fe;++Hr){const zx=(ve+Hr*f-j)*H+Wr,Lx=Hr*B+Gr;Je+=W[zx+it]*k[Lx+ot]}}}}b[Tt+ot]=Je}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const p7={kernelName:Ag,backendName:"cpu",kernelFunc:d7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{pad:i,strides:o,inputShape:l}=s;me([a],"conv3dBackpropInputV2");const u=xe(a.shape),c=xe(r.shape),h=Oa(l,r.shape,o,1,i),d=new Zt(h.inShape,"float32"),p=d.values,[f,m,y,g]=d.strides,x=n.data.get(a.dataId).values,[b,w,v,C]=u,$=n.data.get(r.dataId).values,[k,T,E,O]=c,{batchSize:B,filterDepth:W,filterHeight:V,filterWidth:G,inChannels:D,inDepth:H,inHeight:P,inWidth:j,outChannels:X,outDepth:Q,outHeight:ee,outWidth:J,strideDepth:se,strideHeight:te,strideWidth:de}=h,be=W-1-h.padInfo.front,Ce=V-1-h.padInfo.top,ve=G-1-h.padInfo.left;for(let Re=0;Re<B;++Re)for(let Fe=0;Fe<D;++Fe)for(let Ye=0;Ye<H;++Ye){const it=Ye-be,Tt=Math.max(0,Math.ceil(it/se)),ot=Math.min(Q,(W+it)/se);for(let Je=0;Je<P;++Je){const Ct=Je-Ce,xt=Math.max(0,Math.ceil(Ct/te)),or=Math.min(ee,(V+Ct)/te);for(let fn=0;fn<j;++fn){const Ur=fn-ve,vs=Math.max(0,Math.ceil(Ur/de)),ji=Math.min(J,(G+Ur)/de);let fa=0;for(let lr=Tt;lr<ot;++lr){const Wr=lr*se-it;for(let Gr=xt;Gr<or;++Gr){const Hr=Gr*te-Ct;for(let Hc=vs;Hc<ji;++Hc){const zx=Hc*de-Ur,Lx=b*Re+w*lr+v*Gr+C*Hc,zO=k*(W-1-Wr)+T*(V-1-Hr)+E*(G-1-zx)+O*Fe;for(let ef=0;ef<X;++ef){const LO=x[Lx+ef],PO=$[zO+ef];fa+=LO*PO}}}}p[f*Re+m*Ye+y*Je+g*fn+Fe]=fa}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const m7={kernelName:_g,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=Ze(Gu,t=>Math.cos(t)),y7={kernelName:Gu,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7=Ze(Hu,t=>Math.cosh(t)),b7={kernelName:Hu,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(t){const{inputs:e,backend:n,attrs:s}=t,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=a.shape,f=r.shape[0],[m,y]=o,g=ke([f,m,y,p],"float32"),x=n.data.get(r.dataId).values,b=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=xe(a.shape),C=xe(g.shape);for(let $=0;$<f;$++){const k=$*4,T=x[k],E=x[k+1],O=x[k+2],B=x[k+3],W=b[$];if(W>=c)continue;const V=m>1?(O-T)*(h-1)/(m-1):0,G=y>1?(B-E)*(d-1)/(y-1):0;for(let D=0;D<m;D++){const H=m>1?T*(h-1)+D*V:.5*(T+O)*(h-1);if(H<0||H>h-1){for(let P=0;P<y;P++)for(let j=0;j<p;j++){const X=j+P*C[2]+D*C[1]+$*C[0];g.values[X]=u}continue}if(l==="bilinear"){const P=Math.floor(H),j=Math.ceil(H),X=H-P;for(let Q=0;Q<y;Q++){const ee=y>1?E*(d-1)+Q*G:.5*(E+B)*(d-1);if(ee<0||ee>d-1){for(let de=0;de<p;de++){const be=de+Q*C[2]+D*C[1]+$*C[0];g.values[be]=u}continue}const J=Math.floor(ee),se=Math.ceil(ee),te=ee-J;for(let de=0;de<p;de++){let be=de+J*v[2]+P*v[1]+W*v[0];const Ce=w[be];be=de+se*v[2]+P*v[1]+W*v[0];const ve=w[be];be=de+J*v[2]+j*v[1]+W*v[0];const Re=w[be];be=de+se*v[2]+j*v[1]+W*v[0];const Fe=w[be],Ye=Ce+(ve-Ce)*te,it=Re+(Fe-Re)*te;be=de+Q*C[2]+D*C[1]+$*C[0],g.values[be]=Ye+(it-Ye)*X}}}else for(let P=0;P<y;++P){const j=y>1?E*(d-1)+P*G:.5*(E+B)*(d-1);if(j<0||j>d-1){for(let ee=0;ee<p;ee++){const J=ee+P*C[2]+D*C[1]+$*C[0];g.values[J]=u}continue}const X=Math.round(j),Q=Math.round(H);for(let ee=0;ee<p;ee++){const J=ee+X*v[2]+Q*v[1]+W*v[0],se=ee+P*C[2]+D*C[1]+$*C[0];g.values[se]=w[J]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const v7={kernelName:Fg,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;me(a,"cumprod");const l=tt([r],a.shape.length);let u=a;l!=null&&(u=es({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=dt(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=dn(u.dtype,"int32"),d=Fw(L(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<p.length;g+=f)for(let x=0;x<f;x++){const b=m(g,x);if(x===0)d[b]=i?1:p[b];else{const w=m(g,x-1);d[b]=i?p[w]*d[w]:p[b]*d[w]}}const y=n.makeTensorInfo(u.shape,h,d);if(l!=null){const g=sr(l),x=es({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const C7={kernelName:Og,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;me(a,"cumsum");const l=tt([r],a.shape.length);let u=a;l!=null&&(u=es({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=dt(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=dn(u.dtype,"int32"),d=Sn(L(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<p.length;g+=f)for(let x=0;x<f;x++){const b=m(g,x);if(x===0)d[b]=i?0:p[b];else{const w=m(g,x-1);d[b]=i?p[w]+d[w]:p[b]+d[w]}}const y=n.makeTensorInfo(u.shape,h,d);if(l!=null){const g=sr(l),x=es({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const N7={kernelName:Vd,backendName:"cpu",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s;if(a.shape.length===1){const l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=gS(l,u,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}else if(a.shape.length===2){const l=n.bufferSync(a),u=n.bufferSync(r),c=c3(l,u,i,o);return n.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const I7={kernelName:zg,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockSize:r,dataFormat:i}=s;N(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],h=l*r,d=u*r,p=c/(r*r),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let y=0;for(let g=0;g<o;++g)for(let x=0;x<h;++x){const b=Math.floor(x/r),w=x%r;for(let v=0;v<d;++v){const C=Math.floor(v/r),$=v%r,k=(w*r+$)*p;for(let T=0;T<p;++T){const O=T+k+c*(C+u*(b+l*g));m[y++]=f[O]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}const E7={kernelName:Lg,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;me([a,r],"depthwiseConv2DNative");const c=xe(a.shape),h=xe(r.shape);let d=l;d==null&&(d=[1,1]),N(sn(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=ht(a.shape,r.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:y,dilationWidth:g,padInfo:x}=p,b=x.left,w=x.top,v=p.outChannels/p.inChannels,C=new Zt(p.outShape,a.dtype),$=n.data.get(a.dataId).values,k=n.data.get(r.dataId).values,T=C.values;for(let E=0;E<p.batchSize;++E){const O=E*c[0],B=E*C.strides[0];for(let W=0;W<p.outHeight;++W){const V=B+W*C.strides[1],G=W*p.strideHeight-w;for(let D=0;D<f;++D){const H=G+D*y;if(H<0||H>=p.inHeight)continue;const P=D*h[0],j=O+H*c[1];for(let X=0;X<p.outWidth;++X){const Q=V+X*C.strides[2],ee=X*p.strideWidth-b;for(let J=0;J<m;++J){const se=ee+J*g;if(se<0||se>=p.inWidth)continue;const te=P+J*h[1],de=j+se*p.inChannels;let be=Q,Ce=te;for(let ve=0;ve<p.inChannels;++ve){const Re=$[de+ve];for(let Fe=0;Fe<v;++Fe)T[be+Fe]+=Re*k[Ce+Fe];be+=v,Ce+=v}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const R7={kernelName:Ud,backendName:"cpu",kernelFunc:h_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;me([a,r],"depthwiseConv2dNativeBackpropFilter");const h=ht(a.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,y=new Zt(h.filterShape,"float32"),g=h.padInfo.left,x=h.padInfo.top,b=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,v=new Zt(a.shape,a.dtype,w),C=n.data.get(r.dataId).values,$=new Zt(r.shape,r.dtype,C);for(let k=0;k<f;++k){const T=Math.max(0,Math.ceil((x-k)/d)),E=Math.min(h.outHeight,(h.inHeight+x-k)/d);for(let O=0;O<m;++O){const B=Math.max(0,Math.ceil((g-O)/p)),W=Math.min(h.outWidth,(h.inWidth+g-O)/p);for(let V=0;V<h.outChannels;++V){const G=Math.trunc(V/b),D=V%b;let H=0;for(let P=0;P<h.batchSize;++P)for(let j=T;j<E;++j){const X=k+j*d-x;for(let Q=B;Q<W;++Q){const ee=O+Q*p-g;H+=v.get(P,X,ee,G)*$.get(P,j,Q,V)}}y.set(H,k,O,G,D)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const A7={kernelName:Pg,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;me([a,r],"depthwiseConv2DNativeBackpropInput");const h=xe(a.shape),d=xe(r.shape),p=ht(c,r.shape,i,o,l,u,!0),f=new Zt(p.inShape,"float32"),m=f.values,[y,g,x]=f.strides,b=n.data.get(a.dataId).values,[w,v,C]=h,$=n.data.get(r.dataId).values,[k,T,E]=d,{batchSize:O,filterHeight:B,filterWidth:W,inChannels:V,inHeight:G,inWidth:D,outChannels:H,outHeight:P,outWidth:j,strideHeight:X,strideWidth:Q}=p,ee=B-1-p.padInfo.top,J=W-1-p.padInfo.left,se=H/V;for(let te=0;te<O;++te)for(let de=0;de<V;++de)for(let be=0;be<G;++be){const Ce=be-ee,ve=Math.max(0,Math.ceil(Ce/X)),Re=Math.min(P,(B+Ce)/X);for(let Fe=0;Fe<D;++Fe){const Ye=Fe-J,it=Math.max(0,Math.ceil(Ye/Q)),Tt=Math.min(j,(W+Ye)/Q);let ot=0;for(let Je=ve;Je<Re;++Je){const Ct=Je*X-Ce;for(let xt=it;xt<Tt;++xt){const or=xt*Q-Ye,fn=w*te+v*Je+C*xt,Ur=k*(B-1-Ct)+T*(W-1-or)+E*de;for(let vs=0;vs<se;++vs){const ji=de*se+vs,fa=b[fn+ji],lr=$[Ur+vs];ot+=fa*lr}}}m[y*te+g*be+x*Fe+de]=ot}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const O7={kernelName:Mg,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(t){const{inputs:e,backend:n}=t,{x:s}=e,a=L(s.shape),r=n.data.get(s.dataId).values,i=ke([a,a],s.dtype),o=i.values;for(let u=0;u<r.length;u++)o[u*a+u]=r[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}const z7={kernelName:Bg,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7={kernelName:Wd,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a}=t,{strides:r,pad:i,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:y,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:$,dilationHeight:k,dilationWidth:T,outShape:E}=Pi(s.shape,a.shape,r,i,"NHWC",o),O=L(E),B=E.length,W=_t(s.dtype,O);for(let G=0;G<p;++G)for(let D=0;D<g;++D){const H=D*w-b.top;for(let P=0;P<x;++P){const j=P*v-b.left;for(let X=0;X<y;++X){let Q=Number.MIN_SAFE_INTEGER;for(let J=0;J<C;++J){const se=H+J*k;if(se>=0&&se<f)for(let te=0;te<$;++te){const de=j+te*T;if(de>=0&&de<m){const be=ja([G,se,de,X],c,xe(s.shape)),Ce=ja([J,te,X],d,xe(a.shape)),ve=u[be]+h[Ce];ve>Q&&(Q=ve)}}}const ee=ja([G,D,P,X],B,xe(E));W[ee]=Q}}}return{dataId:l.write(Zo(W,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7={kernelName:Tm,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a,dy:r}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=ra(s.shape,u.data.get(s.dataId).values),h=ra(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:T}=Pi(s.shape,a.shape,i,o,"NHWC",l);N(r.rank===T.length,()=>`Error in ${Tm}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const E=ra(T,u.data.get(r.dataId).values),O=aT(a.shape,a.dtype);for(let W=0;W<d;++W)for(let V=0;V<y;++V){const G=V*b-x.top;for(let D=0;D<g;++D){const H=D*w-x.left;for(let P=0;P<m;++P){let j=Number.MIN_SAFE_INTEGER,X=0,Q=0;for(let ee=0;ee<v;++ee){const J=G+ee*$;if(J>=0&&J<p)for(let se=0;se<C;++se){const te=H+se*k;if(te>=0&&te<f){const de=c[W][J][te][P]+h[ee][se][P];de>j&&(j=de,X=ee,Q=se)}}}O[X][Q][P]+=E[W][V][D][P]}}}return{dataId:u.write(Zo(O,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7={kernelName:Im,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a,dy:r}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=ra(s.shape,u.data.get(s.dataId).values),h=ra(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:T}=Pi(s.shape,a.shape,i,o,"NHWC",l);N(r.rank===T.length,()=>`Error in ${Im}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const E=ra(T,u.data.get(r.dataId).values),O=aT(s.shape,s.dtype);for(let W=0;W<d;++W)for(let V=0;V<y;++V){const G=V*b-x.top;for(let D=0;D<g;++D){const H=D*w-x.left;for(let P=0;P<m;++P){let j=Number.MIN_SAFE_INTEGER,X=G<0?0:G,Q=H<0?0:H;for(let ee=0;ee<v;++ee){const J=G+ee*$;if(J>=0&&J<p)for(let se=0;se<C;++se){const te=H+se*k;if(te>=0&&te<f){const de=c[W][J][te][P]+h[ee][se][P];de>j&&(j=de,X=J,Q=te)}}}O[W][X][Q][P]+=E[W][V][D][P]}}}return{dataId:u.write(Zo(O,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(t){const{inputs:e,backend:n,attrs:s}=t,{image:a}=e,{canvas:r,options:i}=s,{contextOptions:o,imageOptions:l}=i||{},u=(l==null?void 0:l.alpha)||1,c=(o==null?void 0:o.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=r.getContext(c,(o==null?void 0:o.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=a.shape.slice(0,2),f=a.shape.length===2?1:a.shape[2],m=n.data.get(a.dataId).values,y=a.dtype==="float32"?255:1,g=new Uint8ClampedArray(p*d*4);for(let b=0;b<d*p;++b){const w=[0,0,0,255*u];for(let C=0;C<f;C++){const $=m[b*f+C];if(a.dtype==="float32"){if($<0||$>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${$}.`)}else if(a.dtype==="int32"&&($<0||$>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${$}.`);f===1?(w[0]=$*y,w[1]=$*y,w[2]=$*y):w[C]=$*y}const v=b*4;g[v+0]=Math.round(w[0]),g[v+1]=Math.round(w[1]),g[v+2]=Math.round(w[2]),g[v+3]=Math.round(w[3])}r.width=p,r.height=d;const x=new ImageData(g,p,d);return h.putImageData(x,0,0),a}const V7={kernelName:oT,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"sum");let o;a.dtype==="bool"?o=Di({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Ja({inputs:{x:a},backend:n});const l=o.shape.length,u=Ie(r,o.shape),c=tt(u,l);let h=u,d=o;c!=null&&(d=es({inputs:{x:o},backend:n,attrs:{perm:c}}),h=dt(h.length,l)),Ht("sum",h,d.shape.length);const[p,f]=Bt(d.shape,h),m=dn(d.dtype,"int32");let y=qm(n,p,m);const g=L(f),x=n.data.get(y.dataId).values,b=n.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const v=w*g;let C=0;for(let $=0;$<g;++$)C+=b[v+$];x[w]=C}if(i){const w=Ft(y.shape,u),v=y;y=ct({inputs:{x:y},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(d),y}const U7={kernelName:Sp,backendName:"cpu",kernelFunc:qp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(t){const{inputs:e,backend:n,attrs:s}=t,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=ox(a,r.length);ux(i.length,l,r);const{path:u,steps:c}=cx(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=lx(p,l[y]);let b;hx(g)?b=r[y]:(b=es({inputs:{x:r[y]},backend:n,attrs:{perm:g}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);Ee(b.shape,w)||(b=ct({inputs:{x:b},backend:n,attrs:{shape:w}}),f.push(b)),d===null?d=b:(d=Nx({inputs:{a:b,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=qp({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const G7={kernelName:Vg,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(t){const{inputs:e,backend:n}=t,{dy:s,y:a}=e;me([s,a],"eluGrad");const r=new Float32Array(L(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=0?r[l]=o[l]:r[l]=o[l]*(u+1)}return n.makeTensorInfo(a.shape,"float32",r)}const j7={kernelName:Ug,backendName:"cpu",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=tx,X7=nx,K7=sx,Y7=ax,Q7=rx,Z7=ix,J7=Ze(Xu,t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+q7*n);return e*(1-((((Z7*s+Q7)*s+Y7)*s+K7)*s+X7)*s*Math.exp(-n*n))}),eY={kernelName:Xu,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ym(t){const{inputs:e,backend:n,attrs:s}=t,{input:a}=e,{dim:r}=s,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(N(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),ct({inputs:{x:a},backend:n,attrs:{shape:o}})}const tY={kernelName:Hd,backendName:"cpu",kernelFunc:Ym};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nY=Ut((t,e)=>t/e),SS=an(ju,nY),C1={kernelName:ju,backendName:"cpu",kernelFunc:SS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(t,e,n){const s=t.shape,a=s[0],r=s[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,r],c=L(u),h=tn("float32",c),d=tn("float32",c);for(let y=0;y<a;y++){const g=Bo({inputs:{x:o},backend:n,attrs:{begin:[y,0],size:[1,r]}}),x=Bo({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,r]}}),b=os({inputs:{real:g,imag:x},backend:n}),{real:w,imag:v}=sY(b,e,n),C=ka(w,v);for(let $=0;$<r;$++){const k=Gv(C,$);h[y*r+$]=k.real,d[y*r+$]=k.imag}n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=os({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function sY(t,e,n){const s=L(t.shape),a=n.data.get(t.dataId),r=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(aY(s)){const o=$1(r,i,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const u=n.makeTensorInfo(l,"float32",o.real),c=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",Fi(s,"float32")),d=Ja({inputs:{x:h},backend:n}),p=C1.kernelFunc({inputs:{a:u,b:h},backend:n}),f=C1.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,y=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:y}}return o}else{const o=ka(r,i),l=rY(o,s,e);return SR(l)}}function aY(t){return(t&t-1)===0}function $1(t,e,n,s,a){if(n===1)return{real:t,imag:e};const r=ka(t,e),i=n/2,o=CR(r),l=o.real,u=o.imag,c=[l.length],h=a.makeTensorInfo(c,"float32",l),d=a.makeTensorInfo(c,"float32",u),p=os({inputs:{real:h,imag:d},backend:a}),f=$R(r),m=f.real,y=f.imag,g=[m.length],x=a.makeTensorInfo(g,"float32",m),b=a.makeTensorInfo(g,"float32",y),w=os({inputs:{real:x,imag:b},backend:a}),v=$1(l,u,i,s,a),C=v.real,$=v.imag,k=[C.length],T=a.makeTensorInfo(k,"float32",C),E=a.makeTensorInfo(k,"float32",$),O=os({inputs:{real:T,imag:E},backend:a}),B=$1(m,y,i,s,a),W=B.real,V=B.imag,G=[W.length],D=a.makeTensorInfo(G,"float32",W),H=a.makeTensorInfo(G,"float32",V),P=os({inputs:{real:D,imag:H},backend:a}),j=kR(n,s),X=[j.real.length],Q=a.makeTensorInfo(X,"float32",j.real),ee=a.makeTensorInfo(X,"float32",j.imag),J=os({inputs:{real:Q,imag:ee},backend:a}),se=Nx({inputs:{a:J,b:P},backend:a}),te=xu({inputs:{a:O,b:se},backend:a}),de=wS({inputs:{a:O,b:se},backend:a}),be=Mo({inputs:{input:te},backend:a}),Ce=Mo({inputs:{input:de},backend:a}),ve=bu({inputs:{input:te},backend:a}),Re=bu({inputs:{input:de},backend:a}),Fe=wu({inputs:[be,Ce],backend:a,attrs:{axis:0}}),Ye=wu({inputs:[ve,Re],backend:a,attrs:{axis:0}}),it=a.data.get(Fe.dataId).values,Tt=a.data.get(Ye.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(Q),a.disposeIntermediateTensorInfo(ee),a.disposeIntermediateTensorInfo(J),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(de),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo(Ce),a.disposeIntermediateTensorInfo(Re),a.disposeIntermediateTensorInfo(Fe),a.disposeIntermediateTensorInfo(Ye),{real:it,imag:Tt}}function rY(t,e,n){const s=new Float32Array(e*2);for(let a=0;a<e;a++){let r=0,i=0;for(let o=0;o<e;o++){const l=IR(a*o,e,n),u=Gv(t,o);r+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(r/=e,i/=e),NR(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(t){const{inputs:e,backend:n}=t,{input:s}=e,a=L(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=ct({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=d_(o,!1,n),u=ct({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const oY={kernelName:Wg,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(t){const{backend:e,attrs:n}=t,{shape:s,value:a,dtype:r}=n,i=r||Ko(a),o=_t(i,L(s));return uY(o,a,i),e.makeTensorInfo(s,i,o)}const lY={kernelName:Gg,backendName:"cpu",kernelFunc:CS};function uY(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cY={kernelName:Hg,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,a=n,r=tn(s.dtype,L(s.shape)),[i,o,l,u]=s.shape,c=a.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*o*u;for(let f=0;f<o;f++){const m=f*(l*u);for(let y=0;y<l;y++){const g=y*u;for(let x=0;x<u;x++){const b=Math.round(l-y-1),w=p+m+g+x;let v=c[w];if(b>=0&&b<l){const C=b*u,$=p+m+C+x;v=c[$]}r[w]=v}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=c_({inputs:{x:a,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const y=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const g=ct({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=xu({inputs:{a:m,b:g},backend:n}),n.disposeIntermediateTensorInfo(g)}else m=xu({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(y)}if(p){const y=m;if(c==="NCHW"&&p==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const g=ct({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Km(n,m,p,g,f),n.disposeIntermediateTensorInfo(g)}else m=Km(n,m,p,o,f);n.disposeIntermediateTensorInfo(y)}return m}const dY={kernelName:Qh,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=h_({inputs:{x:a,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const y=m;m=xu({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(p){const y=m;m=Km(n,m,p,o,f),n.disposeIntermediateTensorInfo(y)}return m}const fY={kernelName:Zh,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(t){const{inputs:e,backend:n}=t,{params:s,indices:a}=e,r=L(s.shape),i=a.shape,o=i[i.length-1],[l,u,c,h]=jy(s,a);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(a.dataId).values,p=n.bufferSync(s),f=v3(d,p,s.dtype,u,o,c,h,s.shape,r);return n.makeTensorInfo(l,s.dtype,f.values)}const gY={kernelName:jg,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,indices:r}=e,{axis:i,batchDims:o}=s;me([a,r],"gatherV2");const l=Ie(i,a.shape)[0],u=n.data.get(r.dataId).values,c=a.shape[l];for(let w=0;w<u.length;++w){const v=u[w];N(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=o;o==null&&(h=0);const d=L(r.shape),p=px(a,r,l,h),f=ct({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ct({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),y=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],g=n.bufferSync(m),x=n.bufferSync(f),b=S3(x,g,y);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}const xY={kernelName:qd,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(t){const{inputs:e,backend:n}=t,{input:s}=e,a=L(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=ct({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=d_(o,!0,n),u=ct({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const wY={kernelName:qg,backendName:"cpu",kernelFunc:bY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY=Ze(tc,t=>Number.isFinite(t)?1:0,"bool"),SY={kernelName:tc,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CY=Ze(nc,t=>Math.abs(t)===1/0?1:0,"bool"),$Y={kernelName:nc,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=Ze(sc,t=>Number.isNaN(t)?1:0,"bool"),kY={kernelName:sc,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(t){const{backend:e,attrs:n}=t,{start:s,stop:a,num:r}=n,i=I3(s,a,r);return e.makeTensorInfo([i.length],"float32",i)}const TY={kernelName:Kg,backendName:"cpu",kernelFunc:IY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY=Ze(rc,t=>Math.log1p(t)),RY={kernelName:rc,backendName:"cpu",kernelFunc:EY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY=Ut((t,e)=>t&&e),AY=an(Zd,DY,null,"bool"),_Y={kernelName:Zd,backendName:"cpu",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OY=Ze(Jd,t=>t?0:1,"bool"),FY={kernelName:Jd,backendName:"cpu",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY=Ut((t,e)=>t||e),LY=an(ep,zY,null,"bool"),PY={kernelName:ep,backendName:"cpu",kernelFunc:LY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s;me(a,"LRN");const u=a.shape[3],c=u-1,h=n.data.get(a.dataId).values,d=L(a.shape),p=new Float32Array(d);function f(m){const y=m%u;let g=m-y+Math.max(0,y-r);const x=m-y+Math.min(y+r,c);let b=0;for(;g<=x;g++){const w=h[g];b+=w*w}return b}for(let m=0;m<d;m++){const y=f(m),g=h[m]*Math.pow(i+o*y,-l);p[m]=g}return n.makeTensorInfo(a.shape,a.dtype,p)}const BY={kernelName:tp,backendName:"cpu",kernelFunc:MY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;me(i,"LRNGrad");const h=L(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values,y=new Float32Array(h),g=h;for(let x=0;x<g;x++){const b=x%d,w=x-b+Math.max(0,b-o),v=x-b+Math.min(d,b+o+1);let C=0;for(let $=w;$<v;$++)C+=Math.pow(f[$],2);C=u*C+l;for(let $=w;$<v;$++){let k=-2*u*c*f[$]*m[x]/C;x===$&&(k+=Math.pow(C,-c)),k*=p[x],y[$]+=k}}return n.makeTensorInfo(i.shape,a.dtype,y)}const UY={kernelName:Yg,backendName:"cpu",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reductionIndices:r,keepDims:i}=s,o=n;let l=a.shape;const u=l.length,c=Ie(r,l);let h=c;const d=tt(h,u);let p=o.data.get(a.dataId).values;if(d!=null){const w=new Array(u);for(let v=0;v<w.length;v++)w[v]=l[d[v]];p=xS(p,l,a.dtype,d,w),h=dt(h.length,u),l=w}me(a,"max"),Ht("max",h,u);const[f,m]=Bt(l,h),y=L(m),g=E3(p,y,f,a.dtype),x=o.write(g,f,a.dtype);let b=f;return i&&(b=Ft(f,c)),{dataId:x,shape:b,dtype:a.dtype}}const WY={kernelName:np,backendName:"cpu",kernelFunc:p_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;me(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(sn(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))h=Ja({inputs:{x:a},backend:n});else{const d=n.data.get(a.dataId).values,p=xe(a.shape),f=vS(d,a.shape,a.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,f.values)}return h}const HY={kernelName:sp,backendName:"cpu",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;me(a,"maxPool3d");const c=Os(a.shape,r,i,1,o,l,u),h=n.data.get(a.dataId).values,d=u_(h,a.shape,a.dtype,xe(a.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const qY={kernelName:ap,backendName:"cpu",kernelFunc:jY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;me([a,r],"maxPool3DGrad");const c=Os(r.shape,i,o,1,l,u),h=n.bufferSync(r),d=z8(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,y=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,C=b-1-c.padInfo.front,$=v-1-c.padInfo.left,k=w-1-c.padInfo.top,T=ke(r.shape,"float32"),E=n.bufferSync(a);for(let O=0;O<c.batchSize;++O)for(let B=0;B<c.inChannels;++B)for(let W=0;W<c.inDepth;++W)for(let V=0;V<c.inHeight;++V)for(let G=0;G<c.inWidth;++G){const D=W-C,H=V-k,P=G-$;let j=0;for(let X=0;X<b;X+=y){const Q=(D+X)/p;if(!(Q<0||Q>=c.outDepth||Math.floor(Q)!==Q))for(let ee=0;ee<w;ee+=g){const J=(H+ee)/f;if(!(J<0||J>=c.outHeight||Math.floor(J)!==J))for(let se=0;se<v;se+=x){const te=(P+se)/m;if(te<0||te>=c.outWidth||Math.floor(te)!==te)continue;const de=b*w*v-1-d.get(O,Q,J,te,B),be=X*w*v+ee*v+se,Ce=de===be?1:0;if(Ce===0)continue;const ve=E.get(O,Q,J,te,B);j+=ve*Ce}}}T.set(j,O,W,V,G,B)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const KY={kernelName:Zg,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r,output:i}=e,o=r;me([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rn(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=ke(d.outShape,o.dtype,l_(p,o.shape,o.dtype,d).values),m=d.strideHeight,y=d.strideWidth,g=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,C=b-1-d.padInfo.top,$=ke(o.shape,"float32"),k=n.data.get(a.dataId).values,T=ke(a.shape,"float32",k);for(let E=0;E<d.batchSize;++E)for(let O=0;O<d.inChannels;++O)for(let B=0;B<d.inHeight;++B)for(let W=0;W<d.inWidth;++W){const V=B-C,G=W-v;let D=0;for(let H=0;H<b;H+=g){const P=(V+H)/m;if(!(P<0||P>=d.outHeight||Math.floor(P)!==P))for(let j=0;j<w;j+=x){const X=(G+j)/y;if(X<0||X>=d.outWidth||Math.floor(X)!==X)continue;const Q=b*w-1-f.get(E,P,X,O),ee=H*w+j,J=Q===ee?1:0;if(J===0)continue;const se=T.get(E,P,X,O);D+=se*J}}$.set(D,E,B,W,O)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const QY={kernelName:Qg,backendName:"cpu",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(t,e,n,s,a){const r=xe(e),i=vS(t,e,n,r,a,"max"),o=l_(t,e,n,a,!0,s);return[i.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY={kernelName:Jg,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=e,l=n;me(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Rn(s.shape,a,r,[1,1],i),[h,d]=ZY(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=Ie(r,a.shape),u=Bt(a.shape,o)[1],c=L(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=Di({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=SS({inputs:{a:p,b:d},backend:n});h.push(f);const m=qp({inputs:{x:f},backend:n,attrs:{axis:r,keepDims:i}});return h.forEach(y=>n.disposeIntermediateTensorInfo(y)),m}const t9={kernelName:rp,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"min");const o=Ie(r,a.shape);let l=o;const u=tt(l,a.shape.length);let c=a;u!=null&&(c=es({inputs:{x:a},backend:n,attrs:{perm:u}}),l=dt(l.length,a.shape.length)),Ht("min",l,c.shape.length);const[h,d]=Bt(c.shape,l),p=L(d),f=Sn(L(h),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*p;let b=m[x];for(let w=0;w<p;++w){const v=m[x+w];(Number.isNaN(v)||v<b)&&(b=v)}f[g]=b}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,f);if(i){const g=Ft(h,o),x=ct({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const s9={kernelName:ip,backendName:"cpu",kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,mode:i}=s;me(a,"mirrorPad");const o=r.map((b,w)=>b[0]+a.shape[w]+b[1]),l=r.map(b=>b[0]),u=r.map((b,w)=>b[0]+a.shape[w]),c=i==="reflect"?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=xe(a.shape),f=L(o),m=o.length,y=xe(o),g=tn(a.dtype,f);for(let b=0;b<f;b++){let w=_u(b,m,y);for(let C=0;C<m;C++)w[C]<l[C]?w[C]=l[C]*2-w[C]-c:w[C]>=u[C]&&(w[C]=(u[C]-1)*2-w[C]+c);w=w.map((C,$)=>C-l[$]);const v=ja(w,d,p);g[b]=h[v]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}const r9={kernelName:op,backendName:"cpu",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9=Ut((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),o9=an(lc,i9),l9={kernelName:lc,backendName:"cpu",kernelFunc:o9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{dim:r}=s,i=a.shape.length;let o=r;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=Ie([o],a.shape),u=p_({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ft(u.shape,l),h=ct({inputs:{x:u},backend:n,attrs:{shape:c}}),d=wS({inputs:{a,b:h},backend:n}),p=y3({inputs:{x:d},backend:n}),f=qp({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=ct({inputs:{x:f},backend:n,attrs:{shape:c}}),y=SS({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const u9={kernelName:Np,backendName:"cpu",kernelFunc:f_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s;me(a,"multinomial");const l=o?a:f_({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,r],p=Sn(L(d),"int32");for(let f=0;f<u;++f){const m=f*c,y=new Float32Array(c-1);y[0]=h[m];for(let b=1;b<y.length;++b)y[b]=y[b-1]+h[m+b];const g=Oy.alea(i.toString()),x=f*r;for(let b=0;b<r;++b){const w=g();p[x+b]=y.length;for(let v=0;v<y.length;v++)if(w<y[v]){p[x+b]=v;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}const h9={kernelName:ey,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9=Gy;function p9(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;me(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,{selectedIndices:h}=d9(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const f9={kernelName:ty,backendName:"cpu",kernelFunc:p9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m9=zv;function g9(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;me(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=m9(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const y9={kernelName:Lw,backendName:"cpu",kernelFunc:g9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9=Hy;function b9(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;me(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(r.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=x9(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const w9={kernelName:ny,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s;me(a,"oneHot");const u=L(a.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(a.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=o);return n.makeTensorInfo([...a.shape,i],r,c)}const S9={kernelName:hp,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qm(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Mo({inputs:{input:s},backend:n}),r=Qm({inputs:{x:a},backend:n}),i=bu({inputs:{input:s},backend:n}),o=Qm({inputs:{x:i},backend:n}),l=os({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return CS({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const C9={kernelName:Tp,backendName:"cpu",kernelFunc:Qm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Mo({inputs:{input:s},backend:n}),r=m_({inputs:{x:a},backend:n}),i=bu({inputs:{input:s},backend:n}),o=Qm({inputs:{x:i},backend:n}),l=os({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return CS({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const $9={kernelName:cp,backendName:"cpu",kernelFunc:m_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s;if(e.length===1)return Ym({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{ns(r,c.shape,"All tensors passed to stack must have matching shapes"),N(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=Ym({inputs:{input:c},backend:n,attrs:{dim:a}});return o.push(h),h}),u=wu({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const N9={kernelName:dp,backendName:"cpu",kernelFunc:g_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,constantValue:i}=s;me(a,"pad");const o=r.map((x,b)=>x[0]+a.shape[b]+x[1]),l=r.map(x=>x[0]),u=n.data.get(a.dataId).values,c=L(a.shape),h=a.shape.length,d=xe(a.shape),p=L(o),f=o.length,m=xe(o),y=tn(a.dtype,p);i!==0&&y.fill(i);for(let x=0;x<c;x++){const w=_u(x,h,d).map((C,$)=>C+l[$]),v=ja(w,f,m);y[v]=u[x]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}const y_={kernelName:pp,backendName:"cpu",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I9=Ut((t,e)=>Math.pow(t,e)),T9=an(cc,I9),E9={kernelName:cc,backendName:"cpu",kernelFunc:T9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=e,o=a.map(y=>n.data.get(y.dataId).values),l=a.map(y=>y.shape),u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,[h,d,p]=F3(o,l,u,r.shape,r.dtype,c,i.shape),f=h.map(y=>n.makeTensorInfo([y.length],"int32",y)),m=n.makeTensorInfo(p,r.dtype,d);return f.concat([m])}const D9={kernelName:Pw,backendName:"cpu",kernelFunc:R9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(t){const{inputs:e,backend:n}=t,{starts:s,limits:a,deltas:r}=e,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=z3(i,s.shape,s.dtype,o,a.shape,l,r.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const _9={kernelName:Mw,backendName:"cpu",kernelFunc:A9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(t){const{inputs:e,backend:n,attrs:s}=t,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=o.map(y=>n.data.get(y.dataId).values),p=o.map(y=>y.shape),[f,m]=L3(u,a.shape,c,r.shape,r.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,r.dtype,m)}const F9={kernelName:Bw,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(t){const{backend:e,attrs:n}=t,{start:s,stop:a,dtype:r,step:i}=n,o=P3(s,a,i,r);return e.makeTensorInfo([o.length],r,o)}const L9={kernelName:sy,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9=Ze(hc,t=>1/t),M9={kernelName:hc,backendName:"cpu",kernelFunc:P9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B9(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s;me(a,"resizeBilinear");const l=xe(a.shape),[u,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,y=new Float32Array(L([h,u,c,f])),g=[r&&u>1?d-1:d,r&&c>1?p-1:p],x=[r&&u>1?u-1:u,r&&c>1?c-1:c];let b=0;const w=g[0]/x[0],v=g[1]/x[1];for(let C=0;C<h;C++)for(let $=0;$<u;$++){let k;i?k=w*($+.5)-.5:k=w*$;const T=Math.max(0,Math.floor(k)),E=k-T,O=Math.min(d-1,Math.ceil(k)),B=C*l[0]+T*l[1],W=C*l[0]+O*l[1];for(let V=0;V<c;V++){let G;i?G=v*(V+.5)-.5:G=v*V;const D=Math.max(0,Math.floor(G)),H=G-D,P=Math.min(p-1,Math.ceil(G)),j=B+D*l[2],X=W+D*l[2],Q=B+P*l[2],ee=W+P*l[2];for(let J=0;J<f;J++){const se=m[j+J],te=m[X+J],de=m[Q+J],be=m[ee+J],Ce=se+(de-se)*H,ve=te+(be-te)*H,Re=Ce+(ve-Ce)*E;y[b++]=Re}}}return n.makeTensorInfo([h,u,c,f],"float32",y)}const V9={kernelName:xp,backendName:"cpu",kernelFunc:B9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s;me([r,a],"resizeBilinearGrad");const o=xe(a.shape),[l,u,c,h]=a.shape,[,d,p]=r.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],y=[i&&d>1?d-1:d,i&&p>1?p-1:p],g=m[0]/y[0],x=m[1]/y[1],b=n.data.get(r.dataId).values;let w=0;for(let v=0;v<l;v++){const C=v*o[0];for(let $=0;$<d;$++){const k=$*g,T=Math.floor(k),E=Math.min(Math.ceil(k),u-1),O=C+T*o[1],B=C+E*o[1],W=k-T,V=1-W;for(let G=0;G<p;G++){const D=G*x,H=Math.floor(D),P=Math.min(Math.ceil(D),c-1),j=D-H,X=1-j,Q=O+H*o[2],ee=O+P*o[2],J=B+H*o[2],se=B+P*o[2],te=V*X,de=V*j,be=W*X,Ce=W*j;for(let ve=0;ve<h;ve++){const Re=b[w++];f[Q+ve]+=Re*te,f[ee+ve]+=Re*de,f[J+ve]+=Re*be,f[se+ve]+=Re*Ce}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}const W9={kernelName:iy,backendName:"cpu",kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s;me(a,"resizeNearestNeighbor");const l=xe(a.shape),[u,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,y=new Float32Array(h*u*c*f),g=[r&&u>1?d-1:d,r&&c>1?p-1:p],x=[r&&u>1?u-1:u,r&&c>1?c-1:c],b=g[0]/x[0],w=g[1]/x[1];let v=0;for(let C=0;C<h;C++){const $=C*l[0];for(let k=0;k<u;k++){const T=i?b*(k+.5):b*k;let E=Math.min(d-1,r?Math.round(T):Math.floor(T));i&&(E=Math.max(0,E));const O=$+E*l[1];for(let B=0;B<c;B++){const W=i?w*(B+.5):w*B;let V=Math.min(p-1,r?Math.round(W):Math.floor(W));i&&(V=Math.max(0,V));const G=O+V*l[2];for(let D=0;D<f;D++){const H=m[G+D];y[v++]=H}}}}return n.makeTensorInfo([h,u,c,f],a.dtype,y)}const H9={kernelName:yp,backendName:"cpu",kernelFunc:G9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s;me([r,a],"resizeNearestNeighborGrad");const o=xe(a.shape),l=xe(r.shape),[u,c,h,d]=a.shape,[,p,f]=r.shape,m=new Float32Array(u*c*h*d),y=n.data.get(r.dataId).values,g=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/x[0],w=g[1]/x[1],v=1/b,C=1/w,$=Math.ceil(v)*2+2,k=Math.ceil(C)*2+2;for(let T=0;T<u;T++){const E=T*o[0];for(let O=0;O<c;O++){const B=E+O*o[1],W=Math.floor(O*v),V=Math.floor(W-$/2);for(let G=0;G<h;G++){const D=B+G*o[2],H=Math.floor(G*C),P=Math.floor(H-k/2);for(let j=0;j<d;j++){let X=0;for(let Q=0;Q<$;Q++){const ee=Q+V;if(ee<0||ee>=p)continue;const J=E+ee*l[1],se=ee*b,te=Math.min(c-1,i?Math.round(se):Math.floor(se));if(O===te)for(let de=0;de<k;de++){const be=de+P;if(be<0||be>=f)continue;const Ce=J+be*l[2],ve=be*w,Re=Math.min(h-1,i?Math.round(ve):Math.floor(ve));G===Re&&(X+=y[Ce+j])}}m[D+j]=X}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}const q9={kernelName:ry,backendName:"cpu",kernelFunc:j9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dims:r}=s;me(a,"reverse");const i=a.shape.length,o=Ie(r,a.shape);if(i===0)return Ja({inputs:{x:a},backend:n});const l=new Zt(a.shape,a.dtype),u=n.bufferSync(a);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();o.forEach(p=>d[p]=a.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const K9={kernelName:bp,backendName:"cpu",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y9={kernelName:by,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:r,center:i}=e,o=n,l=tn(s.dtype,L(s.shape)),[u,c,h,d]=s.shape,[p,f]=Zy(i,c,h),m=255,y=Math.sin(a),g=Math.cos(a),x=o.data.get(s.dataId).values;for(let w=0;w<u;w++){const v=w*h*c*d;for(let C=0;C<c;C++){const $=C*(h*d);for(let k=0;k<h;k++){const T=k*d;for(let E=0;E<d;E++){const O=[u,C,k,E],B=O[2],W=O[1];let V=(B-p)*g-(W-f)*y,G=(B-p)*y+(W-f)*g;V=Math.round(V+p),G=Math.round(G+f);let D=r;if(typeof r!="number"&&(E===3?D=m:D=r[E]),V>=0&&V<h&&G>=0&&G<c){const P=G*(h*d),j=V*d,X=v+P+j+E;D=x[X]}const H=v+$+T+E;l[H]=D}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9=Ze(fc,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),Z9={kernelName:fc,backendName:"cpu",kernelFunc:Q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rr(r,a,i),d=!0,p=n.bufferSync(a),f=n.bufferSync(r),m=ho(p,f,i,h,u,l,o,c,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}const eQ={kernelName:oy,backendName:"cpu",kernelFunc:J9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tQ(t,e){let n=0,s=t.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),t[a]<e?n=a+1:s=a;return s}function nQ(t,e){let n=0,s=t.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),t[a]<=e?n=a+1:s=a;return s}function sQ(t,e,n,s,a,r){const i=_t("int32",n*a);for(let o=0;o<n;++o){const l=t.slice(o*s,(o+1)*s),u=o*a;for(let c=0;c<a;++c)i[u+c]=r==="left"?tQ(l,e[c+u]):nQ(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aQ(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:a,values:r}=e,{side:i}=s,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=sQ(o,l,a.shape[0],a.shape[1],r.shape[1],i);return n.makeTensorInfo(r.shape,"int32",u)}const rQ={kernelName:uy,backendName:"cpu",kernelFunc:aQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iQ(t){const{inputs:e,backend:n}=t,{condition:s,t:a,e:r}=e;me([s,a,r],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=dn(a.dtype,r.dtype),h=Sn(L(a.shape),c);let d=0;const p=i===0||i>1||a.shape.length===1?1:L(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<p;m++)o[f]===1?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(a.shape,c,h)}const oQ={kernelName:wp,backendName:"cpu",kernelFunc:iQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lQ=Lp,uQ=Pp,cQ=Ze(gc,t=>t>=0?uQ*t:lQ*(Math.exp(t)-1)),hQ={kernelName:gc,backendName:"cpu",kernelFunc:cQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dQ=Ze(bc,t=>t<0?-1:t>0?1:0),pQ={kernelName:bc,backendName:"cpu",kernelFunc:dQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fQ=Ze(yc,t=>Math.sin(t)),mQ={kernelName:yc,backendName:"cpu",kernelFunc:fQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gQ=Ze(xc,t=>Math.sinh(t)),yQ={kernelName:xc,backendName:"cpu",kernelFunc:gQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xQ=11920928955078125e-23,w$=Math.log(xQ)+2,bQ=Ze(vc,t=>{const e=t>-w$,n=t<w$,s=Math.exp(t);let a;return n?a=s:e?a=t:a=Math.log(1+s),a}),wQ={kernelName:vc,backendName:"cpu",kernelFunc:bQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,paddings:i}=s;me([a],"spaceToBatchND");const o=L(r),l=[[0,0]];l.push(...i);for(let C=1+r.length;C<a.shape.length;++C)l.push([0,0]);const u=y_.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=sl(u.shape,r,o,!1),h=al(c.length,r.length,!1),d=rl(u.shape,r,o,!1),m=ct({inputs:{x:u},backend:n,attrs:{shape:c}}),x=es({inputs:{x:m},backend:n,attrs:{perm:h}}),v=ct({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}const SQ={kernelName:Cp,backendName:"cpu",kernelFunc:vQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(t){const{inputs:e,backend:n}=t,{indices:s,values:a,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=U3(o,s.shape,s.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const $Q={kernelName:Vw,backendName:"cpu",kernelFunc:CQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:a,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(r.dataId).values),[u,c,h]=W3(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const kQ={kernelName:Uw,backendName:"cpu",kernelFunc:NQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IQ(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=bS(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const TQ={kernelName:cy,backendName:"cpu",kernelFunc:IQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EQ(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=bS(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const RQ={kernelName:hy,backendName:"cpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=rr(r,a,o),p=!1,f=n.bufferSync(a);let m;switch(r.dtype){case"bool":{const y=n.bufferSync(r),g=!!n.data.get(i.dataId).values[0];m=ho(f,y,o,d,c,u,l,h,g,p);break}case"float32":{const y=n.bufferSync(r),g=n.data.get(i.dataId).values[0];m=ho(f,y,o,d,c,u,l,h,g,p);break}case"int32":{const y=n.bufferSync(r),g=n.data.get(i.dataId).values[0];m=ho(f,y,o,d,c,u,l,h,g,p);break}case"string":{const y=n.bufferSync(r),g=$a(n.data.get(i.dataId).values[0]);m=ho(f,y,o,d,c,u,l,h,g,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}const AQ={kernelName:dy,backendName:"cpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=Ie(i,a.shape)[0],l=dx(a,r,o),u=new Array(a.shape.length).fill(0),c=a.shape.slice();return l.map(h=>{const d=[...c];d[o]=h;const p=Bo({inputs:{x:a},backend:n,attrs:{begin:u,size:d}});return u[o]+=h,p})}const OQ={kernelName:$p,backendName:"cpu",kernelFunc:_Q};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FQ={kernelName:py,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;me(n,"square");const a=s.data.get(n.dataId).values,r=new Float32Array(a.length);for(let o=0;o<a.length;++o){const l=a[o];r[o]=l*l}return{dataId:s.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zQ=Ze(Tc,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),LQ={kernelName:Tc,backendName:"cpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;me(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:b,strides:w}=Ky(a.shape,r,i,o,l,u,c,h,d);let v;if(m)v=ct({inputs:{x:a},backend:n,attrs:{shape:f}});else if(y||g){N(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const C=Xy(x,b,w),$=Bo({inputs:{x:a},backend:n,attrs:{begin:x,size:C}});v=ct({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{const C=n.bufferSync(a),$=j3(p,C,w,x);v=n.makeTensorInfo(f,$.dtype,$.values)}return v}const MQ={kernelName:my,backendName:"cpu",kernelFunc:PQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(t){const{inputs:e,backend:n,attrs:s}=t,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=q3(d,p,a,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const VQ={kernelName:gy,backendName:"cpu",kernelFunc:BQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:a}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=X3(o,l,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const WQ={kernelName:Ww,backendName:"cpu",kernelFunc:UQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:a}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(r.dataId).values,o=K3(i,a);return n.makeTensorInfo(r.shape,"int32",o)}const HQ={kernelName:Gw,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jQ=Ze(Nc,t=>Math.tan(t)),qQ={kernelName:Nc,backendName:"cpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XQ=Ze(kc,t=>Math.tanh(t)),KQ={kernelName:kc,backendName:"cpu",kernelFunc:XQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(t){const{inputs:e,backend:n}=t,{tensor:s,indices:a,updates:r}=e,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=rr(r,a,s.shape),h=!1,d=n.bufferSync(a),p=n.bufferSync(r),f=n.bufferSync(s),m=ho(d,p,s.shape,c,l,o,i,u,f,h);return n.makeTensorInfo(s.shape,m.dtype,m.values)}const QQ={kernelName:ly,backendName:"cpu",kernelFunc:YQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reps:r}=s;me(a,"tile");const i=Q3(n.bufferSync(a),r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const JQ={kernelName:Ic,backendName:"cpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{k:r,sorted:i}=s;me(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=J3(o,a.shape,a.dtype,r,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const tZ={kernelName:yy,backendName:"cpu",kernelFunc:eZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(t){const{inputs:e,attrs:n,backend:s}=t,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=a.shape,[f,m]=u??[h,d],y=[c,f,m,p],g=xe(a.shape),x=g[0],b=g[1],w=g[2],v=xe(y),C=v[0],$=v[1],k=v[2],T=tn(a.dtype,L(y));T.fill(l);const E=s.data.get(a.dataId).values,O=s.data.get(r.dataId).values;for(let W=0;W<c;++W){const V=r.shape[0]===1?O:O.subarray(W*8,W*8+8);for(let G=0;G<f;++G)for(let D=0;D<m;++D)for(let H=0;H<p;++H){let P;const j=V[6]*D+V[7]*G+1;if(j===0)continue;const X=(V[0]*D+V[1]*G+V[2])/j,Q=(V[3]*D+V[4]*G+V[5])/j,ee=v$(X,d,o),J=v$(Q,h,o);switch(i){case"nearest":P=lZ(E,h,d,x,b,w,W,J,ee,H,l);break;case"bilinear":P=uZ(E,h,d,x,b,w,W,J,ee,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const se=W*C+G*$+D*k+H;T[se]=P}return s.makeTensorInfo(y,a.dtype,T)}return{dataId:s.write(T,y,a.dtype),shape:a.shape,dtype:a.dtype}}const sZ={kernelName:xy,backendName:"cpu",kernelFunc:nZ};function v$(t,e,n){switch(n){case"reflect":return aZ(t,e);case"wrap":return rZ(t,e);case"nearest":return oZ(t,e);case"constant":default:return iZ(t)}}function aZ(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=2*e;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-e?n+s:-n-1}else if(n>e-1)if(e<=1)n=0;else{const s=2*e;n-=s*Math.trunc(n/s),n>=e&&(n=s-n-1)}return To(0,n,e-1)}function rZ(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=e-1;n+=e*(Math.trunc(-n/s)+1)}else if(n>e-1)if(e<=1)n=0;else{const s=e-1;n-=e*Math.trunc(n/s)}return To(0,n,e-1)}function iZ(t,e){return t}function oZ(t,e){return To(0,t,e-1)}function ph(t,e,n,s,a,r,i,o,l,u,c){const h=i*s+o*a+l*r+u;return 0<=o&&o<e&&0<=l&&l<n?t[h]:c}function lZ(t,e,n,s,a,r,i,o,l,u,c){const h=Math.round(o),d=Math.round(l);return ph(t,e,n,s,a,r,i,h,d,u,c)}function uZ(t,e,n,s,a,r,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*ph(t,e,n,s,a,r,i,h,d,u,c)+(l-d)*ph(t,e,n,s,a,r,i,h,f,u,c),y=(f-l)*ph(t,e,n,s,a,r,i,p,d,u,c)+(l-d)*ph(t,e,n,s,a,r,i,p,f,u,c);return(p-o)*m+(o-h)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cZ(t){const{inputs:e,attrs:n,backend:s}=t,{axis:a}=n,{x:r}=e;me(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:u}=e_(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const hZ={kernelName:Hw,backendName:"cpu",kernelFunc:cZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(t){const{inputs:e,backend:n,attrs:s}=t,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,o=a.shape[r],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==r&&(l[u++]=a.shape[p]);const c=new Array(i).fill(0),h=a.shape.slice();h[r]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[r]=p;const f=Bo({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[p]=ct({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}const pZ={kernelName:kp,backendName:"cpu",kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,segmentIds:r}=e,{numSegments:i}=s;me(a,"unsortedSegmentSum");const o=a.shape.length,l=r.shape.length,u=[],c=[],h=o-l;let d=r;for(let f=0;f<h;++f){const m=Ym({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){const m=Fi(f,"int32"),y=n.makeTensorInfo([],"int32",m),g=m3({inputs:{a:y,b:d},backend:n}),x=Di({inputs:{x:g},backend:n,attrs:{dtype:"float32"}}),b=Nx({inputs:{a:x,b:a},backend:n}),w=qp({inputs:{x:b},backend:n,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(y),c.push(g),c.push(x),c.push(b),c.push(w)}const p=g_({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const mZ={kernelName:Ip,backendName:"cpu",kernelFunc:fZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=[c8,HX,d8,f8,QX,g8,x8,w8,S8,$8,k8,T8,R8,_8,F8,P8,B8,U8,G8,l8,j8,X8,Y8,JX,Z8,KX,tK,e7,jX,n7,a7,r7,o7,u7,h7,p7,m7,y7,b7,v7,C7,N7,I7,E7,R7,A7,O7,z7,L7,P7,M7,V7,G7,t8,j7,nK,eY,sK,tY,rK,oY,lY,cY,oK,uK,dY,fY,gY,xY,hK,pK,qX,wY,s7,SY,$Y,kY,n8,mK,yK,TY,bK,RY,_Y,FY,PY,BY,UY,WY,vK,HY,qY,KY,QY,JY,t9,s9,CK,r9,l9,h9,NK,IK,f9,y9,w9,EK,S9,$9,N9,y_,E9,a8,AK,D9,_9,F9,L9,XX,C1,M9,r8,i8,o8,V9,W9,H9,q9,K9,Y9,Z9,BK,eQ,rQ,oQ,hQ,UK,pQ,mQ,yQ,WK,u9,wQ,SQ,$Q,kQ,TQ,RQ,AQ,OQ,jK,FQ,XK,YK,LQ,MQ,VQ,WQ,HQ,e8,U7,qQ,KQ,QQ,JQ,tZ,sZ,RK,hZ,pZ,mZ,C9];for(const t of gZ)jw(t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro={},Nf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function yZ(t,e){ro[t]=e}function Ra(t,e){if(!(t in ro)||e!=null){const s=bZ(t,e);if(s!==null)ro[t]=s;else return console.log("Could not get context for WebGL version",t),null}const n=ro[t];return n==null||n.isContextLost()?(delete ro[t],Ra(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ro[t])}function xZ(t){if(!M().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function bZ(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e??xZ(t);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ro[t]},!1),M().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nf.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",Nf)||n.getContext("experimental-webgl",Nf):n.getContext("webgl2",Nf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cd;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(cd||(cd={}));var ks;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(ks||(ks={}));var bn;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(bn||(bn={}));function Xp(t,e){return[e,t]}function wZ(t,e){return t*e}function kf(t){const e=L(t),n=Math.ceil(e/4);return _0(n)}function Fc(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function vZ(t,e){const[n,s]=Fc(t,e);return n*s*4}function $S(t,e){const n=t;let s,a,r,i,o,l,u,c,h,d;return M().getNumber("WEBGL_VERSION")===2?(s=n.R32F,a=n.R16F,r=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=t.RGBA,a=t.RGBA,r=t.RGBA,i=n.RGBA,o=t.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(t,e){const n=e();return M().getBool("DEBUG")&&SZ(t),n}function SZ(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+kZ(t,e))}const CZ=596e-10,$Z=65504;function NZ(t){return!!(M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||CZ<Math.abs(t)&&Math.abs(t)<$Z)}function kZ(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function If(t,e){return Br(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function IZ(t,e){const n=Br(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function TZ(t,e){const n=Br(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),M().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw x_(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const EZ=/ERROR: [0-9]+:([0-9]+):/g;function x_(t,e){const n=EZ.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const s=+n[1],a=t.split(`
`),r=a.length.toString().length+2,i=a.map((h,d)=>Yl((d+1).toString(),r)+h);let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Yl(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function RZ(t){return Br(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function DZ(t,e){if(ue(t,()=>t.linkProgram(e)),!M().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function _b(t,e){if(ue(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function AZ(t,e){const n=Br(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function _Z(t,e){const n=Br(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function OZ(t){return Br(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function FZ(t,e){const n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const s=`[${t}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(t>n||e>n){const s=`[${t}x${e}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function zZ(t){return Br(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function S$(t,e,n,s,a,r,i){const o=t.getAttribLocation(e,n);return o===-1?!1:(ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),ue(t,()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,r,i)),ue(t,()=>t.enableVertexAttribArray(o)),!0)}function LZ(t,e,n){UZ(t,n),ue(t,()=>t.activeTexture(t.TEXTURE0+n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function PZ(t,e,n){return Br(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function MZ(t,e,n){return t.getUniformLocation(e,n)}function BZ(t,e,n,s){ue(t,()=>LZ(t,e,s)),ue(t,()=>t.uniform1i(n,s))}function Ob(t,e,n){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function C$(t,e){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Tf(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+VZ(t,e))}function VZ(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Br(t,e,n){const s=ue(t,()=>e());if(s==null)throw new Error(n);return s}function UZ(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n){const a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function vu(t,e=2){return L(t.slice(0,t.length-e))}function Su(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ef(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[vu(t),...Su(t)]),e}function WZ(t,e=!1){let n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=M().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&M().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n=n*2,s=s*2,t=t.map((o,l)=>l>=t.length-2?Aw(t[l]):t[l]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=Oi(t).newShape);let a=L(t),r=null;t.length<=1&&a<=n?r=[1,a]:t.length===2&&t[0]<=n&&t[1]<=n?r=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?r=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?r=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?r=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(r=[t[0],t[1]*t[2]*t[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||i)if(e){const o=vu(t);let l=2,u=2;t.length&&([l,u]=Su(t)),a=o*(l/2)*(u/2),r=_0(a).map(c=>c*2)}else r=_0(a);return r}function Rf(t){return t%2===0}function Zm(t,e){if(t=t.slice(-2),e=e.slice(-2),Ee(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],s=e[e.length-1];if(n===s||Rf(n)&&Rf(s)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&Rf(t[0])&&Rf(e[0])}let Fb,zb;function GZ(t){if(Fb==null){const e=Ra(t);Fb=e.getParameter(e.MAX_TEXTURE_SIZE)}return Fb}function HZ(t){if(zb==null){const e=Ra(t);zb=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zb)}function jZ(t){if(t===0)return 0;let e;const n=Ra(t);return aa(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:aa(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function aa(t,e){return t.getExtension(e)!=null}function $$(t){try{if(Ra(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function qZ(t){if(t===0)return!1;const e=Ra(t);if(t===1){if(!aa(e,"OES_texture_float"))return!1}else if(!aa(e,"EXT_color_buffer_float"))return!1;return N1(e)}function XZ(t){if(t===0)return!1;const e=Ra(t);if(t===1){if(!aa(e,"OES_texture_float")||!aa(e,"WEBGL_color_buffer_float"))return!1}else{if(aa(e,"EXT_color_buffer_float"))return N1(e);const s="EXT_color_buffer_half_float";if(aa(e,s)){const a=e.getExtension(s);return KZ(e,a)}return!1}return N1(e)}function N1(t){const e=$S(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function KZ(t,e){const n=$S(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(i),o}function YZ(t){return t!==2?!1:Ra(t).fenceSync!=null}function Kp(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&N(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye=M();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>$$(2)?2:$$(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>GZ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>HZ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=ye.getNumber("WEBGL_VERSION");return t===0?0:jZ(t)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!$T());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>qZ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>XZ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>YZ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>$T()?1:-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ye.registerFlag("WEBGL_EXP_CONV",()=>!1);ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ye.getBool("IS_TEST"));ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ye.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Un(){let t,e,n,s,a,r,i,o,l,u;return M().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",o=M().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",s="varying",a="texture2D",r="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(t,e,n="index"){const s=xe(e);return s.map((a,r)=>{const i=`int ${t[r]} = ${n} / ${a}`,o=r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${a}`:`index -= ${t[r]} * ${a}`;return`${i}; ${o};`}).join("")}function kx(t,e,n="index"){const s=xe(e);return s.map((a,r)=>{const i=`int ${t[r]} = ${n} / outShapeStrides[${r}]`,o=r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * outShapeStrides[${r}]`:`index -= ${t[r]} * outShapeStrides[${r}]`;return`${i}; ${o};`}).join("")}function QZ(t,e){const n=t.length,s=t.map(r=>`${e}[${r}]`),a=new Array(n-1);a[n-2]=s[n-1];for(let r=n-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function ZZ(t,e,n="index"){const s=t.map((r,i)=>i),a=QZ(s,e);return a.map((r,i)=>{const o=`int ${t[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${a[i]}`:`index -= ${t[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function NS(t){const e=xe(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function kS(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const b_=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:w_}=mH;function JZ(t,e,n){const s=[];if(t.forEach(p=>{const f=L(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){const{uniformShape:m}=IS(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const a=s.join(`
`),r=t.map(p=>eJ(p,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=e.texShape,o=Un(),l=sJ(o);let u,c,h=iJ(o);return e.isPacked?(u=tJ(e.logicalShape,i,n.enableShapeUniforms),c=rJ(o)):(u=nJ(e.logicalShape,i,n.enableShapeUniforms),c=aJ(o)),n.packedInputs&&(h+=cJ),[h,l,c,a,u,r,n.userCode].join(`
`)}function zc(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return SJ(t,e);case 1:return $J(t,e);case 2:return kJ(t,e);case 3:return TJ(t,e);case 4:return RJ(t,e);case 5:return DJ(t);case 6:return AJ(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function v_(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return vJ(t);case 1:return CJ(t,e);case 2:return NJ(t,e);case 3:return IJ(t,e);default:return EJ(t,e)}}function eJ(t,e,n=!1,s){let a="";n?a+=v_(t,s):a+=zc(t,s);const r=t.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(n?a+=_J(t,e):a+=OJ(t,e)),a}function tJ(t,e,n){switch(t.length){case 0:return S_();case 1:return hJ(t,e,n);case 2:return bJ(t,e,n);case 3:return pJ(t,e,n);default:return mJ(t,e,n)}}function nJ(t,e,n){switch(t.length){case 0:return S_();case 1:return dJ(t,e,n);case 2:return wJ(t,e,n);case 3:return fJ(t,e,n);case 4:return gJ(t,e,n);case 5:return yJ(t,e);case 6:return xJ(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function sJ(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function aJ(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function rJ(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function iJ(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${oJ}
    ${lJ}
    ${uJ}
  `}const oJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,uJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function S_(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function hJ(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function dJ(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function pJ(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[2]/2),r=a*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function fJ(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${kx(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const s=ll(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function mJ(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[t.length-1]/2),r=a*Math.ceil(t[t.length-2]/2);let i=r,o="",l="b, r, c";for(let u=2;u<t.length-1;u++)i*=t[t.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${t.length}(${l});
    }
  `}function gJ(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${kx(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const s=ll(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function yJ(t,e){const n=ll(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function xJ(t,e){const n=ll(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function bJ(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ee(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function wJ(t,e,n){return Ee(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function ul(t){return`offset${t}`}function vJ(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Un();return`
    vec4 ${n}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function SJ(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[a,r]=t.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=ul(n);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[o,l]=t.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function CJ(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,r=Un();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${n}, uv);
    }
  `}function $J(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Lc(t)}
      }
    `;const a=t.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const o=ul(n);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);
        return sampleTexture(${n}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function NJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape,i=r[0],o=r[1],l=Un();if(r!=null&&Ee(n,r))return e?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function kJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape;if(r!=null&&Ee(n,r)){if(e)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],p=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:o}=Oi(n),l=i;if(l.length<n.length){const d=Pc(t,l),p=["row","col"];return`
      ${zc(d,e)}
      float ${a}(int row, int col) {
        return ${a}(${Mc(p,o)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Lc(t)}
      }
    `;const u=r[0],c=r[1],h=ul(s);return c===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function IJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(n[0]===1){const d=n.slice(1),p=[1,2],f=Pc(t,d),m=["b","row","col"];return`
        ${v_(f,e)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Mc(m,p)});
        }
      `}const o=Un();if(e)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function TJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Oi(n),u=o;if(u.length<n.length){const m=Pc(t,u),y=["row","col","depth"];return`
        ${zc(m,e)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Mc(y,l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${Lc(t)}
      }
    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===r&&p==null)return e?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=ul(s);return e?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function EJ(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Un();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;const r=t.shapeInfo.logicalShape,i=r.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=r[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}function RJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[3],i=n[2]*r,o=n[1]*i,{newShape:l,keptDims:u}=Oi(n);if(l.length<n.length){const x=Pc(t,l),b=["row","col","depth","depth2"];return`
      ${zc(x,e)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Mc(b,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${r}, 1)));
        ${Lc(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&c==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&c==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const g=ul(s);return e?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${g});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function DJ(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],r=e[3]*a,i=e[2]*r,o=e[1]*i,{newShape:l,keptDims:u}=Oi(e);if(l.length<e.length){const m=Pc(t,l),y=["row","col","depth","depth2","depth3"];return`
      ${zc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Mc(y,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${r}, ${a})) +
          depth3;
        ${Lc(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=ul(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function AJ(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:r}=Oi(e);if(a.length<e.length){const y=Pc(t,a),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${zc(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Mc(g,r)});
      }
    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Lc(t)}
      }
    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=ul(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Lc(t){const e=t.name,n=L(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function _J(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=w_(t.shapeInfo.logicalShape,e.logicalShape),l=et(i),u=i-r;let c;const h=["x","y","z","w","u","v"];r===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";i<2&&r>0?d="coords":d=t.shapeInfo.logicalShape.map((x,b)=>`coords.${h[b+u]}`).join(", ");let p="return outputValue;";const m=L(t.shapeInfo.logicalShape)===1,g=L(e.logicalShape)===1;if(r===1&&!m&&!g)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!g)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(o.length){const x=r-2,b=r-1;o.indexOf(x)>-1&&o.indexOf(b)>-1?p="return vec4(outputValue.x);":o.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function OJ(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&t.shapeInfo.flatOffset==null&&Ee(i,r))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=et(l),c=w_(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];o===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=t.shapeInfo.logicalShape.map((m,y)=>`coords.${p[y+h]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function et(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function IS(t,e,n){const{newShape:s,keptDims:a}=Oi(e),r=e.length,i=t&&r===3&&e[0]===1,o=i?e.slice(1):s,l=!t&&r>1&&!Ee(e,n)&&s.length<r||i;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:a}}function Pc(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Mc(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FJ(t,e,n,s){const a=n.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=a.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=JZ(a,i,e),l=TZ(t.gl,o),u=t.createProgram(l);return M().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i},C_(t,e,u)))}function C_(t,e,n){const s=[],a=[];let r,i,o,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),M().getNumber("WEBGL_VERSION")===1&&(l=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:t.getUniformLocation(n,h,c),offset:t.getUniformLocation(n,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=t.getUniformLocation(n,`${h}Shape`,c),d.texShape=t.getUniformLocation(n,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(r=t.getUniformLocation(n,"outShape",c),o=t.getUniformLocation(n,"outShapeStrides",c),i=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)a.push(t.getUniformLocation(n,h.name,c));return{variablesLocations:s,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}}function N$(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,s)=>{const a=n.logicalShape,r=e[s],i=r.shape;if(!Ee(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&r.isUniform)return;const o=n.texShape,l=r.isUniform?null:r.texData.texShape;if(!Ee(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function zJ(t,e,n,s,a){e.program.enableShapeUniforms||(N$(e.inShapeInfos,n),N$([e.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):t.setOutputMatrixTexture(r.texture,i[0],i[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),M().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<n.length;++l){const u=n[l],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=IS(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:t.gl.uniform1iv(d,new Int32Array(f));break;case 2:t.gl.uniform2iv(d,new Int32Array(f));break;case 3:t.gl.uniform3iv(d,new Int32Array(f));break;case 4:t.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&t.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(L(u.shape)<2)t.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),t.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&t.gl.uniform1i(h,u.texData.slice.flatOffset),t.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=xe(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&a)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=a[l];if(u.type==="float")t.gl.uniform1fv(c,h);else if(u.type==="vec2")t.gl.uniform2fv(c,h);else if(u.type==="vec3")t.gl.uniform3fv(c,h);else if(u.type==="vec4")t.gl.uniform4fv(c,h);else if(u.type==="int")t.gl.uniform1iv(c,h);else if(u.type==="ivec2")t.gl.uniform2iv(c,h);else if(u.type==="ivec3")t.gl.uniform3iv(c,h);else if(u.type==="ivec4")t.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}t.executeProgram()}function LJ(t,e,n){let s="";e.concat(n).forEach(i=>{const o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=IS(t.packedInputs,i.shape,l);let d="",p="",f="";if(c.length===1&&t.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!t.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const v=xe(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}const m=i.shape.length,y=c.length===2&&Ee(i.shape,l),g=L(i.shape)===1,x=ki(i.shape,n.shape),b=!t.packedInputs&&m===n.shape.length&&Ee(l,n.texData.texShape),w=t.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${b}_${u?h:""}_${c.length}_${g}_${x}_${y}_${d}_${p}_${f}_${w}_${o}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${o}`}});const a=t.userCode;let r=t.constructor.name;return r+="_"+s+"_"+a+`${M().getNumber("WEBGL_VERSION")}`,r}function An(t){return M().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PJ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=cd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kx(["r","c","d"],e):ll(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=cd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kx(["r","c","d"],e):ll(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BJ{constructor(e){this.variableNames=["A"],this.outTexUsage=ks.DOWNLOAD;const n=Un();this.outputShape=e,this.userCode=`
      ${b_}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ks.DOWNLOAD;const n=Un();this.outputShape=e,this.userCode=`
      ${b_}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ={R:0,G:1,B:2,A:3};class k${constructor(e,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);let r="result";n&&(r="floor(result * 255. + 0.5)");let i="";for(let o=0;o<s.length;o++){const l=s[o];i+=`
          if(offset == ${o}) {
            result = values[${UJ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?kS():NS(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WJ{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);let a="",r="result";n&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let o=0;o<=1;o++){const l=i*2+o;a+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?kS():NS(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GJ(t){const e=Un(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return IZ(t,n)}function HJ(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return AZ(t,e)}function jJ(t){const e=new Uint16Array([0,1,2,2,1,3]);return _Z(t,e)}function Yp(t,e,n,s,a,r){FZ(e,n);const i=OZ(t),o=t.TEXTURE_2D;return ue(t,()=>t.bindTexture(o,i)),ue(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),ue(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),M().getNumber("WEBGL_VERSION")===1?ue(t,()=>t.texImage2D(o,0,s,e,n,0,a,r,null)):ue(t,()=>t.texStorage2D(o,1,s,e,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:i,texShape:[n,e]}}function $_(t){return t.internalFormatFloat}function qJ(t,e,n,s){const[a,r]=Xp(e,n);return Yp(t,a,r,$_(s),s.textureFormatFloat,t.FLOAT)}function N_(t){return t.internalFormatHalfFloat}function XJ(t,e,n,s){const[a,r]=Xp(e,n);return Yp(t,a,r,N_(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function k_(t){return t.downloadTextureFormat}function KJ(t,e,n,s){const[a,r]=Xp(e,n);return Yp(t,a,r,k_(s),t.RGBA,t.UNSIGNED_BYTE)}function I_(t){return t.internalFormatPackedFloat}function YJ(t,e,n,s){const[a,r]=Fc(e,n);return Yp(t,a,r,I_(s),t.RGBA,t.FLOAT)}function T_(t){return t.internalFormatPackedHalfFloat}function QJ(t,e,n,s){const[a,r]=Fc(e,n);return Yp(t,a,r,T_(s),t.RGBA,s.textureTypeHalfFloat)}function ZJ(t,e,n){return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),S$(t,e,"clipSpacePos",n,3,20,0)&&S$(t,e,"uv",n,2,20,12)}function JJ(t,e,n,s,a,r){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),o=t.FLOAT,l=r.internalFormatPackedFloat),i.set(a),M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,o,i)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,i)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function eee(t,e,n){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function tee(t,e,n,s){const a=t.createBuffer();ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const o=4*4*e*n;return ue(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}function nee(t,e,n){const s=t,a=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function see(t,e,n,s){const[a,r]=Xp(e,n),i=4,o=new Uint8Array(wZ(e*n,i));return ue(t,()=>t.readPixels(0,0,a,r,s.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function aee(t,e,n,s,a,r,i,o){const l=t,u=new Float32Array(vZ(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function ree(t,e,n){const s=new Float32Array(e*n*4);return ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lb{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=M().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,yZ(n,e)):this.gl=Ra(n),e=this.gl,M().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>ue(r,()=>r.createVertexArray()),this.bindVertexArray=i=>ue(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>ue(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>ue(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ue(e,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>ue(e,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ue(e,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>ue(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),M().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=If(this.gl,r),aa(this.gl,i))this.textureHalfFloatExtension=If(this.gl,i);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),aa(this.gl,a))this.colorBufferHalfFloatExtension=If(this.gl,a);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",aa(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(aa(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=HJ(this.gl),this.indexBuffer=jJ(this.gl),this.framebuffer=zZ(this.gl),this.textureConfig=$S(this.gl,this.textureHalfFloatExtension)}get debug(){return M().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ue(e,()=>e.finish()),ue(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ue(e,()=>e.deleteFramebuffer(this.framebuffer)),ue(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ue(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ue(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),qJ(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),XJ(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),KJ(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),eee(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,s,a){this.throwIfDisposed(),JJ(this.gl,e,n,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),QJ(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),YJ(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(C$(this.gl,this.framebuffer),this.outputTexture=null),ue(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,s){return this.downloadMatrixDriver(e,()=>see(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,s,a,r,i){return aee(this.gl,e,n,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return nee(this.gl,e,n)}createBufferFromTexture(e,n,s){this.bindTextureToFrameBuffer(e);const a=tee(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,s;if(M().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},n=r}else M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(e,n,s){return this.downloadMatrixDriver(e,()=>ree(this.gl,n,s))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=GJ(n));const s=RZ(n);ue(n,()=>n.attachShader(s,this.vertexShader)),ue(n,()=>n.attachShader(s,e)),DZ(n,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&_b(n,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;ue(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),ZJ(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ue(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&_b(this.gl,this.program),ue(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,s=!0){return this.throwIfDisposed(),s?PZ(this.gl,e,n):MZ(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),ue(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),BZ(this.gl,e,n,s)}setOutputMatrixTexture(e,n,s){this.setOutputMatrixTextureDriver(e,s,n)}setOutputPackedMatrixTexture(e,n,s){this.throwIfDisposed();const[a,r]=Fc(n,s);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,n,s,a){this.setOutputMatrixWriteRegionDriver(s,e,a,n)}setOutputPackedMatrixWriteRegion(e,n,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&_b(this.gl,this.program),Tf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ue(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ue(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=If(this.gl,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await o2(()=>this.disposed||this.isQueryAvailable(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=iee(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in M().platform&&(s=M().platform.setTimeoutCustom.bind(M().platform)),o2(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ob(this.gl,e,this.framebuffer),this.debug&&Tf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ob(this.gl,this.outputTexture,this.framebuffer),this.debug&&Tf(this.gl)):C$(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,n,s){this.throwIfDisposed();const a=this.gl;Ob(a,e,this.framebuffer),this.debug&&Tf(a),this.outputTexture=e,ue(a,()=>a.viewport(0,0,n,s)),ue(a,()=>a.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(e,n,s,a){this.throwIfDisposed(),ue(this.gl,()=>this.gl.scissor(e,n,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function iee(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:oee,bincountImpl:E_,bincountReduceImpl:lee,bitwiseAndImpl:uee,castImpl:cee,ceilImpl:hee,concatImpl:dee,equalImpl:pee,expImpl:fee,expm1Impl:mee,floorImpl:gee,gatherNdImpl:yee,gatherV2Impl:xee,greaterImpl:bee,greaterEqualImpl:wee,lessImpl:vee,lessEqualImpl:See,linSpaceImpl:Cee,logImpl:$ee,maxImpl:Nee,maximumImpl:kee,minimumImpl:Iee,multiplyImpl:Tee,negImpl:Eee,notEqualImpl:Ree,prodImpl:Dee,raggedGatherImpl:Aee,raggedRangeImpl:_ee,raggedTensorToTensorImpl:Oee,rangeImpl:Fee,rsqrtImpl:zee,scatterImpl:Lee,sigmoidImpl:Pee,simpleAbsImpl:R_,sliceImpl:Mee,sparseFillEmptyRowsImpl:Bee,sparseReshapeImpl:Vee,sparseSegmentReductionImpl:D_,sqrtImpl:Uee,staticRegexReplaceImpl:Wee,stridedSliceImpl:Gee,stringNGramsImpl:Hee,stringSplitImpl:jee,stringToHashBucketFastImpl:qee,subImpl:Xee,tileImpl:Kee,topKImpl:Yee,transposeImpl:TS,uniqueImpl:Qee}=t_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function zn(t,e){return e===1?[t]:A_(t,e)}function Zee(t,e){if(t===1)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jee{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=An(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=zn("rc",this.rank),s=et(this.rank),a=this.getOutOfBoundsCondition(n),r=this.getSetup(n),i=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${e[e.length-1-i]},`+r;n.push(r)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class __{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${ete(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?kS():NS(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function ete(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?ZZ(["r","c","d"],"inputShape"):ll(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tte=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,s){const a=T$(n,s),r=E$(e,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=I$(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let o;return a===bn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===bn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===bn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===bn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===bn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(e,n,s,a){if(this.freeTextures==null)return;const r=T$(s,a),i=E$(n,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const o=I$(n,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),l=M().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function nte(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function I$(t,e,n,s,a){const r=ste(e,s);let i;if(a){const[l,u]=Fc(t[0],t[1]);i=l*u}else{const[l,u]=Xp(t[0],t[1]);i=l*u}const o=nte(n,r);return i*o}function ste(t,e){switch(t){case bn.PACKED_2X2_FLOAT32:return I_(e);case bn.PACKED_2X2_FLOAT16:return T_(e);case bn.UNPACKED_FLOAT32:return $_(e);case bn.UNPACKED_FLOAT16:return N_(e);case bn.PACKED_4X1_UNSIGNED_BYTE:return k_(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function ate(t){return M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?bn.PACKED_2X2_FLOAT32:bn.UNPACKED_FLOAT32:t?bn.PACKED_2X2_FLOAT16:bn.UNPACKED_FLOAT16}function T$(t,e){if(t===ks.UPLOAD)return bn.PACKED_2X2_FLOAT32;if(t===ks.RENDER||t==null)return ate(e);if(t===ks.DOWNLOAD||t===ks.PIXELS)return bn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function E$(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ua=class{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const pa="if (isnan(x)) return x;",rte="return x;",R$="return abs(x);",ite="return (x >= 0.0) ? x : (exp(x) - 1.0);",ote=pa+`
  return (x < 0.0) ? 0.0 : x;
`,lte=pa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qr="return x;",ute="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cte="return x;",hte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,dte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,pte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fte="return 1.0 / (1.0 + exp(-1.0 * x));";class ii{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mte{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);const n=e.length,s=zn("rc",n),a=et(n),r=Zee(n,s),i=s.slice(-2),o=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gte=_v,yte=1e-7,xte=1e-4,Df={};function bte(t){return t in Df||(Df[t]={}),Df[t]}const wte=M().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),vte=600;function Ste(){return M().global.screen==null?1024:M().global.screen.height*M().global.screen.width*window.devicePixelRatio*vte/1024/1024}class Ix extends Sg{nextDataId(){return Ix.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!M().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Lb)n=e;else{const s=Ra(M().getNumber("WEBGL_VERSION"),e);n=new Lb(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ra(M().getNumber("WEBGL_VERSION"));n=new Lb(s),this.binaryCache=bte(M().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new tte(this.gpgpu),this.numMBBeforeWarning=Ste(),this.texData=new Dw(this,Wn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,s,a,r,i){const o=this.makeTensorInfo(n,s),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[a,r]},l.texShape=[a,r];const u=Ef(n),c=new k$(u,!1,i),h=this.runWebGLProgram(c,[o],s,[[a,r]]);return h.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(e,n,s){if((M().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||M().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:n,dtype:s,values:e,usage:ks.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,s,a,r){if(M().getBool("DEBUG")&&this.checkNumericalProblems(n),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:a,values:n,usage:ks.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:o,isPacked:l}=n;if(i!=null){let d;l?d=new ii(o,Qr):d=new Ua(o,Qr);const p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=Gn());let h;if(a==="complex64"){const d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);h=ka(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Gn()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const n=this.texData.get(e),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:o,isPacked:l}=n;if(r!=null){let f;l?f=new ii(a,Qr):f=new Ua(a,Qr);const m=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:i}],i),y=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(M().getBool("DEBUG")&&!M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&M().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&M().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...kf(a))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),m=f[0],y=f[1];h=ka(m,y)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=L(a);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;ue(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Wn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){const s=this.texData.get(e),{values:a,shape:r,slice:i,dtype:o,isPacked:l,texture:u}=s;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new ii(r,Qr):p=new Ua(r,Qr);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:o}],o),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),h=Wn().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(a=>$a(a));return ke(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const s=e[n];if(!NZ(s))throw M().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:s,isPacked:a}=this.texData.get(e),r=L(n);if(M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...kf(n)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),f}const i=M().getBool("WEBGL_PACK")&&a===!0,o=i?Ef(n):n,l=i?new VJ(o):new BJ(o),u=this.runWebGLProgram(l,[{shape:o,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=Or(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=Or(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);o.kernelMs=nT(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Gn(),endMs:null}}endTimer(e){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Gn(),e)}async getQueryTime(e){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:s,texShape:a,usage:r,isPacked:i,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(n,a,r,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=wte){return M().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&L(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){Ns("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return gte(e.shape,n)}packedUnaryOp(e,n,s){const a=new ii(e.shape,n),r=this.compileAndRun(a,[e],s);return Wn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const a=R_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(M().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,R$,e.dtype);const n=new Ua(e.shape,R$),s=this.compileAndRun(n,[e]);return Wn().makeTensorFromTensorInfo(s)}makeTensorInfo(e,n,s){let a;if(n==="string"&&s!=null&&s.length>0&&Au(s[0])){const r=s.map(i=>kr(i));a=this.write(r,e,n)}else a=this.write(s,e,n);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:n}}makeOutput(e,n,s){return Wn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,s),this)}unpackTensor(e){const n=new mte(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new Jee(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)}packedReshape(e,n){const s=[vu(e.shape),...Su(e.shape)],a={dtype:e.dtype,shape:s,dataId:e.dataId},r=[vu(n),...Su(n)],i=new __(r,s),o=!0,l=[s],u=this.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(e,n){const s=this.texData.get(e),{isPacked:a,shape:r,dtype:i}=s;if(n!=null){const d=L(r),p=n[0]*n[1]*4;N(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=Ef(r);let l;a?l=new MJ(o):l=new PJ(o);const u=!0,c=[n??kf(o)],h=this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:e}],i,c,u,n);return{dtype:i,shape:r,dataId:h.dataId}}runWebGLProgram(e,n,s,a,r=!1,i){const o=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===cd.DENSE){const g=i??kf(e.outputShape);l.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),L(o.shape)===0)return l.values=tn(o.dtype,0),o;const u=[],c=n.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&L(g.shape)<=M().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!Zm(x.shape,g.shape)){const b=g,w=g.shape;g.shape=x.shape,g=this.packedReshape(g,w),u.push(g),x=this.texData.get(g.dataId),b.shape=w}return{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:l,isUniform:!1},d=LJ(e,c,h),p=this.getAndSaveBinary(d,()=>FJ(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),M().get("ENGINE_COMPILE_ONLY")||zJ(this.gpgpu,p,c,h,a),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=M().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const g=Gn();g-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!M().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,n,s,a,r=!1){return s=s||n[0].dtype,this.runWebGLProgram(e,n,s,a,r)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(M().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=U(()=>{if(!M().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=M().getBool("DEBUG");M().set("DEBUG",!1);const n=this.abs(we(1e-8)).dataSync()[0];if(M().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?yte:xte}uploadToGPU(e){const n=this.texData.get(e),{shape:s,dtype:a,values:r,texture:i,usage:o,isPacked:l}=n;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Gn());let h=n.texShape;if(h==null&&(h=WZ(s,l),n.texShape=h),r!=null){const d=Ef(s);let p,f=h[1],m=h[0];const y=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!y)&&([f,m]=Fc(h[0],h[1])),l?p=new WJ(d,y):p=new k$(d,y);const g=y?[m,f]:h,x=this.makeTensorInfo(g,a),b=this.texData.get(x.dataId);y?b.usage=ks.PIXELS:b.usage=ks.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,r);const w=[[m,f]],C=this.runWebGLProgram(p,[x],a,w,!0),$=this.texData.get(C.dataId);n.texShape=$.texShape,n.isPacked=$.isPacked,n.usage=$.usage,M().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(n.texture=$.texture,n.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=Gn()-c)}else{const d=this.acquireTexture(h,o,a,l);n.texture=d}}convertAndCacheOnCPU(e,n){const s=this.texData.get(e),{dtype:a}=s;return n!=null&&(s.values=Cte(n,a)),s.values}acquireTexture(e,n,s,a){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,a)}computeBytes(e,n){return e[0]*e[1]*km(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(n),a(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await yR(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(x_(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:l}=C_(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=s,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,n,s){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:i,channels:o}=e,l=Wn().backend;if(!l.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(a,n,s,r,i,o);return Wn().makeTensorFromDataId(u,n,s,l)}}Ix.nextDataId=0;function Cte(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<n.length;++s)n[s]=Math.round(t[s]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */NT()&&Xw("webgl",()=>new Ix,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ES=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let Vo=class{constructor(e,n,s){this.variableNames=["A","B"],this.outputShape=Se(n,s),this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cl=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Bc{constructor(e,n,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Se(n,s);const r=this.outputShape.length;this.enableShapeUniforms=An(r);let i="";if(a)if(r===0||L(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${et(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=zn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const $te={kernelName:ec,backendName:"webgl",kernelFunc:ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(t){const{inputs:e,backend:n}=t,{real:s,imag:a}=e,r=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(r.dataId),o=ms({inputs:{x:s},backend:n}),l=ms({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const Nte={kernelName:Rg,backendName:"webgl",kernelFunc:Gi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_="return (a < 0.) ? b * a : a;",F_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function kte(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{alpha:r}=s,i=n.makeTensorInfo([],"float32",Fi(r,"float32")),o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bc(F_,a.shape,i.shape):new Vo(O_,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}const Ite={kernelName:Kd,backendName:"webgl",kernelFunc:kte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_="return (a < 0.) ? b * a : a;",L_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Tte(t){const{inputs:e,backend:n}=t,{x:s,alpha:a}=e,r=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bc(L_,s.shape,a.shape):new Vo(z_,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],"float32")}const Ete={kernelName:fp,backendName:"webgl",kernelFunc:Tte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vc="if (isnan(x)) return x;";function He({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,o=r,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){const h=o.texData.get(i.dataId),d=n(h.values,l);return o.makeTensorInfo(i.shape,l,d)}const u=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new ii(i.shape,e):c=new Ua(i.shape,t),o.runWebGLProgram(c,[i],l)}}function Nn({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[y,g]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(b=>{const[w,v]=b,C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},$={dataId:v.dataId,dtype:v.dtype,shape:u.shape},k=new Vo(t,l.shape,u.shape);return c.runWebGLProgram(k,[C,$],dn(w.dtype,v.dtype))}),x=Gi({inputs:{real:y,imag:g},backend:c});return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(g),x}const h=r||dn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&a!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,y=l.dtype==="string"?Ia(f):f,g=l.dtype==="string"?Ia(m):m,[x,b]=a(l.shape,u.shape,y,g,h),w=c.makeTensorInfo(b,h),v=c.texData.get(w.dataId);return v.values=x,w}const d=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Bc(e,l.shape,u.shape,n):p=new Vo(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function hd(t,e=!1){if(t==="linear")return e?cte:rte;if(t==="relu")return e?dte:ote;if(t==="elu")return e?hte:ite;if(t==="relu6")return e?pte:lte;if(t==="prelu")return e?L_:z_;if(t==="leakyrelu")return e?F_:O_;if(t==="sigmoid")return e?fte:ute;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let P_=class{constructor(e,n,s,a=!1,r=!1,i=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=An(this.outputShape.length);const c=a?e[1]:e[2],h=Math.ceil(c/2),d=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",g="";o&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:y=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";e[0]<n[0]?b=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(w=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${w};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${g}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let A$=class{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Se(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _$="return a * b;";function RS(t){const{inputs:e,backend:n}=t,{a:s,b:a}=e,r=dn(s.dtype,a.dtype);if(s.dtype==="complex64"){const o=n.texData.get(s.dataId),l=n.texData.get(a.dataId),u=new A$(D$.REAL,s.shape,a.shape),c=new A$(D$.IMAG,s.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=Gi({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,a])){const o=n.texData.get(s.dataId),l=n.texData.get(a.dataId),[u,c]=Tee(s.shape,a.shape,o.values,l.values,r),h=n.makeTensorInfo(c,r),d=n.texData.get(h.dataId);return d.values=u,h}let i;return M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Bc(_$,s.shape,a.shape):i=new Vo(_$,s.shape,a.shape),n.runWebGLProgram(i,[s,a],r)}const Rte={kernelName:uc,backendName:"webgl",kernelFunc:RS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dte(t,e,n){const s=[vu(t.shape),...Su(t.shape)],a={dtype:t.dtype,shape:s,dataId:t.dataId},r=[vu(e),...Su(e)],i=new __(r,s),o=!0,l=[s],u=n.runWebGLProgram(i,[a],t.dtype,l,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{shape:r}=s,i=n,o=L(a.shape),l=_w(r,o),u=L(l);N(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(a.dataId);return c.isPacked&&!Zm(a.shape,l)&&!(c.texture!==null&&Zm(c.shape,l))?Dte(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}const Ate={kernelName:gp,backendName:"webgl",kernelFunc:ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O${constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];const o=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(n!=null){const h=1/n;u=`sumValue += dot(values * ${hu(h)?h.toPrecision(2):h}, ones);`}let c="";r%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _te=class{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let o="0.0",l="";n==="prod"?o="1.0":n==="min"?(o="1.0 / 1e-20",l="min"):n==="max"&&(o="-1.0 / 1e-20",l="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ote(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],s=Qy(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}function hl(t,e,n,s){const a=Ote(t.shape);let r=t;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:l,outSize:u}=a[i];let c,h;n==="mean"?c=i===0?new O$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new O$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):c=new _te({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=r,r=s.runWebGLProgram(c,[r],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fte=class{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[n[i]];this.outputShape=s,this.rank=s.length;const a=et(this.rank),r=zte(n);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function zte(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let a=0;a<t.length;a++)s[t[a]]=n[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lte{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=et(this.rank),r=A_("rc",this.rank),i=new Array(this.rank);for(let c=0;c<n.length;c++)i[n[c]]=r[c];const o=`vec2(${i.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(t,e,n){const s=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Lte(t.shape,e):new Fte(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pte(t,e,n,s){const a=e,r=t.shape.length,i=Ie(a,t.shape);let o=i;const l=tt(o,r),u=l!=null;let c=t;u&&(c=Tx(t,l,s),o=dt(o.length,r)),Ht("sum",o,r);const[h,d]=Bt(c.shape,o);let p=h;n&&(p=Ft(h,i));const f=L(d),y=L(t.shape)/f,g=ie({inputs:{x:c},attrs:{shape:[y,f]},backend:s}),x=vy(t.dtype),b=hl(g,x,"sum",s),w=ie({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(b),u&&s.disposeIntermediateTensorInfo(c),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return Pte(a,r,i,n)}const Mte={kernelName:Sp,backendName:"webgl",kernelFunc:Ex};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{perm:r}=s,i=n,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[r[c]];let u;if(i.shouldExecuteOnCPU([a])){const h=i.texData.get(a.dataId).values,d=TS(h,a.shape,a.dtype,r,l);u=i.makeTensorInfo(l,a.dtype);const p=i.texData.get(u.dataId);p.values=d}else u=Tx(a,r,i);return u}const Bte={kernelName:bo,backendName:"webgl",kernelFunc:Bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=1e3;function Jm({a:t,b:e,transposeA:n,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=L(m),x=L(y),w=Se(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);N(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[g,h,p]:[g,p,h],C=s?[x,f,d]:[x,d,f],$=ie({inputs:{x:t},backend:a,attrs:{shape:v}}),k=ie({inputs:{x:e},backend:a,attrs:{shape:C}}),T=[$,k],E=Math.max(g,x),O=n?$.shape[1]:$.shape[2],B=r!=null,W=i!=null,V=l==="leakyrelu",G=l!=null?hd(l,!0):null,D=B||W||V||G!=null;let H;if((p===1||f===1)&&O>M_&&D===!1){let j=$,X=k;n&&(j=Bn({inputs:{x:$},backend:a,attrs:{perm:[0,2,1]}}),T.push(j)),s&&(X=Bn({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),T.push(X));const Q=f!==1,ee=f===1;let J=j;Q&&(J=ie({inputs:{x:j},backend:a,attrs:{shape:[E,O,1]}}),T.push(J));const se=f===1?2:1;let te=X;ee&&(te=ie({inputs:{x:X},backend:a,attrs:{shape:[E,1,O]}}),T.push(te));const de=RS({inputs:{a:J,b:te},backend:a});H=Ex({inputs:{x:de},backend:a,attrs:{axis:se,keepDims:!0}}),T.push(de)}else{const j=dn(t.dtype,e.dtype),X=new P_(v,C,[E,p,f],n,s,B,G,W,V),Q=[$,k];if(r!=null&&Q.push(r),W&&Q.push(i),V){const ee=a.makeTensorInfo([],"float32",Fi(o,"float32"));Q.push(ee),T.push(ee)}H=a.runWebGLProgram(X,Q,j)}const P=ie({inputs:{x:H},backend:a,attrs:{shape:w}});T.push(H);for(const j of T)a.disposeIntermediateTensorInfo(j);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vte(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return Jm({a,b:r,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const Ute={kernelName:Yh,backendName:"webgl",kernelFunc:Vte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$="return abs(x);";function Wte(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=n.texData.get(s.dataId),i=R_(r.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let a;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ii(s.shape,F$):a=new Ua(s.shape,F$),n.runWebGLProgram(a,[s],s.dtype)}const Gte={kernelName:Td,backendName:"webgl",kernelFunc:Wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hte=pa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,jte=He({opSnippet:Hte}),qte={kernelName:Ou,backendName:"webgl",kernelFunc:jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xte=pa+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Kte=He({opSnippet:Xte}),Yte={kernelName:Fu,backendName:"webgl",kernelFunc:Kte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z$="return a + b;",Qte=Nn({opSnippet:z$,packedOpSnippet:z$,supportsComplex:!0,cpuKernelImpl:oee}),Zte={kernelName:Yo,backendName:"webgl",kernelFunc:Qte};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jte{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ene=class{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yf(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return ms({inputs:{x:s[0]},backend:n});if(s.length>M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Yf({inputs:s.slice(0,l),backend:n}),c=Yf({inputs:s.slice(l),backend:n});return Yf({inputs:[u,c],backend:n})}const a=s.map(l=>l.dtype).reduce((l,u)=>dn(l,u)),r=s.map(l=>l.shape),o=M().getBool("WEBGL_PACK")?new ene(s[0].shape,r):new Jte(s[0].shape,r);return n.runWebGLProgram(o,s,a)}const tne={kernelName:Ed,backendName:"webgl",kernelFunc:Yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o);let h=a;c!=null&&(h=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),u=dt(u.length,o)),Ht("all",u,o);const[d,p]=Bt(h.shape,u),f=L(p),m=ie({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=hl(m,m.dtype,"all",n);let g;if(i){const x=Ft(d,l);g=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=ie({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const sne={kernelName:Cg,backendName:"webgl",kernelFunc:nne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ane(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o);let h=a;c!=null&&(h=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),u=dt(u.length,o)),Ht("any",u,o);const[d,p]=Bt(h.shape,u),f=L(p),m=ie({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=hl(m,m.dtype,"any",n);let g;if(i){const x=Ft(d,l);g=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=ie({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const rne={kernelName:$g,backendName:"webgl",kernelFunc:ane};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ine=class{constructor(e,n,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const o=n==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class one{constructor(e,n,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],i=Math.ceil(r/n);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=et(l),c=zn("coords",l);let h,d;if(i===1){d=l+1;const k=et(d);h=`
        ${k} sourceLocR = ${k}(${c.join()}, 0);
        ++${c[l-1]};
        ${k} sourceLocG = ${k}(${c.join()}, 0);
        ++${c[l-2]};
        ${k} sourceLocA = ${k}(${c.join()}, 0);
        --${c[l-1]};
        ${k} sourceLocB = ${k}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(k=>"int "+k),y=zn("sourceLocR",d-1).concat("inIdx.r"),g=zn("sourceLocG",d-1).concat("inIdx.g"),x=zn("sourceLocB",d-1).concat("inIdx.b"),b=zn("sourceLocA",d-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",v=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()})));`,C=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,$=a?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(t,e,n,s=null){let a=e.shape[0],r=e.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=Qy(r),o={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},l=new ine(o,n,s==null),u=[e];s!=null&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=B_(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function V_(t,e,n,s=null){const a=s!=null?s.shape:e.shape,r=a[a.length-1],i=Qy(r),o=new one(a,i,n,s==null),l=s==null?[e]:[e,s],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===e.shape.length){const c=V_(t,e,n,u);return t.disposeIntermediateTensorInfo(u),c}return u}function U_(t,e,n,s){const a=[n];if(Ht("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,e.shape.length),!M().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],i=t.texData.get(e.dataId),o=i!==null&&i.isPacked;let l=e;o&&(l=t.unpackTensor(e),r.push(l));const[u,c]=Bt(l.shape,a),h=L(c),d=ie({inputs:{x:l},backend:t,attrs:{shape:[-1,h]}});r.push(d);const p=B_(t,d,s);r.push(p);const f=ie({inputs:{x:p},backend:t,attrs:{shape:u}});return r.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}return V_(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=Bn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=dt(i.length,l.shape.length)),Ht("argMax",[i[0]],l.shape.length);const c=U_(n,l,i[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const une={kernelName:Rd,backendName:"webgl",kernelFunc:lne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=Bn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=dt(i.length,l.shape.length)),Ht("argMin",[i[0]],l.shape.length);const c=U_(n,l,i[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const hne={kernelName:Dd,backendName:"webgl",kernelFunc:cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dne=pa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,pne=He({opSnippet:dne}),fne={kernelName:zu,backendName:"webgl",kernelFunc:pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mne=pa+"return log(x + sqrt(x * x + 1.0));",gne=He({opSnippet:mne}),yne={kernelName:Lu,backendName:"webgl",kernelFunc:gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xne=pa+`
  return atan(x);
`,bne=He({opSnippet:xne}),wne={kernelName:Pu,backendName:"webgl",kernelFunc:bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vne=ES+`
  return atan(a, b);
`,Sne=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cl+`
  return result;
`,Cne=Nn({opSnippet:vne,packedOpSnippet:Sne}),$ne={kernelName:Bu,backendName:"webgl",kernelFunc:Cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nne=pa+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,kne=He({opSnippet:Nne}),Ine={kernelName:Mu,backendName:"webgl",kernelFunc:kne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dd=class{constructor(e,n,s,a=!1,r=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${k} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?y:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let w=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(w="avgValue / max(count, 1.0)");const v=Math.floor(i/4)*4,C=i%4,$=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${v};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${w});
      }
    `}},DS=class{constructor(e,n,s,a=!1,r=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,o=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,y=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const b=n==="avg";let w="0.0";if(b||(w="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${u});
        const ivec3 pads = ivec3(${y}, ${g}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let C=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(C="avgValue / max(count, 1.0)");const $=Math.floor(i/4)*4,k=i%4,T=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${u});
      const ivec3 pads = ivec3(${y}, ${g}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${$};
            if (${k===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${k===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${k===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${C});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;Kp(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(sn(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))return ms({inputs:{x:a},backend:n});const h=new dd(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}const Ene={kernelName:Ad,backendName:"webgl",kernelFunc:Tne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=Os(a.shape,r,i,c,o,l,u),d=new DS(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}const Dne={kernelName:_d,backendName:"webgl",kernelFunc:Rne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ane=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},_ne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,y=p-1-e.padInfo.left,g=1/(n*s*a);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${y});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function One(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Os(i.shape,o,l,h,u,c),p=new _ne(d);return n.runWebGLProgram(p,[a],i.dtype)}const Fne={kernelName:kg,backendName:"webgl",kernelFunc:One};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zne(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r;Kp([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rn(i.shape,o,l,1,u),h=new Ane(c);return n.runWebGLProgram(h,[a],i.dtype)}const Lne={kernelName:Ng,backendName:"webgl",kernelFunc:zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pne(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r}=e,{transposeA:i,transposeB:o}=s;return Jm({a,b:r,transposeA:i,transposeB:o,backend:n})}const Mne={kernelName:Od,backendName:"webgl",kernelFunc:Pne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bne=class{constructor(e,n,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Se(e,n),Se(e,s);let o="0.0";a!=null&&(Se(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";r!=null&&(Se(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vne{constructor(e,n,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Se(e,n),Se(e,s);let o="vec4(0.0)";a!=null&&(Se(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(Se(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Une=({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:a,variance:r,offset:i,scale:o}=t;N(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);const u=[s,a,r];let c=null;i!=null&&(c=i.shape,u.push(i));let h=null;o!=null&&(h=o.shape,u.push(o));const d=M().getBool("WEBGL_PACK_NORMALIZATION")?new Vne(s.shape,a.shape,r.shape,c,h,l):new Bne(s.shape,a.shape,r.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},Wne={kernelName:jd,backendName:"webgl",kernelFunc:Une};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gne=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=et(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Hne(this.rank);let a;const r=e.map((i,o)=>`sourceLoc.${k1[o]} = start[${o}] + coords.${k1[o]};`);a=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}};const k1=["x","y","z","w","u","v"];function Hne(t){if(t===1)return"sourceLoc";if(t<=6)return k1.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jne{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=et(this.rank),s=zn("coords",this.rank),a=zn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,o=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${a[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qne(t,e,n,s){const a=s.texData.get(t.dataId),r=s.makeTensorInfo(n,t.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=t.dtype;let o=Uv(e,xe(t.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),r}function Uc(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,size:i}=s,[o,l]=zp(a,r,i);if(qy(a,o,l),L(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){const h=n.texData.get(a.dataId),d=Mee(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}const{isPacked:u}=n.texData.get(a.dataId),c=Vv(a.shape,o,l);if(u||!c){const h=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jne(l):new Gne(l),d=[o];return n.runWebGLProgram(h,[a],a.dtype,d)}return n.uploadToGPU(a.dataId),qne(a,o,l,n)}const Xne={kernelName:vp,backendName:"webgl",kernelFunc:Uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kne=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,crops:i}=s;N(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((x,b)=>x*b),l=sl(a.shape,r,o),u=al(l.length,r.length),c=rl(a.shape,r,o),h=Jy(i,r.length),d=ex(c,i,r.length),p=[],f=ie({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Bn({inputs:{x:f},backend:n,attrs:{perm:u}}),y=ie({inputs:{x:m},backend:n,attrs:{shape:c}}),g=Uc({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(y),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),g},Yne={kernelName:Fd,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i}=s,o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=E_(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}const Zne={kernelName:Ig,backendName:"webgl",kernelFunc:Qne};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jne=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,ese=`
  return float(int(a.r) & int(b.r));
`;function tse(t){const{inputs:e,backend:n}=t,{a:s,b:a}=e,r=M().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=M().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,a])||i===1){const l=n.texData.get(s.dataId).values,u=n.texData.get(a.dataId).values,[c,h]=uee(s.shape,a.shape,l,u,s.dtype),d=n.makeTensorInfo(h,s.dtype),p=n.texData.get(d.dataId);return p.values=c,d}let o;return r?o=new Bc(Jne,s.shape,a.shape,!1):o=new Vo(ese,s.shape,a.shape),n.runWebGLProgram(o,[s,a],s.dtype)}const nse={kernelName:Tg,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sse(t){const{inputs:e,backend:n}=t,{s0:s,s1:a}=e,r=n.readSync(s.dataId),i=n.readSync(a.dataId),o=Se(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const ase={kernelName:Eg,backendName:"webgl",kernelFunc:sse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rse="return float(a != b);",W_=Nn({opSnippet:rse,cpuKernelImpl:Ree,dtype:"bool"}),ise={kernelName:up,backendName:"webgl",kernelFunc:W_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.texData.get(s.dataId);return ms({inputs:{x:a.complexTensorInfos.real},backend:n})}const ose={kernelName:ay,backendName:"webgl",kernelFunc:Qp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lse="return float(int(x));";function use(t,e){const n=new Ua(t.shape,lse),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return ms({inputs:{x:a},backend:n});const i=Gt(a.shape),o=I1({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=Gi({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){const i=Qp({inputs:{input:a},backend:n}),o=I1({inputs:{x:i},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(i),o}if(!Ow(a.dtype,r)){const i=ms({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(n.shouldExecuteOnCPU([a])){const i=n.texData.get(a.dataId).values,[o,l,u]=cee(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}if(r==="int32")return use(a,n);if(r==="bool"){const i=n.makeTensorInfo([],"bool",tn("bool",1)),l=W_({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const cse={kernelName:Vu,backendName:"webgl",kernelFunc:I1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$="return ceil(x);",hse=He({opSnippet:L$,packedOpSnippet:L$,cpuKernelImpl:hee}),dse={kernelName:Uu,backendName:"webgl",kernelFunc:hse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pse=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fse{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{clipValueMin:r,clipValueMax:i}=s;let o;M().getBool("WEBGL_PACK_CLIP")?o=new fse(a.shape):o=new pse(a.shape);const l=[[r],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}const gse={kernelName:Wu,backendName:"webgl",kernelFunc:mse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yse=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function xse(t){const{inputs:e,backend:n}=t,{x:s}=e,a=n.texData.get(s.dataId),r=new yse(s.shape),i=[P$(s,a.complexTensorInfos.real),P$(s,a.complexTensorInfos.imag)];return n.runWebGLProgram(r,i,i[0].dtype)}const bse={kernelName:zd,backendName:"webgl",kernelFunc:xse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wse=class{constructor(e){this.outputShape=[],this.outputShape=Qn(e,1),this.variableNames=e.map((i,o)=>`T${o}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+e[i][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const o=n[i-1];s.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${o}));`)}const a=n.length,r=n[n.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vse{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Qn(e,n);const s=this.outputShape,a=s.length,r=et(a),i=zn("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((m,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][n];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][n];const u=o[n],c=o.slice(-2),h=o.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const y=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Af(o,u,y)}),
            vec2(${Af(c,u,y)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Af(o,u,f)}),
          vec2(${Af(c,u,f)}));`,this.userCode=`
      float getValue(${o.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Af(t,e,n){const s=t.indexOf(e);return t.map((r,i)=>i===s?`${r} - ${n}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rx(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.texData.get(s.dataId);return ms({inputs:{x:a.complexTensorInfos.imag},backend:n})}const Sse={kernelName:Xg,backendName:"webgl",kernelFunc:Rx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fh(t,e,n){const s=t[0].dtype;if(s==="complex64"){const p=t.map(x=>Qp({inputs:{input:x},backend:n})),f=t.map(x=>Rx({inputs:{input:x},backend:n})),m=fh(p,e,n),y=fh(f,e,n),g=Gi({inputs:{real:m,imag:y},backend:n});return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),g}let a=n.shouldExecuteOnCPU(t);if(s==="string"&&(a=!0),a){const p=t.map(w=>{const C=[-1,L(w.shape.slice(e))];return ie({inputs:{x:w},backend:n,attrs:{shape:C}})}),f=p.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),m=Qn(p.map(w=>w.shape),1),y=p[0].shape[0]===1,g=dee(f,m,s,y),x=Qn(t.map(w=>w.shape),e),b=n.makeTensorInfo(x,s,g);return p.forEach(w=>n.disposeIntermediateTensorInfo(w)),b}const r=t.filter(p=>L(p.shape)>0),i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=i?new Ua(t[0].shape,Qr):new ii(t[0].shape,Qr);return n.runWebGLProgram(p,t,s)}const o=M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>o){const p=[];for(let m=0;m<r.length;m+=o){const y=r.slice(m,m+o);p.push(fh(y,e,n))}const f=fh(p,e,n);for(const m of p)n.disposeIntermediateTensorInfo(m);return f}if(i){const p=new vse(r.map(f=>f.shape),e);return n.runWebGLProgram(p,r,s)}const{tensors2D:l,outShape:u}=Cse(r,e,n),c=new wse(l.map(p=>p.shape)),h=n.runWebGLProgram(c,l,s);l.forEach(p=>n.disposeIntermediateTensorInfo(p));const d=ie({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function Cse(t,e,n){const s=Qn(t.map(r=>r.shape),e);return{tensors2D:t.map(r=>ie({inputs:{x:r},attrs:{shape:[-1,L(r.shape.slice(e))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,r=Ie(a,e[0].shape)[0],i=e.map(u=>u.shape);Yy(i,r);const o=Qn(e.map(u=>u.shape),r);if(L(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>L(u.shape)>0);return l.length===1?ms({inputs:{x:l[0]},backend:n}):fh(l,r,n)}const $se={kernelName:Ld,backendName:"webgl",kernelFunc:G_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H_{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,y=e.dataFormat==="channelsLast",g=y?1:2,x=y?2:3,b=y?3:1;let w="",v="";s&&(a?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const C=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${v}
        setOutput(result);
      }
    `}}class Nse{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,s=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${o});
      const ivec3 pads = ivec3(${n}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j_{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=An(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<c;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const g=y*2;if(d+=`
           xC = xCCorner + ${g*l};
           `,o===1){if(g<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,l===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const x=i%2===0?Aw(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):x===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(a?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kse{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);const{dataFormat:s}=n,a=Un(),r=s==="channelsLast",i=r?1:2,o=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eg(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function q_({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1;let y;const g=[];if(r!=null){const w=eg(r.shape,p);w!=null&&(r=ie({inputs:{x:r},backend:s,attrs:{shape:w}}),g.push(r))}if(a!=null){const w=eg(a.shape,p);w!=null&&(a=ie({inputs:{x:a},backend:s,attrs:{shape:w}}),g.push(a))}if(!((h===1||d===1)&&c>M_)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&Ee(u.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),v={dataId:t.dataId,shape:[1,w,n.inChannels],dtype:t.dtype},C=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,N(Zm(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);const $=ie({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push($);const k=Jm({a:v,b:$,backend:s,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),T=s.texData.get(k.dataId);N(T.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=C,T.shape=n.outShape,y=ms({inputs:{x:k},backend:s}),y.shape=n.outShape,g.push(k)}else{const w=n.outHeight*n.outWidth,v=ie({inputs:{x:t},backend:s,attrs:{shape:p?[n.batchSize,w,n.inChannels]:[n.batchSize,n.inChannels,w]}}),C=ie({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),$=Jm({a:p?v:C,b:p?C:v,transposeA:!p,transposeB:m,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i});y=ie({inputs:{x:$},backend:s,attrs:{shape:n.outShape}}),g.push(v),g.push(C),g.push($)}for(const w of g)s.disposeIntermediateTensorInfo(w);return y}function X_({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=l*u*c,y=d*h,g=[n.batchSize,m,y],x=!0,b=!1,w=[];if(r!=null){const P=eg(r.shape,f);P!=null&&(r=ie({inputs:{x:r},backend:s,attrs:{shape:P}}),w.push(r))}if(a!=null){const P=eg(a.shape,f);P!=null&&(a=ie({inputs:{x:a},backend:s,attrs:{shape:P}}),w.push(a))}const v=ie({inputs:{x:e},backend:s,attrs:{shape:[1,m,L(e.shape)/m]}});w.push(v);const C=new kse(g,n),$=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(C,[t],"float32",$),T=ie({inputs:{x:k},backend:s,attrs:{shape:g}});w.push(k),w.push(T);const E=a!=null,O=r!=null,B=o==="leakyrelu",W=o?hd(o,!0):null,V=new P_(f?T.shape:v.shape,f?v.shape:T.shape,f?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],x,b,E,W,O,B),G=f?[T,v]:[v,T];if(a&&G.push(a),O&&G.push(r),B){const P=s.makeTensorInfo([],"float32",Fi(i,"float32"));G.push(P),w.push(P)}const D=s.runWebGLProgram(V,G,"float32"),H=ie({inputs:{x:D},backend:s,attrs:{shape:n.outShape}});w.push(D);for(const P of w)s.disposeIntermediateTensorInfo(P);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ise(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=bs(l),d=ht(a.shape,r.shape,i,u,o,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=q_({x:a,filter:r,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const m=new j_(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[a,r],"float32",y)}else if(M().getBool("WEBGL_CONV_IM2COL"))p=X_({x:a,filter:r,convInfo:d,backend:n});else{const m=new H_(d);p=n.runWebGLProgram(m,[a,r],"float32")}const f=ie({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const Tse={kernelName:Pd,backendName:"webgl",kernelFunc:Ise};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ese=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Rse=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dataFormat==="channelsLast",o=n-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Dse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,s=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ase=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=n-1-e.padInfo.front,u=s-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _se(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=bs(l),d=ht(a.shape,c,i,1,o,u,!1,h),p=new Ese(d);return n.runWebGLProgram(p,[a,r],"float32")}const Ose={kernelName:Dg,backendName:"webgl",kernelFunc:_se};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fse{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=An(this.outputShape.length);const n=e.filterHeight,s=e.filterWidth,a=n-1-e.padInfo.top,r=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zse(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=bs(u),d=ht(i,r.shape,o,1,l,c,!1,h);if(M().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new Fse(d);return n.runWebGLProgram(f,[a,r],"float32",p)}else{const p=new Rse(d);return n.runWebGLProgram(p,[a,r],"float32")}}const Lse={kernelName:Md,backendName:"webgl",kernelFunc:zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Oa(a.shape,r.shape,i,l,o),c=new Nse(u);return n.runWebGLProgram(c,[a,r],"float32")}const Mse={kernelName:Bd,backendName:"webgl",kernelFunc:Pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s,u=Oa(a.shape,l,i,1,o),c=new Dse(u);return n.runWebGLProgram(c,[a,r],"float32")}const Vse={kernelName:Ag,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Use(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{pad:i,strides:o,inputShape:l}=s,u=Oa(l,r.shape,o,1,i),c=new Ase(u);return n.runWebGLProgram(c,[a,r],"float32")}const Wse={kernelName:_g,backendName:"webgl",kernelFunc:Use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gse=Vc+`
  return cos(x);
`,Hse=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${cl}
  return result;
`,jse=He({opSnippet:Gse,packedOpSnippet:Hse}),qse={kernelName:Gu,backendName:"webgl",kernelFunc:jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Kse=He({opSnippet:Xse}),Yse={kernelName:Hu,backendName:"webgl",kernelFunc:Kse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qse=class{constructor(e,n,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,l,u]=e,[c]=n,[h,d]=s;this.outputShape=[c,h,d,u];const p=a==="bilinear"?1:0,[f,m]=[`${o-1}.0`,`${l-1}.0`],[y,g,x]=h>1?[`${(o-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,w,v]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zse=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new Qse(a.shape,r.shape,o,l,u);return n.runWebGLProgram(c,[a,r,i],"float32")},Jse={kernelName:Fg,backendName:"webgl",kernelFunc:Zse};var pd;(function(t){t.Prod="*",t.Sum="+"})(pd||(pd={}));let M$=class{constructor(e,n,s,a){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===pd.Prod?"1.0":"0.0",o=s?i:`getX(${B$(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=a?`end != ${l-1}`:"end != 0",c=a?"end + 1":"end - 1"):(u=a?`end + pow2 < ${l}`:"end >= pow2",c=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${et(r)} coords = getOutputCoords();
        int end = ${V$(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${V$(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${B$(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function B$(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function V$(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(t,e,n,s,a,r){const i=e.shape.length,o=tt([s],i);let l=e;o!=null&&(l=Bn({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=dt(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=ms({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new M$(t,l.shape,!1,r),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(a){const d=new M$(t,l.shape,a,r),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(o!=null){const d=sr(o),p=Bn({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return K_(pd.Prod,a,n,r,i,o)}const tae={kernelName:Og,backendName:"webgl",kernelFunc:eae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return K_(pd.Sum,a,n,r,i,o)}const sae={kernelName:Vd,backendName:"webgl",kernelFunc:nae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s;if(a.shape.length===1){const l=n.readSync(a.dataId),u=n.readSync(r.dataId),c=E_(l,u,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}else if(a.shape.length===2){const l=n.bufferSync(a),u=n.bufferSync(r),c=lee(l,u,i,o);return n.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const rae={kernelName:zg,backendName:"webgl",kernelFunc:aae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iae=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockSize:r,dataFormat:i}=s,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],c=i==="NHWC"?a.shape[3]:a.shape[1],h=l*r,d=u*r,p=c/(r*r),f=i==="NHWC"?[o,h,d,p]:[o,p,h,d],m=new iae(f,r,i);return n.runWebGLProgram(m,[a],a.dtype)}const lae={kernelName:Lg,backendName:"webgl",kernelFunc:oae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y_=class{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=An(this.outputShape.length);const i=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(a?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q_{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=An(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<h;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<h;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){const x=g*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,l===1){if(x<h&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const b=o%2===0?Aw(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):b===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(a?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),N(sn(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=ht(a.shape,r.shape,i,c,o,u,!0);let d;M().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new Q_(h):d=new Y_(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,r],"float32",p)}const cae={kernelName:Ud,backendName:"webgl",kernelFunc:uae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},dae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=n-1-e.padInfo.top,o=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ht(a.shape,c,i,o,l,u,!0),d=new hae(h);return n.runWebGLProgram(d,[a,r],"float32")}const fae={kernelName:Pg,backendName:"webgl",kernelFunc:pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mae(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ht(c,r.shape,i,o,l,u,!0),d=new dae(h);return n.runWebGLProgram(d,[a,r],"float32")}const gae={kernelName:Mg,backendName:"webgl",kernelFunc:mae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yae=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xae(t){const{inputs:e,backend:n}=t,{x:s}=e,a=[...s.shape,...s.shape],r=L(s.shape),i=ie({inputs:{x:s},backend:n,attrs:{shape:[r]}}),o=new yae(r),l=n.runWebGLProgram(o,[i],i.dtype),u=ie({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}const bae={kernelName:Bg,backendName:"webgl",kernelFunc:xae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wae=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:o,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Pi(a.shape,r.shape,i,o,"NHWC",l);let c;const h=new wae(u);c=n.runWebGLProgram(h,[a,r],"float32");const d=ie({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const Sae={kernelName:Wd,backendName:"webgl",kernelFunc:vae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cae(t){const{inputs:e,backend:n,attrs:s}=t,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=ox(a,r.length);ux(i.length,l,r);const{path:u,steps:c}=cx(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=lx(p,l[y]);let b;hx(g)?b=r[y]:(b=Bn({inputs:{x:r[y]},backend:n,attrs:{perm:g}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);Ee(b.shape,w)||(b=ie({inputs:{x:b},backend:n,attrs:{shape:w}}),f.push(b)),d===null?d=b:(d=RS({inputs:{a:b,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Ex({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const $ae={kernelName:Vg,backendName:"webgl",kernelFunc:Cae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nae="return (x >= 0.0) ? x : (exp(x) - 1.0);",kae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Iae=He({opSnippet:Nae,packedOpSnippet:kae}),Tae={kernelName:qu,backendName:"webgl",kernelFunc:Iae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eae="return (b >= 0.0) ? a : a * (b + 1.0);",Rae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Dae=t=>{const{inputs:e,backend:n}=t,{dy:s,y:a}=e,r=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bc(Rae,s.shape,a.shape):new Vo(Eae,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],s.dtype)},Aae={kernelName:Ug,backendName:"webgl",kernelFunc:Dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ae=`
  return vec4(equal(a, b));
`,Oae="return float(a == b);",Fae=Nn({opSnippet:Oae,packedOpSnippet:_ae,dtype:"bool",cpuKernelImpl:pee}),zae={kernelName:Gd,backendName:"webgl",kernelFunc:Fae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${tx};
  float a1 = ${nx};
  float a2 = ${sx};
  float a3 = ${ax};
  float a4 = ${rx};
  float a5 = ${ix};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Pae=He({opSnippet:Lae}),Mae={kernelName:Xu,backendName:"webgl",kernelFunc:Pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bae=Vc+`
  return exp(x);
`,Vae=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Z_=He({opSnippet:Bae,packedOpSnippet:Vae,cpuKernelImpl:fee,dtype:"float32"}),Uae={kernelName:Ku,backendName:"webgl",kernelFunc:Z_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1(t){const{inputs:e,attrs:n,backend:s}=t,{dim:a}=n,{input:r}=e,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(N(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),ie({inputs:{x:r},backend:s,attrs:{shape:o}})}const Wae={kernelName:Hd,backendName:"webgl",kernelFunc:T1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U$="return exp(x) - 1.0;",Gae=He({opSnippet:U$,packedOpSnippet:U$,cpuKernelImpl:mee}),Hae={kernelName:Yu,backendName:"webgl",kernelFunc:Gae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let W$=class{constructor(e,n,s){this.variableNames=["real","imag"];const a=n[1];this.outputShape=n;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(t,e,n){const s=n.texData.get(t.dataId),a=L(t.shape),r=t.shape[t.shape.length-1],i=a/r,o=ie({inputs:{x:t},backend:n,attrs:{shape:[i,r]}}),l=o.shape,u=new W$("real",l,e),c=new W$("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=Gi({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=ie({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jae(t){const{inputs:e,backend:n}=t,{input:s}=e;return J_(s,!1,n)}const qae={kernelName:Wg,backendName:"webgl",kernelFunc:jae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xae=class{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(t){const{backend:e,attrs:n}=t,{shape:s,value:a}=n;let{dtype:r}=n;if(r=r||Ko(a),r==="string"){const i=_t(r,L(s));return i.fill(a),e.makeTensorInfo(s,r,i)}else{const i=new Xae(s,a),o=[[a]];return e.runWebGLProgram(i,[],r,o)}}const Kae={kernelName:Gg,backendName:"webgl",kernelFunc:Zp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yae=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qae={kernelName:Hg,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,a=new Yae(n.shape);return s.runWebGLProgram(a,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G$="return floor(x);",Zae=He({opSnippet:G$,packedOpSnippet:G$,cpuKernelImpl:gee}),Jae={kernelName:Qu,backendName:"webgl",kernelFunc:Zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ere=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,tre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,nre=Nn({opSnippet:ere,packedOpSnippet:tre,dtype:"int32"}),sre={kernelName:Zu,backendName:"webgl",kernelFunc:nre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let are=class{constructor(e){this.variableNames=["A"];const n=Un(),[s,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rre{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Un(),[s,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ire={kernelName:Em,backendName:"webgl",kernelFunc:ore};let bl,Pb=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ore(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:a}=e;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[u,l],h=[u,l,r];if(o||i){const m=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(bl==null||m!==Pb)&&(Pb=m,bl=document.createElement("canvas").getContext("2d",{willReadFrequently:Pb})),bl.canvas.width=l,bl.canvas.height=u,bl.drawImage(a,0,0,l,u),a=bl.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=ks.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=M().getBool("WEBGL_PACK")?new rre(h):new are(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lre(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=bs(c),y=ht(a.shape,r.shape,l,h,u,d,!1,m);let g;const x=[],b=i!=null,w=o!=null,v=p==="leakyrelu",C=()=>{const k=[a,r],T=(E,O)=>{if(O==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const B=ie({inputs:{x:E},backend:n,attrs:{shape:[E.shape[0],1,1]}});return x.push(B),B}return E};if(b&&k.push(T(i,c)),w&&k.push(T(o,c)),v){const E=n.makeTensorInfo([],"float32",Fi(f,"float32"));k.push(E),x.push(E)}return k};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))g=q_({x:a,filter:r,convInfo:y,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else if(y.strideWidth<=2&&m==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const k=p?hd(p,!0):null,T=new j_(y,b,k,w,v),E=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],O=C();g=n.runWebGLProgram(T,O,"float32",E)}else if(M().getBool("WEBGL_CONV_IM2COL"))g=X_({x:a,filter:r,convInfo:y,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const k=p?hd(p,!1):null,T=new H_(y,b,k,w,v),E=C();g=n.runWebGLProgram(T,E,"float32")}const $=ie({inputs:{x:g},backend:n,attrs:{shape:y.outShape}});return x.push(g),x.forEach(k=>n.disposeIntermediateTensorInfo(k)),$}const ure={kernelName:Qh,backendName:"webgl",kernelFunc:lre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cre(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),N(sn(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const y=ht(a.shape,r.shape,l,m,u,h,!0),g=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?hd(d,g):null,b=[a,r],w=i!=null,v=o!=null,C=d==="leakyrelu";if(w&&b.push(i),v&&b.push(o),C){const E=n.makeTensorInfo([],"float32",Fi(p,"float32"));b.push(E),f.push(E)}let $;g?$=new Q_(y,w,x,v,C):$=new Y_(y,w,x,v,C);const k=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram($,b,"float32",k);return f.forEach(E=>n.disposeIntermediateTensorInfo(E)),T}const hre={kernelName:Zh,backendName:"webgl",kernelFunc:cre};let dre=class{constructor(e,n,s,a){this.sliceDim=e,this.strides=n,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=et(s.length);let i=`
    int index;`;for(let o=0;o<this.sliceDim;o++)i+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(t){const{inputs:e,backend:n}=t,{params:s,indices:a}=e,r=a.shape,i=r[r.length-1],o=L(s.shape),[l,u,c,h]=jy(s,a),d=ie({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=ie({inputs:{x:s},backend:n,attrs:{shape:[L(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const g=n.readSync(a.dataId),x=n.bufferSync(s),b=yee(g,x,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,b.values)}const f=new dre(i,h,[u,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),y=ie({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),y}const fre={kernelName:jg,backendName:"webgl",kernelFunc:pre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mre=class{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=et(this.rank),a=gre(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}};function gre(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<t.length;a++)a===2?s.push("index"):s.push(`${n[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,indices:r}=e,{axis:i,batchDims:o}=s,l=Ie(i,a.shape)[0];if(M().get("DEBUG")){const x=n.readSync(r.dataId),b=a.shape[l];for(let w=0;w<x.length;++w){const v=x[w];N(v<=b-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${b-1}]`)}}const u=px(a,r,l,o),c=L(r.shape),h=[],d=ie({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=ie({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const x=n.bufferSync(p),b=n.bufferSync(d),w=xee(b,x,f);return h.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(u.outputShape,w.dtype,w.values)}const m=new mre(d.shape,f),y=n.runWebGLProgram(m,[d,p],d.dtype);h.push(y);const g=ie({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),g}const yre={kernelName:qd,backendName:"webgl",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xre="return float(a > b);",bre=`
  return vec4(greaterThan(a, b));
`,wre=Nn({opSnippet:xre,packedOpSnippet:bre,cpuKernelImpl:bee,dtype:"bool"}),vre={kernelName:Xd,backendName:"webgl",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sre="return float(a >= b);",Cre=`
  return vec4(greaterThanEqual(a, b));
`,$re=Nn({opSnippet:Sre,packedOpSnippet:Cre,dtype:"bool",cpuKernelImpl:wee}),Nre={kernelName:Ju,backendName:"webgl",kernelFunc:$re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kre(t){const{inputs:e,backend:n}=t,{input:s}=e;return J_(s,!0,n)}const Ire={kernelName:qg,backendName:"webgl",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tre="return float(!isnan(x) && !isinf(x));",Ere=He({opSnippet:Tre,dtype:"bool"}),Rre={kernelName:tc,backendName:"webgl",kernelFunc:Ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre="return float(isinf(x));",Are=He({opSnippet:Dre,dtype:"bool"}),_re={kernelName:nc,backendName:"webgl",kernelFunc:Are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ore="return float(isnan(x));",Fre=He({opSnippet:Ore,dtype:"bool"}),zre={kernelName:sc,backendName:"webgl",kernelFunc:Fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lre="return float(a < b);",Pre=`
  return vec4(lessThan(a, b));
`,Mre=Nn({opSnippet:Lre,packedOpSnippet:Pre,cpuKernelImpl:vee,dtype:"bool"}),Bre={kernelName:Yd,backendName:"webgl",kernelFunc:Mre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vre="return float(a <= b);",Ure=`
  return vec4(lessThanEqual(a, b));
`,Wre=Nn({opSnippet:Vre,packedOpSnippet:Ure,cpuKernelImpl:See,dtype:"bool"}),Gre={kernelName:Qd,backendName:"webgl",kernelFunc:Wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hre(t){const{backend:e,attrs:n}=t,{start:s,stop:a,num:r}=n,i=Cee(s,a,r);return e.makeTensorInfo([i.length],"float32",i)}const jre={kernelName:Kg,backendName:"webgl",kernelFunc:Hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qre=Vc+`
  return x < 0.0 ? 0./0. : log(x);
`,Xre=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Kre=He({opSnippet:qre,packedOpSnippet:Xre,cpuKernelImpl:$ee}),Yre={kernelName:ac,backendName:"webgl",kernelFunc:Kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qre=Vc+`
  return log(1.0 + x);
`,Zre=He({opSnippet:Qre}),Jre={kernelName:rc,backendName:"webgl",kernelFunc:Zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eie="return float(a >= 1.0 && b >= 1.0);",tie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,nie=Nn({opSnippet:eie,packedOpSnippet:tie,dtype:"bool"}),sie={kernelName:Zd,backendName:"webgl",kernelFunc:nie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aie="return float(!(x >= 1.0));",rie=He({opSnippet:aie}),iie={kernelName:Jd,backendName:"webgl",kernelFunc:rie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oie="return float(a >= 1.0 || b >= 1.0);",lie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,uie=Nn({opSnippet:oie,packedOpSnippet:lie,dtype:"bool"}),cie={kernelName:ep,backendName:"webgl",kernelFunc:uie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hie=class{constructor(e,n,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=n,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${a}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class die{constructor(e,n,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${a}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pie=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s,u=M().getBool("WEBGL_PACK_NORMALIZATION")?new die(a.shape,r,i,o,l):new hie(a.shape,r,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},fie={kernelName:tp,backendName:"webgl",kernelFunc:pie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mie=class{constructor(e,n,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gie=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new mie(a.shape,o,l,u,c);return n.runWebGLProgram(h,[a,r,i],a.dtype)},yie={kernelName:Yg,backendName:"webgl",kernelFunc:gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xie(t,e,n,s){const a=L(e),i=L(t.shape)/a,o=ie({inputs:{x:t},attrs:{shape:[i,a]},backend:s}),l=hl(o,t.dtype,"max",s),u=ie({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reductionIndices:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o),h=c!=null,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const b=n.texData.get(p.dataId).values,w=new Array(o);for(let $=0;$<w.length;$++)w[$]=a.shape[c[$]];const v=TS(b,a.shape,a.dtype,c,w);p=n.makeTensorInfo(w,a.dtype);const C=n.texData.get(p.dataId);C.values=v}else p=Tx(a,c,n);u=dt(u.length,o)}Ht("max",u,o);const[f,m]=Bt(p.shape,u);let y=f;i&&(y=Ft(f,l));let g;if(d){const b=n.texData.get(p.dataId).values,w=Nee(b,L(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);const v=n.texData.get(g.dataId);v.values=w}else g=xie(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const bie={kernelName:np,backendName:"webgl",kernelFunc:tO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wie=ES+`
  return max(a, b);
`,vie=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cl+`
  return result;
`,Sie=Nn({opSnippet:wie,packedOpSnippet:vie,cpuKernelImpl:kee}),Cie={kernelName:ic,backendName:"webgl",kernelFunc:Sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;Kp(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(sn(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))return ms({inputs:{x:a},backend:n});const h=new dd(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}const Nie={kernelName:sp,backendName:"webgl",kernelFunc:$ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Os(a.shape,r,i,c,o,u,l),d=new DS(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}const Iie={kernelName:ap,backendName:"webgl",kernelFunc:kie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,o=r-1-e.padInfo.top,l=i-1-e.padInfo.left,u=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Eie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,s=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rie(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Os(i.shape,o,l,h,u,c),p=new DS(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new Eie(d),y=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),y}const Die={kernelName:Zg,backendName:"webgl",kernelFunc:Rie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aie(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r,output:i}=e,o=r;Kp([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rn(o.shape,l,u,1,c,h),p=!0,f=new dd(d,"max",p),m=n.runWebGLProgram(f,[o],o.dtype),y=new Tie(d),g=n.runWebGLProgram(y,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}const _ie={kernelName:Qg,backendName:"webgl",kernelFunc:Aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oie(t,e,n,s){let a=new dd(n,"max",!1);const r=s.runWebGLProgram(a,[t],"float32");a=new dd(n,"max",!0,!0,e);const i=s.runWebGLProgram(a,[t],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fie={kernelName:Jg,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=e,l=n;N(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];N(sn(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=Rn(s.shape,a,r,u,i),[h,d]=Oie(s,o,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zie(t,e,n,s){const a=L(e),i=L(t.shape)/a,o=ie({inputs:{x:t},attrs:{shape:[i,a]},backend:s}),l=hl(o,"float32","mean",s),u=ie({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lie={kernelName:rp,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:a,axis:r}=e,i=n,o=s.shape.length,l=Ie(r,s.shape);let u=l;const c=tt(u,o),h=c!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=i.texData.get(f.dataId).values,v=new Array(o);for(let k=0;k<v.length;k++)v[k]=s.shape[c[k]];const C=TS(w,s.shape,s.dtype,c,v);f=i.makeTensorInfo(v,s.dtype);const $=i.texData.get(f.dataId);$.values=C}else f=Tx(s,c,i);p.push(f),u=dt(u.length,o)}Ht("sum",u,o);const[m,y]=Bt(f.shape,u);let g=m;a&&(g=Ft(m,l));const x=zie(f,y,g,i);for(const b of p)i.disposeIntermediateTensorInfo(b);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o);let h=a;c!=null&&(h=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),u=dt(u.length,a.shape.length)),Ht("min",u,o);const[d,p]=Bt(h.shape,u),f=L(p),m=ie({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),y=hl(m,m.dtype,"min",n);let g;if(i){const x=Ft(d,l);g=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=ie({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(h),g}const Mie={kernelName:ip,backendName:"webgl",kernelFunc:Pie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bie=ES+`
  return min(a, b);
`,Vie=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cl+`
  return result;
`,Uie=Nn({opSnippet:Bie,packedOpSnippet:Vie,cpuKernelImpl:Iee}),Wie={kernelName:oc,backendName:"webgl",kernelFunc:Uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gie=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=n.map((c,h)=>c[0]+e[h]+c[1]);const a=e.length,r=et(a),i=n.map(c=>c[0]).join(","),o=n.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hie{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+e[m]+f[1]);const a=e.length,r=et(a),i=n.map(f=>f[0]).join(","),o=n.map((f,m)=>f[0]+e[m]).join(","),l=zn("rc",a),u=zn("source",a),c=`${l[a-1]} < ${this.outputShape[a-1]}`,h=a===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(a===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[a-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[a-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[a-2]} += 1;
        if(${l[a-2]} < ${this.outputShape[a-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[a-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jie=({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:a,mode:r}=n,i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hie(s.shape,a,r):new Gie(s.shape,a,r);return e.runWebGLProgram(i,[s],s.dtype)},qie={kernelName:op,backendName:"webgl",kernelFunc:jie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xie=`if (b == 0.0) return NAN;
  return mod(a, b);`,Kie=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+cl+`
  return result;
`,Yie=Nn({opSnippet:Xie,packedOpSnippet:Kie}),Qie={kernelName:lc,backendName:"webgl",kernelFunc:Yie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zie=class{constructor(e,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jie=`
if (a == b) {
  return 1.0;
};
return a / b;`,eoe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,nO=Nn({opSnippet:Jie,packedOpSnippet:eoe,checkOutOfBounds:!0}),toe={kernelName:ju,backendName:"webgl",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$="return a - b;",sO=Nn({opSnippet:H$,packedOpSnippet:H$,supportsComplex:!0,cpuKernelImpl:Xee}),noe={kernelName:$c,backendName:"webgl",kernelFunc:sO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{dim:r}=s,i=Ie([r],a.shape),o=tO({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ft(o.shape,i),u=ie({inputs:{x:o},backend:n,attrs:{shape:l}}),c=sO({inputs:{a,b:u},backend:n}),h=Z_({inputs:{x:c},backend:n}),d=Ex({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=ie({inputs:{x:d},backend:n,attrs:{shape:l}}),f=nO({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const soe={kernelName:Np,backendName:"webgl",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aoe(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s,l=o?a:aO({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Zie(u,c,r),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}const roe={kernelName:ey,backendName:"webgl",kernelFunc:aoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ioe=pa+`
  return -x;
`,ooe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function loe(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const r=n.texData.get(s.dataId),[i,o]=Eee(r.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let a;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ii(s.shape,ooe):a=new Ua(s.shape,ioe),n.runWebGLProgram(a,[s],s.dtype)}const uoe={kernelName:lp,backendName:"webgl",kernelFunc:loe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coe=Gy;function hoe(t){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),{selectedIndices:h}=coe(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const doe={kernelName:ty,backendName:"webgl",kernelFunc:hoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const poe=zv;function foe(t){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(a.dataId),h=n.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=poe(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const moe={kernelName:Lw,backendName:"webgl",kernelFunc:foe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const goe=Hy;function yoe(t){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(a.dataId),h=n.readSync(r.dataId),d=i,p=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=goe(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const xoe={kernelName:ny,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let boe=class{constructor(e,n,s,a){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const woe=t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s,u=L(a.shape),c=new boe(u,i,o,l),h=ie({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],r);n.disposeIntermediateTensorInfo(h);const p=[...a.shape,i],f=ie({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},voe={kernelName:hp,backendName:"webgl",kernelFunc:woe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tg(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const a=Qp({inputs:{input:s},backend:n}),r=tg({inputs:{x:a},backend:n}),i=Rx({inputs:{input:s},backend:n}),o=tg({inputs:{x:i},backend:n}),l=Gi({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Zp({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const Soe={kernelName:Tp,backendName:"webgl",kernelFunc:tg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=Qp({inputs:{input:s},backend:n}),r=rO({inputs:{x:a},backend:n}),i=Rx({inputs:{input:s},backend:n}),o=tg({inputs:{x:i},backend:n}),l=Gi({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Zp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const Coe={kernelName:cp,backendName:"webgl",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $oe(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s;if(e.length===1)return T1({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{ns(r,c.shape,"All tensors passed to stack must have matching shapes"),N(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=T1({inputs:{input:c},backend:n,attrs:{dim:a}});return o.push(h),h}),u=G_({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Noe={kernelName:dp,backendName:"webgl",kernelFunc:$oe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let koe=class{constructor(e,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,c)=>u[0]+e[c]+u[1]);const a=e.length,r=et(a),i=n.map(u=>u[0]).join(","),o=n.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ioe{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,y)=>m[0]+e[y]+m[1]);const a=e.length,r=et(a),i=n.map(m=>m[0]).join(","),o=n.map((m,y)=>m[0]+e[y]).join(","),l=zn("rc",a),u=zn("source",a),c=`${l[a-1]} < ${this.outputShape[a-1]}`,h=a===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[a-1]} += 1;
       if(${c}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${l[a-2]} += 1;
       if(${l[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${l[a-1]} += 1;
         if(${c}) {`],p=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,y=a===1?2:4;m<y;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iO=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,constantValue:i}=s;if(L(a.shape)===0){const u=r.map((c,h)=>c[0]+a.shape[h]+c[1]);return Zp({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}const o=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ioe(a.shape,r,i):new koe(a.shape,r,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},Toe={kernelName:pp,backendName:"webgl",kernelFunc:iO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eoe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Roe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+cl+`
  return result;
`,Doe=Nn({opSnippet:Eoe,packedOpSnippet:Roe}),Aoe={kernelName:cc,backendName:"webgl",kernelFunc:Doe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _oe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=[],u=Ie(r,a.shape);let c=u;const h=tt(c,o);let d=a;h!=null&&(d=Bn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=dt(c.length,o),l.push(d)),Ht("prod",c,o);let p;if(n.shouldExecuteOnCPU([d])){const f=n.texData.get(d.dataId).values,{outVals:m,outShape:y,outDtype:g}=Dee(d.shape,d.dtype,f,c);p=n.makeTensorInfo(y,g,m)}else{const[f,m]=Bt(d.shape,c),y=L(m),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,y]}}),x=vy(a.dtype),b=hl(g,x,"prod",n);p=ie({inputs:{x:b},backend:n,attrs:{shape:f}}),l.push(g),l.push(b)}if(i){l.push(p);const f=Ft(p.shape,u);p=ie({inputs:{x:p},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const Ooe={kernelName:mp,backendName:"webgl",kernelFunc:_oe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Foe(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:o}=s,l=a.map(g=>n.readSync(g.dataId)),u=a.map(g=>g.shape),c=n.readSync(r.dataId),h=n.readSync(i.dataId),[d,p,f]=Aee(l,u,c,r.shape,r.dtype,h,i.shape,o),m=d.map(g=>n.makeTensorInfo([g.length],"int32",g)),y=n.makeTensorInfo(f,r.dtype,p);return m.concat([y])}const zoe={kernelName:Pw,backendName:"webgl",kernelFunc:Foe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Loe(t){const{inputs:e,backend:n}=t,{starts:s,limits:a,deltas:r}=e,i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=_ee(i,s.shape,s.dtype,o,a.shape,l,r.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const Poe={kernelName:Mw,backendName:"webgl",kernelFunc:Loe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Moe(t){const{inputs:e,backend:n,attrs:s}=t,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=o.map(y=>n.readSync(y.dataId)),p=o.map(y=>y.shape),[f,m]=Oee(u,a.shape,c,r.shape,r.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,r.dtype,m)}const Boe={kernelName:Bw,backendName:"webgl",kernelFunc:Moe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO=t=>{const{backend:e,attrs:n}=t,{start:s,stop:a,step:r,dtype:i}=n,o=Fee(s,a,r,i);return e.makeTensorInfo([o.length],i,o)},Voe={kernelName:sy,backendName:"webgl",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uoe="return 1.0 / x;",Woe=He({opSnippet:Uoe}),Goe={kernelName:hc,backendName:"webgl",kernelFunc:Woe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hoe=pa+`
  return (x < 0.0) ? 0.0 : x;
`,joe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qoe=He({opSnippet:Hoe,packedOpSnippet:joe}),Xoe={kernelName:dc,backendName:"webgl",kernelFunc:qoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Koe=pa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Yoe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Qoe=He({opSnippet:Koe,packedOpSnippet:Yoe}),Zoe={kernelName:pc,backendName:"webgl",kernelFunc:Qoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Joe=class{constructor(e,n,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],h=[a&&n>1?n-1:n,a&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ele{constructor(e,n,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],h=[a&&n>1?n-1:n,a&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tle(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ele(a.shape,l,u,r,i):new Joe(a.shape,l,u,r,i);return n.runWebGLProgram(c,[a],"float32")}const nle={kernelName:xp,backendName:"webgl",kernelFunc:tle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sle=class{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,a,r]=n,[,i,o]=e,l=[s&&i>1?a-1:a,s&&o>1?r-1:r],u=[s&&i>1?i-1:i,s&&o>1?o-1:o],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ale(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,o=new sle(r.shape,a.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const rle={kernelName:iy,backendName:"webgl",kernelFunc:ale};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ile=class{constructor(e,n,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],h=[a&&n>1?n-1:n,a&&s>1?s-1:s],d=a?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ole{constructor(e,n,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],h=[a&&n>1?n-1:n,a&&s>1?s-1:s],d=a?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lle(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ole(a.shape,l,u,r,i):new ile(a.shape,l,u,r,i);return n.runWebGLProgram(c,[a],a.dtype)}const ule={kernelName:yp,backendName:"webgl",kernelFunc:lle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cle=class{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,a,r]=n,[,i,o]=e,l=[s&&i>1?a-1:a,s&&o>1?r-1:r],u=[s&&i>1?i-1:i,s&&o>1?o-1:o],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hle(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,o=new cle(r.shape,a.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const dle={kernelName:ry,backendName:"webgl",kernelFunc:hle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ple=class{constructor(e,n){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const a=o=>n.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,l)=>a(l)).join(","),i=et(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fle{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const a=zn("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,o=et(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(a.slice())};
          if(${r}){
            result.g = ${u(a.slice())};
          }
          if(${i}) {
            result.b = ${c(a.slice())};
            if(${r}) {
              result.a = ${h(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((x,b)=>p(b,f)),y=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${g}))`}function p(f,m){return n.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mle(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dims:r}=s,i=a.shape.length,o=Ie(r,a.shape);if(i===0)return ms({inputs:{x:a},backend:n});const l=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fle(a.shape,o):new ple(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}const gle={kernelName:bp,backendName:"webgl",kernelFunc:mle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yle=class{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],a=e[2];this.outputShape=e;let r="";typeof n=="number"?r=`float outputValue = ${n.toFixed(2)};`:r=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xle={kernelName:by,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:r,center:i}=e,o=n,l=new yle(s.shape,r),[u,c]=Zy(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ble=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,wle=He({opSnippet:ble}),vle={kernelName:fc,backendName:"webgl",kernelFunc:wle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sle="return inversesqrt(x);",Cle=He({opSnippet:Sle,cpuKernelImpl:zee}),$le={kernelName:mc,backendName:"webgl",kernelFunc:Cle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AS=class{constructor(e,n,s,a,r,i,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=et(r.length),c=et(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";a===1?p="i":a===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nle{constructor(e,n,s,a,r,i,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=et(r.length),c=et(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";a===1?p="i":a===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides",x=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kle(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rr(r,a,i),d=[h/u,u];if(h===0)return n.makeTensorInfo(i,a.dtype);const p=ie({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=ie({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;M().getBool("WEBGL_PACK")?y=new Nle(l,o,p.shape.length,f.shape.length,c,d):y=new AS(l,o,p.shape.length,f.shape.length,c,d);const g=n.runWebGLProgram(y,[f,p,m],f.dtype),x=ie({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),x}const Ile={kernelName:oy,backendName:"webgl",kernelFunc:kle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tle=class{constructor(e,n,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,o=M().getNumber("WEBGL_VERSION")===2?r:i,l=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ele(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:a,values:r}=e,{side:i}=s,o=new Tle(a.shape[0],a.shape[1],r.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,r],"int32",l)}const Rle={kernelName:uy,backendName:"webgl",kernelFunc:Ele};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dle=class{constructor(e,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<n.length;c++)u.push(`${o[c]}`),c<e&&l.push(`${o[c]}`);a=l.join(),r=u.join()}const i=et(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ale(t){const{inputs:e,backend:n}=t,{condition:s,t:a,e:r}=e,i=new Dle(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[s,a,r],dn(a.dtype,r.dtype))}const _le={kernelName:wp,backendName:"webgl",kernelFunc:Ale};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ole=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Lp};
  float scale = ${Pp};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Fle=He({opSnippet:Ole}),zle={kernelName:gc,backendName:"webgl",kernelFunc:Fle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lle=Vc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Ple=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mle=He({opSnippet:Lle,packedOpSnippet:Ple,cpuKernelImpl:Pee}),Ble={kernelName:wc,backendName:"webgl",kernelFunc:Mle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vle=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Ule=He({opSnippet:Vle}),Wle={kernelName:bc,backendName:"webgl",kernelFunc:Ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gle=Vc+`
  return sin(x);
`,Hle=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${cl}
  return result;
`,jle=He({opSnippet:Gle,packedOpSnippet:Hle}),qle={kernelName:yc,backendName:"webgl",kernelFunc:jle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xle=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Kle=He({opSnippet:Xle}),Yle={kernelName:xc,backendName:"webgl",kernelFunc:Kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qle=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Zle=He({opSnippet:Qle}),Jle={kernelName:vc,backendName:"webgl",kernelFunc:Zle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eue=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,paddings:i}=s;N(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((g,x)=>g*x),l=[[0,0]];l.push(...i);for(let g=1+r.length;g<a.shape.length;++g)l.push([0,0]);const u=[],c=iO({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=sl(c.shape,r,o,!1),d=al(h.length,r.length,!1),p=rl(c.shape,r,o,!1),f=ie({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Bn({inputs:{x:f},backend:n,attrs:{perm:d}}),y=ie({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(g=>n.disposeIntermediateTensorInfo(g)),y},tue={kernelName:Cp,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nue(t){const{inputs:e,backend:n}=t,{indices:s,values:a,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=n.readSync(r.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=Bee(o,s.shape,s.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const sue={kernelName:Vw,backendName:"webgl",kernelFunc:nue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aue(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:a,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(r.dataId)),[u,c,h]=Vee(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const rue={kernelName:Uw,backendName:"webgl",kernelFunc:aue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iue(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=D_(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const oue={kernelName:cy,backendName:"webgl",kernelFunc:iue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lue(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=D_(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const uue={kernelName:hy,backendName:"webgl",kernelFunc:lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cue(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=rr(r,a,o),p=!1;if(r.dtype==="string"){const g=n.bufferSync(a),x=n.bufferSync(r),b=$a(n.readSync(i.dataId)[0]),w=Lee(g,x,o,d,c,u,l,h,b,p);return n.makeTensorInfo(o,w.dtype,w.values)}const f=new AS(u,l,a.shape.length,r.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[r,a,i],r.dtype),y=ie({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),y}const hue={kernelName:dy,backendName:"webgl",kernelFunc:cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function due(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=Ie(i,a.shape)[0],l=dx(a,r,o),u=a.shape.length,c=new Array(u).fill(0),h=a.shape.slice();return l.map(d=>{const p=[...h];p[o]=d;const f=Uc({inputs:{x:a},backend:n,attrs:{begin:c,size:p}});return c[o]+=d,f})}const pue={kernelName:$p,backendName:"webgl",kernelFunc:due};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$="return sqrt(x);",fue=He({opSnippet:j$,packedOpSnippet:j$,cpuKernelImpl:Uee}),mue={kernelName:Sc,backendName:"webgl",kernelFunc:fue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gue="return x * x;",yue=He({opSnippet:gue}),xue={kernelName:py,backendName:"webgl",kernelFunc:yue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$="return (a - b) * (a - b);",bue=Nn({opSnippet:q$,packedOpSnippet:q$}),wue={kernelName:Cc,backendName:"webgl",kernelFunc:bue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vue(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=n.readSync(a.dataId),i=Ia(r),o=Wee(i,"string",s);return n.makeTensorInfo(a.shape,"string",o)}const Sue={kernelName:fy,backendName:"webgl",kernelFunc:vue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cue({inputs:t,attrs:e,backend:n}){const{x:s}=t,a=pa+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new Ua(s.shape,a);return n.runWebGLProgram(r,[s],s.dtype)}const $ue={kernelName:Tc,backendName:"webgl",kernelFunc:Cue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nue=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=et(s.length),i=et(s.length);let o="";if(a===1)o="coords * strides + begin";else{let l=0;o=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kue(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:b,strides:w}=Ky(a.shape,r,i,o,l,u,c,h,d);let v;if(m)v=ie({inputs:{x:a},backend:n,attrs:{shape:f}});else if(y||g){N(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const $=Xy(x,b,w),k=Uc({inputs:{x:a},backend:n,attrs:{begin:x,size:$}});v=ie({inputs:{x:k},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(k)}else if(n.shouldExecuteOnCPU([a])){const k=n.readSync(a.dataId),T=ke(a.shape,a.dtype,k),E=Gee(p,T,w,x);v=n.makeTensorInfo(f,a.dtype,E.values)}else{const k=new Nue(x,w,p);v=n.runWebGLProgram(k,[a],a.dtype)}const C=ie({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),C}const Iue={kernelName:my,backendName:"webgl",kernelFunc:kue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tue(t){const{inputs:e,backend:n,attrs:s}=t,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=Hee(d,p,a,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const Eue={kernelName:gy,backendName:"webgl",kernelFunc:Tue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rue(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:a}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=jee(o,l,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const Due={kernelName:Ww,backendName:"webgl",kernelFunc:Rue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aue(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:a}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(r.dataId),o=qee(i,a);return n.makeTensorInfo(r.shape,"int32",o)}const _ue={kernelName:Gw,backendName:"webgl",kernelFunc:Aue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oue="return tan(x);",Fue=He({opSnippet:Oue}),zue={kernelName:Nc,backendName:"webgl",kernelFunc:Fue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Pue=He({opSnippet:Lue}),Mue={kernelName:kc,backendName:"webgl",kernelFunc:Pue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bue(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:a,indices:r,updates:i}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rr(i,r,a.shape),d=[h/u,u];if(h===0)return n.makeTensorInfo(a.shape,r.dtype);const p=ie({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=ie({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=ie({inputs:{x:a},backend:n,attrs:{shape:d}}),y=new AS(l,o,p.shape.length,f.shape.length,c,d,!1,!0),g=n.runWebGLProgram(y,[f,p,m],m.dtype),x=ie({inputs:{x:g},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),x}const Vue={kernelName:ly,backendName:"webgl",kernelFunc:Bue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uue=class{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*n[i];this.outputShape=s,this.rank=s.length;const a=et(this.rank),r=Wue(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Wue(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<t.length;a++)s.push(`imod(${n[a]}, ${t[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const l=n.readSync(a.dataId),u=a.dtype==="string"?l.map(d=>$a(d)):l,c=ke(a.shape,a.dtype,u),h=Kee(c,r);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new Uue(a.shape,r);return n.runWebGLProgram(i,[a],a.dtype)}const Gue={kernelName:Ic,backendName:"webgl",kernelFunc:lO};let Hue=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},jue=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yi(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function X$(t){let e=1;for(;e<t;)e*=2;return e}function que(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{k:r,sorted:i}=s,o=M().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=M().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([a])||c<o||r>l){const E=n.readSync(a.dataId),[O,B]=Yee(E,u,a.dtype,r,i);return[n.makeTensorInfo(O.shape,O.dtype,O.values),n.makeTensorInfo(B.shape,B.dtype,B.values)]}if(r===0)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[a,Zp({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(a):a,m=L(u)/c,y=ie({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&Yi(n,p);const g=X$(r),x=X$(c);let b=null;const w=()=>b===null?[y,y]:[y,b],v=(E,O,B)=>{const W=w(),V=new Hue(B),D=[[c],[b===null?1:0],[Number.NEGATIVE_INFINITY],[E],[O]],H=b;b=n.runWebGLProgram(V,W,"int32",D),Yi(n,H)};for(let E=1;E<g;E*=2){const O=E*2;for(let B=E;B>=1;B/=2)v(O,B,[m,x])}for(let E=x;E>g;E/=2){const O=w(),B=new jue([m,E/2]),V=[[c],[b===null?1:0],[g]],G=b;b=n.runWebGLProgram(B,O,"int32",V),Yi(n,G);const D=g/2,H=D*2;for(let P=D;P>=1;P/=2)v(H,P,b.shape)}let C=b;b=Uc({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,r]}}),Yi(n,C);let $=eO({inputs:{x:y,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Yi(n,y);const k=u.slice(0,-1);k.push(r),C=b,b=ie({inputs:{x:b},attrs:{shape:k},backend:n}),Yi(n,C);const T=$;return $=ie({inputs:{x:$},attrs:{shape:k},backend:n}),Yi(n,T),[$,b]}const Xue={kernelName:yy,backendName:"webgl",kernelFunc:que};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Kue=class{constructor(e,n,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const o=s==="nearest"?1:2;let l;switch(a){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yue(t){const{inputs:e,backend:n,attrs:s}=t,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=a.shape,[f,m]=u??[h,d],y=[c,f,m,p],g=new Kue(h,d,i,o,l,y);return n.runWebGLProgram(g,[a,r],"float32")}const Que={kernelName:xy,backendName:"webgl",kernelFunc:Yue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zue(t){const{inputs:e,attrs:n,backend:s}=t,{axis:a}=n,{x:r}=e;Kp(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:o,outputShape:l,indices:u}=Qee(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const Jue={kernelName:Hw,backendName:"webgl",kernelFunc:Zue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ece(t){const{inputs:e,backend:n,attrs:s}=t,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[r],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==r&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[r]=m;const y=Uc({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),g=ie({inputs:{x:y},backend:n,attrs:{shape:u}});f[m]=g,h.push(y)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const tce={kernelName:kp,backendName:"webgl",kernelFunc:ece};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nce{constructor(e,n){this.variableNames=["x","segmentIds"];const s=e.windowSize,a=e.batchSize,r=e.inSize,i=e.numSegments,o=i*Math.ceil(r/s);this.outputShape=[a,o];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sce(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,segmentIds:r}=e,{numSegments:i}=s,o=a.shape.length,l=[];let u=0;const c=tt([u],o);let h=a;c!=null&&(h=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(h),u=dt(1,o)[0]);const d=Hv(h.shape,u,i),p=L([h.shape[u]]),f=ie({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=vy(a.dtype),y=(w,v,C,$,k)=>{const T=w.shape[0],E=w.shape[1],O=MR(E,k),B={windowSize:O,inSize:E,batchSize:T,numSegments:k},W=new nce(B,v),V=n.compileAndRun(W,[w,C],$);if(l.push(V),V.shape[1]===k)return V;const G=oO({backend:n,attrs:{start:0,stop:k,step:1,dtype:"float32"}}),D=lO({inputs:{x:G},backend:n,attrs:{reps:[E/O]}});return l.push(G),l.push(D),y(V,v,D,$,k)},g=y(f,"unsortedSegmentSum",r,m,i),x=ie({inputs:{x:g},backend:n,attrs:{shape:d}});let b=x;if(c!=null){l.push(x);const w=sr(c);b=Bn({inputs:{x:b},backend:n,attrs:{perm:w}})}return l.forEach(w=>n.disposeIntermediateTensorInfo(w)),b}const ace={kernelName:Ip,backendName:"webgl",kernelFunc:sce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rce=[Ute,Gte,qte,Yte,Zte,tne,sne,rne,une,hne,fne,yne,wne,$ne,Ine,Ene,Dne,Fne,Lne,Mne,Wne,Yne,Zne,nse,ase,cse,dse,gse,Nte,bse,$se,Tse,Ose,Lse,Mse,Vse,Wse,qse,Yse,Jse,tae,sae,rae,lae,cae,fae,gae,bae,Sae,$ae,Tae,Aae,zae,Mae,Uae,Wae,Hae,qae,Kae,Qae,Jae,sre,ire,ure,hre,fre,yre,vre,Nre,$te,Ire,Sse,Rre,_re,zre,Ite,Bre,Gre,jre,Yre,Jre,sie,iie,cie,fie,yie,bie,Cie,Nie,Iie,Die,_ie,Fie,Lie,Mie,Wie,qie,Qie,roe,Rte,uoe,doe,moe,xoe,ise,voe,Coe,Noe,Toe,Aoe,Ete,Ooe,zoe,Poe,Boe,Voe,ose,toe,Goe,Xoe,Zoe,Ate,nle,rle,ule,dle,gle,xle,vle,$le,Ile,Rle,_le,zle,Ble,Wle,qle,Yle,Xne,soe,Jle,tue,sue,rue,oue,uue,hue,pue,mue,xue,wue,Sue,$ue,Iue,Eue,Due,_ue,noe,Mte,zue,Mue,Vue,Gue,Xue,Que,Bte,Jue,tce,ace,Soe];for(const t of rce)jw(t);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=M();zs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);zs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);zs.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);zs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);zs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);zs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);zs.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);zs.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);zs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);zs.registerFlag("WEBGPU_PRINT_SHADER",()=>"");zs.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ice{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oce{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,n,s=!1,a=!0){let r;const i=K$(e,n);return a?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(r=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(r=this.device.createBuffer({size:e,usage:n,mappedAtCreation:s}),this.numBytesAllocated+=e)):(r=this.device.createBuffer({size:e,usage:n,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(r),this.numUsedBuffers++,this.numBytesUsed+=e,r}releaseBuffer(e,n=!0){if(this.freeBuffers.size===0)return;const s=e.size,a=e.usage,r=K$(s,a),i=this.usedBuffers.get(r),o=i.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");i[o]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,n?(this.freeBuffers.get(r).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function K$(t,e){return`${t}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lce{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,n,s,a){const r=Q$(s),i=e*n*r,o=Y$(e,n,s,a);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const u=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(u),u}this.numBytesAllocated+=i;const l=this.device.createTexture({size:[e,n],format:s,usage:a});return this.usedTextures.get(o).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const n=e.width,s=e.height,a=e.format,r=e.usage,i=Y$(n,s,a,r);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(i),l=o.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(l,1);const u=Q$(a),c=n*s*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function Y$(t,e,n,s){return`${t}_${e}_${n}_${s}`}function Q$(t){if(t==="rgba8unorm")return 16;throw new Error(`${t} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uce(t,e){if(Math.max(...t)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=t.length,s="xyzwuv",a=t.map(i=>`${e}.${s[i]}`),r=new Array(n-1);r[n-2]=a[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${a[i+1]})`;return r}const Hi=(t,e,n)=>n==="int32"?`atomicAdd(${t}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${t}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cu;(function(t){t[t.FROM_PIXELS=0]="FROM_PIXELS",t[t.DRAW=1]="DRAW"})(Cu||(Cu={}));const cce=(t,e,n,s,a)=>{const r={dtype:s.dtype,shape:s.shape},i=dce(n,r,e),o=t.createShaderModule({code:i,label:e.constructor.name});let l=M().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");(l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(i),console.groupEnd())}return a?t.createComputePipelineAsync({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):t.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},De=(t,e="f32")=>{switch(t){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component ${e} is not supported.`)}};function Pt(t){if(t<=1)return"i32";if(t===2)return"vec2<i32>";if(t===3)return"vec3<i32>";if(t===4)return"vec4<i32>";if(t===5)return"vec5";if(t===6)return"vec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Er(t){if(t===0)return"x";if(t===1)return"y";if(t===2)return"z";if(t===3)return"w";if(t===4)return"u";if(t===5)return"v";throw Error(`Index ${t} is not yet supported`)}function ae(...t){let e;switch(t.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${t[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function Z$(t,e){let n;return n=`
     ${hce(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${t?"main(getGlobalIndex());":"main();"};
      }
    `,n}function hce(t){return`
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})
`}function dce(t,e,n){const s=[],a=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${uO(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${a}u +
                localIndex);
        `}
      }
    `),n.pixelsOpType!=null){const f=n.pixelsOpType===Cu.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${io(e.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${io(t[0].dtype,n.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const y=eN(n);return[J$,s.join(`
`),Qf(e.shape),n.getUserCode(),Z$(y,n)].join(`
`)}let r,i,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach((f,m)=>{const y=Pt(t[m].shape.length);o+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${y}, `,r=t[m].shape.length-1,i=Pt(r),o+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${i}, `});const l=Pt(e.shape.length);o+=`outShape : ${l}, `,r=e.shape.length-1,i=Pt(r),o+=`
         outShapeStrides: ${i}, `,n.size&&(o+="size : i32, "),n.uniforms&&(o+=n.uniforms),o+="};",o=vce(o),s.push(o),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${io(e.dtype,n.outputComponent)}>;
    `),n.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${n.variableComponents?io(t[m].dtype,n.variableComponents[m]):io(t[m].dtype,n.outputComponent)}>;
        `)}),o!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=xce(e.shape,n.dispatchLayout),c=[J$,s.join(`
`)+fce,Qf(e.shape),u,bce(e.shape.length)];n.atomic||c.push(wce(e.shape,e.dtype,n.outputComponent)),n.variableNames.forEach((f,m)=>{c.push(`${Qf(t[m].shape,f)}`)});const h=t.map((f,m)=>yce(f,e.shape,n.variableComponents?n.variableComponents[m]:n.outputComponent,n.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(h),c.push(n.getUserCode());const d=eN(n);return c.push(Z$(d,n)),c.join(`
`)}function pce(t,e,n){let s=t.shaderKey;if(t.pixelsOpType!=null)return s;const a=[],r=[];e.forEach(c=>{a.push(c.shape),r.push(c.dtype)}),a.push(n.shape),r.push(n.dtype);const i=e.map(c=>ki(c.shape,n.shape)),o=e.map(c=>Ee(c.shape,n.shape)).join("_"),l=i.map(c=>c.join("_")).join(";"),u=uO(t)?"flatDispatch":"";return s+="_"+(t.workgroupSize?t.workgroupSize.join(","):"")+a.map(c=>c.length).join(",")+r.join(",")+t.variableNames.join(",")+l+o+u,s}const J$=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,fce=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Qf(t,e=""){const n=t.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",a=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const r=xe(t),i=Pt(n),o=[];for(let u=0;u<n;u++)o.push(`d${u}`);if(r.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${a}; let d1 = index - d0 * uniforms.${a};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+r.map((u,c)=>{const h=`let ${o[c]} = index2 / uniforms.${a}.${Er(c)}`,d=c===r.length-1?`let ${o[c+1]} = index2 - ${o[c]} * uniforms.${a}.${Er(c)}`:`index2 = index2 - ${o[c]} * uniforms.${a}.${Er(c)}`;return`${h}; ${d};`}).join(""),`
    fn ${s}(index : i32) -> ${i} {
      ${l}
      return ${i}(${o.join(",")});
    }
  `}function mce(t,e){const n=t.name,s=t.shape.length,a=Pt(s),r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=i.map(c=>`${c} : i32`).join(", ");if(s<1)return`
      fn ${r}() -> ${De(e)} {
        return ${De(e)}(${n}[0]);
      }
    `;const l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let u=`${s}D`;return s===0&&(u="1D"),`
    fn ${r}(${o}) -> ${De(e)} {
      return ${De(e)}(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function gce(t,e,n,s){const a=t.name,r=a.charAt(0).toUpperCase()+a.slice(1),i="get"+r+"ByOutput",o=t.shape.length,l=e.length,u=Pt(l);if(Ee(t.shape,e)&&s)return`
    fn ${i}Index(globalIndex : i32) -> ${De(n)} {
      return ${De(n)}(${a}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> ${De(n)} {
      return ${De(n)}(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${n===1?"":` / ${n}`}]);
    }
    `;const c=ki(t.shape,e),h=l-o;let d="";if(o===0)return`
    fn ${i}Index(globalIndex : i32) -> ${De(n)}{
      return get${r}();
    }

    fn ${i}Coords(coords : ${u}) -> ${De(n)}{
      return get${r}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(y=>`coords.${Er(y+h)} = 0;`).join(`
`);let p="";if(l<2&&o>0)p="coords";else if(l>1){const y=Pt(o),g=t.shape.map((x,b)=>`coords.${Er(b+h)}`).join(", ");p=`${y}(${g})`}else p="coords";const f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${De(n)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${De(n)}(${a}[getIndexFromCoords${m}(${p}, ${f})${n===1?"":` / ${n}`}]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> ${De(n)} {
    var coords = coordsIn;
    ${d}
    return ${De(n)}(${a}[getIndexFromCoords${m}(${p}, ${f})${n===1?"":` / ${n}`}]);
  }
`}function yce(t,e,n,s){let a=mce(t,n);return t.shape.length<=e.length&&(a+=gce(t,e,n,s)),a}function xce(t,e){const{x:n,y:s=[],z:a=[]}=e,r=t.length,i=n.length+s.length+a.length;if(i!==r)return"";if(n.length===r)return`fn getOutputCoords() -> ${Pt(r)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="";const l=[n,s,a];for(let d=0;d<l.length;d++){const p=l[d];if(p.length!==0)if(p.length===1)o+=`let d${p[0]} = i32(globalId[${d}]);`;else{const f=uce(p,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)o+=`let d${p[m]} = index${d} / ${f[m]};`,m===f.length-1?o+=`let d${p[m+1]} = index${d} - d${p[m]} * ${f[m]};`:o+=`index${d} = index${d} - d${p[m]} * ${f[m]};`}}const u=[];for(let d=0;d<i;d++)u.push(`d${d}`);const c=Pt(i);let h=`fn getOutputCoords() -> ${c} {
  ${o}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function bce(t){let e="";switch(t){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:N(!1,()=>`Unsupported ${t}D shape`);break}return e}function uO(t){return t.dispatch[1]===1&&t.dispatch[2]===1}function io(t,e=1){if(t==="float32")return De(e,"f32");if(t==="int32"||t==="bool")return De(e,"i32");throw new Error(`type ${t} is not supported.`)}function wce(t,e,n){const s=t.length,a=io(e,n);let r=`fn setOutputAtIndex(flatIndex : i32, value : ${De(n)}) {
      result[flatIndex] = ${a}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${De(n,"i32")}) {
      result[flatIndex] = ${a}(value);
    }
    `;if(s>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=Pt(s);r+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : ${De(n)}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${n===1?"":` / ${n}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : ${De(n,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${n===1?"":` / ${n}`}, value);
      }
    `}return r}function vce(t){const e=/(\w+)\s*:\s*vec(5|6)/g;t=t.replace(e,s=>"@align(16) "+s);const n=/vec(5|6)\s*,\s*(\w+)/g;return t=t.replace(n,(s,a,r)=>`vec${a}, @align(16) ${r}`),t}function eN(t){return!(t.dispatchLayout.hasOwnProperty("y")&&t.dispatchLayout.y.length!==0||t.dispatchLayout.hasOwnProperty("z")&&t.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So=t=>{let e=1;for(let n=0;n<t.length;n++)e*=t[n];return e};function re(t,e,n=[1,1,1],s=[1,1,1]){const[a,r,i]=[Math.ceil(So(t.x.map(o=>e[o]))/(n[0]*s[0])),t.y?Math.ceil(So(t.y.map(o=>e[o]))/(n[1]*s[1])):1,t.z?Math.ceil(So(t.z.map(o=>e[o]))/(n[2]*s[2])):1];return[a,r,i]}function Sce(t,e,n,s=!1){const a=[8,8,1],r=[4,4,1];return s||(t<=8&&(r[1]=1),e<=16&&n<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:r}}function cO(t,e,n=!1){if(n)return[8,8,1];const s=So(t.x.map(r=>e[r])),a=So(t.y.map(r=>e[r]));return s<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function hO(t,e,n=!1){if(n)return[4,4,1];const s=So(t.x.map(r=>e[r])),a=So(t.y.map(r=>e[r]));return s<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function ce(t){return{x:t.map((e,n)=>n)}}function tN(t){if(t==="float32"||t==="int32"||t==="bool"||t==="string")return 4;if(t==="complex64")return 8;throw new Error(`Unknown dtype ${t}`)}function dO(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function pO(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&N(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var za;(function(t){t[t.MatMulReduceProgram=0]="MatMulReduceProgram",t[t.MatMulSplitKProgram=1]="MatMulSplitKProgram",t[t.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",t[t.MatMulPackedProgram=3]="MatMulPackedProgram",t[t.MatMulMax=4]="MatMulMax"})(za||(za={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cce=M().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),$ce=(t,e)=>{const n=t.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,a=e.dispatch;if(a.every(i=>i<=n))return a;N(a[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let r=Math.ceil(Math.sqrt(a[0]));return r>n?(r=Math.ceil(Math.cbrt(a[0])),N(r<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[r,r,r]):[r,r,1]};class Dx extends Sg{nextDataId(){return Dx.nextDataId++}constructor(e,n){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!dO())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new ice(n),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new oce(this.device),this.textureManager=new lce(this.device),this.tensorMap=new Dw(this,Wn()),M().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,n=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return n?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const n=this.tensorMap.get(e);if(!(!n||!n.resource)){if(n.external){n.resource=null;return}n.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(n.resource):n.resource instanceof GPUTexture&&this.textureManager.releaseTexture(n.resource),n.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);n.refCount--}}write(e,n,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:s,shape:n,values:e,refCount:1}),a}move(e,n,s,a,r){if(a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:s,values:n,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(n){throw new Error(n.message)}Object.keys(this.pipelineCache).map((n,s)=>{this.pipelineCache[n]=e[s]})}async getBufferData(e){if(M().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const n=e.size,s=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,n),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const a=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),M().getBool("WEBGPU_USE_PROFILE_TOOL")&&(N(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,n){const s=this.tensorMap.get(e);return s.values=n,s.values}readSync(e){const n=this.tensorMap.get(e),{values:s,complexTensorInfos:a}=n;if(s!=null||n.dtype==="string")return s;if(n.dtype==="complex64"){const m=this.readSync(a.real.dataId),y=this.readSync(a.imag.dataId),g=jf(ka(m,y).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const r=["opaque","premultiplied"],i=n.resource,o=i.size;N(o%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=o/4,u=new ArrayBuffer(o),c=256,h=256,d=r.map(m=>new OffscreenCanvas(c,h)),p=new OffscreenCanvas(c,h);this.endComputePassEncoder(),d.map((m,y)=>{const g=m.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[y]}),g.getCurrentTexture()}).map((m,y)=>{const g=c*4,x=(k,T,E)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:g,offset:E},{texture:m},{width:k,height:T}),this.submitQueue();const O=p.getContext("2d",{willReadFrequently:!0});O.clearRect(0,0,k,T),O.drawImage(d[y],0,0);const B=O.getImageData(0,0,k,T).data,W=r[y],V=new Uint8ClampedArray(u,E,k*T*4);for(let G=0;G<V.length;G+=4)if(W==="premultiplied")V[G+3]=B[G+3];else{const D=B[G];V[G]=B[G+2],V[G+1]=B[G+1],V[G+2]=D}},b=Math.floor(l/(c*h));let w=c,v=h,C=0;for(let k=0;k<b;k++)x(w,v,C),C+=c*h*4;const $=l%(c*h);v=Math.floor($/c),v>0&&(x(w,v,C),C+=v*(c*4)),w=$%c,w>0&&x(w,1,C)});const f=jf(u,n.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const n=this.tensorMap.get(e),{values:s}=n;if(s!=null)return s;let a;if(n.dtype==="complex64"){const r=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=r[0],o=r[1];a=ka(i,o)}else{const r=await this.getBufferData(n.resource);a=jf(r,n.dtype)}return this.convertAndCacheOnCPU(e,a),a}copyBuffer(e){const n=e.size,s=e.usage,a=this.bufferManager.acquireBuffer(n,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,n),this.submitQueue(),a}createTensorFromGPUData(e,n,s){let a=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:s,shape:n,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(r),o=tN(i.dtype)*L(i.shape);if(e.buffer.size<o)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${o})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(a=this.copyBuffer(a)),i.resource=a,Wn().makeTensorFromDataId(r,n,s,this)}readToGPU(e){const n=this.tensorMap.get(e),{values:s,dtype:a,shape:r,resource:i}=n;if(a==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=i,l=o.size,u=o.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,c,0,l),this.submitQueue();const h=this.makeTensorInfo(r,a),d=Wn().makeTensorFromTensorInfo(h),p=this.tensorMap.get(h.dataId);return p.resource=c,{tensorRef:d,buffer:c}}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(a=>$a(a));return ke(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const n=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=Or(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=Or(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(r);return o.kernelMs=nT(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,n,s){return n==="string"&&s!=null&&s.length>0&&Au(s[0])&&(s=s.map(r=>kr(r))),{dataId:this.write(s,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const n=this.tensorMap.get(e);if(n.resource!=null)return;const s=tN(n.dtype)*L(n.shape);let a;const r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(n.values){if(a=this.bufferManager.acquireBuffer(s,r,!0),a.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),o=i.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(o).set(n.values):new Float32Array(o).set(n.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,a,0,s),this.stagingPendingDisposal.push(i)}else{const i=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),a.unmap()}n.values=null}else a=this.bufferManager.acquireBuffer(s,r);n.resource=a}makeUniforms(e){let n=0,s=0;const a=[];let r=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:N(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(u=16),u>r&&(r=u),n=Math.ceil(n/u)*u,s=l.data.length,a.push(n),n+=l.data.length*4}),n=Math.ceil(n/r)*r;const i=new ArrayBuffer(n);e.forEach((l,u)=>{const c=a[u];l.type==="int32"?new Int32Array(i,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(i,c,l.data.length).set(l.data):new Float32Array(i,c,l.data.length).set(l.data)});const o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(o,0,i,0,n),this.uniformPendingDisposal.push(o),{offset:0,size:n,buffer:o}}runWebGPUProgram(e,n,s,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,s)),L(r.shape)===0)return this.tensorMap.get(r.dataId).values=tn(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=$ce(this.device,e);const i=n.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=pce(e,i,r);const o=M().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=cce(this.device,e,i,r,o)),e.pipeline=this.pipelineCache[e.shaderKey],o||this.recordAndSubmit(e,r,n,a),r}recordAndSubmit(e,n,s,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],i=[];const o="int32";if(e.pixelsOpType==null){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=s.concat(n).map(p=>p.shape);const d="int32";i.map(p=>{r.push({type:d,data:p});const f=xe(p);r.push({type:d,data:f})})}else{const d=xe(n.shape);r.push({type:o,data:d})}if(e.size){const d=L(e.outputShape);r.push({type:o,data:[e.outputComponent?d/e.outputComponent:d]})}a&&(r=[...r,...a]);const l=[this.tensorToBinding(n),...s.map(d=>this.tensorToBinding(d)),this.makeUniforms(r)];s.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(n.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,p)=>({binding:p,resource:d}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||M().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Cu.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const n=new BigUint64Array(e.getMappedRange()),s=Number(n[1]-n[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,n=Cce){return M().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&L(s.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Dx.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dO()&&Xw("webgpu",async()=>{const t={powerPreference:M().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(t),n={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),n.requiredFeatures=s;const a=e.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:a.maxStorageBufferBindingSize,maxBufferSize:a.maxBufferSize,maxComputeWorkgroupSizeX:a.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:a.maxComputeInvocationsPerWorkgroup};const r=await e.requestDevice(n),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Dx(r,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $e;(function(t){t[t.ADD=0]="ADD",t[t.ATAN2=1]="ATAN2",t[t.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",t[t.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",t[t.DIV=4]="DIV",t[t.ELU_DER=5]="ELU_DER",t[t.EQUAL=6]="EQUAL",t[t.FLOOR_DIV=7]="FLOOR_DIV",t[t.GREATER=8]="GREATER",t[t.GREATER_EQUAL=9]="GREATER_EQUAL",t[t.LESS=10]="LESS",t[t.LESS_EQUAL=11]="LESS_EQUAL",t[t.LOGICAL_AND=12]="LOGICAL_AND",t[t.LOGICAL_OR=13]="LOGICAL_OR",t[t.MAX=14]="MAX",t[t.MIN=15]="MIN",t[t.MOD=16]="MOD",t[t.MUL=17]="MUL",t[t.NOT_EQUAL=18]="NOT_EQUAL",t[t.POW=19]="POW",t[t.PRELU=20]="PRELU",t[t.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",t[t.SUB=22]="SUB"})($e||($e={}));const Nce="let resultTemp = a + b;",kce="let resultTemp = atan2(a, b);",Ice="let resultTemp = areal * breal - aimag * bimag;",Tce="let resultTemp = areal * bimag + aimag * breal;",Ece="let resultTemp = a / b;",Rce="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",Dce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,Ace=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,_ce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,Oce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,Fce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,zce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,Lce="return f32(a >= 1.0 && b >= 1.0);",Pce=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Mce="return f32(a >= 1.0 || b >= 1.0);",Bce=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,Vce="let resultTemp = max(a, b);",Uce="let resultTemp = min(a, b);",Wce=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,Gce=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,Hce="let resultTemp = a * b;",jce=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,qce=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,Xce=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,Kce=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,Yce="if (a < 0.0) { return b * a; }  return a;",Qce=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Zce="let resultTemp = (a - b) * (a - b);",Jce="let resultTemp = a - b;";function _S(t,e){let n;do{switch(t){case $e.ATAN2:n=kce;break;case $e.MAX:n=Vce;break;case $e.MIN:n=Uce;break;case $e.MOD:n=e?Gce:Wce;break;case $e.NOT_EQUAL:n=e?qce:jce;break;case $e.POW:n=e?Kce:Xce;break;default:continue}let s,a,r;return e?(s="isnanVec4",a="vec4<f32>",r="vec4<bool>"):(s="isnan",a="f32",r="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${a}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${a}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${n}
        return select(
            resultTemp, ${a}(valueForNaN),
            ${r}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(t){case $e.ADD:n=Nce;break;case $e.COMPLEX_MULTIPLY_IMAG:n=Tce;break;case $e.COMPLEX_MULTIPLY_REAL:n=Ice;break;case $e.DIV:n=Ece;break;case $e.ELU_DER:n=Rce;break;case $e.EQUAL:n=Dce;break;case $e.FLOOR_DIV:n=Ace;break;case $e.GREATER:n=_ce;break;case $e.GREATER_EQUAL:n=Oce;break;case $e.LESS:n=Fce;break;case $e.LESS_EQUAL:n=zce;break;case $e.LOGICAL_AND:return e?Pce:Lce;case $e.LOGICAL_OR:return e?Bce:Mce;case $e.MUL:n=Hce;break;case $e.PRELU:return e?Qce:Yce;case $e.SQUARED_DIFFERENCE:n=Zce;break;case $e.SUB:n=Jce;break}return`
    ${n}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ne;(function(t){t[t.ABS=0]="ABS",t[t.ACOS=1]="ACOS",t[t.ACOSH=2]="ACOSH",t[t.ASIN=3]="ASIN",t[t.ASINH=4]="ASINH",t[t.ATAN=5]="ATAN",t[t.ATANH=6]="ATANH",t[t.CEIL=7]="CEIL",t[t.COS=8]="COS",t[t.COSH=9]="COSH",t[t.ELU=10]="ELU",t[t.ERF=11]="ERF",t[t.EXP=12]="EXP",t[t.EXPM1=13]="EXPM1",t[t.FLOOR=14]="FLOOR",t[t.IS_FINITE=15]="IS_FINITE",t[t.IS_INF=16]="IS_INF",t[t.IS_NAN=17]="IS_NAN",t[t.LINEAR=18]="LINEAR",t[t.LOG=19]="LOG",t[t.LOG1P=20]="LOG1P",t[t.LOGICAL_NOT=21]="LOGICAL_NOT",t[t.NEG=22]="NEG",t[t.RELU=23]="RELU",t[t.RELU6=24]="RELU6",t[t.LEAKYRELU=25]="LEAKYRELU",t[t.RECIPROCAL=26]="RECIPROCAL",t[t.ROUND=27]="ROUND",t[t.RSQRT=28]="RSQRT",t[t.SELU=29]="SELU",t[t.SIGMOID=30]="SIGMOID",t[t.SIGN=31]="SIGN",t[t.SIN=32]="SIN",t[t.SINH=33]="SINH",t[t.SOFTPLUS=34]="SOFTPLUS",t[t.SQRT=35]="SQRT",t[t.SQUARE=36]="SQUARE",t[t.STEP=37]="STEP",t[t.TAN=38]="TAN",t[t.TANH=39]="TANH",t[t.TO_INT=40]="TO_INT"})(ne||(ne={}));const ehe="return abs(a);",the=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,nhe=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,she=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,ahe="return asinh(a);",rhe=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,ihe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,ohe="return ceil(a);",lhe="return cos(a);",uhe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,che="return exp(a) - 1.0;",hhe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",dhe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,phe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${tx};
  let a1 = ${nx};
  let a2 = ${sx};
  let a3 = ${ax};
  let a4 = ${rx};
  let a5 = ${ix};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,fhe="return exp(a);",mhe="return floor(a);",ghe="return f32(!isnan(a) && !isinf(a));",yhe="return f32(isinf(a));",xhe="return f32(isnan(a));",bhe="return a;",whe=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,vhe=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,She="return f32(!(a >= 1.0));",Che="return -a;",$he="if (a < 0.0) { return uniforms.alpha * a; } return a;",Nhe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,khe="return 1.0 / a;",Ihe="return select(a, 0.0, a < 0.0);",The="return clamp(a, 0.0, 6.0);",Ehe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Rhe=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Dhe="return round(a);",Ahe="return inverseSqrt(a);",_he=`
  if (a >= 0.0) {
    return ${Pp} * a;
  } else {
    return ${Lp} * (exp(a) - 1.0);
  }
`,Ohe="return 1.0 / (1.0 + exp(-1.0 * a));",Fhe="return sign(a);",zhe="return sin(a);",Lhe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Phe=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,Mhe="return sqrt(a);",Bhe="return a * a;",Vhe=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Uhe="return tan(a);",Whe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Ghe="return f32(i32((a)));";function eo(t,e){switch(t){case ne.ABS:return ehe;case ne.ACOS:return the;case ne.ACOSH:return nhe;case ne.ASIN:return she;case ne.ASINH:return ahe;case ne.ATAN:return rhe;case ne.ATANH:return ihe;case ne.COS:return lhe;case ne.COSH:return uhe;case ne.CEIL:return ohe;case ne.ELU:return e?dhe:hhe;case ne.ERF:return phe;case ne.EXP:return fhe;case ne.EXPM1:return che;case ne.FLOOR:return mhe;case ne.IS_FINITE:return ghe;case ne.IS_INF:return yhe;case ne.IS_NAN:return xhe;case ne.LINEAR:return bhe;case ne.LOG:return whe;case ne.LOG1P:return vhe;case ne.LOGICAL_NOT:return She;case ne.NEG:return Che;case ne.LEAKYRELU:return e?Nhe:$he;case ne.RECIPROCAL:return khe;case ne.RELU:return e?Rhe:Ihe;case ne.RELU6:return e?Ehe:The;case ne.ROUND:return Dhe;case ne.RSQRT:return Ahe;case ne.SELU:return _he;case ne.SIGMOID:return Ohe;case ne.SIGN:return Fhe;case ne.SIN:return zhe;case ne.SINH:return Lhe;case ne.SOFTPLUS:return Phe;case ne.SQRT:return Mhe;case ne.SQUARE:return Bhe;case ne.STEP:return Vhe;case ne.TAN:return Uhe;case ne.TANH:return Whe;case ne.TO_INT:return Ghe;default:throw new Error(`BinaryType ${t} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(t,e=!1,n=!1,s=3){if(t===null)return"";let a="";if(t==="linear")a=eo(ne.LINEAR);else if(t==="relu")a=eo(ne.RELU,n);else if(t==="elu")a=eo(ne.ELU,n);else if(t==="relu6")a=eo(ne.RELU6,n);else if(t==="prelu")a=_S($e.PRELU,n);else if(t==="sigmoid")a=eo(ne.SIGMOID,n);else if(t==="leakyrelu")a=eo(ne.LEAKYRELU,n);else throw new Error(`Activation ${t} has not been implemented for the WebGPU backend.`);const i=De(n?4:1);let o="";return e?o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${a}
      }`:o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${a}
      }`,o}function dl(t,e){return`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(t,e,n=!1,s=!1,a=!1,r=1){N(t&&r===1||!t,()=>`transposeA ${t} is not compatible with component size ${r}`);const i=`
      ${t?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,o=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${De(r)} {
    var value = ${De(r)}(0.0);
    ${n&&a?i:`
    ${t?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${De(r)} {
    var value = ${De(r)}(0.0);
    ${o}
    return value;
  }
  `}function OS(t,e,n,s,a=!1,r=!1,i=!1,o=1){return`
  ${fO(n,s,a,r,i,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${De(o)}) {
    ${a&&r?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${dl(t,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const Hhe=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,jhe=(t,e,n,s)=>{if(t)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${n}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let a="",r="";for(let i=0;i<e;i++)a+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,r+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${a}
        for (var i = 0; i < ${n}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${r}
        }
      }`}};function Ax(t,e,n=!1,s=32,a=!1,r=32,i=!1){const o=e[1]*t[1],l=e[0]*t[0],u=n?o:s,c=n?s:o,h=u/e[0],d=s/e[1],p=t[1],f=t[0];return N((n&&h===4&&t[1]===4||!n&&(h===3||h===4))&&u%e[0]===0&&s%e[1]===0&&t[0]===4,()=>`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${t[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/t[0]}>, ${s}>;

  ${ae()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${p};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${p};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${a?"0":"i32(globalId.z)"};
    let batchA = ${a||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${a||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${a?`${Math.ceil(r/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${a?`i32(globalId.z) * ${r}`:"0"};

    var acc: array<vec4<f32>, ${p}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Hhe(n,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${jhe(n,h,p,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const nN=t=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,qhe=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function _x(t,e,n=!1,s=32,a=!1,r=32,i=!1,o=!1){const l=t[1]*e[1],u=t[0]*e[0],c=n?l:s,h=n?s:l;N(h%e[1]===0&&c%e[0]===0&&s%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],p=c/e[0],f=s/e[1],m=t[1],y=t[0],g=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${nN(n)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${y}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${y}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${y}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${y};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${y};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${nN(n)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${y}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${y}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${y}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${qhe(n)}
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${y}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${s}>;

    ${ae()} {
      let batch = ${a?"0":"i32(globalId.z)"};
      let batchA = ${a||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${a||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${a?`${Math.ceil(r/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${a?`i32(globalId.z) * ${r}`:"0"};

      var acc : array<array<f32, ${y}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const Xhe=t=>t?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Khe(t,e=!1){N(t[1]===1&&t[2]===1,()=>`A linear work group size is required. But got ${t}.`);const n=t[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${t[0]}>;

    ${ae()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${n} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Xhe(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n/4}; k++) {
          let rowB = t * ${n} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class Yhe{constructor(e,n,s=!1,a=!1,r=null,i=null,o=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=s?e[1]:e[2];if(this.isVec4=(u%4===0&&!s||n[1]%4===0&&s)&&n[2]%4===0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=n[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=Sce(n[1],u,n[2],s);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=r!=null,h=o!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=a,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(n[1],n[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,n,s){const a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=r;const i=e%a===0,o=n%r===0,l=s%this.tileInner===0;return[i,o,l]}getUserCode(){return`
      ${Vr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${OS(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Ax(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Khe(this.workgroupSize,this.transposeA):_x(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qhe(t){return`
    var<workgroup> sumValues : array<f32, ${t}>;
    ${ae()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${t}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${t/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class Zhe{constructor(e,n=!1,s=!1,a=null,r=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize);const o=a!=null,l=i!=null;o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=s,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${n}_${s}`}getUserCode(){return`
      ${Vr(this.activation,this.hasPreluActivationWeights)}
      ${OS(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Qhe(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jhe(t){const e=t[1],n=t[0],s=e>n?e:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${ae()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class ede{constructor(e,n,s,a=!1,r=!1,i=null,o=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const u=i!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${a}_${r}`}getUserCode(){return`
      ${Vr(this.activation,this.hasPreluActivationWeights)}
      ${OS(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Jhe(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tde{constructor(e,n,s=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,N(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const r=(s&&this.outputShape[1]%4===0||!s&&n%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=re(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],n],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.shaderKey=`matMulSplitK_${s}_${a}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${fO(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${De(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Hi("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Ax(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):_x(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class nde{constructor(e,n=null,s=null,a=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n!=null,this.hasPreluActivationWeights=a!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${Vr(this.activation,this.hasPreluActivationWeights)}
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${dl(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sde{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(t){const{backend:e,attrs:n}=t,{shape:s,value:a}=n;let{dtype:r}=n;if(r=r||Ko(a),r==="string"){const i=_t(r,L(s));return i.fill(a),e.makeTensorInfo(s,r,i)}else{const i=new sde(s),o=[{type:"float32",data:[a]}];return e.runWebGPUProgram(i,[],r,o)}}const ade={kernelName:Gg,backendName:"webgpu",kernelFunc:Zn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(t){const{inputs:e,attrs:n}=t,{x:s}=e,{shape:a}=n,r=L(s.shape),i=_w(a,r),o=L(i);return N(r===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${s.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),t.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const rde={kernelName:gp,backendName:"webgpu",kernelFunc:pe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ox({a:t,b:e,transposeA:n,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=L(m),x=L(y),w=Se(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);N(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[g,h,p]:[g,p,h],C=s?[x,f,d]:[x,d,f],$=pe({inputs:{x:t},backend:a,attrs:{shape:v}}),k=pe({inputs:{x:e},backend:a,attrs:{shape:C}}),T=[$,k],E=Math.max(g,x),O=[$,k],B=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[h]}];let W,V;const G=[E,p,f];let D=M().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(D<0){const P=M().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),j=P>0?P:a.thresholdToIncreaseWorkgroups,X=E*Math.ceil(p/32)*Math.ceil(f/32);X<=j||p<=8&&X<=j*2?E*p*f<=128?D=za.MatMulReduceProgram:E===1&&d>=2e3?D=za.MatMulSplitKProgram:D=za.MatMulSmallOutputSizeProgram:D=za.MatMulPackedProgram}switch(D){case za.MatMulReduceProgram:W=new Zhe(G,n,s,r,l,i);break;case za.MatMulSplitKProgram:{if(V=Zn({backend:a,attrs:{shape:G,value:0,dtype:t.dtype}}),W=new tde(G,d,n,s),r||l){V=a.runWebGPUProgram(W,O,t.dtype,B,V);const j=new nde(V.shape,r,l,i);let X=null;const Q=[V];r&&Q.push(r),i&&Q.push(i),l==="leakyrelu"&&(X=[{type:"float32",data:[o]}],j.uniforms+=" alpha : f32,");const ee=a.runWebGPUProgram(j,Q,V.dtype,X);T.push(V);const J=pe({inputs:{x:ee},backend:a,attrs:{shape:w}});T.push(ee);for(const se of T)a.disposeData(se.dataId);return J}break}case za.MatMulSmallOutputSizeProgram:W=new ede(v,C,G,n,s,r,l,i);break;case za.MatMulPackedProgram:const P=a.adapterInfo.isIntel();W=new Yhe(v,G,n,s,r,l,i,P);break;default:throw new Error(`Unsupported MatMulProgramType ${D}.`)}r&&O.push(r),i&&O.push(i),l==="leakyrelu"&&(B.push({type:"float32",data:[o]}),W.uniforms+=" alpha : f32,"),V=a.runWebGPUProgram(W,O,t.dtype,B,V);const H=pe({inputs:{x:V},backend:a,attrs:{shape:w}});T.push(V);for(const P of T)a.disposeData(P.dataId);return H}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ide(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return Ox({a,b:r,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const ode={kernelName:Yh,backendName:"webgpu",kernelFunc:ide};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sN{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Se(n,s),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${_S(this.op,!1)}
      }

      ${ae("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ng{constructor(e,n,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Se(n,s),this.dispatchLayout=ce(this.outputShape),this.op=e,this.useSharedMemoryWithA=n.length<=1&&s.length>1&&n[0]<128,this.useSharedMemoryWithB=s.length<=1&&n.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:n[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const a=n.length>0&&n[n.length-1]%4===0,r=s.length>0&&s[s.length-1]%4===0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(i2(s)||s[s.length-1]===1)||r&&(i2(n)||n[n.length-1]===1)?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const n=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${n}, b : ${n}) -> ${n} {
      ${_S(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const a=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${a}];`:`let a = sharedBuf[${a}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ae("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${r}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${ae("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${n}(getAByOutputCoords(coords));
           let b = ${n}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(t){const{inputs:e}=t,{x:n}=e;return t.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const lde={kernelName:ec,backendName:"webgpu",kernelFunc:gs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(t){const{inputs:e,backend:n}=t,{real:s,imag:a}=e,r=n.makeTensorInfo(s.shape,"complex64"),i=n.tensorMap.get(r.dataId),o=gs({inputs:{x:s},backend:n}),l=gs({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const ude={kernelName:Rg,backendName:"webgpu",kernelFunc:pl};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wc{constructor(e,n,s=""){this.variableNames=["A"],this.size=!0;const a=128;this.workgroupSize=[a,1,1],this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=n,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${n}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${eo(this.op,!1)}
      }
      ${ae("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function je({opType:t,cpuKernelImpl:e,dtype:n}){return({inputs:s,backend:a})=>{const{x:r}=s,i=a,o=n||r.dtype;if(i.shouldExecuteOnCPU([r])&&e!=null){const u=i.tensorMap.get(r.dataId),c=e(u.values,o);return i.makeTensorInfo(r.shape,o,c)}const l=new Wc(r.shape,t);return i.runWebGPUProgram(l,[r],o)}}function pn({opType:t,cpuKernelImpl:e,supportsComplex:n=!1,dtype:s}){return({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;if(n&&i.dtype==="complex64"){const h=l.tensorMap.get(i.dataId),d=l.tensorMap.get(o.dataId);let p,f;if(t!==$e.MUL)[p,f]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(y=>{const[g,x]=y,b={dataId:g.dataId,dtype:g.dtype,shape:i.shape},w={dataId:x.dataId,dtype:x.dtype,shape:o.shape},v=new ng(t,i.shape,o.shape);return l.runWebGPUProgram(v,[b,w],dn(g.dtype,x.dtype))});else{const y=new sN($e.COMPLEX_MULTIPLY_REAL,i.shape,o.shape),g=new sN($e.COMPLEX_MULTIPLY_IMAG,i.shape,o.shape),x=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];p=l.runWebGPUProgram(y,x,"float32"),f=l.runWebGPUProgram(g,x,"float32")}const m=pl({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}const u=s||dn(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([i,o]))&&e!=null){const h=l.tensorMap.get(i.dataId).values,d=l.tensorMap.get(o.dataId).values,p=i.dtype==="string"?Ia(h):h,f=i.dtype==="string"?Ia(d):d,[m,y]=e(i.shape,o.shape,p,f,u);return l.makeTensorInfo(y,u,m)}const c=new ng(t,i.shape,o.shape);return l.runWebGPUProgram(c,[i,o],u)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:cde,castImpl:hde,ceilImpl:dde,concatImpl:pde,equalImpl:fde,expImpl:mde,expm1Impl:gde,floorImpl:yde,floorDivImpl:xde,gatherNdImpl:bde,gatherV2Impl:wde,greaterEqualImpl:vde,greaterImpl:Sde,lessEqualImpl:Cde,lessImpl:$de,logImpl:Nde,maxImpl:kde,maximumImpl:Ide,minimumImpl:Tde,multiplyImpl:Ede,negImpl:Rde,notEqualImpl:Dde,prodImpl:Ade,rangeImpl:_de,rsqrtImpl:Ode,scatterImpl:Fde,simpleAbsImpl:zde,sliceImpl:Lde,stridedSliceImpl:Pde,stringNGramsImpl:Mde,subImpl:Bde,tileImpl:Vde,topKImpl:Ude,transposeImpl:Wde,uniqueImpl:e1e}=t_;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gde=je({opType:ne.ABS,cpuKernelImpl:zde}),Hde={kernelName:Td,backendName:"webgpu",kernelFunc:Gde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jde=je({opType:ne.ACOS}),qde={kernelName:Ou,backendName:"webgpu",kernelFunc:jde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xde=je({opType:ne.ACOSH}),Kde={kernelName:Fu,backendName:"webgpu",kernelFunc:Xde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yde=pn({opType:$e.ADD,cpuKernelImpl:cde,supportsComplex:!0}),Qde={kernelName:Yo,backendName:"webgpu",kernelFunc:Yde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zde{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((n,s)=>`T${s}`),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(a=>{e.push(`let v${a} = get${a}ByOutputCoords(coords);`)});const n=this.variableNames.map(a=>`v${a}`).join(" + ");return`
      ${ae("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${n});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jde(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return gs({inputs:{x:s[0]},backend:n});const a=s.map(o=>o.dtype).reduce((o,l)=>dn(o,l)),r=s.map(o=>o.shape),i=new Zde(r);return n.runWebGPUProgram(i,s,a)}const epe={kernelName:Ed,backendName:"webgpu",kernelFunc:Jde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tpe{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[n[a]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){N(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${ae()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class npe{constructor(e,n){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[n[a]];this.outputShape=s,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=n,this.shaderKey=`transpose_${n}`}getUserCode(){const e=Pt(this.outputShape.length),n=mO(this.newDim);return`
      ${ae("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${n}), uniforms.aShape)]);
          }
        }
      }
    `}}function mO(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=new Array(e);for(let s=0;s<t.length;s++)n[t[s]]=`coords.${Er(s)}`;return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{perm:r}=s,i=n,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[r[c]];if(n.shouldExecuteOnCPU([a])){const h=i.tensorMap.get(a.dataId).values,d=Wde(h,a.shape,a.dtype,r,l);return n.makeTensorInfo(l,a.dtype,d)}if(a.shape.length===2&&Ee(r,[1,0])){const c=new tpe(a.shape,r);return i.runWebGPUProgram(c,[a],a.dtype)}const u=new npe(a.shape,r);return i.runWebGPUProgram(u,[a],a.dtype)}const spe={kernelName:bo,backendName:"webgpu",kernelFunc:er};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ape{constructor(e,n,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[a]=Bt(this.inputShape,[1]);this.outputShape=a.length===0?[1]:a,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=n,this.shaderKey=`reduce_${n}`}getUserCode(){let e="",n="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,n="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",n="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",n="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",n="0.0");const a=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ae("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${a}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rpe={mean:"float32",all:"bool",any:"bool"};function fl(t,e,n,s,a){const r=t.shape.length,i=[],o=Ie(e,t.shape);let l=o;const u=tt(l,r);let c=t;u!=null&&(c=er({inputs:{x:t},attrs:{perm:u},backend:a}),l=dt(l.length,r),i.push(c)),Ht(s,l,r);const[h,d]=Bt(c.shape,l);let p=h;n&&(p=Ft(h,o));let f;if((s==="max"||s==="prod")&&a.shouldExecuteOnCPU([c])){const m=a.tensorMap.get(c.dataId).values;switch(s){case"max":const y=kde(m,L(d),p,t.dtype);f=a.makeTensorInfo(p,t.dtype,y);break;case"prod":const{outVals:g,outShape:x,outDtype:b}=Ade(c.shape,c.dtype,m,l);f=a.makeTensorInfo(x,b,g);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const m=L(d),g=L(c.shape)/m,x={windowSize:m,inSize:m,batchSize:g,outSize:1},b=rpe[s]||vy(t.dtype),w=[{type:"int32",data:[m]}],v=new ape(x,s,a.device.limits.maxComputeWorkgroupSizeX),C=a.runWebGPUProgram(v,[c],b,w);i.push(C),f=pe({inputs:{x:C},attrs:{shape:p},backend:a})}return i.forEach(m=>a.disposeData(m.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ipe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{keepDims:r,axis:i}=s;return fl(a,i,r,"all",n)}const ope={kernelName:Cg,backendName:"webgpu",kernelFunc:ipe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{keepDims:r,axis:i}=s;return fl(a,i,r,"any",n)}const upe={kernelName:$g,backendName:"webgpu",kernelFunc:lpe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gO{constructor(e,n,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const a=[n];this.op=s==="min"?"<":">";const[r,i]=Bt(e,a);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=ce(this.outputShape),L(i)<32?(this.type="plain",this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=re(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],n=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Er(this.inputShape.length-1)}`,s=()=>{let a="";if(this.outputShape.length===1)this.inputShape.length!==1&&(a+="outputCoords,");else for(let r=0;r<this.outputShape.length;r++)a+=`outputCoords.${Er(r)},`;return a};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${ae("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${n()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${ae("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${n()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=er({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=dt(i.length,l.shape.length)),Ht("argMax",[i[0]],l.shape.length);const c=new gO(l.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>n.disposeData(p.dataId)),d}const hpe={kernelName:Rd,backendName:"webgpu",kernelFunc:cpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=er({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=dt(i.length,l.shape.length)),Ht("argMin",[i[0]],l.shape.length);const c=new gO(l.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>n.disposeData(p.dataId)),d}const ppe={kernelName:Dd,backendName:"webgpu",kernelFunc:dpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fpe=je({opType:ne.ASIN}),mpe={kernelName:zu,backendName:"webgpu",kernelFunc:fpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gpe=je({opType:ne.ASINH}),ype={kernelName:Lu,backendName:"webgpu",kernelFunc:gpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xpe=je({opType:ne.ATAN}),bpe={kernelName:Pu,backendName:"webgpu",kernelFunc:xpe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wpe=pn({opType:$e.ATAN2}),vpe={kernelName:Bu,backendName:"webgpu",kernelFunc:wpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Spe=je({opType:ne.ATANH}),Cpe={kernelName:Mu,backendName:"webgpu",kernelFunc:Spe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $pe{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fd{constructor(e,n,s=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=s,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool2D_${n}_${s}_${a}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}class FS{constructor(e,n,s=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=s,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool3D_${n}_${s}_${a}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reductionIndices:r,keepDims:i}=s;return fl(a,r,i,"max",n)}const Npe={kernelName:np,backendName:"webgpu",kernelFunc:yO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{keepDims:r,axis:i}=s;return fl(a,i,r,"mean",n)}const kpe={kernelName:rp,backendName:"webgpu",kernelFunc:xO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(t,e,n,s){if(e.filterWidth===1&&e.filterHeight===1&&Ee(e.inShape,e.outShape))return gs({inputs:{x:t},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=t.shape.length,o=pe({inputs:{x:t},backend:s,attrs:{shape:[t.shape[i-3]*t.shape[i-2],t.shape[i-1]]}});let l;n==="avg"?l=xO({inputs:{x:o},backend:s,attrs:{axis:0,keepDims:!1}}):(N(n==="max",()=>`Invalid pool type ${n}`),l=yO({inputs:{x:o},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const u=pe({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(o.dataId),s.disposeData(l.dataId),u}let a;const r=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?a=new $pe(e):(n==="avg"?a=new fd(e,"avg"):(N(n==="max",()=>`Invalid pool type ${n}`),a=new fd(e,"max")),r.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(a,[t],t.dtype,r)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ipe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,c=Rn(a.shape,r,i,1,o,l);return bO(a,c,"avg",n)}const Tpe={kernelName:Ad,backendName:"webgpu",kernelFunc:Ipe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Epe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Os(a.shape,r,i,c,o,u,l),d=new FS(h,"avg"),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return n.runWebGPUProgram(d,[a],a.dtype,p)}const Rpe={kernelName:_d,backendName:"webgpu",kernelFunc:Epe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dpe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Ape{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _pe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Os(i.shape,o,l,1,u,c),d=new Ape(h),p=1/(h.filterDepth*h.filterHeight*h.filterWidth),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(d,[a],i.dtype,f)}const Ope={kernelName:kg,backendName:"webgpu",kernelFunc:_pe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fpe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r;pO([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rn(i.shape,o,l,1,u),h=new Dpe(c),d=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return n.runWebGPUProgram(h,[a],i.dtype,p)}const zpe={kernelName:Ng,backendName:"webgpu",kernelFunc:Fpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lpe(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r}=e,{transposeA:i,transposeB:o}=s;return Ox({a,b:r,transposeA:i,transposeB:o,backend:n})}const Ppe={kernelName:Od,backendName:"webgpu",kernelFunc:Lpe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mpe{constructor(e,n){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.rank=n.length,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Pt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Pt(this.rank),n=Bpe(this.rank);let s;return this.start.length===1?s=this.outputShape.map((r,i)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((r,i)=>`sourceLoc.${E1[i]} = uniforms.start.${Er(i)} + coords.${E1[i]};`),`
      ${ae("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${n}));
        }
      }
    `}}const E1=["x","y","z","w","u","v"];function Bpe(t){if(t===1)return"sourceLoc";if(t<=6)return E1.slice(0,t).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gc(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,size:i}=s,[o,l]=zp(a,r,i);if(qy(a,o,l),n.shouldExecuteOnCPU([a])||a.dtype==="string"){const h=n.tensorMap.get(a.dataId),d=Lde(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}if(L(l)===0)return n.makeTensorInfo(l,a.dtype,[]);const u=new Mpe(o,l),c=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[a],a.dtype,c)}const Vpe={kernelName:vp,backendName:"webgpu",kernelFunc:Gc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Upe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,crops:i}=s;N(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const o=r.reduce((x,b)=>x*b),l=sl(a.shape,r,o),u=al(l.length,r.length),c=rl(a.shape,r,o),h=Jy(i,r.length),d=ex(c,i,r.length),p=[],f=pe({inputs:{x:a},backend:n,attrs:{shape:l}}),m=er({inputs:{x:f},backend:n,attrs:{perm:u}}),y=pe({inputs:{x:m},backend:n,attrs:{shape:c}}),g=Gc({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(y),p.forEach(x=>n.disposeData(x.dataId)),g},Wpe={kernelName:Fd,backendName:"webgpu",kernelFunc:Upe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gpe=`
  fn bincount_write(index: i32, value: f32) {
    ${Hi("&result[index]","value","float32")}
  }
`,Hpe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class wO{constructor(e,n,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=n,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Hpe:Gpe}
  ${ae("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i}=s,o=L(a.shape),u=L(r.shape)>0,c=[i],h=r.dtype,d=Zn({backend:n,attrs:{shape:c,value:0,dtype:h}}),p=new wO([o],u),f=[{type:"int32",data:[i]}],m=u?[a,r]:[a];return n.runWebGPUProgram(p,m,h,f,d)}const qpe={kernelName:Ig,backendName:"webgpu",kernelFunc:jpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xpe{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${ae("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kpe(t){const{inputs:e,backend:n}=t,{s0:s,s1:a}=e;if(n.shouldExecuteOnCPU([s,a])){const c=n.tensorMap.get(s.dataId),h=n.tensorMap.get(a.dataId),d=c.values,p=h.values,f=Se(Array.from(d),Array.from(p));return n.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const r=L(s.shape),i=L(a.shape),o=Math.max(r,i),l=new Xpe(o),u=[{type:"int32",data:[r]},{type:"int32",data:[i]}];return n.runWebGPUProgram(l,[s,a],"int32",u)}const Ype={kernelName:Eg,backendName:"webgpu",kernelFunc:Kpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO=pn({opType:$e.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Dde}),Qpe={kernelName:up,backendName:"webgpu",kernelFunc:vO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.tensorMap.get(s.dataId);return gs({inputs:{x:a.complexTensorInfos.real},backend:n})}const Zpe={kernelName:ay,backendName:"webgpu",kernelFunc:Jp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jpe(t,e){const n=new Wc(t.shape,ne.TO_INT),s=e.runWebGPUProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R1(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return gs({inputs:{x:a},backend:n});const i=Gt(a.shape),o=R1({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=pl({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeData(o.dataId),l}if(a.dtype==="complex64"){const i=Jp({inputs:{input:a},backend:n}),o=R1({inputs:{x:i},backend:n,attrs:{dtype:r}});return n.disposeData(i.dataId),o}if(!Ow(a.dtype,r)){const i=gs({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(n.shouldExecuteOnCPU([a])){const i=n.tensorMap.get(a.dataId).values,[o,l,u]=hde(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}if(r==="int32")return Jpe(a,n);if(r==="bool"){const i=n.makeTensorInfo([],"bool",tn("bool",1)),l=vO({inputs:{a,b:i},backend:n});return n.disposeData(i.dataId),l}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const efe={kernelName:Vu,backendName:"webgpu",kernelFunc:R1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tfe=je({opType:ne.CEIL,cpuKernelImpl:dde}),nfe={kernelName:Uu,backendName:"webgpu",kernelFunc:tfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sfe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ae("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class afe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ae("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{clipValueMin:r,clipValueMax:i}=s;let o;const l=[{type:"float32",data:[r]},{type:"float32",data:[i]}];return L(a.shape)%4===0?o=new sfe(a.shape):o=new afe(a.shape),n.runWebGPUProgram(o,[a],a.dtype,l)}const ife={kernelName:Wu,backendName:"webgpu",kernelFunc:rfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ofe{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function lfe(t){const{inputs:e,backend:n}=t,{x:s}=e,a=n.tensorMap.get(s.dataId),r=new ofe(s.shape),i=[aN(s,a.complexTensorInfos.real),aN(s,a.complexTensorInfos.imag)];return n.runWebGPUProgram(r,i,i[0].dtype)}const ufe={kernelName:zd,backendName:"webgpu",kernelFunc:lfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cfe{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Qn(e,1),this.variableNames=e.map((n,s)=>`T${s}`),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let n=0;n<this.offsetLength;n++)this.uniforms+=`offset${n} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);const s=this.offsetLength,a=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${a})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ae("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fx(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.tensorMap.get(s.dataId);return gs({inputs:{x:a.complexTensorInfos.imag},backend:n})}const hfe={kernelName:Xg,backendName:"webgpu",kernelFunc:Fx};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mh(t,e,n){const s=t[0].dtype;if(s==="complex64"){const f=t.map(b=>Jp({inputs:{input:b},backend:n})),m=t.map(b=>Fx({inputs:{input:b},backend:n})),y=mh(f,e,n),g=mh(m,e,n),x=pl({inputs:{real:y,imag:g},backend:n});return f.forEach(b=>n.disposeData(b.dataId)),m.forEach(b=>n.disposeData(b.dataId)),n.disposeData(y.dataId),n.disposeData(g.dataId),x}let a=n.shouldExecuteOnCPU(t);if(s==="string"&&(a=!0),a){const f=t.map(v=>{const $=[-1,L(v.shape.slice(e))];return pe({inputs:{x:v},backend:n,attrs:{shape:$}})}),m=f.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),y=Qn(f.map(v=>v.shape),1),g=f[0].shape[0]===1,x=pde(m,y,s,g),b=Qn(t.map(v=>v.shape),e),w=n.makeTensorInfo(b,s,x);return f.forEach(v=>n.disposeData(v.dataId)),w}const r=n.device.limits.maxStorageBuffersPerShaderStage-1;if(t.length>r){const f=[];for(let y=0;y<t.length;y+=r){const g=t.slice(y,y+r);f.push(mh(g,e,n))}const m=mh(f,e,n);for(const y of f)n.disposeData(y.dataId);return m}const{tensors2D:i,outShape:o}=dfe(t,e,n),l=i.map(f=>f.shape),u=new cfe(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let f=1;f<h.length;f++)h[f]=h[f-1]+l[f][1],c.push({type:"int32",data:[h[f]]})}const d=n.runWebGPUProgram(u,i,i[0].dtype,c);i.forEach(f=>n.disposeData(f.dataId));const p=pe({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),p}function dfe(t,e,n){const s=Qn(t.map(r=>r.shape),e);return{tensors2D:t.map(r=>pe({inputs:{x:r},backend:n,attrs:{shape:[L(r.shape.slice(0,e)),L(r.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,r=Ie(a,e[0].shape)[0],i=e.map(u=>u.shape);Yy(i,r);const o=Qn(e.map(u=>u.shape),r);if(L(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>L(u.shape)>0);return l.length===1?gs({inputs:{x:l[0]},backend:n}):mh(l,r,n)}const pfe={kernelName:Ld,backendName:"webgpu",kernelFunc:SO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ffe(t,e,n,s,a=!1,r=null,i=!1,o=4,l=4,u=4){const c=T=>{switch(T){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},h=T=>{switch(T){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},d=t?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=t?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=t?"uniforms.xShape[1]":"uniforms.xShape[2]",m=t?"uniforms.xShape[2]":"uniforms.xShape[3]",y=t?"row":"col",g=t?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${De(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(o)}
      }
      return resData;`,b=t?e&&s?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${De(o)}(0.0);`:s&&n?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${De(o)}(0.0);`,w=`${h(l)}`,v=De(u),C=De(t?o:l),$=De(t?l:o);return`
      ${Vr(r,i,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${C} {
        ${t?b:w}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${$} {
        ${t?w:b}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${v}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${dl(a,r)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class mfe{constructor(e,n,s,a,r=!1,i=null,o=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=cO(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hO(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),o&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=r,this.activation=i,this.hasPreluActivationWeights=o,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=n%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=a%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Ax(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):_x(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),n=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${ffe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,n[0],n[1],n[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gfe{constructor(e,n=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n,this.activation=s,this.hasPreluActivationWeights=a,n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${Vr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${dl(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${ae("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yfe{constructor(e,n){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=n,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${ae("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${a};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${n}] && xCol >= 0) {
            value = ${r};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sg(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function xfe({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=n.dataFormat==="channelsLast",u=!l,c=!1,h=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=[];let p,f;if(h){const g=n.inHeight*n.inWidth*n.inChannels;p=pe({inputs:{x:t},backend:s,attrs:{shape:[1,n.batchSize,g]}}),f=pe({inputs:{x:e},backend:s,attrs:{shape:[1,g,n.outChannels]}})}else p=pe({inputs:{x:t},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=pe({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(d.push(p),d.push(f),r!=null){const g=sg(r.shape,l);g!=null&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:g}}),d.push(r))}if(a!=null){const g=sg(a.shape,l);g!=null&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:g}}),d.push(a))}const m=Ox({a:l?p:f,b:l?f:p,transposeA:u,transposeB:c,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),y=pe({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});d.push(m);for(const g of d)s.disposeData(g.dataId);return y}function bfe({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:h,strideHeight:d,padInfo:p,outWidth:f,outHeight:m,dilationWidth:y,dilationHeight:g,dataFormat:x}=n,b=x==="channelsLast",w=l*u*c,v=m*f,C=b?[n.batchSize,v,w]:[n.batchSize,w,v],$=new yfe(C,b),k=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[d,h]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],T=s.runWebGPUProgram($,[t],t.dtype,k),E=[];E.push(T);const O=pe({inputs:{x:e},backend:s,attrs:{shape:[1,w,-1]}});if(E.push(O),r!=null){const D=sg(r.shape,b);D!=null&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:D}}),E.push(r))}if(a!=null){const D=sg(a.shape,b);D!=null&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:D}}),E.push(a))}const V=Ox({a:b?T:O,b:b?O:T,transposeA:!b,transposeB:!1,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),G=pe({inputs:{x:V},backend:s,attrs:{shape:n.outShape}});E.push(V);for(const D of E)s.disposeData(D.dataId);return G}function CO({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=a!=null,u=r!=null,c=n.dataFormat==="channelsLast",h=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=M().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID")))return xfe({x:t,filter:e,convInfo:n,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i});const p=M().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>-1?p:s.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(M().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return bfe({x:t,filter:e,convInfo:n,backend:s,bias:a,preluActivationWeights:r,leakyreluAlpha:i,activation:o});let y;const g=[n.padInfo.top,n.padInfo.left],x=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(d)y=new gfe(n,l,o,u);else{const C=c?n.outHeight*n.outWidth:n.outChannels,$=c?n.outChannels:n.outHeight*n.outWidth,k=n.filterHeight*n.filterWidth*n.inChannels;x.push({type:"int32",data:[C]},{type:"int32",data:[$]},{type:"int32",data:[k]});const T=s.adapterInfo.isIntel();y=new mfe(n,C,$,k,l,o,u,T)}const b=[],w=[t,e];l&&(!c&&a.shape.length===1&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),b.push(a)),w.push(a)),u&&(!c&&r.shape.length===1&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),b.push(r)),w.push(r)),o==="leakyrelu"&&(x.push({type:"float32",data:[i]}),y.uniforms+=" alpha : f32,");const v=s.runWebGPUProgram(y,w,t.dtype,x);for(const C of b)s.disposeData(C.dataId);return v}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wfe(t){const{inputs:e,attrs:n,backend:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=n,h=bs(l),d=ht(a.shape,r.shape,i,u,o,c,!1,h);return CO({x:a,filter:r,convInfo:d,backend:s})}const vfe={kernelName:Pd,backendName:"webgpu",kernelFunc:wfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sfe{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,a=`
    ${ae()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${a}
    `:`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${n}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Cfe{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class $fe{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Nfe{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=bs(l),d=ht(a.shape,c,i,1,o,u,!1,h),p=new Cfe(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return n.runWebGPUProgram(p,[a,r],a.dtype,f)}const Ife={kernelName:Dg,backendName:"webgpu",kernelFunc:kfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tfe(t=4){const e=r=>{switch(r){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${r} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${De(t)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${De(t)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${t}];`}
      }
      return ${De(t)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${De(t)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${De(t)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(t)}
    }
    return ${De(t)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${De(t)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${t}] = value;
    }
  }`}class Efe{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,N(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=cO(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hO(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Ax(this.elementsPerThread,this.workgroupSize):_x(this.elementsPerThread,this.workgroupSize);return`
    ${Tfe(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rfe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=bs(u),d=ht(i,r.shape,o,1,l,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let f;if(M().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new Sfe(d);else{f=new Efe(d);const m=d.inHeight*d.inWidth,y=d.inChannels,g=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[y]},{type:"uint32",data:[g]})}return n.runWebGPUProgram(f,[a,r],"float32",p)}const Dfe={kernelName:Md,backendName:"webgpu",kernelFunc:Rfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Afe{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Oa(a.shape,r.shape,i,l,o),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new Afe(u),p=dn(a.dtype,r.dtype);return n.runWebGPUProgram(d,[a,r],p,h)}const Ofe={kernelName:Bd,backendName:"webgpu",kernelFunc:_fe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ffe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s,u=Oa(a.shape,l,i,1,o),c=new $fe(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(c,[a,r],r.dtype,h)}const zfe={kernelName:Ag,backendName:"webgpu",kernelFunc:Ffe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lfe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,pad:o,inputShape:l}=s,u=Oa(l,r.shape,i,1,o),c=new Nfe(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(c,[a,r],a.dtype,h)}const Pfe={kernelName:_g,backendName:"webgpu",kernelFunc:Lfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mfe=je({opType:ne.COS}),Bfe={kernelName:Gu,backendName:"webgpu",kernelFunc:Mfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vfe=je({opType:ne.COSH}),Ufe={kernelName:Hu,backendName:"webgpu",kernelFunc:Vfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wfe{constructor(e,n,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[r]=n;this.outputShape=[r,s[0],s[1],e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=a==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,n]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,a,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,o,l]=this.cropWidthBiggerThan1?[`(${n} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${n} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${n}`];return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${a};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${n} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gfe=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new Wfe(a.shape[3],r.shape,o,l),h=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[a,r,i],"float32",h)},Hfe={kernelName:Fg,backendName:"webgpu",kernelFunc:Gfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var md;(function(t){t.Prod="*",t.Sum="+"})(md||(md={}));class rN{constructor(e,n,s,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=a,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,n=this.op===md.Prod?"1.0":"0.0",s=this.exclusive?n:`getX(${iN(e,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1];let r="",i="";return this.exclusive?(r=this.reverse?`end != ${a-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${a}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${ae("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${oN(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${i};
           ${oN(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${iN(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function iN(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function oN(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(t,e,n,s,a,r){const i=e.shape.length,o=tt([s],i);let l=e;o!=null&&(l=er({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=dt(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=gs({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new rN(t,l.shape,!1,r),f=h,m=[{type:"float32",data:[d]}];h=n.runWebGPUProgram(p,[h],h.dtype,m),n.disposeData(f.dataId)}if(a){const d=new rN(t,l.shape,a,r),p=h,f=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(d,[h],h.dtype,f),n.disposeData(p.dataId)}if(o!=null){const d=sr(o),p=er({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeData(h.dataId),n.disposeData(l.dataId),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return $O(md.Prod,a,n,r,i,o)}const qfe={kernelName:Og,backendName:"webgpu",kernelFunc:jfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return $O(md.Sum,a,n,r,i,o)}const Kfe={kernelName:Vd,backendName:"webgpu",kernelFunc:Xfe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s,l=a.shape.length===1,c=L(r.shape)>0,h=r.dtype,d=l?[a.shape[0]]:[a.shape[0],a.shape[1]],p=l?[i]:[a.shape[0],i],f=Zn({backend:n,attrs:{shape:p,value:0,dtype:h}}),m=new wO(d,c,o),y=[{type:"int32",data:[i]}],g=c?[a,r]:[a];return n.runWebGPUProgram(m,g,h,y,f)}const Qfe={kernelName:zg,backendName:"webgpu",kernelFunc:Yfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zfe{constructor(e,n){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${n}`,this.dataFormat=n}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockSize:r,dataFormat:i}=s,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],c=i==="NHWC"?a.shape[3]:a.shape[1],h=l*r,d=u*r,p=c/(r*r),f=i==="NHWC"?[o,h,d,p]:[o,p,h,d],m=[{type:"int32",data:[r]}],y=new Zfe(f,i);return n.runWebGPUProgram(y,[a],a.dtype,m)}const eme={kernelName:Lg,backendName:"webgpu",kernelFunc:Jfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tme{constructor(e,n,s,a=!1,r=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=i,this.filterHeight=n,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,n=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return`
      ${Vr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${a}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${ae()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${a}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<n?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${n})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${dl(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NO{constructor(e,n=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=ce(r),this.dispatch=re(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),N(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=s,this.hasPreluActivation=a,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,n=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${Vr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${ae("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${n}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${dl(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kO{constructor(e,n=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=s,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Vr(this.activation,this.hasPreluActivation,!1,4)}

      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${dl(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=bs(l);let d=u;d==null&&(d=[1,1]);const p=ht(a.shape,r.shape,i,d,o,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast";let y;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?y=new tme(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?(y=new NO(p),f.push({type:"int32",data:[y.virtualWidth]})):(y=new kO(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(y,[a,r],a.dtype,f)}const sme={kernelName:Ud,backendName:"webgpu",kernelFunc:nme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ame{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class rme{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ime(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ht(a.shape,c,i,o,l,u,!0),d=new ame(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[a,r],"float32",p)}const ome={kernelName:Pg,backendName:"webgpu",kernelFunc:ime};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lme(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ht(c,r.shape,i,o,l,u,!0),d=new rme(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[a,r],a.dtype,p)}const ume={kernelName:Mg,backendName:"webgpu",kernelFunc:lme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cme{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hme(t){const{inputs:e,backend:n}=t,{x:s}=e,a=[...s.shape,...s.shape],r=L(s.shape),i=pe({inputs:{x:s},backend:n,attrs:{shape:[r]}}),o=new cme(r),l=n.runWebGPUProgram(o,[i],i.dtype),u=pe({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}const dme={kernelName:Bg,backendName:"webgpu",kernelFunc:hme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pme{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${ae("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Pi(a.shape,r.shape,i,o,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new pme(u);return n.runWebGPUProgram(d,[a,r],a.dtype,h)}const mme={kernelName:Wd,backendName:"webgpu",kernelFunc:fme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gme{constructor(e,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(e.outShape),this.dispatch=re(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${ae("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Hi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class yme{constructor(e,n,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(e.outShape),this.dispatch=re(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${ae("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Hi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,dy:i}=e,{strides:o,pad:l,dilations:u}=s,c=Pi(a.shape,r.shape,o,l,"NHWC",u),h=r.dtype,d=new yme(c,r.shape,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[L(c.outShape)]}],f=Zn({backend:n,attrs:{shape:r.shape,value:0,dtype:h}});return n.runWebGPUProgram(d,[a,r,i],h,p,f)}const bme={kernelName:Tm,backendName:"webgpu",kernelFunc:xme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,dy:i}=e,{strides:o,pad:l,dilations:u}=s,c=Pi(a.shape,r.shape,o,l,"NHWC",u),h=a.dtype,d=new gme(c,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[L(c.outShape)]}],f=Zn({backend:n,attrs:{shape:c.inShape,value:0,dtype:h}});return n.runWebGPUProgram(d,[a,r,i],h,p,f)}const vme={kernelName:Im,backendName:"webgpu",kernelFunc:wme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sme{constructor(e,n,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Cu.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=n,this.textureFormat=s,this.shaderKey=`draw_${n}_${s}`}getUserCode(){let e;const n=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${n};
        rgba[1] = ${n};
        rgba[2] = ${n};
      } else {
        rgba[d] = ${n};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${ae("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cme(t){const{inputs:e,backend:n,attrs:s}=t,{image:a}=e,{canvas:r,options:i}=s,[o,l]=a.shape.slice(0,2),{imageOptions:u}=i||{},c=(u==null?void 0:u.alpha)||1,h=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[o,l],p=new Sme(d,a.dtype,h);r.width=l,r.height=o;const f="webgpu";let m=r.getContext(f),y;m||(y=new OffscreenCanvas(l,o),m=y.getContext(f));const g=a.shape.length===3?a.shape[2]:1;m.configure({device:n.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const x="int32",b=n.makeTensorInfo(d,x),w=n.tensorMap.get(b.dataId);w.resource=m.getCurrentTexture(),w.external=!0;const v=[{type:"uint32",data:[g]},{type:"float32",data:[c]}];if(n.runWebGPUProgram(p,[a],x,v,b),y){const C=r.getContext("2d");if(!C)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");C.drawImage(y,0,0)}return n.disposeData(b.dataId),a}const $me={kernelName:oT,backendName:"webgpu",kernelFunc:Cme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO=pn({opType:$e.MUL,cpuKernelImpl:Ede,supportsComplex:!0}),Nme={kernelName:uc,backendName:"webgpu",kernelFunc:IO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return fl(a,r,i,"sum",n)}const kme={kernelName:Sp,backendName:"webgpu",kernelFunc:TO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ime(t){const{inputs:e,backend:n,attrs:s}=t,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=ox(a,r.length);ux(i.length,l,r);const{path:u,steps:c}=cx(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=lx(p,l[y]);let b;hx(g)?b=r[y]:(b=er({inputs:{x:r[y]},backend:n,attrs:{perm:g}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);Ee(b.shape,w)||(b=pe({inputs:{x:b},backend:n,attrs:{shape:w}}),f.push(b)),d===null?d=b:(d=IO({inputs:{a:b,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=TO({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeData(m.dataId);return d}const Tme={kernelName:Vg,backendName:"webgpu",kernelFunc:Ime};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eme=je({opType:ne.ELU}),Rme={kernelName:qu,backendName:"webgpu",kernelFunc:Eme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dme=t=>{const{inputs:e,backend:n}=t,{dy:s,y:a}=e,r=new ng($e.ELU_DER,s.shape,a.shape);return n.runWebGPUProgram(r,[s,a],s.dtype)},Ame={kernelName:Ug,backendName:"webgpu",kernelFunc:Dme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _me=pn({opType:$e.EQUAL,dtype:"bool",cpuKernelImpl:fde}),Ome={kernelName:Gd,backendName:"webgpu",kernelFunc:_me};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fme=je({opType:ne.ERF}),zme={kernelName:Xu,backendName:"webgpu",kernelFunc:Fme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lme=je({opType:ne.EXP,cpuKernelImpl:mde,dtype:"float32"}),Pme={kernelName:Ku,backendName:"webgpu",kernelFunc:Lme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D1(t){const{inputs:e,attrs:n,backend:s}=t,{dim:a}=n,{input:r}=e,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(N(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),pe({inputs:{x:r},backend:s,attrs:{shape:o}})}const Mme={kernelName:Hd,backendName:"webgpu",kernelFunc:D1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bme=je({opType:ne.EXPM1,cpuKernelImpl:gde}),Vme={kernelName:Yu,backendName:"webgpu",kernelFunc:Bme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lN{constructor(e,n){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(t,e,n){const s=n.tensorMap.get(t.dataId),a=L(t.shape),r=t.shape[t.shape.length-1],i=a/r,o=[],l=pe({inputs:{x:t},backend:n,attrs:{shape:[i,r]}});o.push(l);const u=l.shape,c=new lN("real",u),h=new lN("imag",u),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=e?2*Math.PI:-2*Math.PI,f=e?u[1]:1,m=[{type:"float32",data:[p]},{type:"float32",data:[f]}],y=n.runWebGPUProgram(c,d,"float32",m);o.push(y);const g=n.runWebGPUProgram(h,d,"float32",m);o.push(g);const x=pl({inputs:{real:y,imag:g},backend:n});o.push(x);const b=pe({inputs:{x},backend:n,attrs:{shape:t.shape}});return o.forEach(w=>n.disposeData(w.dataId)),b}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ume(t){const{inputs:e,backend:n}=t,{input:s}=e;return EO(s,!1,n)}const Wme={kernelName:Wg,backendName:"webgpu",kernelFunc:Ume};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gme{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hme={kernelName:Hg,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,a=new Gme(n.shape);return s.runWebGPUProgram(a,[n],n.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jme=je({opType:ne.FLOOR,cpuKernelImpl:yde}),qme={kernelName:Qu,backendName:"webgpu",kernelFunc:jme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xme=pn({opType:$e.FLOOR_DIV,cpuKernelImpl:xde,dtype:"int32"}),Kme={kernelName:Zu,backendName:"webgpu",kernelFunc:Xme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yme{constructor(e,n,s=!1){this.pixelsOpType=Cu.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[n,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ae("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qme={kernelName:Em,backendName:"webgpu",kernelFunc:Zme};let wl,Mb=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Zme(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:a}=e;const{numChannels:r}=s;if(a==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&a instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&a instanceof ImageBitmap,[c,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[h,c,r],p=M().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(u||l||f){let x;if(p)x=n.device.importExternalTexture({source:a});else{if(f){const W=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(wl==null||W!==Mb)&&(Mb=W,wl=document.createElement("canvas").getContext("2d",{willReadFrequently:Mb})),wl.canvas.width=c,wl.canvas.height=h,wl.drawImage(a,0,0,c,h),a=wl.canvas}const E=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,B=n.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",E);n.queue.copyExternalImageToTexture({source:a},{texture:B},[d[1],d[0]]),x=B}const b=L(d),w=xe(d),v=new Yme(d,r,p),C=[{type:"uint32",data:[b]},{type:"uint32",data:[r]},{type:"uint32",data:[...w]}],$=n.makeTensorInfo([h,c],"int32"),k=n.tensorMap.get($.dataId);k.resource=x;const T=n.runWebGPUProgram(v,[$],"int32",C);return n.disposeData($.dataId),T}const m=a.data;let y=m;if(r!=null&&r!==4){y=new Uint8Array(a.width*a.height*r);const x=m.length;let b=0;for(let w=0;w<x;w++)w%4<r&&(y[b++]=m[w])}const g=n.makeTensorInfo(d,"int32",new Int32Array(y));return n.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jme{constructor(e,n,s,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Se(e,n),Se(e,s),this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),a!=null&&(Se(e,a),this.variableNames.push("offset")),r!=null&&(Se(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let n="1.0";return this.scaleShape!=null&&(n="getScaleByOutputIndex(index)"),`
      ${ae("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${n};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ege={kernelName:jd,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s,scale:a,offset:r,mean:i,variance:o}=t,{varianceEpsilon:l}=e,u=n,c=[s,i,o];let h=null;r!=null&&(h=r.shape,c.push(r));let d=null;a!=null&&(d=a.shape,c.push(a));const p=new Jme(s.shape,i.shape,o.shape,h,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(p,c,s.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=bs(c),y=ht(a.shape,r.shape,l,h,u,d,!1,m);return CO({x:a,filter:r,convInfo:y,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:p})}const nge={kernelName:Qh,backendName:"webgpu",kernelFunc:tge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s;let f=c;f==null&&(f=[1,1]),N(sn(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=ht(a.shape,r.shape,l,f,u,h,!0),y=[a,r],g=i!=null,x=o!=null;g&&y.push(i),x&&y.push(o);const b=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let w;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(w=new NO(m,g,d,x),b.push({type:"int32",data:[w.virtualWidth]})):(w=new kO(m,g,d,x),b.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(b.push({type:"float32",data:[p]}),w.uniforms+=" alpha : f32,"),n.runWebGPUProgram(w,y,"float32",b)}const age={kernelName:Zh,backendName:"webgpu",kernelFunc:sge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rge{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Pt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ige(t){const{inputs:e,backend:n}=t,{params:s,indices:a}=e,r=a.shape,i=r[r.length-1],o=L(s.shape),[l,u,c,h]=jy(s,a),d=pe({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=pe({inputs:{x:s},backend:n,attrs:{shape:[L(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const x=n.readSync(a.dataId),b=n.bufferSync(s),w=bde(x,b,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,w.values)}const f=new rge(i,[u,c]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],y=n.runWebGPUProgram(f,[p,d],p.dtype,m),g=pe({inputs:{x:y},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(y.dataId),g}const oge={kernelName:jg,backendName:"webgpu",kernelFunc:ige};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lge{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=uge(this.aShape);return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function uge(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<t.length;s++)s===2?n.push("indexZ"):n.push(`${e[s]}`);return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,indices:r}=e,{axis:i,batchDims:o}=s,l=Ie(i,a.shape)[0],u=px(a,r,l,o),c=L(r.shape),h=[],d=pe({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=pe({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,r])){const b=n.tensorMap.get(p.dataId).values,w=ke(p.shape,p.dtype,b),C=n.tensorMap.get(d.dataId).values,$=ke(d.shape,d.dtype,C),k=wde($,w,f);return h.forEach(T=>n.disposeData(T.dataId)),n.makeTensorInfo(u.outputShape,k.dtype,k.values)}const m=new lge(d.shape,f),y=n.runWebGPUProgram(m,[d,p],d.dtype);h.push(y);const g=pe({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeData(x.dataId)),g}const cge={kernelName:qd,backendName:"webgpu",kernelFunc:RO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hge=pn({opType:$e.GREATER,cpuKernelImpl:Sde,dtype:"bool"}),dge={kernelName:Xd,backendName:"webgpu",kernelFunc:hge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pge=pn({opType:$e.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:vde}),fge={kernelName:Ju,backendName:"webgpu",kernelFunc:pge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mge(t){const{inputs:e,backend:n}=t,{input:s}=e;return EO(s,!0,n)}const gge={kernelName:qg,backendName:"webgpu",kernelFunc:mge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yge=je({opType:ne.IS_FINITE,dtype:"bool"}),xge={kernelName:tc,backendName:"webgpu",kernelFunc:yge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bge=je({opType:ne.IS_INF,dtype:"bool"}),wge={kernelName:nc,backendName:"webgpu",kernelFunc:bge};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vge=je({opType:ne.IS_NAN,dtype:"bool"}),Sge={kernelName:sc,backendName:"webgpu",kernelFunc:vge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{alpha:r}=s,i=[{type:"float32",data:[r]}],o=new Wc(a.shape,ne.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[a],"float32",i)}const $ge={kernelName:Kd,backendName:"webgpu",kernelFunc:Cge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nge=pn({opType:$e.LESS,dtype:"bool",cpuKernelImpl:$de}),kge={kernelName:Yd,backendName:"webgpu",kernelFunc:Nge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ige=pn({opType:$e.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Cde}),Tge={kernelName:Qd,backendName:"webgpu",kernelFunc:Ige};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ege{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rge(t){const{backend:e,attrs:n}=t,{start:s,stop:a,num:r}=n,i=(a-s)/(r-1),o=new Ege(r),l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return e.runWebGPUProgram(o,[],"float32",l)}const Dge={kernelName:Kg,backendName:"webgpu",kernelFunc:Rge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Age=je({opType:ne.LOG,cpuKernelImpl:Nde}),_ge={kernelName:ac,backendName:"webgpu",kernelFunc:Age};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oge=je({opType:ne.LOG1P}),Fge={kernelName:rc,backendName:"webgpu",kernelFunc:Oge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zge=pn({opType:$e.LOGICAL_AND,dtype:"bool"}),Lge={kernelName:Zd,backendName:"webgpu",kernelFunc:zge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pge=je({opType:ne.LOGICAL_NOT}),Mge={kernelName:Jd,backendName:"webgpu",kernelFunc:Pge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bge=pn({opType:$e.LOGICAL_OR}),Vge={kernelName:ep,backendName:"webgpu",kernelFunc:Bge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class Uge{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${DO}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class Wge{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,N(n<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${n}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${ae()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${DO}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s;let u;r>16?u=new Uge(a.shape):u=new Wge(a.shape,r);const c=[{type:"int32",data:[r]},{type:"float32",data:[i]},{type:"float32",data:[o]},{type:"float32",data:[l]}];return n.runWebGPUProgram(u,[a],a.dtype,c)}const Hge={kernelName:tp,backendName:"webgpu",kernelFunc:Gge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jge{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new jge(a.shape),d=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return n.runWebGPUProgram(h,[a,r,i],a.dtype,d)}const Xge={kernelName:Yg,backendName:"webgpu",kernelFunc:qge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kge=pn({opType:$e.MAX,cpuKernelImpl:Ide}),Yge={kernelName:ic,backendName:"webgpu",kernelFunc:Kge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,c=Rn(a.shape,r,i,1,o,l);return bO(a,c,"max",n)}const Zge={kernelName:sp,backendName:"webgpu",kernelFunc:Qge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Os(a.shape,r,i,c,o,u,l),d=new FS(h,"max"),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return n.runWebGPUProgram(d,[a],a.dtype,p)}const eye={kernelName:ap,backendName:"webgpu",kernelFunc:Jge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tye{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class nye{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sye(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Os(i.shape,o,l,h,u,c),p=new FS(d,"max",!0);let f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[i],"int32",f),y=new nye(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=n.runWebGPUProgram(y,[a,m],i.dtype,f);return n.disposeData(m.dataId),g}const aye={kernelName:Zg,backendName:"webgpu",kernelFunc:sye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rye(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r,output:i}=e,o=r;pO([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rn(o.shape,l,u,1,c,h),p=new fd(d,"max",!0);let f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[o],"int32",f),y=new tye(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=n.runWebGPUProgram(y,[a,m],o.dtype,f);return n.disposeData(m.dataId),g}const iye={kernelName:Qg,backendName:"webgpu",kernelFunc:rye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oye(t){const{inputs:e,backend:n,attrs:s}=t,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=s,{x:l}=e;N(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];N(sn(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=Rn(l.shape,a,r,u,i),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new fd(c,"max",!1);const p=n.runWebGPUProgram(d,[l],l.dtype,h);d=new fd(c,"max",!0,!0,o);const f=n.runWebGPUProgram(d,[l],"int32",h);return[p,f]}const lye={kernelName:Jg,backendName:"webgpu",kernelFunc:oye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return fl(a,r,i,"min",n)}const cye={kernelName:ip,backendName:"webgpu",kernelFunc:uye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hye=pn({opType:$e.MIN,cpuKernelImpl:Tde}),dye={kernelName:oc,backendName:"webgpu",kernelFunc:hye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pye{constructor(e,n,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((a,r)=>a[0]+e[r]+a[1]),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,n.map((a,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,n=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),s=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),a=e===1?"start":"start[i]",r=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",o=Pt(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let start = ${o}(${n});
          let end = ${o}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${a}) {
              ${i} = ${a} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${r}) {
              ${i} = (${r} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fye={kernelName:op,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{paddings:a,mode:r}=e,i=n,o=a.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new pye(s.shape,a,r);return i.runWebGPUProgram(l,[s],s.dtype,o)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mye=pn({opType:$e.MOD}),gye={kernelName:lc,backendName:"webgpu",kernelFunc:mye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yye{constructor(e,n){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xye{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${ae("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{dim:r}=s,i=pe({inputs:{x:a},backend:n,attrs:{shape:[L(a.shape)/a.shape[r],a.shape[r]]}}),o=new xye(i.shape),l=n.runWebGPUProgram(o,[i],a.dtype),u=pe({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}const bye={kernelName:Np,backendName:"webgpu",kernelFunc:AO};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wye(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s,l=o?a:AO({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new yye(u,r),d=[{type:"float32",data:[i]},{type:"int32",data:[c]}],p=n.runWebGPUProgram(h,[l],"int32",d);return o||n.disposeData(l.dataId),p}const vye={kernelName:ey,backendName:"webgpu",kernelFunc:wye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sye(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const r=n.tensorMap.get(s.dataId),[i,o]=Rde(r.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}const a=new Wc(s.shape,ne.NEG);return n.runWebGPUProgram(a,[s],s.dtype)}const Cye={kernelName:lp,backendName:"webgpu",kernelFunc:Sye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ye(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),{selectedIndices:h}=Gy(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Nye={kernelName:ty,backendName:"webgpu",kernelFunc:$ye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kye(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(a.dataId),h=n.readSync(r.dataId),d=i,p=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=Hy(c,h,d,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Iye={kernelName:ny,backendName:"webgpu",kernelFunc:kye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tye{constructor(e,n){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${ae("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eye(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s,u=L(a.shape),c=new Tye(u,i),h=pe({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=[{type:"float32",data:[o]},{type:"float32",data:[l]}],p=n.runWebGPUProgram(c,[h],r,d);n.disposeData(h.dataId);const f=[...a.shape,i],m=pe({inputs:{x:p},backend:n,attrs:{shape:f}});return n.disposeData(p.dataId),m}const Rye={kernelName:hp,backendName:"webgpu",kernelFunc:Eye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const a=Jp({inputs:{input:s},backend:n}),r=ag({inputs:{x:a},backend:n}),i=Fx({inputs:{input:s},backend:n}),o=ag({inputs:{x:i},backend:n}),l=pl({inputs:{real:r,imag:o},backend:n});return n.disposeData(a.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),l}else return Zn({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const Dye={kernelName:Tp,backendName:"webgpu",kernelFunc:ag};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=Jp({inputs:{input:s},backend:n}),r=_O({inputs:{x:a},backend:n}),i=Fx({inputs:{input:s},backend:n}),o=ag({inputs:{x:i},backend:n}),l=pl({inputs:{real:r,imag:o},backend:n});return n.disposeData(a.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),l}else return Zn({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const Aye={kernelName:cp,backendName:"webgpu",kernelFunc:_O};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ye(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s;if(e.length===1)return D1({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{ns(r,c.shape,"All tensors passed to stack must have matching shapes"),N(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=D1({inputs:{input:c},backend:n,attrs:{dim:a}});return o.push(h),h}),u=SO({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(c=>n.disposeData(c.dataId)),u}const Oye={kernelName:dp,backendName:"webgpu",kernelFunc:_ye};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(t,e=!1){const n=t.length,s=Pt(n),a=t.map((h,d)=>`uniforms.pad${d}[0]`).join(","),r=t.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${n>1?`[${d}]`:""}`).join(","),i=n>1?`${s}(${a})`:`${a}`,o=n>1?`${s}(${r})`:`${r}`,l=n>1?"any(paddedCoords < start)":"paddedCoords < start",u=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return`
        let start = ${i};
        let end = ${o};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}class Fye{constructor(e,n){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((s,a)=>s[0]+e[a]+s[1]),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),n.map((s,a)=>{this.uniforms+=` pad${a} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${OO(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zye=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,constantValue:i}=s;if(r.every(u=>Ee(u,[0,0])))return gs({inputs:{x:a},backend:n});if(L(a.shape)===0){const u=r.map((c,h)=>c[0]+a.shape[h]+c[1]);return Zn({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}const o=[{type:"float32",data:[i]}];r.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));const l=new Fye(a.shape,r);return n.runWebGPUProgram(l,[a],a.dtype,o)},Lye={kernelName:pp,backendName:"webgpu",kernelFunc:zye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pye=pn({opType:$e.POW}),Mye={kernelName:cc,backendName:"webgpu",kernelFunc:Pye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bye(t){const{inputs:e,backend:n}=t,{x:s,alpha:a}=e,r=new ng($e.PRELU,s.shape,a.shape);return n.runWebGPUProgram(r,[s,a],"float32")}const Vye={kernelName:fp,backendName:"webgpu",kernelFunc:Bye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return fl(a,r,i,"prod",n)}const Wye={kernelName:mp,backendName:"webgpu",kernelFunc:Uye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gye=t=>{const{backend:e,attrs:n}=t,{start:s,stop:a,step:r,dtype:i}=n,o=_de(s,a,r,i);return e.makeTensorInfo([o.length],i,o)},Hye={kernelName:sy,backendName:"webgpu",kernelFunc:Gye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jye=pn({opType:$e.DIV}),qye={kernelName:ju,backendName:"webgpu",kernelFunc:jye};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xye=je({opType:ne.RECIPROCAL}),Kye={kernelName:hc,backendName:"webgpu",kernelFunc:Xye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yye=je({opType:ne.RELU}),Qye={kernelName:dc,backendName:"webgpu",kernelFunc:Yye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zye=je({opType:ne.RELU6}),Jye={kernelName:pc,backendName:"webgpu",kernelFunc:Zye};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class exe{constructor(e,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,s,e[3]],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function txe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,size:i,halfPixelCenters:o}=s,[l,u]=i,c=r&&l>1?1:0,h=r&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[o?.5:0]}],f=new exe(a.shape,l,u);return n.runWebGPUProgram(f,[a],"float32",p)}const nxe={kernelName:xp,backendName:"webgpu",kernelFunc:txe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sxe{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeBilinearBackprop_${n}`}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,[,o,l]=a.shape,[,u,c]=r.shape,h=[i&&u>1?o-1:o,i&&c>1?l-1:l],d=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,y=1/f,g=Math.ceil(m)*2+2,x=Math.ceil(y)*2+2,b=new sxe(a.shape,i),w=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[x]}];return n.runWebGPUProgram(b,[r],r.dtype,w)}const rxe={kernelName:iy,backendName:"webgpu",kernelFunc:axe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ixe{constructor(e,n,s,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,s,e[3]],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey=`resizeNearest_${a}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oxe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=r&&l>1?1:0,h=r&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[r?.5:0]}],f=new ixe(a.shape,l,u,i);return n.runWebGPUProgram(f,[a],a.dtype,p)}const lxe={kernelName:yp,backendName:"webgpu",kernelFunc:oxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uxe{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeNearestNeigborBackprop_${n}`}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cxe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,[,o,l]=a.shape,[,u,c]=r.shape,h=[i&&u>1?o-1:o,i&&c>1?l-1:l],d=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,y=1/f,g=Math.ceil(m)*2+2,x=Math.ceil(y)*2+2,b=new uxe(a.shape,i),w=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[x]}];return n.runWebGPUProgram(b,[r],r.dtype,w)}const hxe={kernelName:ry,backendName:"webgpu",kernelFunc:cxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dxe{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dims:r}=s,i=a.shape.length;if(i===0)return gs({inputs:{x:a},backend:n});const o=a.shape,l=[1,1,1,1];o.forEach((y,g)=>{const x=g+4-i;l[x]=y});const u=Ie(r,a.shape),c=[0,0,0,0];u.forEach(y=>{const g=y+4-i;c[g]=1});const h=[{type:"int32",data:c}],d=pe({inputs:{x:a},backend:n,attrs:{shape:l}}),p=new dxe(l),f=n.runWebGPUProgram(p,[d],d.dtype,h);n.disposeData(d.dataId);const m=pe({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}const fxe={kernelName:bp,backendName:"webgpu",kernelFunc:pxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mxe{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof n=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ae("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gxe={kernelName:by,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:r,center:i}=e,o=n,l=new mxe(s.shape,r),[u,c]=Zy(i,s.shape[1],s.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(a)]},{type:"float32",data:[Math.cos(a)]}];return typeof r=="number"?h.push({type:"float32",data:[Number.parseFloat(r.toFixed(2))]}):h.push({type:"float32",data:r}),o.runWebGPUProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yxe=je({opType:ne.ROUND}),xxe={kernelName:fc,backendName:"webgpu",kernelFunc:yxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bxe=je({opType:ne.RSQRT,cpuKernelImpl:Ode}),wxe={kernelName:mc,backendName:"webgpu",kernelFunc:bxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oh{constructor(e,n,s,a,r,i,o,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=o,this.sumDupeIndices=l,this.dispatchLayout=ce(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=n>1,this.shaderKey=`scatter_${s}_${a}_${this.sliceDimGreaterThanOne}_${o}_${l}_${r.length}`;const u=Pt(r.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=a,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const n=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let a="",r="";this.dispatchLayout.x.length===1?(a="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(a="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const o=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${r}
      ${ae("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${n}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${io(this.type)}(${o});
          let flatIndex = getOutputIndexFromCoords(${a});

          ${this.sumDupeIndices?Hi("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vxe(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rr(r,a,i),d=[h/u,u];if(h===0)return n.makeTensorInfo(i,a.dtype);const p=pe({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=pe({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,y=Zn({backend:n,attrs:{shape:d,value:0,dtype:m}}),g=L(f.shape),x=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[g]}],b=new Oh(f.shape,o,p.shape.length,f.shape.length,c,d,m),w=n.runWebGPUProgram(b,[f,p],m,x,y),v=pe({inputs:{x:w},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(w.dataId),v}const Sxe={kernelName:oy,backendName:"webgpu",kernelFunc:vxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cxe{constructor(e,n){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=n,this.shaderKey=`search_sorted_${n}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $xe(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:a,values:r}=e,{side:i}=s,o=new Cxe([r.shape[0],r.shape[1]],i),l=[{type:"int32",data:[a.shape[1]]}];return n.runWebGPUProgram(o,[a,r],"int32",l)}const Nxe={kernelName:uy,backendName:"webgpu",kernelFunc:$xe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kxe{constructor(e,n,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,n;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)n="resRC",e="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],i=[];for(let o=0;o<this.outputShape.length;o++)i.push(`${a[o]}`),o<this.cRank&&r.push(`${a[o]}`);e=r.join(),n=i.join()}return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${n}));
          } else {
            setOutputAtIndex(index, getB(${n}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ixe(t){const{inputs:e,backend:n}=t,{condition:s,t:a,e:r}=e,i=new kxe(s.shape.length,a.shape,a.shape.length);return n.runWebGPUProgram(i,[s,a,r],dn(a.dtype,r.dtype))}const Txe={kernelName:wp,backendName:"webgpu",kernelFunc:Ixe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Exe=je({opType:ne.SELU}),Rxe={kernelName:gc,backendName:"webgpu",kernelFunc:Exe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dxe=je({opType:ne.SIGMOID}),Axe={kernelName:wc,backendName:"webgpu",kernelFunc:Dxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _xe=je({opType:ne.SIGN}),Oxe={kernelName:bc,backendName:"webgpu",kernelFunc:_xe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fxe=je({opType:ne.SIN}),zxe={kernelName:yc,backendName:"webgpu",kernelFunc:Fxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lxe=je({opType:ne.SINH}),Pxe={kernelName:xc,backendName:"webgpu",kernelFunc:Lxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mxe=je({opType:ne.SOFTPLUS}),Bxe={kernelName:vc,backendName:"webgpu",kernelFunc:Mxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vxe{constructor(e,n,s,a,r,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[r[l]];this.outputShape=o,this.newDim=r,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=n,this.uniforms+=`reshapedPaddedXShape : ${Pt(a.length)}, paddedXShapeStrides : ${Pt(i)}, `,s.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){const e=Pt(this.outputShape.length),n=mO(this.newDim);return`
      ${Qf(this.paddedXShape,"PaddedX")}
      ${ae("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${n}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${OO(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uxe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,paddings:i}=s;N(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const o=r.reduce((x,b)=>x*b),l=[[0,0]];l.push(...i);for(let x=1+r.length;x<a.shape.length;++x)l.push([0,0]);const u=l.map((x,b)=>x[0]+a.shape[b]+x[1]),c=sl(u,r,o,!1),h=al(c.length,r.length,!1),d=rl(u,r,o,!1),p=xe(u),f=new Vxe(a.shape,u,l,c,h,p.length),m=[{type:"int32",data:c},{type:"int32",data:p}];l.map(x=>m.push({type:"int32",data:[x[0],x[1]]}));const y=n.runWebGPUProgram(f,[a],a.dtype,m),g=pe({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeData(y.dataId),g},Wxe={kernelName:Cp,backendName:"webgpu",kernelFunc:Uxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gxe{constructor(e,n,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=ce([n]),this.dispatch=re(this.dispatchLayout,[n],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Hi("&result[outIndex]","value",this.type)}
      }
    }
  `}}class Hxe{constructor(e,n){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=ce(n),this.dispatch=re(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Hi("&result[segmentId]","1","int32")}
      }
    }
  `}}class jxe{constructor(e,n){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=n,this.dispatchLayout=ce(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(t,e,n,s=!1,a){const i=L(t.shape)/t.shape[0],o=t.dtype,l=L(e.shape),u=a.readSync(n.dataId),h=l>0?u[l-1]+1:0;let d;const p=t.shape.slice();p[0]=h;const f=l*i,m=Zn({backend:a,attrs:{shape:p,value:0,dtype:o}});d=new Gxe(p,f,o);let y=[{type:"int32",data:[i]},{type:"int32",data:[f]}];const g=a.runWebGPUProgram(d,[t,e,n],o,y,m);if(s)return g;const x=Zn({backend:a,attrs:{shape:[h],value:0,dtype:"int32"}});d=new Hxe(h,n.shape);const b=a.runWebGPUProgram(d,[n],"int32",null,x),w=Zn({backend:a,attrs:{shape:p,value:0,dtype:o}});d=new jxe(p,o),y=[{type:"int32",data:[i]}];const v=a.runWebGPUProgram(d,[g,b],o,y,w);return a.disposeData(g.dataId),a.disposeData(b.dataId),v}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qxe(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;return FO(s,a,r,!1,n)}const Xxe={kernelName:cy,backendName:"webgpu",kernelFunc:qxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kxe(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;return FO(s,a,r,!0,n)}const Yxe={kernelName:hy,backendName:"webgpu",kernelFunc:Kxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qxe{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*n[a];this.outputShape=s,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=Zxe(this.rank,"uniforms.");return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function Zxe(t,e=""){if(t>=5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`(resRC % ${e}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<t;a++)s.push(`(${n[a]} % ${e}aShape[${a}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reps:r}=s;if(n.shouldExecuteOnCPU([a])||a.dtype==="string"||a.shape.length>=5){const l=n.readSync(a.dataId),u=a.dtype==="string"?l.map(d=>$a(d)):l,c=ke(a.shape,a.dtype,u),h=Vde(c,r);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new Qxe(a.shape,r);return n.runWebGPUProgram(i,[a],a.dtype)}const Jxe={kernelName:Ic,backendName:"webgpu",kernelFunc:zS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ebe(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=rr(r,a,o),p=!1;if(r.dtype==="string"){const k=n.bufferSync(a),T=n.bufferSync(r),E=$a(n.readSync(i.dataId)[0]),O=Fde(k,T,o,d,c,u,l,h,E,p);return n.makeTensorInfo(o,O.dtype,O.values)}const f=[d/c,c],m=pe({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),y=r.shape.length?pe({inputs:{x:r},backend:n,attrs:{shape:[u,c]}}):gs({inputs:{x:r},backend:n}),g=y.dtype,x=n.makeTensorInfo([],g,Sn(1,g)),b=pe({inputs:{x:i},backend:n,attrs:{shape:Array(f.length).fill(1)}}),w=zS({inputs:{x:b},backend:n,attrs:{reps:f}}),v=L([u,c]),C=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[v]}];switch(u){case 0:break;case 1:{const k=new Oh([u,c],l,m.shape.length,y.shape.length,h,f,g,p);n.runWebGPUProgram(k,[y,m],g,C,w)}break;default:{const k=new Oh([u,c],l,m.shape.length,x.shape.length,h,f,g,p);n.runWebGPUProgram(k,[x,m],g,C,w)}{const k=new Oh([u,c],l,m.shape.length,y.shape.length,h,f,g);n.runWebGPUProgram(k,[y,m],g,C,w)}}const $=pe({inputs:{x:w},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(b.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),$}const tbe={kernelName:dy,backendName:"webgpu",kernelFunc:ebe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=Ie(i,a.shape)[0],l=dx(a,r,o),u=a.shape.length,c=new Array(u).fill(0),h=a.shape.slice();return l.map(d=>{const p=[...h];p[o]=d;const f=Gc({inputs:{x:a},backend:n,attrs:{begin:c,size:p}});return c[o]+=d,f})}const sbe={kernelName:$p,backendName:"webgpu",kernelFunc:nbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const abe=je({opType:ne.SQRT}),rbe={kernelName:Sc,backendName:"webgpu",kernelFunc:abe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ibe={kernelName:py,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e,a=new Wc(n.shape,ne.SQUARE);return s.runWebGPUProgram(a,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const obe=pn({opType:$e.SQUARED_DIFFERENCE}),lbe={kernelName:Cc,backendName:"webgpu",kernelFunc:obe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ube({inputs:t,attrs:e,backend:n}){const{x:s}=t,a=new Wc(s.shape,ne.STEP,"stepAlpha : f32,"),r=[{type:"float32",data:[e.alpha]}];return n.runWebGPUProgram(a,[s],s.dtype,r)}const cbe={kernelName:Tc,backendName:"webgpu",kernelFunc:ube};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hbe{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const n=Pt(this.outputShape.length);this.uniforms=`begin : ${n},  strides : ${n}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let n="";if(e===1)n="coords * uniforms.strides + uniforms.begin";else{let a=0;n=this.outputShape.map((r,i)=>(a++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${a-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ae("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${n}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:b,strides:w}=Ky(a.shape,r,i,o,l,u,c,h,d);let v;if(m)v=pe({inputs:{x:a},backend:n,attrs:{shape:f}});else if(y||g){N(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const C=Xy(x,b,w),$=Gc({inputs:{x:a},backend:n,attrs:{begin:x,size:C}});v=pe({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeData($.dataId)}else if(n.shouldExecuteOnCPU([a])){const $=n.readSync(a.dataId),k=ke(a.shape,a.dtype,$),T=Pde(p,k,w,x);v=n.makeTensorInfo(f,a.dtype,T.values)}else{const $=new hbe(p),k=[{type:"int32",data:x},{type:"int32",data:w}],T=n.runWebGPUProgram($,[a],a.dtype,k);v=pe({inputs:{x:T},backend:n,attrs:{shape:f}}),n.disposeData(T.dataId)}return v}const pbe={kernelName:my,backendName:"webgpu",kernelFunc:dbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fbe(t){const{inputs:e,backend:n,attrs:s}=t,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=Mde(d,p,a,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const mbe={kernelName:gy,backendName:"webgpu",kernelFunc:fbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gbe=pn({opType:$e.SUB,cpuKernelImpl:Bde,supportsComplex:!0}),ybe={kernelName:$c,backendName:"webgpu",kernelFunc:gbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xbe=je({opType:ne.TAN}),bbe={kernelName:Nc,backendName:"webgpu",kernelFunc:xbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wbe=je({opType:ne.TANH}),vbe={kernelName:kc,backendName:"webgpu",kernelFunc:wbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sbe(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:a,indices:r,updates:i}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=rr(i,r,a.shape),d=[h/u,u];if(h===0)return n.makeTensorInfo(a.shape,r.dtype);const p=[],f=pe({inputs:{x:r},backend:n,attrs:{shape:[l,o]}});p.push(f);const m=pe({inputs:{x:i},backend:n,attrs:{shape:[l,u]}});p.push(m);const y=pe({inputs:{x:a},backend:n,attrs:{shape:d}});p.push(y);const g=zS({inputs:{x:y},backend:n,attrs:{reps:Array(d.length).fill(1)}}),x=new Oh([l,u],o,f.shape.length,m.shape.length,c,d,a.dtype,!1),b=L([l,u]),w=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[b]}],v=n.runWebGPUProgram(x,[m,f],y.dtype,w,g);p.push(v);const C=pe({inputs:{x:v},backend:n,attrs:{shape:a.shape}});return p.forEach($=>n.disposeData($.dataId)),C}const Cbe={kernelName:ly,backendName:"webgpu",kernelFunc:Sbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $be{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ae("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class Nbe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ae("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(t,e){e!==null&&t.disposeData(e.dataId)}function uN(t){let e=1;for(;e<t;)e*=2;return e}function kbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{k:r,sorted:i}=s,o=a.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([a])){const v=n.readSync(a.dataId),[C,$]=Ude(v,o,a.dtype,r,i);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(r===0)return o[o.length-1]=0,[n.makeTensorInfo(o,a.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(l===1)return[a,Zn({attrs:{shape:o,dtype:"int32",value:0},backend:n})];const c=L(o)/l,h=pe({inputs:{x:a},attrs:{shape:[c,l]},backend:n}),d=uN(r),p=uN(l);let f=null;const m=()=>f===null?[h,h]:[h,f],y=(v,C,$)=>{const k=m(),T=new $be($),O=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[C]}],B=f;f=n.runWebGPUProgram(T,k,"int32",O),vl(n,B)};for(let v=1;v<d;v*=2){const C=v*2;for(let $=v;$>=1;$/=2)y(C,$,[c,p])}for(let v=p;v>d;v/=2){const C=m(),$=new Nbe([c,v/2]),T=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],E=f;f=n.runWebGPUProgram($,C,"int32",T),vl(n,E);const O=d/2,B=O*2;for(let W=O;W>=1;W/=2)y(B,W,f.shape)}let g=f;f=Gc({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,r]}}),vl(n,g);let x=RO({inputs:{x:h,indices:f},backend:n,attrs:{axis:1,batchDims:1}});vl(n,h);const b=o.slice(0,-1);b.push(r),g=f,f=pe({inputs:{x:f},attrs:{shape:b},backend:n}),vl(n,g);const w=x;return x=pe({inputs:{x},attrs:{shape:b},backend:n}),vl(n,w),[x,f]}const Ibe={kernelName:yy,backendName:"webgpu",kernelFunc:kbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tbe{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ae("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ebe(t){const{inputs:e,backend:n,attrs:s}=t,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=a.shape,[f,m]=u??[h,d],y=[c,f,m,p],g=new Tbe(y),x=i==="nearest"?1:2;let b;switch(o){case"constant":b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4;break;default:b=1;break}const w=[{type:"int32",data:[x]},{type:"int32",data:[b]},{type:"float32",data:[l]}];return n.runWebGPUProgram(g,[a,r],"float32",w)}const Rbe={kernelName:xy,backendName:"webgpu",kernelFunc:Ebe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dbe(t){const{inputs:e,backend:n,attrs:s}=t,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[r],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==r&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[r]=m;const y=Gc({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),g=pe({inputs:{x:y},backend:n,attrs:{shape:u}});f[m]=g,h.push(y)}return h.forEach(m=>n.disposeData(m.dataId)),f}const Abe={kernelName:kp,backendName:"webgpu",kernelFunc:Dbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _be{constructor(e,n,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=n,this.dispatchLayout=ce(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Hi("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Obe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,segmentIds:r}=e,{numSegments:i}=s,o=a.shape.length,l=[];let u=0;const c=tt([u],o);let h=a;c!=null&&(h=er({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(h),u=dt(1,o)[0]);const d=Hv(h.shape,u,i),p=L([h.shape[u]]),f=pe({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=a.dtype,y=[f.shape[0],i],g=Zn({backend:n,attrs:{shape:y,value:0,dtype:m}}),x=new _be(f.shape,y,m),b=[{type:"int32",data:[i]},{type:"int32",data:[L(f.shape)]}],w=n.runWebGPUProgram(x,[f,r],m,b,g),v=pe({inputs:{x:w},backend:n,attrs:{shape:d}});l.push(w);let C=v;if(c!=null){l.push(v);const $=sr(c);C=er({inputs:{x:C},backend:n,attrs:{perm:$}})}return l.forEach($=>n.disposeData($.dataId)),C}const Fbe={kernelName:Ip,backendName:"webgpu",kernelFunc:Obe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zbe=[ode,Hde,qde,Kde,Qde,epe,ope,upe,hpe,ppe,mpe,ype,bpe,vpe,Cpe,Tpe,Rpe,Ope,zpe,Ppe,Wpe,qpe,Ype,efe,nfe,ife,ude,ufe,pfe,vfe,Ife,Dfe,Ofe,zfe,Pfe,Bfe,Ufe,Hfe,qfe,Kfe,Qfe,eme,ome,ume,sme,dme,mme,bme,vme,$me,Tme,Rme,Ame,Ome,zme,Pme,Mme,Vme,Wme,ade,Hme,Qme,qme,Kme,ege,nge,age,oge,cge,dge,fge,lde,gge,hfe,xge,wge,Sge,$ge,kge,Tge,Dge,Fge,_ge,Lge,Mge,Vge,Hge,Xge,Npe,Yge,Zge,iye,eye,aye,lye,kpe,cye,dye,fye,gye,vye,Nme,Cye,Nye,Iye,Qpe,Rye,Aye,Oye,Lye,Mye,Vye,Wye,Hye,Zpe,qye,Kye,Qye,Jye,rde,nxe,rxe,lxe,hxe,fxe,gxe,xxe,wxe,Sxe,Nxe,Txe,Rxe,Axe,Oxe,zxe,Pxe,Vpe,cbe,pbe,mbe,bye,Bxe,Wxe,Xxe,Yxe,tbe,sbe,rbe,ibe,lbe,ybe,kme,bbe,vbe,Cbe,Jxe,Ibe,Rbe,spe,Abe,Fbe,Dye];for(const t of zbe)jw(t);const Lbe=t=>Te.jsxs("div",{className:"wrapper",...t,children:[Te.jsx("div",{className:"spinner"}),Te.jsx("p",{children:t.children})]}),Pbe=({imageRef:t,cameraRef:e,videoRef:n})=>{const[s,a]=mn.useState(null),r=mn.useRef(null),i=mn.useRef(null),o=()=>{const u=t.current.src;t.current.src="#",URL.revokeObjectURL(u),a(null),r.current.value="",t.current.style.display="none"},l=()=>{const u=n.current.src;n.current.src="",URL.revokeObjectURL(u),a(null),i.current.value="",n.current.style.display="none"};return Te.jsxs("div",{className:"btn-container",children:[Te.jsx("input",{type:"file",accept:"image/*",style:{display:"none"},onChange:u=>{const c=URL.createObjectURL(u.target.files[0]);t.current.src=c,t.current.style.display="block",a("image")},ref:r}),Te.jsxs("button",{onClick:()=>{s===null?r.current.click():s==="image"?o():alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:[s==="image"?"Fermer":"Ouvrir"," Image"]}),Te.jsx("input",{type:"file",accept:"video/*",style:{display:"none"},onChange:u=>{s==="image"&&o();const c=URL.createObjectURL(u.target.files[0]);n.current.src=c,n.current.addEventListener("ended",()=>l()),n.current.style.display="block",a("video")},ref:i}),Te.jsxs("button",{onClick:()=>{s===null||s==="image"?i.current.click():s==="video"?l():alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:[s==="video"?"Fermer":"Ouvrir"," Video"]})]})},Mbe=({detectionCounts:t={}})=>{const e=Object.entries(t).sort(([,a],[,r])=>r-a).map(([a,r])=>({className:a,count:r})),n=5,s=[];for(let a=0;a<Math.min(e.length,n);a++)s.push(e[a]);for(;s.length<n;)s.push({className:"",count:0,isEmpty:!0});return Te.jsxs("div",{className:"detection-table-container",children:[Te.jsx("h3",{children:"Detection Results"}),Te.jsx("div",{className:"detection-table-wrapper",children:Te.jsxs("table",{className:"detection-table",children:[Te.jsx("thead",{children:Te.jsxs("tr",{children:[Te.jsx("th",{children:"Object Class"}),Te.jsx("th",{children:"Count"})]})}),Te.jsx("tbody",{children:s.map(({className:a,count:r,isEmpty:i},o)=>Te.jsxs("tr",{className:i?"empty-row":"",children:[Te.jsx("td",{className:"class-name",children:!i&&Te.jsx("span",{className:"class-label",children:a})}),Te.jsx("td",{className:"count",children:!i&&Te.jsx("span",{className:"count-badge",children:r})})]},i?`empty-${o}`:a))})]})}),Te.jsxs("div",{className:"detection-summary",children:[Te.jsxs("p",{children:["Total objects detected: ",Te.jsx("strong",{children:e.reduce((a,{count:r})=>a+r,0)})]}),Te.jsxs("p",{children:["Unique classes: ",Te.jsx("strong",{children:e.length})]})]})]})},LS=["person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"],Bbe=(t,e,n,s,a,r=.45)=>{const i=t.getContext("2d");i.clearRect(0,0,i.canvas.width,i.canvas.height);const o=new A1,l=`${Math.max(Math.round(Math.max(i.canvas.width,i.canvas.height)/40),14)}px Arial`;i.font=l,i.textBaseline="top";for(let u=0;u<n.length;++u){if(n[u]<r)continue;const c=LS[s[u]],h=o.get(s[u]),d=(n[u]*100).toFixed(1);let[p,f,m,y]=e.slice(u*4,(u+1)*4);f*=a[0],y*=a[0],p*=a[1],m*=a[1];const g=y-f,x=m-p;i.fillStyle=A1.hexToRgba(h,.2),i.fillRect(f,p,g,x),i.strokeStyle=h,i.lineWidth=Math.max(Math.min(i.canvas.width,i.canvas.height)/200,2.5),i.strokeRect(f,p,g,x),i.fillStyle=h;const b=i.measureText(c+" - "+d+"%").width,w=parseInt(l,10),v=p-(w+i.lineWidth);i.fillRect(f-1,v<0?0:v,b+i.lineWidth,w+i.lineWidth),i.fillStyle="#ffffff",i.fillText(c+" - "+d+"%",f-1,v<0?0:v)}};class A1{constructor(){Px(this,"get",e=>this.palette[Math.floor(e)%this.n]);this.palette=["#FF3838","#FF9D97","#FF701F","#FFB21D","#CFD231","#48F90A","#92CC17","#3DDB86","#1A9334","#00D4BB","#2C99A8","#00C2FF","#344593","#6473FF","#0018EC","#8438FF","#520085","#CB38FF","#FF95C8","#FF37C7"],this.n=this.palette.length}}Px(A1,"hexToRgba",(e,n)=>{const s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return s?`rgba(${[parseInt(s[1],16),parseInt(s[2],16),parseInt(s[3],16)].join(", ")}, ${n})`:null});const Vbe=LS.length,Ube=(t,e,n)=>{let s,a;return[U(()=>{const i=aH(t),[o,l]=i.shape.slice(0,2),u=Math.max(l,o),c=i.pad([[0,u-o],[0,u-l],[0,0]]);return s=u/l,a=u/o,na.resizeBilinear(c,[e,n]).div(255).expandDims(0)}),s,a]},_1=async(t,e,n,s=()=>{},a=.45)=>{const[r,i]=e.inputShape.slice(1,3);Wn().startScope();const[o,l,u]=Ube(t,r,i),c=e.net.execute(o),h=c.transpose([0,2,1]),d=U(()=>{const w=h.slice([0,0,2],[-1,-1,1]),v=h.slice([0,0,3],[-1,-1,1]),C=he(h.slice([0,0,0],[-1,-1,1]),ge(w,2)),$=he(h.slice([0,0,1],[-1,-1,1]),ge(v,2));return Mt([$,C,K($,v),K(C,w)],2).squeeze()}),[p,f]=U(()=>{const w=h.slice([0,0,4],[-1,-1,Vbe]).squeeze(0);return[w.max(1),w.argMax(1)]}),m=await na.nonMaxSuppressionAsync(d,p,5e3,.45,a),y=d.gather(m,0).dataSync(),g=p.gather(m,0).dataSync(),x=f.gather(m,0).dataSync(),b={};for(let w=0;w<g.length;++w)if(g[w]>=a){const v=LS[x[w]];b[v]=(b[v]||0)+1}return Bbe(n,y,g,x,[l,u],a),_e([c,h,d,p,f,m]),s(b),Wn().endScope(),b},_f=(t,e,n,s=.45,a=()=>{})=>{const r=async()=>{if(t.videoWidth===0&&t.srcObject===null){const i=n.getContext("2d");i.clearRect(0,0,i.canvas.width,i.canvas.height);return}_1(t,e,n,i=>{a(i),requestAnimationFrame(r)},s)};r()};RP("webgpu");const Wbe=()=>{const[t,e]=mn.useState({loading:!0,progress:0}),[n,s]=mn.useState({net:null,inputShape:[1,0,0,3]}),[a,r]=mn.useState("yolo11n"),[i,o]=mn.useState(.45),[l,u]=mn.useState(null),[c,h]=mn.useState({}),d=mn.useRef(null),p=mn.useRef(null),f=mn.useRef(null),m=mn.useRef(null);return mn.useEffect(()=>{DP().then(async()=>{e({loading:!0,progress:0});const y=await VX(`${window.location.origin}${window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/"))}/${a}_web_model/model.json`,{onProgress:b=>{e({loading:!0,progress:b})}}),g=Kn(y.inputs[0].shape),x=y.execute(g);e({loading:!1,progress:1}),s({net:y,inputShape:y.inputs[0].shape}),_e([x,g])})},[a]),mn.useEffect(()=>{!t.loading&&n.net&&l&&(l==="image"&&d.current&&d.current.src!=="#"?_1(d.current,n,m.current,y=>{h(y)},i):l==="camera"&&p.current&&p.current.videoWidth>0?_f(p.current,n,m.current,i,h):l==="video"&&f.current&&f.current.videoWidth>0&&_f(f.current,n,m.current,i,h))},[i,t.loading,n,l]),Te.jsxs("div",{className:"App",children:[t.loading&&Te.jsxs(Lbe,{children:["Chargement du modèle en cours... ",(t.progress*100).toFixed(2),"%"]}),Te.jsxs("div",{className:"header",children:[Te.jsx("h1",{children:"Modèle d'intelligence artificielle de détection d'objets"}),Te.jsxs("div",{className:"confidence-control",children:[Te.jsxs("label",{htmlFor:"confidence-slider",children:["Seuil de confiance: ",(i*100).toFixed(0),"%"]}),Te.jsx("input",{id:"confidence-slider",type:"range",min:"0.01",max:"0.9",step:"0.01",value:i,onChange:y=>o(parseFloat(y.target.value)),className:"confidence-slider"})]})]}),Te.jsxs("div",{className:"content",children:[Te.jsx("img",{src:"#",ref:d,onLoad:()=>{u("image"),_1(d.current,n,m.current,y=>{h(y)},i)}}),Te.jsx("video",{autoPlay:!0,muted:!0,ref:p,onPlay:()=>{u("camera"),_f(p.current,n,m.current,i,h)}}),Te.jsx("video",{autoPlay:!0,muted:!0,ref:f,onPlay:()=>{u("video"),_f(f.current,n,m.current,i,h)}}),Te.jsx("canvas",{width:n.inputShape[1],height:n.inputShape[2],ref:m})]}),Te.jsx(Pbe,{imageRef:d,cameraRef:p,videoRef:f}),Te.jsx(Mbe,{detectionCounts:c})]})};BL.createRoot(document.getElementById("root")).render(Te.jsx(mn.StrictMode,{children:Te.jsx(Wbe,{})}));
