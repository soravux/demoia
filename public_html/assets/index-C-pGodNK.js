var HO=Object.defineProperty;var jO=(t,e,n)=>e in t?HO(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var Pb=(t,e,n)=>jO(t,typeof e!="symbol"?e+"":e,n);function qO(t,e){for(var n=0;n<e.length;n++){const s=e[n];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in t)){const r=Object.getOwnPropertyDescriptor(s,a);r&&Object.defineProperty(t,a,r.get?r:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=n(a);fetch(a.href,r)}})();var Uo=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function XO(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function KO(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(s){var a=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,a.get?a:{enumerable:!0,get:function(){return t[s]}})}),n}var pN={exports:{}},rg={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var YO=Symbol.for("react.transitional.element"),QO=Symbol.for("react.fragment");function fN(t,e,n){var s=null;if(n!==void 0&&(s=""+n),e.key!==void 0&&(s=""+e.key),"key"in e){n={};for(var a in e)a!=="key"&&(n[a]=e[a])}else n=e;return e=n.ref,{$$typeof:YO,type:t,key:s,ref:e!==void 0?e:null,props:n}}rg.Fragment=QO;rg.jsx=fN;rg.jsxs=fN;pN.exports=rg;var Te=pN.exports,mN={exports:{}},ze={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var F1=Symbol.for("react.transitional.element"),ZO=Symbol.for("react.portal"),JO=Symbol.for("react.fragment"),eF=Symbol.for("react.strict_mode"),tF=Symbol.for("react.profiler"),nF=Symbol.for("react.consumer"),sF=Symbol.for("react.context"),aF=Symbol.for("react.forward_ref"),rF=Symbol.for("react.suspense"),iF=Symbol.for("react.memo"),gN=Symbol.for("react.lazy"),MS=Symbol.iterator;function oF(t){return t===null||typeof t!="object"?null:(t=MS&&t[MS]||t["@@iterator"],typeof t=="function"?t:null)}var yN={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},bN=Object.assign,xN={};function $u(t,e,n){this.props=t,this.context=e,this.refs=xN,this.updater=n||yN}$u.prototype.isReactComponent={};$u.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};$u.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function wN(){}wN.prototype=$u.prototype;function z1(t,e,n){this.props=t,this.context=e,this.refs=xN,this.updater=n||yN}var L1=z1.prototype=new wN;L1.constructor=z1;bN(L1,$u.prototype);L1.isPureReactComponent=!0;var BS=Array.isArray,At={H:null,A:null,T:null,S:null},vN=Object.prototype.hasOwnProperty;function P1(t,e,n,s,a,r){return n=r.ref,{$$typeof:F1,type:t,key:e,ref:n!==void 0?n:null,props:r}}function lF(t,e){return P1(t.type,e,void 0,void 0,void 0,t.props)}function M1(t){return typeof t=="object"&&t!==null&&t.$$typeof===F1}function uF(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var VS=/\/+/g;function Mb(t,e){return typeof t=="object"&&t!==null&&t.key!=null?uF(""+t.key):e.toString(36)}function US(){}function cF(t){switch(t.status){case"fulfilled":return t.value;case"rejected":throw t.reason;default:switch(typeof t.status=="string"?t.then(US,US):(t.status="pending",t.then(function(e){t.status==="pending"&&(t.status="fulfilled",t.value=e)},function(e){t.status==="pending"&&(t.status="rejected",t.reason=e)})),t.status){case"fulfilled":return t.value;case"rejected":throw t.reason}}throw t}function Sl(t,e,n,s,a){var r=typeof t;(r==="undefined"||r==="boolean")&&(t=null);var i=!1;if(t===null)i=!0;else switch(r){case"bigint":case"string":case"number":i=!0;break;case"object":switch(t.$$typeof){case F1:case ZO:i=!0;break;case gN:return i=t._init,Sl(i(t._payload),e,n,s,a)}}if(i)return a=a(t),i=s===""?"."+Mb(t,0):s,BS(a)?(n="",i!=null&&(n=i.replace(VS,"$&/")+"/"),Sl(a,e,n,"",function(u){return u})):a!=null&&(M1(a)&&(a=lF(a,n+(a.key==null||t&&t.key===a.key?"":(""+a.key).replace(VS,"$&/")+"/")+i)),e.push(a)),1;i=0;var o=s===""?".":s+":";if(BS(t))for(var l=0;l<t.length;l++)s=t[l],r=o+Mb(s,l),i+=Sl(s,e,n,r,a);else if(l=oF(t),typeof l=="function")for(t=l.call(t),l=0;!(s=t.next()).done;)s=s.value,r=o+Mb(s,l++),i+=Sl(s,e,n,r,a);else if(r==="object"){if(typeof t.then=="function")return Sl(cF(t),e,n,s,a);throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.")}return i}function tf(t,e,n){if(t==null)return t;var s=[],a=0;return Sl(t,s,"","",function(r){return e.call(n,r,a++)}),s}function dF(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var WS=typeof reportError=="function"?reportError:function(t){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof t=="object"&&t!==null&&typeof t.message=="string"?String(t.message):String(t),error:t});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",t);return}console.error(t)};function hF(){}ze.Children={map:tf,forEach:function(t,e,n){tf(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return tf(t,function(){e++}),e},toArray:function(t){return tf(t,function(e){return e})||[]},only:function(t){if(!M1(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};ze.Component=$u;ze.Fragment=JO;ze.Profiler=tF;ze.PureComponent=z1;ze.StrictMode=eF;ze.Suspense=rF;ze.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=At;ze.act=function(){throw Error("act(...) is not supported in production builds of React.")};ze.cache=function(t){return function(){return t.apply(null,arguments)}};ze.cloneElement=function(t,e,n){if(t==null)throw Error("The argument must be a React element, but you passed "+t+".");var s=bN({},t.props),a=t.key,r=void 0;if(e!=null)for(i in e.ref!==void 0&&(r=void 0),e.key!==void 0&&(a=""+e.key),e)!vN.call(e,i)||i==="key"||i==="__self"||i==="__source"||i==="ref"&&e.ref===void 0||(s[i]=e[i]);var i=arguments.length-2;if(i===1)s.children=n;else if(1<i){for(var o=Array(i),l=0;l<i;l++)o[l]=arguments[l+2];s.children=o}return P1(t.type,a,void 0,void 0,r,s)};ze.createContext=function(t){return t={$$typeof:sF,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null},t.Provider=t,t.Consumer={$$typeof:nF,_context:t},t};ze.createElement=function(t,e,n){var s,a={},r=null;if(e!=null)for(s in e.key!==void 0&&(r=""+e.key),e)vN.call(e,s)&&s!=="key"&&s!=="__self"&&s!=="__source"&&(a[s]=e[s]);var i=arguments.length-2;if(i===1)a.children=n;else if(1<i){for(var o=Array(i),l=0;l<i;l++)o[l]=arguments[l+2];a.children=o}if(t&&t.defaultProps)for(s in i=t.defaultProps,i)a[s]===void 0&&(a[s]=i[s]);return P1(t,r,void 0,void 0,null,a)};ze.createRef=function(){return{current:null}};ze.forwardRef=function(t){return{$$typeof:aF,render:t}};ze.isValidElement=M1;ze.lazy=function(t){return{$$typeof:gN,_payload:{_status:-1,_result:t},_init:dF}};ze.memo=function(t,e){return{$$typeof:iF,type:t,compare:e===void 0?null:e}};ze.startTransition=function(t){var e=At.T,n={};At.T=n;try{var s=t(),a=At.S;a!==null&&a(n,s),typeof s=="object"&&s!==null&&typeof s.then=="function"&&s.then(hF,WS)}catch(r){WS(r)}finally{At.T=e}};ze.unstable_useCacheRefresh=function(){return At.H.useCacheRefresh()};ze.use=function(t){return At.H.use(t)};ze.useActionState=function(t,e,n){return At.H.useActionState(t,e,n)};ze.useCallback=function(t,e){return At.H.useCallback(t,e)};ze.useContext=function(t){return At.H.useContext(t)};ze.useDebugValue=function(){};ze.useDeferredValue=function(t,e){return At.H.useDeferredValue(t,e)};ze.useEffect=function(t,e){return At.H.useEffect(t,e)};ze.useId=function(){return At.H.useId()};ze.useImperativeHandle=function(t,e,n){return At.H.useImperativeHandle(t,e,n)};ze.useInsertionEffect=function(t,e){return At.H.useInsertionEffect(t,e)};ze.useLayoutEffect=function(t,e){return At.H.useLayoutEffect(t,e)};ze.useMemo=function(t,e){return At.H.useMemo(t,e)};ze.useOptimistic=function(t,e){return At.H.useOptimistic(t,e)};ze.useReducer=function(t,e,n){return At.H.useReducer(t,e,n)};ze.useRef=function(t){return At.H.useRef(t)};ze.useState=function(t){return At.H.useState(t)};ze.useSyncExternalStore=function(t,e,n){return At.H.useSyncExternalStore(t,e,n)};ze.useTransition=function(){return At.H.useTransition()};ze.version="19.0.0";mN.exports=ze;var $t=mN.exports,SN={exports:{}},ig={},CN={exports:{}},$N={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(D,H){var P=D.length;D.push(H);e:for(;0<P;){var j=P-1>>>1,X=D[j];if(0<a(X,H))D[j]=H,D[P]=X,P=j;else break e}}function n(D){return D.length===0?null:D[0]}function s(D){if(D.length===0)return null;var H=D[0],P=D.pop();if(P!==H){D[0]=P;e:for(var j=0,X=D.length,Q=X>>>1;j<Q;){var ee=2*(j+1)-1,J=D[ee],se=ee+1,te=D[se];if(0>a(J,P))se<X&&0>a(te,J)?(D[j]=te,D[se]=P,j=se):(D[j]=J,D[ee]=P,j=ee);else if(se<X&&0>a(te,P))D[j]=te,D[se]=P,j=se;else break e}}return H}function a(D,H){var P=D.sortIndex-H.sortIndex;return P!==0?P:D.id-H.id}if(t.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;t.unstable_now=function(){return r.now()}}else{var i=Date,o=i.now();t.unstable_now=function(){return i.now()-o}}var l=[],u=[],c=1,d=null,h=3,p=!1,f=!1,m=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;function x(D){for(var H=n(u);H!==null;){if(H.callback===null)s(u);else if(H.startTime<=D)s(u),H.sortIndex=H.expirationTime,e(l,H);else break;H=n(u)}}function w(D){if(m=!1,x(D),!f)if(n(l)!==null)f=!0,V();else{var H=n(u);H!==null&&G(w,H.startTime-D)}}var v=!1,C=-1,$=5,k=-1;function T(){return!(t.unstable_now()-k<$)}function E(){if(v){var D=t.unstable_now();k=D;var H=!0;try{e:{f=!1,m&&(m=!1,g(C),C=-1),p=!0;var P=h;try{t:{for(x(D),d=n(l);d!==null&&!(d.expirationTime>D&&T());){var j=d.callback;if(typeof j=="function"){d.callback=null,h=d.priorityLevel;var X=j(d.expirationTime<=D);if(D=t.unstable_now(),typeof X=="function"){d.callback=X,x(D),H=!0;break t}d===n(l)&&s(l),x(D)}else s(l);d=n(l)}if(d!==null)H=!0;else{var Q=n(u);Q!==null&&G(w,Q.startTime-D),H=!1}}break e}finally{d=null,h=P,p=!1}H=void 0}}finally{H?O():v=!1}}}var O;if(typeof b=="function")O=function(){b(E)};else if(typeof MessageChannel<"u"){var B=new MessageChannel,W=B.port2;B.port1.onmessage=E,O=function(){W.postMessage(null)}}else O=function(){y(E,0)};function V(){v||(v=!0,O())}function G(D,H){C=y(function(){D(t.unstable_now())},H)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(D){D.callback=null},t.unstable_continueExecution=function(){f||p||(f=!0,V())},t.unstable_forceFrameRate=function(D){0>D||125<D?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):$=0<D?Math.floor(1e3/D):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(D){switch(h){case 1:case 2:case 3:var H=3;break;default:H=h}var P=h;h=H;try{return D()}finally{h=P}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(D,H){switch(D){case 1:case 2:case 3:case 4:case 5:break;default:D=3}var P=h;h=D;try{return H()}finally{h=P}},t.unstable_scheduleCallback=function(D,H,P){var j=t.unstable_now();switch(typeof P=="object"&&P!==null?(P=P.delay,P=typeof P=="number"&&0<P?j+P:j):P=j,D){case 1:var X=-1;break;case 2:X=250;break;case 5:X=1073741823;break;case 4:X=1e4;break;default:X=5e3}return X=P+X,D={id:c++,callback:H,priorityLevel:D,startTime:P,expirationTime:X,sortIndex:-1},P>j?(D.sortIndex=P,e(u,D),n(l)===null&&D===n(u)&&(m?(g(C),C=-1):m=!0,G(w,P-j))):(D.sortIndex=X,e(l,D),f||p||(f=!0,V())),D},t.unstable_shouldYield=T,t.unstable_wrapCallback=function(D){var H=h;return function(){var P=h;h=H;try{return D.apply(this,arguments)}finally{h=P}}}})($N);CN.exports=$N;var pF=CN.exports,NN={exports:{}},ts={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fF=$t;function kN(t){var e="https://react.dev/errors/"+t;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function jr(){}var Xn={d:{f:jr,r:function(){throw Error(kN(522))},D:jr,C:jr,L:jr,m:jr,X:jr,S:jr,M:jr},p:0,findDOMNode:null},mF=Symbol.for("react.portal");function gF(t,e,n){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:mF,key:s==null?null:""+s,children:t,containerInfo:e,implementation:n}}var gd=fF.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function og(t,e){if(t==="font")return"";if(typeof e=="string")return e==="use-credentials"?e:""}ts.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=Xn;ts.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)throw Error(kN(299));return gF(t,e,null,n)};ts.flushSync=function(t){var e=gd.T,n=Xn.p;try{if(gd.T=null,Xn.p=2,t)return t()}finally{gd.T=e,Xn.p=n,Xn.d.f()}};ts.preconnect=function(t,e){typeof t=="string"&&(e?(e=e.crossOrigin,e=typeof e=="string"?e==="use-credentials"?e:"":void 0):e=null,Xn.d.C(t,e))};ts.prefetchDNS=function(t){typeof t=="string"&&Xn.d.D(t)};ts.preinit=function(t,e){if(typeof t=="string"&&e&&typeof e.as=="string"){var n=e.as,s=og(n,e.crossOrigin),a=typeof e.integrity=="string"?e.integrity:void 0,r=typeof e.fetchPriority=="string"?e.fetchPriority:void 0;n==="style"?Xn.d.S(t,typeof e.precedence=="string"?e.precedence:void 0,{crossOrigin:s,integrity:a,fetchPriority:r}):n==="script"&&Xn.d.X(t,{crossOrigin:s,integrity:a,fetchPriority:r,nonce:typeof e.nonce=="string"?e.nonce:void 0})}};ts.preinitModule=function(t,e){if(typeof t=="string")if(typeof e=="object"&&e!==null){if(e.as==null||e.as==="script"){var n=og(e.as,e.crossOrigin);Xn.d.M(t,{crossOrigin:n,integrity:typeof e.integrity=="string"?e.integrity:void 0,nonce:typeof e.nonce=="string"?e.nonce:void 0})}}else e==null&&Xn.d.M(t)};ts.preload=function(t,e){if(typeof t=="string"&&typeof e=="object"&&e!==null&&typeof e.as=="string"){var n=e.as,s=og(n,e.crossOrigin);Xn.d.L(t,n,{crossOrigin:s,integrity:typeof e.integrity=="string"?e.integrity:void 0,nonce:typeof e.nonce=="string"?e.nonce:void 0,type:typeof e.type=="string"?e.type:void 0,fetchPriority:typeof e.fetchPriority=="string"?e.fetchPriority:void 0,referrerPolicy:typeof e.referrerPolicy=="string"?e.referrerPolicy:void 0,imageSrcSet:typeof e.imageSrcSet=="string"?e.imageSrcSet:void 0,imageSizes:typeof e.imageSizes=="string"?e.imageSizes:void 0,media:typeof e.media=="string"?e.media:void 0})}};ts.preloadModule=function(t,e){if(typeof t=="string")if(e){var n=og(e.as,e.crossOrigin);Xn.d.m(t,{as:typeof e.as=="string"&&e.as!=="script"?e.as:void 0,crossOrigin:n,integrity:typeof e.integrity=="string"?e.integrity:void 0})}else Xn.d.m(t)};ts.requestFormReset=function(t){Xn.d.r(t)};ts.unstable_batchedUpdates=function(t,e){return t(e)};ts.useFormState=function(t,e,n){return gd.H.useFormState(t,e,n)};ts.useFormStatus=function(){return gd.H.useHostTransitionStatus()};ts.version="19.0.0";function IN(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(IN)}catch(t){console.error(t)}}IN(),NN.exports=ts;var yF=NN.exports;/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hn=pF,TN=$t,bF=yF;function Y(t){var e="https://react.dev/errors/"+t;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function EN(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}var xF=Symbol.for("react.element"),nf=Symbol.for("react.transitional.element"),ad=Symbol.for("react.portal"),Rl=Symbol.for("react.fragment"),RN=Symbol.for("react.strict_mode"),Bx=Symbol.for("react.profiler"),wF=Symbol.for("react.provider"),DN=Symbol.for("react.consumer"),wr=Symbol.for("react.context"),B1=Symbol.for("react.forward_ref"),Vx=Symbol.for("react.suspense"),Ux=Symbol.for("react.suspense_list"),V1=Symbol.for("react.memo"),Kr=Symbol.for("react.lazy"),AN=Symbol.for("react.offscreen"),vF=Symbol.for("react.memo_cache_sentinel"),GS=Symbol.iterator;function jc(t){return t===null||typeof t!="object"?null:(t=GS&&t[GS]||t["@@iterator"],typeof t=="function"?t:null)}var SF=Symbol.for("react.client.reference");function Wx(t){if(t==null)return null;if(typeof t=="function")return t.$$typeof===SF?null:t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case Rl:return"Fragment";case ad:return"Portal";case Bx:return"Profiler";case RN:return"StrictMode";case Vx:return"Suspense";case Ux:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case wr:return(t.displayName||"Context")+".Provider";case DN:return(t._context.displayName||"Context")+".Consumer";case B1:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case V1:return e=t.displayName||null,e!==null?e:Wx(t.type)||"Memo";case Kr:e=t._payload,t=t._init;try{return Wx(t(e))}catch{}}return null}var Oe=TN.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,St=Object.assign,Bb,HS;function rd(t){if(Bb===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Bb=e&&e[1]||"",HS=-1<n.stack.indexOf(`
    at`)?" (<anonymous>)":-1<n.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Bb+t+HS}var Vb=!1;function Ub(t,e){if(!t||Vb)return"";Vb=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var s={DetermineComponentFrameRoot:function(){try{if(e){var d=function(){throw Error()};if(Object.defineProperty(d.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(d,[])}catch(p){var h=p}Reflect.construct(t,[],d)}else{try{d.call()}catch(p){h=p}t.call(d.prototype)}}else{try{throw Error()}catch(p){h=p}(d=t())&&typeof d.catch=="function"&&d.catch(function(){})}}catch(p){if(p&&h&&typeof p.stack=="string")return[p.stack,h.stack]}return[null,null]}};s.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var a=Object.getOwnPropertyDescriptor(s.DetermineComponentFrameRoot,"name");a&&a.configurable&&Object.defineProperty(s.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var r=s.DetermineComponentFrameRoot(),i=r[0],o=r[1];if(i&&o){var l=i.split(`
`),u=o.split(`
`);for(a=s=0;s<l.length&&!l[s].includes("DetermineComponentFrameRoot");)s++;for(;a<u.length&&!u[a].includes("DetermineComponentFrameRoot");)a++;if(s===l.length||a===u.length)for(s=l.length-1,a=u.length-1;1<=s&&0<=a&&l[s]!==u[a];)a--;for(;1<=s&&0<=a;s--,a--)if(l[s]!==u[a]){if(s!==1||a!==1)do if(s--,a--,0>a||l[s]!==u[a]){var c=`
`+l[s].replace(" at new "," at ");return t.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",t.displayName)),c}while(1<=s&&0<=a);break}}}finally{Vb=!1,Error.prepareStackTrace=n}return(n=t?t.displayName||t.name:"")?rd(n):""}function CF(t){switch(t.tag){case 26:case 27:case 5:return rd(t.type);case 16:return rd("Lazy");case 13:return rd("Suspense");case 19:return rd("SuspenseList");case 0:case 15:return t=Ub(t.type,!1),t;case 11:return t=Ub(t.type.render,!1),t;case 1:return t=Ub(t.type,!0),t;default:return""}}function jS(t){try{var e="";do e+=CF(t),t=t.return;while(t);return e}catch(n){return`
Error generating stack: `+n.message+`
`+n.stack}}function Nu(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,e.flags&4098&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function _N(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function qS(t){if(Nu(t)!==t)throw Error(Y(188))}function $F(t){var e=t.alternate;if(!e){if(e=Nu(t),e===null)throw Error(Y(188));return e!==t?null:t}for(var n=t,s=e;;){var a=n.return;if(a===null)break;var r=a.alternate;if(r===null){if(s=a.return,s!==null){n=s;continue}break}if(a.child===r.child){for(r=a.child;r;){if(r===n)return qS(a),t;if(r===s)return qS(a),e;r=r.sibling}throw Error(Y(188))}if(n.return!==s.return)n=a,s=r;else{for(var i=!1,o=a.child;o;){if(o===n){i=!0,n=a,s=r;break}if(o===s){i=!0,s=a,n=r;break}o=o.sibling}if(!i){for(o=r.child;o;){if(o===n){i=!0,n=r,s=a;break}if(o===s){i=!0,s=r,n=a;break}o=o.sibling}if(!i)throw Error(Y(189))}}if(n.alternate!==s)throw Error(Y(190))}if(n.tag!==3)throw Error(Y(188));return n.stateNode.current===n?t:e}function ON(t){var e=t.tag;if(e===5||e===26||e===27||e===6)return t;for(t=t.child;t!==null;){if(e=ON(t),e!==null)return e;t=t.sibling}return null}var id=Array.isArray,wt=bF.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,po={pending:!1,data:null,method:null,action:null},Gx=[],Dl=-1;function tr(t){return{current:t}}function vn(t){0>Dl||(t.current=Gx[Dl],Gx[Dl]=null,Dl--)}function It(t,e){Dl++,Gx[Dl]=t.current,t.current=e}var Wa=tr(null),Fd=tr(null),oi=tr(null),Zf=tr(null);function Jf(t,e){switch(It(oi,e),It(Fd,t),It(Wa,null),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)&&(e=e.namespaceURI)?XC(e):0;break;default:if(t=t===8?e.parentNode:e,e=t.tagName,t=t.namespaceURI)t=XC(t),e=jI(t,e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}vn(Wa),It(Wa,e)}function nu(){vn(Wa),vn(Fd),vn(oi)}function Hx(t){t.memoizedState!==null&&It(Zf,t);var e=Wa.current,n=jI(e,t.type);e!==n&&(It(Fd,t),It(Wa,n))}function em(t){Fd.current===t&&(vn(Wa),vn(Fd)),Zf.current===t&&(vn(Zf),jd._currentValue=po)}var jx=Object.prototype.hasOwnProperty,U1=hn.unstable_scheduleCallback,Wb=hn.unstable_cancelCallback,NF=hn.unstable_shouldYield,kF=hn.unstable_requestPaint,Ga=hn.unstable_now,IF=hn.unstable_getCurrentPriorityLevel,FN=hn.unstable_ImmediatePriority,zN=hn.unstable_UserBlockingPriority,tm=hn.unstable_NormalPriority,TF=hn.unstable_LowPriority,LN=hn.unstable_IdlePriority,EF=hn.log,RF=hn.unstable_setDisableYieldValue,gh=null,Is=null;function DF(t){if(Is&&typeof Is.onCommitFiberRoot=="function")try{Is.onCommitFiberRoot(gh,t,void 0,(t.current.flags&128)===128)}catch{}}function ni(t){if(typeof EF=="function"&&RF(t),Is&&typeof Is.setStrictMode=="function")try{Is.setStrictMode(gh,t)}catch{}}var Ts=Math.clz32?Math.clz32:OF,AF=Math.log,_F=Math.LN2;function OF(t){return t>>>=0,t===0?32:31-(AF(t)/_F|0)|0}var sf=128,af=4194304;function Qi(t){var e=t&42;if(e!==0)return e;switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return t&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return t}}function lg(t,e){var n=t.pendingLanes;if(n===0)return 0;var s=0,a=t.suspendedLanes,r=t.pingedLanes,i=t.warmLanes;t=t.finishedLanes!==0;var o=n&134217727;return o!==0?(n=o&~a,n!==0?s=Qi(n):(r&=o,r!==0?s=Qi(r):t||(i=o&~i,i!==0&&(s=Qi(i))))):(o=n&~a,o!==0?s=Qi(o):r!==0?s=Qi(r):t||(i=n&~i,i!==0&&(s=Qi(i)))),s===0?0:e!==0&&e!==s&&!(e&a)&&(a=s&-s,i=e&-e,a>=i||a===32&&(i&4194176)!==0)?e:s}function yh(t,e){return(t.pendingLanes&~(t.suspendedLanes&~t.pingedLanes)&e)===0}function FF(t,e){switch(t){case 1:case 2:case 4:case 8:return e+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function PN(){var t=sf;return sf<<=1,!(sf&4194176)&&(sf=128),t}function MN(){var t=af;return af<<=1,!(af&62914560)&&(af=4194304),t}function Gb(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function bh(t,e){t.pendingLanes|=e,e!==268435456&&(t.suspendedLanes=0,t.pingedLanes=0,t.warmLanes=0)}function zF(t,e,n,s,a,r){var i=t.pendingLanes;t.pendingLanes=n,t.suspendedLanes=0,t.pingedLanes=0,t.warmLanes=0,t.expiredLanes&=n,t.entangledLanes&=n,t.errorRecoveryDisabledLanes&=n,t.shellSuspendCounter=0;var o=t.entanglements,l=t.expirationTimes,u=t.hiddenUpdates;for(n=i&~n;0<n;){var c=31-Ts(n),d=1<<c;o[c]=0,l[c]=-1;var h=u[c];if(h!==null)for(u[c]=null,c=0;c<h.length;c++){var p=h[c];p!==null&&(p.lane&=-536870913)}n&=~d}s!==0&&BN(t,s,0),r!==0&&a===0&&t.tag!==0&&(t.suspendedLanes|=r&~(i&~e))}function BN(t,e,n){t.pendingLanes|=e,t.suspendedLanes&=~e;var s=31-Ts(e);t.entangledLanes|=e,t.entanglements[s]=t.entanglements[s]|1073741824|n&4194218}function VN(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var s=31-Ts(n),a=1<<s;a&e|t[s]&e&&(t[s]|=e),n&=~a}}function UN(t){return t&=-t,2<t?8<t?t&134217727?32:268435456:8:2}function WN(){var t=wt.p;return t!==0?t:(t=window.event,t===void 0?32:nT(t.type))}function LF(t,e){var n=wt.p;try{return wt.p=t,e()}finally{wt.p=n}}var Ai=Math.random().toString(36).slice(2),Ln="__reactFiber$"+Ai,cs="__reactProps$"+Ai,ku="__reactContainer$"+Ai,qx="__reactEvents$"+Ai,PF="__reactListeners$"+Ai,MF="__reactHandles$"+Ai,XS="__reactResources$"+Ai,zd="__reactMarker$"+Ai;function W1(t){delete t[Ln],delete t[cs],delete t[qx],delete t[PF],delete t[MF]}function oo(t){var e=t[Ln];if(e)return e;for(var n=t.parentNode;n;){if(e=n[ku]||n[Ln]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=YC(t);t!==null;){if(n=t[Ln])return n;t=YC(t)}return e}t=n,n=t.parentNode}return null}function Iu(t){if(t=t[Ln]||t[ku]){var e=t.tag;if(e===5||e===6||e===13||e===26||e===27||e===3)return t}return null}function od(t){var e=t.tag;if(e===5||e===26||e===27||e===6)return t.stateNode;throw Error(Y(33))}function Ul(t){var e=t[XS];return e||(e=t[XS]={hoistableStyles:new Map,hoistableScripts:new Map}),e}function yn(t){t[zd]=!0}var GN=new Set,HN={};function Wo(t,e){su(t,e),su(t+"Capture",e)}function su(t,e){for(HN[t]=e,t=0;t<e.length;t++)GN.add(e[t])}var Rr=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),BF=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),KS={},YS={};function VF(t){return jx.call(YS,t)?!0:jx.call(KS,t)?!1:BF.test(t)?YS[t]=!0:(KS[t]=!0,!1)}function Of(t,e,n){if(VF(e))if(n===null)t.removeAttribute(e);else{switch(typeof n){case"undefined":case"function":case"symbol":t.removeAttribute(e);return;case"boolean":var s=e.toLowerCase().slice(0,5);if(s!=="data-"&&s!=="aria-"){t.removeAttribute(e);return}}t.setAttribute(e,""+n)}}function rf(t,e,n){if(n===null)t.removeAttribute(e);else{switch(typeof n){case"undefined":case"function":case"symbol":case"boolean":t.removeAttribute(e);return}t.setAttribute(e,""+n)}}function ur(t,e,n,s){if(s===null)t.removeAttribute(n);else{switch(typeof s){case"undefined":case"function":case"symbol":case"boolean":t.removeAttribute(n);return}t.setAttributeNS(e,n,""+s)}}function Gs(t){switch(typeof t){case"bigint":case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function jN(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function UF(t){var e=jN(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),s=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var a=n.get,r=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return a.call(this)},set:function(i){s=""+i,r.call(this,i)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return s},setValue:function(i){s=""+i},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function nm(t){t._valueTracker||(t._valueTracker=UF(t))}function qN(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),s="";return t&&(s=jN(t)?t.checked?"true":"false":t.value),t=s,t!==n?(e.setValue(t),!0):!1}function sm(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}var WF=/[\n"\\]/g;function qs(t){return t.replace(WF,function(e){return"\\"+e.charCodeAt(0).toString(16)+" "})}function Xx(t,e,n,s,a,r,i,o){t.name="",i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"?t.type=i:t.removeAttribute("type"),e!=null?i==="number"?(e===0&&t.value===""||t.value!=e)&&(t.value=""+Gs(e)):t.value!==""+Gs(e)&&(t.value=""+Gs(e)):i!=="submit"&&i!=="reset"||t.removeAttribute("value"),e!=null?Kx(t,i,Gs(e)):n!=null?Kx(t,i,Gs(n)):s!=null&&t.removeAttribute("value"),a==null&&r!=null&&(t.defaultChecked=!!r),a!=null&&(t.checked=a&&typeof a!="function"&&typeof a!="symbol"),o!=null&&typeof o!="function"&&typeof o!="symbol"&&typeof o!="boolean"?t.name=""+Gs(o):t.removeAttribute("name")}function XN(t,e,n,s,a,r,i,o){if(r!=null&&typeof r!="function"&&typeof r!="symbol"&&typeof r!="boolean"&&(t.type=r),e!=null||n!=null){if(!(r!=="submit"&&r!=="reset"||e!=null))return;n=n!=null?""+Gs(n):"",e=e!=null?""+Gs(e):n,o||e===t.value||(t.value=e),t.defaultValue=e}s=s??a,s=typeof s!="function"&&typeof s!="symbol"&&!!s,t.checked=o?t.checked:!!s,t.defaultChecked=!!s,i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"&&(t.name=i)}function Kx(t,e,n){e==="number"&&sm(t.ownerDocument)===t||t.defaultValue===""+n||(t.defaultValue=""+n)}function Wl(t,e,n,s){if(t=t.options,e){e={};for(var a=0;a<n.length;a++)e["$"+n[a]]=!0;for(n=0;n<t.length;n++)a=e.hasOwnProperty("$"+t[n].value),t[n].selected!==a&&(t[n].selected=a),a&&s&&(t[n].defaultSelected=!0)}else{for(n=""+Gs(n),e=null,a=0;a<t.length;a++){if(t[a].value===n){t[a].selected=!0,s&&(t[a].defaultSelected=!0);return}e!==null||t[a].disabled||(e=t[a])}e!==null&&(e.selected=!0)}}function KN(t,e,n){if(e!=null&&(e=""+Gs(e),e!==t.value&&(t.value=e),n==null)){t.defaultValue!==e&&(t.defaultValue=e);return}t.defaultValue=n!=null?""+Gs(n):""}function YN(t,e,n,s){if(e==null){if(s!=null){if(n!=null)throw Error(Y(92));if(id(s)){if(1<s.length)throw Error(Y(93));s=s[0]}n=s}n==null&&(n=""),e=n}n=Gs(e),t.defaultValue=n,s=t.textContent,s===n&&s!==""&&s!==null&&(t.value=s)}function au(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var GF=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function QS(t,e,n){var s=e.indexOf("--")===0;n==null||typeof n=="boolean"||n===""?s?t.setProperty(e,""):e==="float"?t.cssFloat="":t[e]="":s?t.setProperty(e,n):typeof n!="number"||n===0||GF.has(e)?e==="float"?t.cssFloat=n:t[e]=(""+n).trim():t[e]=n+"px"}function QN(t,e,n){if(e!=null&&typeof e!="object")throw Error(Y(62));if(t=t.style,n!=null){for(var s in n)!n.hasOwnProperty(s)||e!=null&&e.hasOwnProperty(s)||(s.indexOf("--")===0?t.setProperty(s,""):s==="float"?t.cssFloat="":t[s]="");for(var a in e)s=e[a],e.hasOwnProperty(a)&&n[a]!==s&&QS(t,a,s)}else for(var r in e)e.hasOwnProperty(r)&&QS(t,r,e[r])}function G1(t){if(t.indexOf("-")===-1)return!1;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var HF=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),jF=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Ff(t){return jF.test(""+t)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":t}var Yx=null;function H1(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Al=null,Gl=null;function ZS(t){var e=Iu(t);if(e&&(t=e.stateNode)){var n=t[cs]||null;e:switch(t=e.stateNode,e.type){case"input":if(Xx(t,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll('input[name="'+qs(""+e)+'"][type="radio"]'),e=0;e<n.length;e++){var s=n[e];if(s!==t&&s.form===t.form){var a=s[cs]||null;if(!a)throw Error(Y(90));Xx(s,a.value,a.defaultValue,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name)}}for(e=0;e<n.length;e++)s=n[e],s.form===t.form&&qN(s)}break e;case"textarea":KN(t,n.value,n.defaultValue);break e;case"select":e=n.value,e!=null&&Wl(t,!!n.multiple,e,!1)}}}var Hb=!1;function ZN(t,e,n){if(Hb)return t(e,n);Hb=!0;try{var s=t(e);return s}finally{if(Hb=!1,(Al!==null||Gl!==null)&&(bg(),Al&&(e=Al,t=Gl,Gl=Al=null,ZS(e),t)))for(e=0;e<t.length;e++)ZS(t[e])}}function Ld(t,e){var n=t.stateNode;if(n===null)return null;var s=n[cs]||null;if(s===null)return null;n=s[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(t=t.type,s=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!s;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(Y(231,e,typeof n));return n}var Qx=!1;if(Rr)try{var qc={};Object.defineProperty(qc,"passive",{get:function(){Qx=!0}}),window.addEventListener("test",qc,qc),window.removeEventListener("test",qc,qc)}catch{Qx=!1}var si=null,j1=null,zf=null;function JN(){if(zf)return zf;var t,e=j1,n=e.length,s,a="value"in si?si.value:si.textContent,r=a.length;for(t=0;t<n&&e[t]===a[t];t++);var i=n-t;for(s=1;s<=i&&e[n-s]===a[r-s];s++);return zf=a.slice(t,1<s?1-s:void 0)}function Lf(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function of(){return!0}function JS(){return!1}function ys(t){function e(n,s,a,r,i){this._reactName=n,this._targetInst=a,this.type=s,this.nativeEvent=r,this.target=i,this.currentTarget=null;for(var o in t)t.hasOwnProperty(o)&&(n=t[o],this[o]=n?n(r):r[o]);return this.isDefaultPrevented=(r.defaultPrevented!=null?r.defaultPrevented:r.returnValue===!1)?of:JS,this.isPropagationStopped=JS,this}return St(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=of)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=of)},persist:function(){},isPersistent:of}),e}var Go={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ug=ys(Go),xh=St({},Go,{view:0,detail:0}),qF=ys(xh),jb,qb,Xc,cg=St({},xh,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:q1,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==Xc&&(Xc&&t.type==="mousemove"?(jb=t.screenX-Xc.screenX,qb=t.screenY-Xc.screenY):qb=jb=0,Xc=t),jb)},movementY:function(t){return"movementY"in t?t.movementY:qb}}),eC=ys(cg),XF=St({},cg,{dataTransfer:0}),KF=ys(XF),YF=St({},xh,{relatedTarget:0}),Xb=ys(YF),QF=St({},Go,{animationName:0,elapsedTime:0,pseudoElement:0}),ZF=ys(QF),JF=St({},Go,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),ez=ys(JF),tz=St({},Go,{data:0}),tC=ys(tz),nz={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sz={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},az={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function rz(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=az[t])?!!e[t]:!1}function q1(){return rz}var iz=St({},xh,{key:function(t){if(t.key){var e=nz[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=Lf(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?sz[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:q1,charCode:function(t){return t.type==="keypress"?Lf(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?Lf(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),oz=ys(iz),lz=St({},cg,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),nC=ys(lz),uz=St({},xh,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:q1}),cz=ys(uz),dz=St({},Go,{propertyName:0,elapsedTime:0,pseudoElement:0}),hz=ys(dz),pz=St({},cg,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),fz=ys(pz),mz=St({},Go,{newState:0,oldState:0}),gz=ys(mz),yz=[9,13,27,32],X1=Rr&&"CompositionEvent"in window,yd=null;Rr&&"documentMode"in document&&(yd=document.documentMode);var bz=Rr&&"TextEvent"in window&&!yd,ek=Rr&&(!X1||yd&&8<yd&&11>=yd),sC=" ",aC=!1;function tk(t,e){switch(t){case"keyup":return yz.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function nk(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var _l=!1;function xz(t,e){switch(t){case"compositionend":return nk(e);case"keypress":return e.which!==32?null:(aC=!0,sC);case"textInput":return t=e.data,t===sC&&aC?null:t;default:return null}}function wz(t,e){if(_l)return t==="compositionend"||!X1&&tk(t,e)?(t=JN(),zf=j1=si=null,_l=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return ek&&e.locale!=="ko"?null:e.data;default:return null}}var vz={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function rC(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!vz[t.type]:e==="textarea"}function sk(t,e,n,s){Al?Gl?Gl.push(s):Gl=[s]:Al=s,e=xm(e,"onChange"),0<e.length&&(n=new ug("onChange","change",null,n,s),t.push({event:n,listeners:e}))}var bd=null,Pd=null;function Sz(t){WI(t,0)}function dg(t){var e=od(t);if(qN(e))return t}function iC(t,e){if(t==="change")return e}var ak=!1;if(Rr){var Kb;if(Rr){var Yb="oninput"in document;if(!Yb){var oC=document.createElement("div");oC.setAttribute("oninput","return;"),Yb=typeof oC.oninput=="function"}Kb=Yb}else Kb=!1;ak=Kb&&(!document.documentMode||9<document.documentMode)}function lC(){bd&&(bd.detachEvent("onpropertychange",rk),Pd=bd=null)}function rk(t){if(t.propertyName==="value"&&dg(Pd)){var e=[];sk(e,Pd,t,H1(t)),ZN(Sz,e)}}function Cz(t,e,n){t==="focusin"?(lC(),bd=e,Pd=n,bd.attachEvent("onpropertychange",rk)):t==="focusout"&&lC()}function $z(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return dg(Pd)}function Nz(t,e){if(t==="click")return dg(e)}function kz(t,e){if(t==="input"||t==="change")return dg(e)}function Iz(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Rs=typeof Object.is=="function"?Object.is:Iz;function Md(t,e){if(Rs(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),s=Object.keys(e);if(n.length!==s.length)return!1;for(s=0;s<n.length;s++){var a=n[s];if(!jx.call(e,a)||!Rs(t[a],e[a]))return!1}return!0}function uC(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function cC(t,e){var n=uC(t);t=0;for(var s;n;){if(n.nodeType===3){if(s=t+n.textContent.length,t<=e&&s>=e)return{node:n,offset:e-t};t=s}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=uC(n)}}function ik(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?ik(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function ok(t){t=t!=null&&t.ownerDocument!=null&&t.ownerDocument.defaultView!=null?t.ownerDocument.defaultView:window;for(var e=sm(t.document);e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=sm(t.document)}return e}function K1(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function Tz(t,e){var n=ok(e);e=t.focusedElem;var s=t.selectionRange;if(n!==e&&e&&e.ownerDocument&&ik(e.ownerDocument.documentElement,e)){if(s!==null&&K1(e)){if(t=s.start,n=s.end,n===void 0&&(n=t),"selectionStart"in e)e.selectionStart=t,e.selectionEnd=Math.min(n,e.value.length);else if(n=(t=e.ownerDocument||document)&&t.defaultView||window,n.getSelection){n=n.getSelection();var a=e.textContent.length,r=Math.min(s.start,a);s=s.end===void 0?r:Math.min(s.end,a),!n.extend&&r>s&&(a=s,s=r,r=a),a=cC(e,r);var i=cC(e,s);a&&i&&(n.rangeCount!==1||n.anchorNode!==a.node||n.anchorOffset!==a.offset||n.focusNode!==i.node||n.focusOffset!==i.offset)&&(t=t.createRange(),t.setStart(a.node,a.offset),n.removeAllRanges(),r>s?(n.addRange(t),n.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),n.addRange(t)))}}for(t=[],n=e;n=n.parentNode;)n.nodeType===1&&t.push({element:n,left:n.scrollLeft,top:n.scrollTop});for(typeof e.focus=="function"&&e.focus(),e=0;e<t.length;e++)n=t[e],n.element.scrollLeft=n.left,n.element.scrollTop=n.top}}var Ez=Rr&&"documentMode"in document&&11>=document.documentMode,Ol=null,Zx=null,xd=null,Jx=!1;function dC(t,e,n){var s=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Jx||Ol==null||Ol!==sm(s)||(s=Ol,"selectionStart"in s&&K1(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),xd&&Md(xd,s)||(xd=s,s=xm(Zx,"onSelect"),0<s.length&&(e=new ug("onSelect","select",null,e,n),t.push({event:e,listeners:s}),e.target=Ol)))}function qi(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Fl={animationend:qi("Animation","AnimationEnd"),animationiteration:qi("Animation","AnimationIteration"),animationstart:qi("Animation","AnimationStart"),transitionrun:qi("Transition","TransitionRun"),transitionstart:qi("Transition","TransitionStart"),transitioncancel:qi("Transition","TransitionCancel"),transitionend:qi("Transition","TransitionEnd")},Qb={},lk={};Rr&&(lk=document.createElement("div").style,"AnimationEvent"in window||(delete Fl.animationend.animation,delete Fl.animationiteration.animation,delete Fl.animationstart.animation),"TransitionEvent"in window||delete Fl.transitionend.transition);function Ho(t){if(Qb[t])return Qb[t];if(!Fl[t])return t;var e=Fl[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in lk)return Qb[t]=e[n];return t}var uk=Ho("animationend"),ck=Ho("animationiteration"),dk=Ho("animationstart"),Rz=Ho("transitionrun"),Dz=Ho("transitionstart"),Az=Ho("transitioncancel"),hk=Ho("transitionend"),pk=new Map,hC="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function Da(t,e){pk.set(t,e),Wo(e,[t])}var Us=[],zl=0,Y1=0;function hg(){for(var t=zl,e=Y1=zl=0;e<t;){var n=Us[e];Us[e++]=null;var s=Us[e];Us[e++]=null;var a=Us[e];Us[e++]=null;var r=Us[e];if(Us[e++]=null,s!==null&&a!==null){var i=s.pending;i===null?a.next=a:(a.next=i.next,i.next=a),s.pending=a}r!==0&&fk(n,a,r)}}function pg(t,e,n,s){Us[zl++]=t,Us[zl++]=e,Us[zl++]=n,Us[zl++]=s,Y1|=s,t.lanes|=s,t=t.alternate,t!==null&&(t.lanes|=s)}function Q1(t,e,n,s){return pg(t,e,n,s),am(t)}function bi(t,e){return pg(t,null,null,e),am(t)}function fk(t,e,n){t.lanes|=n;var s=t.alternate;s!==null&&(s.lanes|=n);for(var a=!1,r=t.return;r!==null;)r.childLanes|=n,s=r.alternate,s!==null&&(s.childLanes|=n),r.tag===22&&(t=r.stateNode,t===null||t._visibility&1||(a=!0)),t=r,r=r.return;a&&e!==null&&t.tag===3&&(r=t.stateNode,a=31-Ts(n),r=r.hiddenUpdates,t=r[a],t===null?r[a]=[e]:t.push(e),e.lane=n|536870912)}function am(t){if(50<Dd)throw Dd=0,v0=null,Error(Y(185));for(var e=t.return;e!==null;)t=e,e=t.return;return t.tag===3?t.stateNode:null}var Ll={},pC=new WeakMap;function Xs(t,e){if(typeof t=="object"&&t!==null){var n=pC.get(t);return n!==void 0?n:(e={value:t,source:e,stack:jS(e)},pC.set(t,e),e)}return{value:t,source:e,stack:jS(e)}}var Pl=[],Ml=0,rm=null,im=0,Hs=[],js=0,fo=null,vr=1,Sr="";function Zi(t,e){Pl[Ml++]=im,Pl[Ml++]=rm,rm=t,im=e}function mk(t,e,n){Hs[js++]=vr,Hs[js++]=Sr,Hs[js++]=fo,fo=t;var s=vr;t=Sr;var a=32-Ts(s)-1;s&=~(1<<a),n+=1;var r=32-Ts(e)+a;if(30<r){var i=a-a%5;r=(s&(1<<i)-1).toString(32),s>>=i,a-=i,vr=1<<32-Ts(e)+a|n<<a|s,Sr=r+t}else vr=1<<r|n<<a|s,Sr=t}function Z1(t){t.return!==null&&(Zi(t,1),mk(t,1,0))}function J1(t){for(;t===rm;)rm=Pl[--Ml],Pl[Ml]=null,im=Pl[--Ml],Pl[Ml]=null;for(;t===fo;)fo=Hs[--js],Hs[js]=null,Sr=Hs[--js],Hs[js]=null,vr=Hs[--js],Hs[js]=null}var jn=null,In=null,Ke=!1,ba=null,Ba=!1,e0=Error(Y(519));function Co(t){var e=Error(Y(418,""));throw Bd(Xs(e,t)),e0}function fC(t){var e=t.stateNode,n=t.type,s=t.memoizedProps;switch(e[Ln]=t,e[cs]=s,n){case"dialog":Ge("cancel",e),Ge("close",e);break;case"iframe":case"object":case"embed":Ge("load",e);break;case"video":case"audio":for(n=0;n<Wd.length;n++)Ge(Wd[n],e);break;case"source":Ge("error",e);break;case"img":case"image":case"link":Ge("error",e),Ge("load",e);break;case"details":Ge("toggle",e);break;case"input":Ge("invalid",e),XN(e,s.value,s.defaultValue,s.checked,s.defaultChecked,s.type,s.name,!0),nm(e);break;case"select":Ge("invalid",e);break;case"textarea":Ge("invalid",e),YN(e,s.value,s.defaultValue,s.children),nm(e)}n=s.children,typeof n!="string"&&typeof n!="number"&&typeof n!="bigint"||e.textContent===""+n||s.suppressHydrationWarning===!0||HI(e.textContent,n)?(s.popover!=null&&(Ge("beforetoggle",e),Ge("toggle",e)),s.onScroll!=null&&Ge("scroll",e),s.onScrollEnd!=null&&Ge("scrollend",e),s.onClick!=null&&(e.onclick=wg),e=!0):e=!1,e||Co(t)}function mC(t){for(jn=t.return;jn;)switch(jn.tag){case 3:case 27:Ba=!0;return;case 5:case 13:Ba=!1;return;default:jn=jn.return}}function Kc(t){if(t!==jn)return!1;if(!Ke)return mC(t),Ke=!0,!1;var e=!1,n;if((n=t.tag!==3&&t.tag!==27)&&((n=t.tag===5)&&(n=t.type,n=!(n!=="form"&&n!=="button")||T0(t.type,t.memoizedProps)),n=!n),n&&(e=!0),e&&In&&Co(t),mC(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(Y(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8)if(n=t.data,n==="/$"){if(e===0){In=va(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++;t=t.nextSibling}In=null}}else In=jn?va(t.stateNode.nextSibling):null;return!0}function wh(){In=jn=null,Ke=!1}function Bd(t){ba===null?ba=[t]:ba.push(t)}var wd=Error(Y(460)),gk=Error(Y(474)),t0={then:function(){}};function gC(t){return t=t.status,t==="fulfilled"||t==="rejected"}function lf(){}function yk(t,e,n){switch(n=t[n],n===void 0?t.push(e):n!==e&&(e.then(lf,lf),e=n),e.status){case"fulfilled":return e.value;case"rejected":throw t=e.reason,t===wd?Error(Y(483)):t;default:if(typeof e.status=="string")e.then(lf,lf);else{if(t=ft,t!==null&&100<t.shellSuspendCounter)throw Error(Y(482));t=e,t.status="pending",t.then(function(s){if(e.status==="pending"){var a=e;a.status="fulfilled",a.value=s}},function(s){if(e.status==="pending"){var a=e;a.status="rejected",a.reason=s}})}switch(e.status){case"fulfilled":return e.value;case"rejected":throw t=e.reason,t===wd?Error(Y(483)):t}throw vd=e,wd}}var vd=null;function yC(){if(vd===null)throw Error(Y(459));var t=vd;return vd=null,t}var Hl=null,Vd=0;function uf(t){var e=Vd;return Vd+=1,Hl===null&&(Hl=[]),yk(Hl,t,e)}function Yc(t,e){e=e.props.ref,t.ref=e!==void 0?e:null}function cf(t,e){throw e.$$typeof===xF?Error(Y(525)):(t=Object.prototype.toString.call(e),Error(Y(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)))}function bC(t){var e=t._init;return e(t._payload)}function bk(t){function e(g,b){if(t){var x=g.deletions;x===null?(g.deletions=[b],g.flags|=16):x.push(b)}}function n(g,b){if(!t)return null;for(;b!==null;)e(g,b),b=b.sibling;return null}function s(g){for(var b=new Map;g!==null;)g.key!==null?b.set(g.key,g):b.set(g.index,g),g=g.sibling;return b}function a(g,b){return g=ci(g,b),g.index=0,g.sibling=null,g}function r(g,b,x){return g.index=x,t?(x=g.alternate,x!==null?(x=x.index,x<b?(g.flags|=33554434,b):x):(g.flags|=33554434,b)):(g.flags|=1048576,b)}function i(g){return t&&g.alternate===null&&(g.flags|=33554434),g}function o(g,b,x,w){return b===null||b.tag!==6?(b=ux(x,g.mode,w),b.return=g,b):(b=a(b,x),b.return=g,b)}function l(g,b,x,w){var v=x.type;return v===Rl?c(g,b,x.props.children,w,x.key):b!==null&&(b.elementType===v||typeof v=="object"&&v!==null&&v.$$typeof===Kr&&bC(v)===b.type)?(b=a(b,x.props),Yc(b,x),b.return=g,b):(b=Uf(x.type,x.key,x.props,null,g.mode,w),Yc(b,x),b.return=g,b)}function u(g,b,x,w){return b===null||b.tag!==4||b.stateNode.containerInfo!==x.containerInfo||b.stateNode.implementation!==x.implementation?(b=cx(x,g.mode,w),b.return=g,b):(b=a(b,x.children||[]),b.return=g,b)}function c(g,b,x,w,v){return b===null||b.tag!==7?(b=go(x,g.mode,w,v),b.return=g,b):(b=a(b,x),b.return=g,b)}function d(g,b,x){if(typeof b=="string"&&b!==""||typeof b=="number"||typeof b=="bigint")return b=ux(""+b,g.mode,x),b.return=g,b;if(typeof b=="object"&&b!==null){switch(b.$$typeof){case nf:return x=Uf(b.type,b.key,b.props,null,g.mode,x),Yc(x,b),x.return=g,x;case ad:return b=cx(b,g.mode,x),b.return=g,b;case Kr:var w=b._init;return b=w(b._payload),d(g,b,x)}if(id(b)||jc(b))return b=go(b,g.mode,x,null),b.return=g,b;if(typeof b.then=="function")return d(g,uf(b),x);if(b.$$typeof===wr)return d(g,df(g,b),x);cf(g,b)}return null}function h(g,b,x,w){var v=b!==null?b.key:null;if(typeof x=="string"&&x!==""||typeof x=="number"||typeof x=="bigint")return v!==null?null:o(g,b,""+x,w);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case nf:return x.key===v?l(g,b,x,w):null;case ad:return x.key===v?u(g,b,x,w):null;case Kr:return v=x._init,x=v(x._payload),h(g,b,x,w)}if(id(x)||jc(x))return v!==null?null:c(g,b,x,w,null);if(typeof x.then=="function")return h(g,b,uf(x),w);if(x.$$typeof===wr)return h(g,b,df(g,x),w);cf(g,x)}return null}function p(g,b,x,w,v){if(typeof w=="string"&&w!==""||typeof w=="number"||typeof w=="bigint")return g=g.get(x)||null,o(b,g,""+w,v);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case nf:return g=g.get(w.key===null?x:w.key)||null,l(b,g,w,v);case ad:return g=g.get(w.key===null?x:w.key)||null,u(b,g,w,v);case Kr:var C=w._init;return w=C(w._payload),p(g,b,x,w,v)}if(id(w)||jc(w))return g=g.get(x)||null,c(b,g,w,v,null);if(typeof w.then=="function")return p(g,b,x,uf(w),v);if(w.$$typeof===wr)return p(g,b,x,df(b,w),v);cf(b,w)}return null}function f(g,b,x,w){for(var v=null,C=null,$=b,k=b=0,T=null;$!==null&&k<x.length;k++){$.index>k?(T=$,$=null):T=$.sibling;var E=h(g,$,x[k],w);if(E===null){$===null&&($=T);break}t&&$&&E.alternate===null&&e(g,$),b=r(E,b,k),C===null?v=E:C.sibling=E,C=E,$=T}if(k===x.length)return n(g,$),Ke&&Zi(g,k),v;if($===null){for(;k<x.length;k++)$=d(g,x[k],w),$!==null&&(b=r($,b,k),C===null?v=$:C.sibling=$,C=$);return Ke&&Zi(g,k),v}for($=s($);k<x.length;k++)T=p($,g,k,x[k],w),T!==null&&(t&&T.alternate!==null&&$.delete(T.key===null?k:T.key),b=r(T,b,k),C===null?v=T:C.sibling=T,C=T);return t&&$.forEach(function(O){return e(g,O)}),Ke&&Zi(g,k),v}function m(g,b,x,w){if(x==null)throw Error(Y(151));for(var v=null,C=null,$=b,k=b=0,T=null,E=x.next();$!==null&&!E.done;k++,E=x.next()){$.index>k?(T=$,$=null):T=$.sibling;var O=h(g,$,E.value,w);if(O===null){$===null&&($=T);break}t&&$&&O.alternate===null&&e(g,$),b=r(O,b,k),C===null?v=O:C.sibling=O,C=O,$=T}if(E.done)return n(g,$),Ke&&Zi(g,k),v;if($===null){for(;!E.done;k++,E=x.next())E=d(g,E.value,w),E!==null&&(b=r(E,b,k),C===null?v=E:C.sibling=E,C=E);return Ke&&Zi(g,k),v}for($=s($);!E.done;k++,E=x.next())E=p($,g,k,E.value,w),E!==null&&(t&&E.alternate!==null&&$.delete(E.key===null?k:E.key),b=r(E,b,k),C===null?v=E:C.sibling=E,C=E);return t&&$.forEach(function(B){return e(g,B)}),Ke&&Zi(g,k),v}function y(g,b,x,w){if(typeof x=="object"&&x!==null&&x.type===Rl&&x.key===null&&(x=x.props.children),typeof x=="object"&&x!==null){switch(x.$$typeof){case nf:e:{for(var v=x.key;b!==null;){if(b.key===v){if(v=x.type,v===Rl){if(b.tag===7){n(g,b.sibling),w=a(b,x.props.children),w.return=g,g=w;break e}}else if(b.elementType===v||typeof v=="object"&&v!==null&&v.$$typeof===Kr&&bC(v)===b.type){n(g,b.sibling),w=a(b,x.props),Yc(w,x),w.return=g,g=w;break e}n(g,b);break}else e(g,b);b=b.sibling}x.type===Rl?(w=go(x.props.children,g.mode,w,x.key),w.return=g,g=w):(w=Uf(x.type,x.key,x.props,null,g.mode,w),Yc(w,x),w.return=g,g=w)}return i(g);case ad:e:{for(v=x.key;b!==null;){if(b.key===v)if(b.tag===4&&b.stateNode.containerInfo===x.containerInfo&&b.stateNode.implementation===x.implementation){n(g,b.sibling),w=a(b,x.children||[]),w.return=g,g=w;break e}else{n(g,b);break}else e(g,b);b=b.sibling}w=cx(x,g.mode,w),w.return=g,g=w}return i(g);case Kr:return v=x._init,x=v(x._payload),y(g,b,x,w)}if(id(x))return f(g,b,x,w);if(jc(x)){if(v=jc(x),typeof v!="function")throw Error(Y(150));return x=v.call(x),m(g,b,x,w)}if(typeof x.then=="function")return y(g,b,uf(x),w);if(x.$$typeof===wr)return y(g,b,df(g,x),w);cf(g,x)}return typeof x=="string"&&x!==""||typeof x=="number"||typeof x=="bigint"?(x=""+x,b!==null&&b.tag===6?(n(g,b.sibling),w=a(b,x),w.return=g,g=w):(n(g,b),w=ux(x,g.mode,w),w.return=g,g=w),i(g)):n(g,b)}return function(g,b,x,w){try{Vd=0;var v=y(g,b,x,w);return Hl=null,v}catch($){if($===wd)throw $;var C=Ys(29,$,null,g.mode);return C.lanes=w,C.return=g,C}finally{}}}var $o=bk(!0),xk=bk(!1),ru=tr(null),om=tr(0);function xC(t,e){t=_r,It(om,t),It(ru,e),_r=t|e.baseLanes}function n0(){It(om,_r),It(ru,ru.current)}function ew(){_r=om.current,vn(ru),vn(om)}var oa=tr(null),Ha=null;function Zr(t){var e=t.alternate;It(un,un.current&1),It(oa,t),Ha===null&&(e===null||ru.current!==null||e.memoizedState!==null)&&(Ha=t)}function wk(t){if(t.tag===22){if(It(un,un.current),It(oa,t),Ha===null){var e=t.alternate;e!==null&&e.memoizedState!==null&&(Ha=t)}}else Jr()}function Jr(){It(un,un.current),It(oa,oa.current)}function Cr(t){vn(oa),Ha===t&&(Ha=null),vn(un)}var un=tr(0);function lm(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var _z=typeof AbortController<"u"?AbortController:function(){var t=[],e=this.signal={aborted:!1,addEventListener:function(n,s){t.push(s)}};this.abort=function(){e.aborted=!0,t.forEach(function(n){return n()})}},Oz=hn.unstable_scheduleCallback,Fz=hn.unstable_NormalPriority,on={$$typeof:wr,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function tw(){return{controller:new _z,data:new Map,refCount:0}}function vh(t){t.refCount--,t.refCount===0&&Oz(Fz,function(){t.controller.abort()})}var Sd=null,s0=0,iu=0,jl=null;function zz(t,e){if(Sd===null){var n=Sd=[];s0=0,iu=$w(),jl={status:"pending",value:void 0,then:function(s){n.push(s)}}}return s0++,e.then(wC,wC),e}function wC(){if(--s0===0&&Sd!==null){jl!==null&&(jl.status="fulfilled");var t=Sd;Sd=null,iu=0,jl=null;for(var e=0;e<t.length;e++)(0,t[e])()}}function Lz(t,e){var n=[],s={status:"pending",value:null,reason:null,then:function(a){n.push(a)}};return t.then(function(){s.status="fulfilled",s.value=e;for(var a=0;a<n.length;a++)(0,n[a])(e)},function(a){for(s.status="rejected",s.reason=a,a=0;a<n.length;a++)(0,n[a])(void 0)}),s}var vC=Oe.S;Oe.S=function(t,e){typeof e=="object"&&e!==null&&typeof e.then=="function"&&zz(t,e),vC!==null&&vC(t,e)};var mo=tr(null);function nw(){var t=mo.current;return t!==null?t:ft.pooledCache}function Pf(t,e){e===null?It(mo,mo.current):It(mo,e.pool)}function vk(){var t=nw();return t===null?null:{parent:on._currentValue,pool:t}}var xi=0,Me=null,st=null,Xt=null,um=!1,ql=!1,No=!1,cm=0,Ud=0,Xl=null,Pz=0;function Gt(){throw Error(Y(321))}function sw(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Rs(t[n],e[n]))return!1;return!0}function aw(t,e,n,s,a,r){return xi=r,Me=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Oe.H=t===null||t.memoizedState===null?jo:_i,No=!1,r=n(s,a),No=!1,ql&&(r=Ck(e,n,s,a)),Sk(t),r}function Sk(t){Oe.H=Ya;var e=st!==null&&st.next!==null;if(xi=0,Xt=st=Me=null,um=!1,Ud=0,Xl=null,e)throw Error(Y(300));t===null||wn||(t=t.dependencies,t!==null&&pm(t)&&(wn=!0))}function Ck(t,e,n,s){Me=t;var a=0;do{if(ql&&(Xl=null),Ud=0,ql=!1,25<=a)throw Error(Y(301));if(a+=1,Xt=st=null,t.updateQueue!=null){var r=t.updateQueue;r.lastEffect=null,r.events=null,r.stores=null,r.memoCache!=null&&(r.memoCache.index=0)}Oe.H=qo,r=e(n,s)}while(ql);return r}function Mz(){var t=Oe.H,e=t.useState()[0];return e=typeof e.then=="function"?Sh(e):e,t=t.useState()[0],(st!==null?st.memoizedState:null)!==t&&(Me.flags|=1024),e}function rw(){var t=cm!==0;return cm=0,t}function iw(t,e,n){e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~n}function ow(t){if(um){for(t=t.memoizedState;t!==null;){var e=t.queue;e!==null&&(e.pending=null),t=t.next}um=!1}xi=0,Xt=st=Me=null,ql=!1,Ud=cm=0,Xl=null}function rs(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Xt===null?Me.memoizedState=Xt=t:Xt=Xt.next=t,Xt}function Zt(){if(st===null){var t=Me.alternate;t=t!==null?t.memoizedState:null}else t=st.next;var e=Xt===null?Me.memoizedState:Xt.next;if(e!==null)Xt=e,st=t;else{if(t===null)throw Me.alternate===null?Error(Y(467)):Error(Y(310));st=t,t={memoizedState:st.memoizedState,baseState:st.baseState,baseQueue:st.baseQueue,queue:st.queue,next:null},Xt===null?Me.memoizedState=Xt=t:Xt=Xt.next=t}return Xt}var fg;fg=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function Sh(t){var e=Ud;return Ud+=1,Xl===null&&(Xl=[]),t=yk(Xl,t,e),e=Me,(Xt===null?e.memoizedState:Xt.next)===null&&(e=e.alternate,Oe.H=e===null||e.memoizedState===null?jo:_i),t}function mg(t){if(t!==null&&typeof t=="object"){if(typeof t.then=="function")return Sh(t);if(t.$$typeof===wr)return Pn(t)}throw Error(Y(438,String(t)))}function lw(t){var e=null,n=Me.updateQueue;if(n!==null&&(e=n.memoCache),e==null){var s=Me.alternate;s!==null&&(s=s.updateQueue,s!==null&&(s=s.memoCache,s!=null&&(e={data:s.data.map(function(a){return a.slice()}),index:0})))}if(e==null&&(e={data:[],index:0}),n===null&&(n=fg(),Me.updateQueue=n),n.memoCache=e,n=e.data[e.index],n===void 0)for(n=e.data[e.index]=Array(t),s=0;s<t;s++)n[s]=vF;return e.index++,n}function Dr(t,e){return typeof e=="function"?e(t):e}function Mf(t){var e=Zt();return uw(e,st,t)}function uw(t,e,n){var s=t.queue;if(s===null)throw Error(Y(311));s.lastRenderedReducer=n;var a=t.baseQueue,r=s.pending;if(r!==null){if(a!==null){var i=a.next;a.next=r.next,r.next=i}e.baseQueue=a=r,s.pending=null}if(r=t.baseState,a===null)t.memoizedState=r;else{e=a.next;var o=i=null,l=null,u=e,c=!1;do{var d=u.lane&-536870913;if(d!==u.lane?(qe&d)===d:(xi&d)===d){var h=u.revertLane;if(h===0)l!==null&&(l=l.next={lane:0,revertLane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),d===iu&&(c=!0);else if((xi&h)===h){u=u.next,h===iu&&(c=!0);continue}else d={lane:0,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},l===null?(o=l=d,i=r):l=l.next=d,Me.lanes|=h,vi|=h;d=u.action,No&&n(r,d),r=u.hasEagerState?u.eagerState:n(r,d)}else h={lane:d,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},l===null?(o=l=h,i=r):l=l.next=h,Me.lanes|=d,vi|=d;u=u.next}while(u!==null&&u!==e);if(l===null?i=r:l.next=o,!Rs(r,t.memoizedState)&&(wn=!0,c&&(n=jl,n!==null)))throw n;t.memoizedState=r,t.baseState=i,t.baseQueue=l,s.lastRenderedState=r}return a===null&&(s.lanes=0),[t.memoizedState,s.dispatch]}function Zb(t){var e=Zt(),n=e.queue;if(n===null)throw Error(Y(311));n.lastRenderedReducer=t;var s=n.dispatch,a=n.pending,r=e.memoizedState;if(a!==null){n.pending=null;var i=a=a.next;do r=t(r,i.action),i=i.next;while(i!==a);Rs(r,e.memoizedState)||(wn=!0),e.memoizedState=r,e.baseQueue===null&&(e.baseState=r),n.lastRenderedState=r}return[r,s]}function $k(t,e,n){var s=Me,a=Zt(),r=Ke;if(r){if(n===void 0)throw Error(Y(407));n=n()}else n=e();var i=!Rs((st||a).memoizedState,n);if(i&&(a.memoizedState=n,wn=!0),a=a.queue,cw(Ik.bind(null,s,a,t),[t]),a.getSnapshot!==e||i||Xt!==null&&Xt.memoizedState.tag&1){if(s.flags|=2048,ou(9,kk.bind(null,s,a,n,e),{destroy:void 0},null),ft===null)throw Error(Y(349));r||xi&60||Nk(s,e,n)}return n}function Nk(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=Me.updateQueue,e===null?(e=fg(),Me.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function kk(t,e,n,s){e.value=n,e.getSnapshot=s,Tk(e)&&Ek(t)}function Ik(t,e,n){return n(function(){Tk(e)&&Ek(t)})}function Tk(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!Rs(t,n)}catch{return!0}}function Ek(t){var e=bi(t,2);e!==null&&Yn(e,t,2)}function a0(t){var e=rs();if(typeof t=="function"){var n=t;if(t=n(),No){ni(!0);try{n()}finally{ni(!1)}}}return e.memoizedState=e.baseState=t,e.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:t},e}function Rk(t,e,n,s){return t.baseState=n,uw(t,st,typeof s=="function"?s:Dr)}function Bz(t,e,n,s,a){if(yg(t))throw Error(Y(485));if(t=e.action,t!==null){var r={payload:a,action:t,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(i){r.listeners.push(i)}};Oe.T!==null?n(!0):r.isTransition=!1,s(r),n=e.pending,n===null?(r.next=e.pending=r,Dk(e,r)):(r.next=n.next,e.pending=n.next=r)}}function Dk(t,e){var n=e.action,s=e.payload,a=t.state;if(e.isTransition){var r=Oe.T,i={};Oe.T=i;try{var o=n(a,s),l=Oe.S;l!==null&&l(i,o),SC(t,e,o)}catch(u){r0(t,e,u)}finally{Oe.T=r}}else try{r=n(a,s),SC(t,e,r)}catch(u){r0(t,e,u)}}function SC(t,e,n){n!==null&&typeof n=="object"&&typeof n.then=="function"?n.then(function(s){CC(t,e,s)},function(s){return r0(t,e,s)}):CC(t,e,n)}function CC(t,e,n){e.status="fulfilled",e.value=n,Ak(e),t.state=n,e=t.pending,e!==null&&(n=e.next,n===e?t.pending=null:(n=n.next,e.next=n,Dk(t,n)))}function r0(t,e,n){var s=t.pending;if(t.pending=null,s!==null){s=s.next;do e.status="rejected",e.reason=n,Ak(e),e=e.next;while(e!==s)}t.action=null}function Ak(t){t=t.listeners;for(var e=0;e<t.length;e++)(0,t[e])()}function _k(t,e){return e}function Ok(t,e){if(Ke){var n=ft.formState;if(n!==null){e:{var s=Me;if(Ke){if(In){t:{for(var a=In,r=Ba;a.nodeType!==8;){if(!r){a=null;break t}if(a=va(a.nextSibling),a===null){a=null;break t}}r=a.data,a=r==="F!"||r==="F"?a:null}if(a){In=va(a.nextSibling),s=a.data==="F!";break e}}Co(s)}s=!1}s&&(e=n[0])}}return n=rs(),n.memoizedState=n.baseState=e,s={pending:null,lanes:0,dispatch:null,lastRenderedReducer:_k,lastRenderedState:e},n.queue=s,n=Qk.bind(null,Me,s),s.dispatch=n,s=a0(!1),r=fw.bind(null,Me,!1,s.queue),s=rs(),a={state:e,dispatch:null,action:t,pending:null},s.queue=a,n=Bz.bind(null,Me,a,r,n),a.dispatch=n,s.memoizedState=t,[e,n,!1]}function Fk(t){var e=Zt();return zk(e,st,t)}function zk(t,e,n){e=uw(t,e,_k)[0],t=Mf(Dr)[0],e=typeof e=="object"&&e!==null&&typeof e.then=="function"?Sh(e):e;var s=Zt(),a=s.queue,r=a.dispatch;return n!==s.memoizedState&&(Me.flags|=2048,ou(9,Vz.bind(null,a,n),{destroy:void 0},null)),[e,r,t]}function Vz(t,e){t.action=e}function Lk(t){var e=Zt(),n=st;if(n!==null)return zk(e,n,t);Zt(),e=e.memoizedState,n=Zt();var s=n.queue.dispatch;return n.memoizedState=t,[e,s,!1]}function ou(t,e,n,s){return t={tag:t,create:e,inst:n,deps:s,next:null},e=Me.updateQueue,e===null&&(e=fg(),Me.updateQueue=e),n=e.lastEffect,n===null?e.lastEffect=t.next=t:(s=n.next,n.next=t,t.next=s,e.lastEffect=t),t}function Pk(){return Zt().memoizedState}function Bf(t,e,n,s){var a=rs();Me.flags|=t,a.memoizedState=ou(1|e,n,{destroy:void 0},s===void 0?null:s)}function gg(t,e,n,s){var a=Zt();s=s===void 0?null:s;var r=a.memoizedState.inst;st!==null&&s!==null&&sw(s,st.memoizedState.deps)?a.memoizedState=ou(e,n,r,s):(Me.flags|=t,a.memoizedState=ou(1|e,n,r,s))}function $C(t,e){Bf(8390656,8,t,e)}function cw(t,e){gg(2048,8,t,e)}function Mk(t,e){return gg(4,2,t,e)}function Bk(t,e){return gg(4,4,t,e)}function Vk(t,e){if(typeof e=="function"){t=t();var n=e(t);return function(){typeof n=="function"?n():e(null)}}if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function Uk(t,e,n){n=n!=null?n.concat([t]):null,gg(4,4,Vk.bind(null,e,t),n)}function dw(){}function Wk(t,e){var n=Zt();e=e===void 0?null:e;var s=n.memoizedState;return e!==null&&sw(e,s[1])?s[0]:(n.memoizedState=[t,e],t)}function Gk(t,e){var n=Zt();e=e===void 0?null:e;var s=n.memoizedState;if(e!==null&&sw(e,s[1]))return s[0];if(s=t(),No){ni(!0);try{t()}finally{ni(!1)}}return n.memoizedState=[s,e],s}function hw(t,e,n){return n===void 0||xi&1073741824?t.memoizedState=e:(t.memoizedState=n,t=AI(),Me.lanes|=t,vi|=t,n)}function Hk(t,e,n,s){return Rs(n,e)?n:ru.current!==null?(t=hw(t,n,s),Rs(t,e)||(wn=!0),t):xi&42?(t=AI(),Me.lanes|=t,vi|=t,e):(wn=!0,t.memoizedState=n)}function jk(t,e,n,s,a){var r=wt.p;wt.p=r!==0&&8>r?r:8;var i=Oe.T,o={};Oe.T=o,fw(t,!1,e,n);try{var l=a(),u=Oe.S;if(u!==null&&u(o,l),l!==null&&typeof l=="object"&&typeof l.then=="function"){var c=Lz(l,s);Cd(t,e,c,Es(t))}else Cd(t,e,s,Es(t))}catch(d){Cd(t,e,{then:function(){},status:"rejected",reason:d},Es())}finally{wt.p=r,Oe.T=i}}function Uz(){}function i0(t,e,n,s){if(t.tag!==5)throw Error(Y(476));var a=qk(t).queue;jk(t,a,e,po,n===null?Uz:function(){return Xk(t),n(s)})}function qk(t){var e=t.memoizedState;if(e!==null)return e;e={memoizedState:po,baseState:po,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:po},next:null};var n={};return e.next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:n},next:null},t.memoizedState=e,t=t.alternate,t!==null&&(t.memoizedState=e),e}function Xk(t){var e=qk(t).next.queue;Cd(t,e,{},Es())}function pw(){return Pn(jd)}function Kk(){return Zt().memoizedState}function Yk(){return Zt().memoizedState}function Wz(t){for(var e=t.return;e!==null;){switch(e.tag){case 24:case 3:var n=Es();t=li(n);var s=ui(e,t,n);s!==null&&(Yn(s,e,n),Nd(s,e,n)),e={cache:tw()},t.payload=e;return}e=e.return}}function Gz(t,e,n){var s=Es();n={lane:s,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null},yg(t)?Zk(e,n):(n=Q1(t,e,n,s),n!==null&&(Yn(n,t,s),Jk(n,e,s)))}function Qk(t,e,n){var s=Es();Cd(t,e,n,s)}function Cd(t,e,n,s){var a={lane:s,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(yg(t))Zk(e,a);else{var r=t.alternate;if(t.lanes===0&&(r===null||r.lanes===0)&&(r=e.lastRenderedReducer,r!==null))try{var i=e.lastRenderedState,o=r(i,n);if(a.hasEagerState=!0,a.eagerState=o,Rs(o,i))return pg(t,e,a,0),ft===null&&hg(),!1}catch{}finally{}if(n=Q1(t,e,a,s),n!==null)return Yn(n,t,s),Jk(n,e,s),!0}return!1}function fw(t,e,n,s){if(s={lane:2,revertLane:$w(),action:s,hasEagerState:!1,eagerState:null,next:null},yg(t)){if(e)throw Error(Y(479))}else e=Q1(t,n,s,2),e!==null&&Yn(e,t,2)}function yg(t){var e=t.alternate;return t===Me||e!==null&&e===Me}function Zk(t,e){ql=um=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function Jk(t,e,n){if(n&4194176){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,VN(t,n)}}var Ya={readContext:Pn,use:mg,useCallback:Gt,useContext:Gt,useEffect:Gt,useImperativeHandle:Gt,useLayoutEffect:Gt,useInsertionEffect:Gt,useMemo:Gt,useReducer:Gt,useRef:Gt,useState:Gt,useDebugValue:Gt,useDeferredValue:Gt,useTransition:Gt,useSyncExternalStore:Gt,useId:Gt};Ya.useCacheRefresh=Gt;Ya.useMemoCache=Gt;Ya.useHostTransitionStatus=Gt;Ya.useFormState=Gt;Ya.useActionState=Gt;Ya.useOptimistic=Gt;var jo={readContext:Pn,use:mg,useCallback:function(t,e){return rs().memoizedState=[t,e===void 0?null:e],t},useContext:Pn,useEffect:$C,useImperativeHandle:function(t,e,n){n=n!=null?n.concat([t]):null,Bf(4194308,4,Vk.bind(null,e,t),n)},useLayoutEffect:function(t,e){return Bf(4194308,4,t,e)},useInsertionEffect:function(t,e){Bf(4,2,t,e)},useMemo:function(t,e){var n=rs();e=e===void 0?null:e;var s=t();if(No){ni(!0);try{t()}finally{ni(!1)}}return n.memoizedState=[s,e],s},useReducer:function(t,e,n){var s=rs();if(n!==void 0){var a=n(e);if(No){ni(!0);try{n(e)}finally{ni(!1)}}}else a=e;return s.memoizedState=s.baseState=a,t={pending:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:a},s.queue=t,t=t.dispatch=Gz.bind(null,Me,t),[s.memoizedState,t]},useRef:function(t){var e=rs();return t={current:t},e.memoizedState=t},useState:function(t){t=a0(t);var e=t.queue,n=Qk.bind(null,Me,e);return e.dispatch=n,[t.memoizedState,n]},useDebugValue:dw,useDeferredValue:function(t,e){var n=rs();return hw(n,t,e)},useTransition:function(){var t=a0(!1);return t=jk.bind(null,Me,t.queue,!0,!1),rs().memoizedState=t,[!1,t]},useSyncExternalStore:function(t,e,n){var s=Me,a=rs();if(Ke){if(n===void 0)throw Error(Y(407));n=n()}else{if(n=e(),ft===null)throw Error(Y(349));qe&60||Nk(s,e,n)}a.memoizedState=n;var r={value:n,getSnapshot:e};return a.queue=r,$C(Ik.bind(null,s,r,t),[t]),s.flags|=2048,ou(9,kk.bind(null,s,r,n,e),{destroy:void 0},null),n},useId:function(){var t=rs(),e=ft.identifierPrefix;if(Ke){var n=Sr,s=vr;n=(s&~(1<<32-Ts(s)-1)).toString(32)+n,e=":"+e+"R"+n,n=cm++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=Pz++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},useCacheRefresh:function(){return rs().memoizedState=Wz.bind(null,Me)}};jo.useMemoCache=lw;jo.useHostTransitionStatus=pw;jo.useFormState=Ok;jo.useActionState=Ok;jo.useOptimistic=function(t){var e=rs();e.memoizedState=e.baseState=t;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return e.queue=n,e=fw.bind(null,Me,!0,n),n.dispatch=e,[t,e]};var _i={readContext:Pn,use:mg,useCallback:Wk,useContext:Pn,useEffect:cw,useImperativeHandle:Uk,useInsertionEffect:Mk,useLayoutEffect:Bk,useMemo:Gk,useReducer:Mf,useRef:Pk,useState:function(){return Mf(Dr)},useDebugValue:dw,useDeferredValue:function(t,e){var n=Zt();return Hk(n,st.memoizedState,t,e)},useTransition:function(){var t=Mf(Dr)[0],e=Zt().memoizedState;return[typeof t=="boolean"?t:Sh(t),e]},useSyncExternalStore:$k,useId:Kk};_i.useCacheRefresh=Yk;_i.useMemoCache=lw;_i.useHostTransitionStatus=pw;_i.useFormState=Fk;_i.useActionState=Fk;_i.useOptimistic=function(t,e){var n=Zt();return Rk(n,st,t,e)};var qo={readContext:Pn,use:mg,useCallback:Wk,useContext:Pn,useEffect:cw,useImperativeHandle:Uk,useInsertionEffect:Mk,useLayoutEffect:Bk,useMemo:Gk,useReducer:Zb,useRef:Pk,useState:function(){return Zb(Dr)},useDebugValue:dw,useDeferredValue:function(t,e){var n=Zt();return st===null?hw(n,t,e):Hk(n,st.memoizedState,t,e)},useTransition:function(){var t=Zb(Dr)[0],e=Zt().memoizedState;return[typeof t=="boolean"?t:Sh(t),e]},useSyncExternalStore:$k,useId:Kk};qo.useCacheRefresh=Yk;qo.useMemoCache=lw;qo.useHostTransitionStatus=pw;qo.useFormState=Lk;qo.useActionState=Lk;qo.useOptimistic=function(t,e){var n=Zt();return st!==null?Rk(n,st,t,e):(n.baseState=t,[t,n.queue.dispatch])};function Jb(t,e,n,s){e=t.memoizedState,n=n(s,e),n=n==null?e:St({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var o0={isMounted:function(t){return(t=t._reactInternals)?Nu(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var s=Es(),a=li(s);a.payload=e,n!=null&&(a.callback=n),e=ui(t,a,s),e!==null&&(Yn(e,t,s),Nd(e,t,s))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var s=Es(),a=li(s);a.tag=1,a.payload=e,n!=null&&(a.callback=n),e=ui(t,a,s),e!==null&&(Yn(e,t,s),Nd(e,t,s))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=Es(),s=li(n);s.tag=2,e!=null&&(s.callback=e),e=ui(t,s,n),e!==null&&(Yn(e,t,n),Nd(e,t,n))}};function NC(t,e,n,s,a,r,i){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(s,r,i):e.prototype&&e.prototype.isPureReactComponent?!Md(n,s)||!Md(a,r):!0}function kC(t,e,n,s){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,s),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,s),e.state!==t&&o0.enqueueReplaceState(e,e.state,null)}function ko(t,e){var n=e;if("ref"in e){n={};for(var s in e)s!=="ref"&&(n[s]=e[s])}if(t=t.defaultProps){n===e&&(n=St({},n));for(var a in t)n[a]===void 0&&(n[a]=t[a])}return n}var dm=typeof reportError=="function"?reportError:function(t){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof t=="object"&&t!==null&&typeof t.message=="string"?String(t.message):String(t),error:t});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",t);return}console.error(t)};function eI(t){dm(t)}function tI(t){console.error(t)}function nI(t){dm(t)}function hm(t,e){try{var n=t.onUncaughtError;n(e.value,{componentStack:e.stack})}catch(s){setTimeout(function(){throw s})}}function IC(t,e,n){try{var s=t.onCaughtError;s(n.value,{componentStack:n.stack,errorBoundary:e.tag===1?e.stateNode:null})}catch(a){setTimeout(function(){throw a})}}function l0(t,e,n){return n=li(n),n.tag=3,n.payload={element:null},n.callback=function(){hm(t,e)},n}function sI(t){return t=li(t),t.tag=3,t}function aI(t,e,n,s){var a=n.type.getDerivedStateFromError;if(typeof a=="function"){var r=s.value;t.payload=function(){return a(r)},t.callback=function(){IC(e,n,s)}}var i=n.stateNode;i!==null&&typeof i.componentDidCatch=="function"&&(t.callback=function(){IC(e,n,s),typeof a!="function"&&(di===null?di=new Set([this]):di.add(this));var o=s.stack;this.componentDidCatch(s.value,{componentStack:o!==null?o:""})})}function Hz(t,e,n,s,a){if(n.flags|=32768,s!==null&&typeof s=="object"&&typeof s.then=="function"){if(e=n.alternate,e!==null&&Ch(e,n,a,!0),n=oa.current,n!==null){switch(n.tag){case 13:return Ha===null?C0():n.alternate===null&&Pt===0&&(Pt=3),n.flags&=-257,n.flags|=65536,n.lanes=a,s===t0?n.flags|=16384:(e=n.updateQueue,e===null?n.updateQueue=new Set([s]):e.add(s),hx(t,s,a)),!1;case 22:return n.flags|=65536,s===t0?n.flags|=16384:(e=n.updateQueue,e===null?(e={transitions:null,markerInstances:null,retryQueue:new Set([s])},n.updateQueue=e):(n=e.retryQueue,n===null?e.retryQueue=new Set([s]):n.add(s)),hx(t,s,a)),!1}throw Error(Y(435,n.tag))}return hx(t,s,a),C0(),!1}if(Ke)return e=oa.current,e!==null?(!(e.flags&65536)&&(e.flags|=256),e.flags|=65536,e.lanes=a,s!==e0&&(t=Error(Y(422),{cause:s}),Bd(Xs(t,n)))):(s!==e0&&(e=Error(Y(423),{cause:s}),Bd(Xs(e,n))),t=t.current.alternate,t.flags|=65536,a&=-a,t.lanes|=a,s=Xs(s,n),a=l0(t.stateNode,s,a),rx(t,a),Pt!==4&&(Pt=2)),!1;var r=Error(Y(520),{cause:s});if(r=Xs(r,n),Ed===null?Ed=[r]:Ed.push(r),Pt!==4&&(Pt=2),e===null)return!0;s=Xs(s,n),n=e;do{switch(n.tag){case 3:return n.flags|=65536,t=a&-a,n.lanes|=t,t=l0(n.stateNode,s,t),rx(n,t),!1;case 1:if(e=n.type,r=n.stateNode,(n.flags&128)===0&&(typeof e.getDerivedStateFromError=="function"||r!==null&&typeof r.componentDidCatch=="function"&&(di===null||!di.has(r))))return n.flags|=65536,a&=-a,n.lanes|=a,a=sI(a),aI(a,t,n,s),rx(n,a),!1}n=n.return}while(n!==null);return!1}var rI=Error(Y(461)),wn=!1;function kn(t,e,n,s){e.child=t===null?xk(e,null,n,s):$o(e,t.child,n,s)}function TC(t,e,n,s,a){n=n.render;var r=e.ref;if("ref"in s){var i={};for(var o in s)o!=="ref"&&(i[o]=s[o])}else i=s;return Io(e),s=aw(t,e,n,i,r,a),o=rw(),t!==null&&!wn?(iw(t,e,a),Ar(t,e,a)):(Ke&&o&&Z1(e),e.flags|=1,kn(t,e,s,a),e.child)}function EC(t,e,n,s,a){if(t===null){var r=n.type;return typeof r=="function"&&!xw(r)&&r.defaultProps===void 0&&n.compare===null?(e.tag=15,e.type=r,iI(t,e,r,s,a)):(t=Uf(n.type,null,s,e,e.mode,a),t.ref=e.ref,t.return=e,e.child=t)}if(r=t.child,!mw(t,a)){var i=r.memoizedProps;if(n=n.compare,n=n!==null?n:Md,n(i,s)&&t.ref===e.ref)return Ar(t,e,a)}return e.flags|=1,t=ci(r,s),t.ref=e.ref,t.return=e,e.child=t}function iI(t,e,n,s,a){if(t!==null){var r=t.memoizedProps;if(Md(r,s)&&t.ref===e.ref)if(wn=!1,e.pendingProps=s=r,mw(t,a))t.flags&131072&&(wn=!0);else return e.lanes=t.lanes,Ar(t,e,a)}return u0(t,e,n,s,a)}function oI(t,e,n){var s=e.pendingProps,a=s.children,r=(e.stateNode._pendingVisibility&2)!==0,i=t!==null?t.memoizedState:null;if($d(t,e),s.mode==="hidden"||r){if(e.flags&128){if(s=i!==null?i.baseLanes|n:n,t!==null){for(a=e.child=t.child,r=0;a!==null;)r=r|a.lanes|a.childLanes,a=a.sibling;e.childLanes=r&~s}else e.childLanes=0,e.child=null;return RC(t,e,s,n)}if(n&536870912)e.memoizedState={baseLanes:0,cachePool:null},t!==null&&Pf(e,i!==null?i.cachePool:null),i!==null?xC(e,i):n0(),wk(e);else return e.lanes=e.childLanes=536870912,RC(t,e,i!==null?i.baseLanes|n:n,n)}else i!==null?(Pf(e,i.cachePool),xC(e,i),Jr(),e.memoizedState=null):(t!==null&&Pf(e,null),n0(),Jr());return kn(t,e,a,n),e.child}function RC(t,e,n,s){var a=nw();return a=a===null?null:{parent:on._currentValue,pool:a},e.memoizedState={baseLanes:n,cachePool:a},t!==null&&Pf(e,null),n0(),wk(e),t!==null&&Ch(t,e,s,!0),null}function $d(t,e){var n=e.ref;if(n===null)t!==null&&t.ref!==null&&(e.flags|=2097664);else{if(typeof n!="function"&&typeof n!="object")throw Error(Y(284));(t===null||t.ref!==n)&&(e.flags|=2097664)}}function u0(t,e,n,s,a){return Io(e),n=aw(t,e,n,s,void 0,a),s=rw(),t!==null&&!wn?(iw(t,e,a),Ar(t,e,a)):(Ke&&s&&Z1(e),e.flags|=1,kn(t,e,n,a),e.child)}function DC(t,e,n,s,a,r){return Io(e),e.updateQueue=null,n=Ck(e,s,n,a),Sk(t),s=rw(),t!==null&&!wn?(iw(t,e,r),Ar(t,e,r)):(Ke&&s&&Z1(e),e.flags|=1,kn(t,e,n,r),e.child)}function AC(t,e,n,s,a){if(Io(e),e.stateNode===null){var r=Ll,i=n.contextType;typeof i=="object"&&i!==null&&(r=Pn(i)),r=new n(s,r),e.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,r.updater=o0,e.stateNode=r,r._reactInternals=e,r=e.stateNode,r.props=s,r.state=e.memoizedState,r.refs={},gw(e),i=n.contextType,r.context=typeof i=="object"&&i!==null?Pn(i):Ll,r.state=e.memoizedState,i=n.getDerivedStateFromProps,typeof i=="function"&&(Jb(e,n,i,s),r.state=e.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof r.getSnapshotBeforeUpdate=="function"||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(i=r.state,typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount(),i!==r.state&&o0.enqueueReplaceState(r,r.state,null),Id(e,s,r,a),kd(),r.state=e.memoizedState),typeof r.componentDidMount=="function"&&(e.flags|=4194308),s=!0}else if(t===null){r=e.stateNode;var o=e.memoizedProps,l=ko(n,o);r.props=l;var u=r.context,c=n.contextType;i=Ll,typeof c=="object"&&c!==null&&(i=Pn(c));var d=n.getDerivedStateFromProps;c=typeof d=="function"||typeof r.getSnapshotBeforeUpdate=="function",o=e.pendingProps!==o,c||typeof r.UNSAFE_componentWillReceiveProps!="function"&&typeof r.componentWillReceiveProps!="function"||(o||u!==i)&&kC(e,r,s,i),Yr=!1;var h=e.memoizedState;r.state=h,Id(e,s,r,a),kd(),u=e.memoizedState,o||h!==u||Yr?(typeof d=="function"&&(Jb(e,n,d,s),u=e.memoizedState),(l=Yr||NC(e,n,l,s,h,u,i))?(c||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount()),typeof r.componentDidMount=="function"&&(e.flags|=4194308)):(typeof r.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=s,e.memoizedState=u),r.props=s,r.state=u,r.context=i,s=l):(typeof r.componentDidMount=="function"&&(e.flags|=4194308),s=!1)}else{r=e.stateNode,m0(t,e),i=e.memoizedProps,c=ko(n,i),r.props=c,d=e.pendingProps,h=r.context,u=n.contextType,l=Ll,typeof u=="object"&&u!==null&&(l=Pn(u)),o=n.getDerivedStateFromProps,(u=typeof o=="function"||typeof r.getSnapshotBeforeUpdate=="function")||typeof r.UNSAFE_componentWillReceiveProps!="function"&&typeof r.componentWillReceiveProps!="function"||(i!==d||h!==l)&&kC(e,r,s,l),Yr=!1,h=e.memoizedState,r.state=h,Id(e,s,r,a),kd();var p=e.memoizedState;i!==d||h!==p||Yr||t!==null&&t.dependencies!==null&&pm(t.dependencies)?(typeof o=="function"&&(Jb(e,n,o,s),p=e.memoizedState),(c=Yr||NC(e,n,c,s,h,p,l)||t!==null&&t.dependencies!==null&&pm(t.dependencies))?(u||typeof r.UNSAFE_componentWillUpdate!="function"&&typeof r.componentWillUpdate!="function"||(typeof r.componentWillUpdate=="function"&&r.componentWillUpdate(s,p,l),typeof r.UNSAFE_componentWillUpdate=="function"&&r.UNSAFE_componentWillUpdate(s,p,l)),typeof r.componentDidUpdate=="function"&&(e.flags|=4),typeof r.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof r.componentDidUpdate!="function"||i===t.memoizedProps&&h===t.memoizedState||(e.flags|=4),typeof r.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&h===t.memoizedState||(e.flags|=1024),e.memoizedProps=s,e.memoizedState=p),r.props=s,r.state=p,r.context=l,s=c):(typeof r.componentDidUpdate!="function"||i===t.memoizedProps&&h===t.memoizedState||(e.flags|=4),typeof r.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&h===t.memoizedState||(e.flags|=1024),s=!1)}return r=s,$d(t,e),s=(e.flags&128)!==0,r||s?(r=e.stateNode,n=s&&typeof n.getDerivedStateFromError!="function"?null:r.render(),e.flags|=1,t!==null&&s?(e.child=$o(e,t.child,null,a),e.child=$o(e,null,n,a)):kn(t,e,n,a),e.memoizedState=r.state,t=e.child):t=Ar(t,e,a),t}function _C(t,e,n,s){return wh(),e.flags|=256,kn(t,e,n,s),e.child}var ex={dehydrated:null,treeContext:null,retryLane:0};function tx(t){return{baseLanes:t,cachePool:vk()}}function nx(t,e,n){return t=t!==null?t.childLanes&~n:0,e&&(t|=Qs),t}function lI(t,e,n){var s=e.pendingProps,a=!1,r=(e.flags&128)!==0,i;if((i=r)||(i=t!==null&&t.memoizedState===null?!1:(un.current&2)!==0),i&&(a=!0,e.flags&=-129),i=(e.flags&32)!==0,e.flags&=-33,t===null){if(Ke){if(a?Zr(e):Jr(),Ke){var o=In,l;if(l=o){e:{for(l=o,o=Ba;l.nodeType!==8;){if(!o){o=null;break e}if(l=va(l.nextSibling),l===null){o=null;break e}}o=l}o!==null?(e.memoizedState={dehydrated:o,treeContext:fo!==null?{id:vr,overflow:Sr}:null,retryLane:536870912},l=Ys(18,null,null,0),l.stateNode=o,l.return=e,e.child=l,jn=e,In=null,l=!0):l=!1}l||Co(e)}if(o=e.memoizedState,o!==null&&(o=o.dehydrated,o!==null))return o.data==="$!"?e.lanes=16:e.lanes=536870912,null;Cr(e)}return o=s.children,s=s.fallback,a?(Jr(),a=e.mode,o=d0({mode:"hidden",children:o},a),s=go(s,a,n,null),o.return=e,s.return=e,o.sibling=s,e.child=o,a=e.child,a.memoizedState=tx(n),a.childLanes=nx(t,i,n),e.memoizedState=ex,s):(Zr(e),c0(e,o))}if(l=t.memoizedState,l!==null&&(o=l.dehydrated,o!==null)){if(r)e.flags&256?(Zr(e),e.flags&=-257,e=sx(t,e,n)):e.memoizedState!==null?(Jr(),e.child=t.child,e.flags|=128,e=null):(Jr(),a=s.fallback,o=e.mode,s=d0({mode:"visible",children:s.children},o),a=go(a,o,n,null),a.flags|=2,s.return=e,a.return=e,s.sibling=a,e.child=s,$o(e,t.child,null,n),s=e.child,s.memoizedState=tx(n),s.childLanes=nx(t,i,n),e.memoizedState=ex,e=a);else if(Zr(e),o.data==="$!"){if(i=o.nextSibling&&o.nextSibling.dataset,i)var u=i.dgst;i=u,s=Error(Y(419)),s.stack="",s.digest=i,Bd({value:s,source:null,stack:null}),e=sx(t,e,n)}else if(wn||Ch(t,e,n,!1),i=(n&t.childLanes)!==0,wn||i){if(i=ft,i!==null){if(s=n&-n,s&42)s=1;else switch(s){case 2:s=1;break;case 8:s=4;break;case 32:s=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:s=64;break;case 268435456:s=134217728;break;default:s=0}if(s=s&(i.suspendedLanes|n)?0:s,s!==0&&s!==l.retryLane)throw l.retryLane=s,bi(t,s),Yn(i,t,s),rI}o.data==="$?"||C0(),e=sx(t,e,n)}else o.data==="$?"?(e.flags|=128,e.child=t.child,e=iL.bind(null,t),o._reactRetry=e,e=null):(t=l.treeContext,In=va(o.nextSibling),jn=e,Ke=!0,ba=null,Ba=!1,t!==null&&(Hs[js++]=vr,Hs[js++]=Sr,Hs[js++]=fo,vr=t.id,Sr=t.overflow,fo=e),e=c0(e,s.children),e.flags|=4096);return e}return a?(Jr(),a=s.fallback,o=e.mode,l=t.child,u=l.sibling,s=ci(l,{mode:"hidden",children:s.children}),s.subtreeFlags=l.subtreeFlags&31457280,u!==null?a=ci(u,a):(a=go(a,o,n,null),a.flags|=2),a.return=e,s.return=e,s.sibling=a,e.child=s,s=a,a=e.child,o=t.child.memoizedState,o===null?o=tx(n):(l=o.cachePool,l!==null?(u=on._currentValue,l=l.parent!==u?{parent:u,pool:u}:l):l=vk(),o={baseLanes:o.baseLanes|n,cachePool:l}),a.memoizedState=o,a.childLanes=nx(t,i,n),e.memoizedState=ex,s):(Zr(e),n=t.child,t=n.sibling,n=ci(n,{mode:"visible",children:s.children}),n.return=e,n.sibling=null,t!==null&&(i=e.deletions,i===null?(e.deletions=[t],e.flags|=16):i.push(t)),e.child=n,e.memoizedState=null,n)}function c0(t,e){return e=d0({mode:"visible",children:e},t.mode),e.return=t,t.child=e}function d0(t,e){return RI(t,e,0,null)}function sx(t,e,n){return $o(e,t.child,null,n),t=c0(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function OC(t,e,n){t.lanes|=e;var s=t.alternate;s!==null&&(s.lanes|=e),p0(t.return,e,n)}function ax(t,e,n,s,a){var r=t.memoizedState;r===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:s,tail:n,tailMode:a}:(r.isBackwards=e,r.rendering=null,r.renderingStartTime=0,r.last=s,r.tail=n,r.tailMode=a)}function uI(t,e,n){var s=e.pendingProps,a=s.revealOrder,r=s.tail;if(kn(t,e,s.children,n),s=un.current,s&2)s=s&1|2,e.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&OC(t,n,e);else if(t.tag===19)OC(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}s&=1}switch(It(un,s),a){case"forwards":for(n=e.child,a=null;n!==null;)t=n.alternate,t!==null&&lm(t)===null&&(a=n),n=n.sibling;n=a,n===null?(a=e.child,e.child=null):(a=n.sibling,n.sibling=null),ax(e,!1,a,n,r);break;case"backwards":for(n=null,a=e.child,e.child=null;a!==null;){if(t=a.alternate,t!==null&&lm(t)===null){e.child=a;break}t=a.sibling,a.sibling=n,n=a,a=t}ax(e,!0,n,null,r);break;case"together":ax(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Ar(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),vi|=e.lanes,!(n&e.childLanes))if(t!==null){if(Ch(t,e,n,!1),(n&e.childLanes)===0)return null}else return null;if(t!==null&&e.child!==t.child)throw Error(Y(153));if(e.child!==null){for(t=e.child,n=ci(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=ci(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function mw(t,e){return t.lanes&e?!0:(t=t.dependencies,!!(t!==null&&pm(t)))}function jz(t,e,n){switch(e.tag){case 3:Jf(e,e.stateNode.containerInfo),ei(e,on,t.memoizedState.cache),wh();break;case 27:case 5:Hx(e);break;case 4:Jf(e,e.stateNode.containerInfo);break;case 10:ei(e,e.type,e.memoizedProps.value);break;case 13:var s=e.memoizedState;if(s!==null)return s.dehydrated!==null?(Zr(e),e.flags|=128,null):n&e.child.childLanes?lI(t,e,n):(Zr(e),t=Ar(t,e,n),t!==null?t.sibling:null);Zr(e);break;case 19:var a=(t.flags&128)!==0;if(s=(n&e.childLanes)!==0,s||(Ch(t,e,n,!1),s=(n&e.childLanes)!==0),a){if(s)return uI(t,e,n);e.flags|=128}if(a=e.memoizedState,a!==null&&(a.rendering=null,a.tail=null,a.lastEffect=null),It(un,un.current),s)break;return null;case 22:case 23:return e.lanes=0,oI(t,e,n);case 24:ei(e,on,t.memoizedState.cache)}return Ar(t,e,n)}function cI(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps)wn=!0;else{if(!mw(t,n)&&!(e.flags&128))return wn=!1,jz(t,e,n);wn=!!(t.flags&131072)}else wn=!1,Ke&&e.flags&1048576&&mk(e,im,e.index);switch(e.lanes=0,e.tag){case 16:e:{t=e.pendingProps;var s=e.elementType,a=s._init;if(s=a(s._payload),e.type=s,typeof s=="function")xw(s)?(t=ko(s,t),e.tag=1,e=AC(null,e,s,t,n)):(e.tag=0,e=u0(null,e,s,t,n));else{if(s!=null){if(a=s.$$typeof,a===B1){e.tag=11,e=TC(null,e,s,t,n);break e}else if(a===V1){e.tag=14,e=EC(null,e,s,t,n);break e}}throw e=Wx(s)||s,Error(Y(306,e,""))}}return e;case 0:return u0(t,e,e.type,e.pendingProps,n);case 1:return s=e.type,a=ko(s,e.pendingProps),AC(t,e,s,a,n);case 3:e:{if(Jf(e,e.stateNode.containerInfo),t===null)throw Error(Y(387));var r=e.pendingProps;a=e.memoizedState,s=a.element,m0(t,e),Id(e,r,null,n);var i=e.memoizedState;if(r=i.cache,ei(e,on,r),r!==a.cache&&f0(e,[on],n,!0),kd(),r=i.element,a.isDehydrated)if(a={element:r,isDehydrated:!1,cache:i.cache},e.updateQueue.baseState=a,e.memoizedState=a,e.flags&256){e=_C(t,e,r,n);break e}else if(r!==s){s=Xs(Error(Y(424)),e),Bd(s),e=_C(t,e,r,n);break e}else for(In=va(e.stateNode.containerInfo.firstChild),jn=e,Ke=!0,ba=null,Ba=!0,n=xk(e,null,r,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(wh(),r===s){e=Ar(t,e,n);break e}kn(t,e,r,n)}e=e.child}return e;case 26:return $d(t,e),t===null?(n=ZC(e.type,null,e.pendingProps,null))?e.memoizedState=n:Ke||(n=e.type,t=e.pendingProps,s=wm(oi.current).createElement(n),s[Ln]=e,s[cs]=t,Tn(s,n,t),yn(s),e.stateNode=s):e.memoizedState=ZC(e.type,t.memoizedProps,e.pendingProps,t.memoizedState),null;case 27:return Hx(e),t===null&&Ke&&(s=e.stateNode=XI(e.type,e.pendingProps,oi.current),jn=e,Ba=!0,In=va(s.firstChild)),s=e.pendingProps.children,t!==null||Ke?kn(t,e,s,n):e.child=$o(e,null,s,n),$d(t,e),e.child;case 5:return t===null&&Ke&&((a=s=In)&&(s=SL(s,e.type,e.pendingProps,Ba),s!==null?(e.stateNode=s,jn=e,In=va(s.firstChild),Ba=!1,a=!0):a=!1),a||Co(e)),Hx(e),a=e.type,r=e.pendingProps,i=t!==null?t.memoizedProps:null,s=r.children,T0(a,r)?s=null:i!==null&&T0(a,i)&&(e.flags|=32),e.memoizedState!==null&&(a=aw(t,e,Mz,null,null,n),jd._currentValue=a),$d(t,e),kn(t,e,s,n),e.child;case 6:return t===null&&Ke&&((t=n=In)&&(n=CL(n,e.pendingProps,Ba),n!==null?(e.stateNode=n,jn=e,In=null,t=!0):t=!1),t||Co(e)),null;case 13:return lI(t,e,n);case 4:return Jf(e,e.stateNode.containerInfo),s=e.pendingProps,t===null?e.child=$o(e,null,s,n):kn(t,e,s,n),e.child;case 11:return TC(t,e,e.type,e.pendingProps,n);case 7:return kn(t,e,e.pendingProps,n),e.child;case 8:return kn(t,e,e.pendingProps.children,n),e.child;case 12:return kn(t,e,e.pendingProps.children,n),e.child;case 10:return s=e.pendingProps,ei(e,e.type,s.value),kn(t,e,s.children,n),e.child;case 9:return a=e.type._context,s=e.pendingProps.children,Io(e),a=Pn(a),s=s(a),e.flags|=1,kn(t,e,s,n),e.child;case 14:return EC(t,e,e.type,e.pendingProps,n);case 15:return iI(t,e,e.type,e.pendingProps,n);case 19:return uI(t,e,n);case 22:return oI(t,e,n);case 24:return Io(e),s=Pn(on),t===null?(a=nw(),a===null&&(a=ft,r=tw(),a.pooledCache=r,r.refCount++,r!==null&&(a.pooledCacheLanes|=n),a=r),e.memoizedState={parent:s,cache:a},gw(e),ei(e,on,a)):(t.lanes&n&&(m0(t,e),Id(e,null,null,n),kd()),a=t.memoizedState,r=e.memoizedState,a.parent!==s?(a={parent:s,cache:s},e.memoizedState=a,e.lanes===0&&(e.memoizedState=e.updateQueue.baseState=a),ei(e,on,s)):(s=r.cache,ei(e,on,s),s!==a.cache&&f0(e,[on],n,!0))),kn(t,e,e.pendingProps.children,n),e.child;case 29:throw e.pendingProps}throw Error(Y(156,e.tag))}var h0=tr(null),Xo=null,$r=null;function ei(t,e,n){It(h0,e._currentValue),e._currentValue=n}function Nr(t){t._currentValue=h0.current,vn(h0)}function p0(t,e,n){for(;t!==null;){var s=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,s!==null&&(s.childLanes|=e)):s!==null&&(s.childLanes&e)!==e&&(s.childLanes|=e),t===n)break;t=t.return}}function f0(t,e,n,s){var a=t.child;for(a!==null&&(a.return=t);a!==null;){var r=a.dependencies;if(r!==null){var i=a.child;r=r.firstContext;e:for(;r!==null;){var o=r;r=a;for(var l=0;l<e.length;l++)if(o.context===e[l]){r.lanes|=n,o=r.alternate,o!==null&&(o.lanes|=n),p0(r.return,n,t),s||(i=null);break e}r=o.next}}else if(a.tag===18){if(i=a.return,i===null)throw Error(Y(341));i.lanes|=n,r=i.alternate,r!==null&&(r.lanes|=n),p0(i,n,t),i=null}else i=a.child;if(i!==null)i.return=a;else for(i=a;i!==null;){if(i===t){i=null;break}if(a=i.sibling,a!==null){a.return=i.return,i=a;break}i=i.return}a=i}}function Ch(t,e,n,s){t=null;for(var a=e,r=!1;a!==null;){if(!r){if(a.flags&524288)r=!0;else if(a.flags&262144)break}if(a.tag===10){var i=a.alternate;if(i===null)throw Error(Y(387));if(i=i.memoizedProps,i!==null){var o=a.type;Rs(a.pendingProps.value,i.value)||(t!==null?t.push(o):t=[o])}}else if(a===Zf.current){if(i=a.alternate,i===null)throw Error(Y(387));i.memoizedState.memoizedState!==a.memoizedState.memoizedState&&(t!==null?t.push(jd):t=[jd])}a=a.return}t!==null&&f0(e,t,n,s),e.flags|=262144}function pm(t){for(t=t.firstContext;t!==null;){if(!Rs(t.context._currentValue,t.memoizedValue))return!0;t=t.next}return!1}function Io(t){Xo=t,$r=null,t=t.dependencies,t!==null&&(t.firstContext=null)}function Pn(t){return dI(Xo,t)}function df(t,e){return Xo===null&&Io(t),dI(t,e)}function dI(t,e){var n=e._currentValue;if(e={context:e,memoizedValue:n,next:null},$r===null){if(t===null)throw Error(Y(308));$r=e,t.dependencies={lanes:0,firstContext:e},t.flags|=524288}else $r=$r.next=e;return n}var Yr=!1;function gw(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function m0(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,callbacks:null})}function li(t){return{lane:t,tag:0,payload:null,callback:null,next:null}}function ui(t,e,n){var s=t.updateQueue;if(s===null)return null;if(s=s.shared,_t&2){var a=s.pending;return a===null?e.next=e:(e.next=a.next,a.next=e),s.pending=e,e=am(t),fk(t,null,n),e}return pg(t,s,e,n),am(t)}function Nd(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194176)!==0)){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,VN(t,n)}}function rx(t,e){var n=t.updateQueue,s=t.alternate;if(s!==null&&(s=s.updateQueue,n===s)){var a=null,r=null;if(n=n.firstBaseUpdate,n!==null){do{var i={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};r===null?a=r=i:r=r.next=i,n=n.next}while(n!==null);r===null?a=r=e:r=r.next=e}else a=r=e;n={baseState:s.baseState,firstBaseUpdate:a,lastBaseUpdate:r,shared:s.shared,callbacks:s.callbacks},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}var g0=!1;function kd(){if(g0){var t=jl;if(t!==null)throw t}}function Id(t,e,n,s){g0=!1;var a=t.updateQueue;Yr=!1;var r=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(o!==null){a.shared.pending=null;var l=o,u=l.next;l.next=null,i===null?r=u:i.next=u,i=l;var c=t.alternate;c!==null&&(c=c.updateQueue,o=c.lastBaseUpdate,o!==i&&(o===null?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(r!==null){var d=a.baseState;i=0,c=u=l=null,o=r;do{var h=o.lane&-536870913,p=h!==o.lane;if(p?(qe&h)===h:(s&h)===h){h!==0&&h===iu&&(g0=!0),c!==null&&(c=c.next={lane:0,tag:o.tag,payload:o.payload,callback:null,next:null});e:{var f=t,m=o;h=e;var y=n;switch(m.tag){case 1:if(f=m.payload,typeof f=="function"){d=f.call(y,d,h);break e}d=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=m.payload,h=typeof f=="function"?f.call(y,d,h):f,h==null)break e;d=St({},d,h);break e;case 2:Yr=!0}}h=o.callback,h!==null&&(t.flags|=64,p&&(t.flags|=8192),p=a.callbacks,p===null?a.callbacks=[h]:p.push(h))}else p={lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},c===null?(u=c=p,l=d):c=c.next=p,i|=h;if(o=o.next,o===null){if(o=a.shared.pending,o===null)break;p=o,o=p.next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}while(!0);c===null&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,r===null&&(a.shared.lanes=0),vi|=i,t.lanes=i,t.memoizedState=d}}function hI(t,e){if(typeof t!="function")throw Error(Y(191,t));t.call(e)}function pI(t,e){var n=t.callbacks;if(n!==null)for(t.callbacks=null,t=0;t<n.length;t++)hI(n[t],e)}function $h(t,e){try{var n=e.updateQueue,s=n!==null?n.lastEffect:null;if(s!==null){var a=s.next;n=a;do{if((n.tag&t)===t){s=void 0;var r=n.create,i=n.inst;s=r(),i.destroy=s}n=n.next}while(n!==a)}}catch(o){ut(e,e.return,o)}}function wi(t,e,n){try{var s=e.updateQueue,a=s!==null?s.lastEffect:null;if(a!==null){var r=a.next;s=r;do{if((s.tag&t)===t){var i=s.inst,o=i.destroy;if(o!==void 0){i.destroy=void 0,a=e;var l=n;try{o()}catch(u){ut(a,l,u)}}}s=s.next}while(s!==r)}}catch(u){ut(e,e.return,u)}}function fI(t){var e=t.updateQueue;if(e!==null){var n=t.stateNode;try{pI(e,n)}catch(s){ut(t,t.return,s)}}}function mI(t,e,n){n.props=ko(t.type,t.memoizedProps),n.state=t.memoizedState;try{n.componentWillUnmount()}catch(s){ut(t,e,s)}}function lo(t,e){try{var n=t.ref;if(n!==null){var s=t.stateNode;switch(t.tag){case 26:case 27:case 5:var a=s;break;default:a=s}typeof n=="function"?t.refCleanup=n(a):n.current=a}}catch(r){ut(t,e,r)}}function $s(t,e){var n=t.ref,s=t.refCleanup;if(n!==null)if(typeof s=="function")try{s()}catch(a){ut(t,e,a)}finally{t.refCleanup=null,t=t.alternate,t!=null&&(t.refCleanup=null)}else if(typeof n=="function")try{n(null)}catch(a){ut(t,e,a)}else n.current=null}function gI(t){var e=t.type,n=t.memoizedProps,s=t.stateNode;try{e:switch(e){case"button":case"input":case"select":case"textarea":n.autoFocus&&s.focus();break e;case"img":n.src?s.src=n.src:n.srcSet&&(s.srcset=n.srcSet)}}catch(a){ut(t,t.return,a)}}function FC(t,e,n){try{var s=t.stateNode;yL(s,t.type,n,e),s[cs]=e}catch(a){ut(t,t.return,a)}}function yI(t){return t.tag===5||t.tag===3||t.tag===26||t.tag===27||t.tag===4}function ix(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||yI(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==27&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function y0(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=wg));else if(s!==4&&s!==27&&(t=t.child,t!==null))for(y0(t,e,n),t=t.sibling;t!==null;)y0(t,e,n),t=t.sibling}function fm(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(s!==4&&s!==27&&(t=t.child,t!==null))for(fm(t,e,n),t=t.sibling;t!==null;)fm(t,e,n),t=t.sibling}var gr=!1,Lt=!1,ox=!1,zC=typeof WeakSet=="function"?WeakSet:Set,gn=null,LC=!1;function qz(t,e){if(t=t.containerInfo,k0=$m,t=ok(t),K1(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var s=n.getSelection&&n.getSelection();if(s&&s.rangeCount!==0){n=s.anchorNode;var a=s.anchorOffset,r=s.focusNode;s=s.focusOffset;try{n.nodeType,r.nodeType}catch{n=null;break e}var i=0,o=-1,l=-1,u=0,c=0,d=t,h=null;t:for(;;){for(var p;d!==n||a!==0&&d.nodeType!==3||(o=i+a),d!==r||s!==0&&d.nodeType!==3||(l=i+s),d.nodeType===3&&(i+=d.nodeValue.length),(p=d.firstChild)!==null;)h=d,d=p;for(;;){if(d===t)break t;if(h===n&&++u===a&&(o=i),h===r&&++c===s&&(l=i),(p=d.nextSibling)!==null)break;d=h,h=d.parentNode}d=p}n=o===-1||l===-1?null:{start:o,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(I0={focusedElem:t,selectionRange:n},$m=!1,gn=e;gn!==null;)if(e=gn,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,gn=t;else for(;gn!==null;){switch(e=gn,r=e.alternate,t=e.flags,e.tag){case 0:break;case 11:case 15:break;case 1:if(t&1024&&r!==null){t=void 0,n=e,a=r.memoizedProps,r=r.memoizedState,s=n.stateNode;try{var f=ko(n.type,a,n.elementType===n.type);t=s.getSnapshotBeforeUpdate(f,r),s.__reactInternalSnapshotBeforeUpdate=t}catch(m){ut(n,n.return,m)}}break;case 3:if(t&1024){if(t=e.stateNode.containerInfo,n=t.nodeType,n===9)E0(t);else if(n===1)switch(t.nodeName){case"HEAD":case"HTML":case"BODY":E0(t);break;default:t.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if(t&1024)throw Error(Y(163))}if(t=e.sibling,t!==null){t.return=e.return,gn=t;break}gn=e.return}return f=LC,LC=!1,f}function bI(t,e,n){var s=n.flags;switch(n.tag){case 0:case 11:case 15:dr(t,n),s&4&&$h(5,n);break;case 1:if(dr(t,n),s&4)if(t=n.stateNode,e===null)try{t.componentDidMount()}catch(o){ut(n,n.return,o)}else{var a=ko(n.type,e.memoizedProps);e=e.memoizedState;try{t.componentDidUpdate(a,e,t.__reactInternalSnapshotBeforeUpdate)}catch(o){ut(n,n.return,o)}}s&64&&fI(n),s&512&&lo(n,n.return);break;case 3:if(dr(t,n),s&64&&(s=n.updateQueue,s!==null)){if(t=null,n.child!==null)switch(n.child.tag){case 27:case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}try{pI(s,t)}catch(o){ut(n,n.return,o)}}break;case 26:dr(t,n),s&512&&lo(n,n.return);break;case 27:case 5:dr(t,n),e===null&&s&4&&gI(n),s&512&&lo(n,n.return);break;case 12:dr(t,n);break;case 13:dr(t,n),s&4&&vI(t,n);break;case 22:if(a=n.memoizedState!==null||gr,!a){e=e!==null&&e.memoizedState!==null||Lt;var r=gr,i=Lt;gr=a,(Lt=e)&&!i?Xr(t,n,(n.subtreeFlags&8772)!==0):dr(t,n),gr=r,Lt=i}s&512&&(n.memoizedProps.mode==="manual"?lo(n,n.return):$s(n,n.return));break;default:dr(t,n)}}function xI(t){var e=t.alternate;e!==null&&(t.alternate=null,xI(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&W1(e)),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}var qt=null,Ss=!1;function cr(t,e,n){for(n=n.child;n!==null;)wI(t,e,n),n=n.sibling}function wI(t,e,n){if(Is&&typeof Is.onCommitFiberUnmount=="function")try{Is.onCommitFiberUnmount(gh,n)}catch{}switch(n.tag){case 26:Lt||$s(n,e),cr(t,e,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode,n.parentNode.removeChild(n));break;case 27:Lt||$s(n,e);var s=qt,a=Ss;for(qt=n.stateNode,cr(t,e,n),n=n.stateNode,e=n.attributes;e.length;)n.removeAttributeNode(e[0]);W1(n),qt=s,Ss=a;break;case 5:Lt||$s(n,e);case 6:a=qt;var r=Ss;if(qt=null,cr(t,e,n),qt=a,Ss=r,qt!==null)if(Ss)try{t=qt,s=n.stateNode,t.nodeType===8?t.parentNode.removeChild(s):t.removeChild(s)}catch(i){ut(n,e,i)}else try{qt.removeChild(n.stateNode)}catch(i){ut(n,e,i)}break;case 18:qt!==null&&(Ss?(e=qt,n=n.stateNode,e.nodeType===8?xx(e.parentNode,n):e.nodeType===1&&xx(e,n),Kd(e)):xx(qt,n.stateNode));break;case 4:s=qt,a=Ss,qt=n.stateNode.containerInfo,Ss=!0,cr(t,e,n),qt=s,Ss=a;break;case 0:case 11:case 14:case 15:Lt||wi(2,n,e),Lt||wi(4,n,e),cr(t,e,n);break;case 1:Lt||($s(n,e),s=n.stateNode,typeof s.componentWillUnmount=="function"&&mI(n,e,s)),cr(t,e,n);break;case 21:cr(t,e,n);break;case 22:Lt||$s(n,e),Lt=(s=Lt)||n.memoizedState!==null,cr(t,e,n),Lt=s;break;default:cr(t,e,n)}}function vI(t,e){if(e.memoizedState===null&&(t=e.alternate,t!==null&&(t=t.memoizedState,t!==null&&(t=t.dehydrated,t!==null))))try{Kd(t)}catch(n){ut(e,e.return,n)}}function Xz(t){switch(t.tag){case 13:case 19:var e=t.stateNode;return e===null&&(e=t.stateNode=new zC),e;case 22:return t=t.stateNode,e=t._retryCache,e===null&&(e=t._retryCache=new zC),e;default:throw Error(Y(435,t.tag))}}function lx(t,e){var n=Xz(t);e.forEach(function(s){var a=oL.bind(null,t,s);n.has(s)||(n.add(s),s.then(a,a))})}function Ls(t,e){var n=e.deletions;if(n!==null)for(var s=0;s<n.length;s++){var a=n[s],r=t,i=e,o=i;e:for(;o!==null;){switch(o.tag){case 27:case 5:qt=o.stateNode,Ss=!1;break e;case 3:qt=o.stateNode.containerInfo,Ss=!0;break e;case 4:qt=o.stateNode.containerInfo,Ss=!0;break e}o=o.return}if(qt===null)throw Error(Y(160));wI(r,i,a),qt=null,Ss=!1,r=a.alternate,r!==null&&(r.return=null),a.return=null}if(e.subtreeFlags&13878)for(e=e.child;e!==null;)SI(e,t),e=e.sibling}var ya=null;function SI(t,e){var n=t.alternate,s=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:Ls(e,t),Ps(t),s&4&&(wi(3,t,t.return),$h(3,t),wi(5,t,t.return));break;case 1:Ls(e,t),Ps(t),s&512&&(Lt||n===null||$s(n,n.return)),s&64&&gr&&(t=t.updateQueue,t!==null&&(s=t.callbacks,s!==null&&(n=t.shared.hiddenCallbacks,t.shared.hiddenCallbacks=n===null?s:n.concat(s))));break;case 26:var a=ya;if(Ls(e,t),Ps(t),s&512&&(Lt||n===null||$s(n,n.return)),s&4){var r=n!==null?n.memoizedState:null;if(s=t.memoizedState,n===null)if(s===null)if(t.stateNode===null){e:{s=t.type,n=t.memoizedProps,a=a.ownerDocument||a;t:switch(s){case"title":r=a.getElementsByTagName("title")[0],(!r||r[zd]||r[Ln]||r.namespaceURI==="http://www.w3.org/2000/svg"||r.hasAttribute("itemprop"))&&(r=a.createElement(s),a.head.insertBefore(r,a.querySelector("head > title"))),Tn(r,s,n),r[Ln]=t,yn(r),s=r;break e;case"link":var i=e2("link","href",a).get(s+(n.href||""));if(i){for(var o=0;o<i.length;o++)if(r=i[o],r.getAttribute("href")===(n.href==null?null:n.href)&&r.getAttribute("rel")===(n.rel==null?null:n.rel)&&r.getAttribute("title")===(n.title==null?null:n.title)&&r.getAttribute("crossorigin")===(n.crossOrigin==null?null:n.crossOrigin)){i.splice(o,1);break t}}r=a.createElement(s),Tn(r,s,n),a.head.appendChild(r);break;case"meta":if(i=e2("meta","content",a).get(s+(n.content||""))){for(o=0;o<i.length;o++)if(r=i[o],r.getAttribute("content")===(n.content==null?null:""+n.content)&&r.getAttribute("name")===(n.name==null?null:n.name)&&r.getAttribute("property")===(n.property==null?null:n.property)&&r.getAttribute("http-equiv")===(n.httpEquiv==null?null:n.httpEquiv)&&r.getAttribute("charset")===(n.charSet==null?null:n.charSet)){i.splice(o,1);break t}}r=a.createElement(s),Tn(r,s,n),a.head.appendChild(r);break;default:throw Error(Y(468,s))}r[Ln]=t,yn(r),s=r}t.stateNode=s}else t2(a,t.type,t.stateNode);else t.stateNode=JC(a,s,t.memoizedProps);else r!==s?(r===null?n.stateNode!==null&&(n=n.stateNode,n.parentNode.removeChild(n)):r.count--,s===null?t2(a,t.type,t.stateNode):JC(a,s,t.memoizedProps)):s===null&&t.stateNode!==null&&FC(t,t.memoizedProps,n.memoizedProps)}break;case 27:if(s&4&&t.alternate===null){a=t.stateNode,r=t.memoizedProps;try{for(var l=a.firstChild;l;){var u=l.nextSibling,c=l.nodeName;l[zd]||c==="HEAD"||c==="BODY"||c==="SCRIPT"||c==="STYLE"||c==="LINK"&&l.rel.toLowerCase()==="stylesheet"||a.removeChild(l),l=u}for(var d=t.type,h=a.attributes;h.length;)a.removeAttributeNode(h[0]);Tn(a,d,r),a[Ln]=t,a[cs]=r}catch(f){ut(t,t.return,f)}}case 5:if(Ls(e,t),Ps(t),s&512&&(Lt||n===null||$s(n,n.return)),t.flags&32){a=t.stateNode;try{au(a,"")}catch(f){ut(t,t.return,f)}}s&4&&t.stateNode!=null&&(a=t.memoizedProps,FC(t,a,n!==null?n.memoizedProps:a)),s&1024&&(ox=!0);break;case 6:if(Ls(e,t),Ps(t),s&4){if(t.stateNode===null)throw Error(Y(162));s=t.memoizedProps,n=t.stateNode;try{n.nodeValue=s}catch(f){ut(t,t.return,f)}}break;case 3:if(Gf=null,a=ya,ya=vm(e.containerInfo),Ls(e,t),ya=a,Ps(t),s&4&&n!==null&&n.memoizedState.isDehydrated)try{Kd(e.containerInfo)}catch(f){ut(t,t.return,f)}ox&&(ox=!1,CI(t));break;case 4:s=ya,ya=vm(t.stateNode.containerInfo),Ls(e,t),Ps(t),ya=s;break;case 12:Ls(e,t),Ps(t);break;case 13:Ls(e,t),Ps(t),t.child.flags&8192&&t.memoizedState!==null!=(n!==null&&n.memoizedState!==null)&&(Sw=Ga()),s&4&&(s=t.updateQueue,s!==null&&(t.updateQueue=null,lx(t,s)));break;case 22:if(s&512&&(Lt||n===null||$s(n,n.return)),l=t.memoizedState!==null,u=n!==null&&n.memoizedState!==null,c=gr,d=Lt,gr=c||l,Lt=d||u,Ls(e,t),Lt=d,gr=c,Ps(t),e=t.stateNode,e._current=t,e._visibility&=-3,e._visibility|=e._pendingVisibility&2,s&8192&&(e._visibility=l?e._visibility&-2:e._visibility|1,l&&(e=gr||Lt,n===null||u||e||Cl(t)),t.memoizedProps===null||t.memoizedProps.mode!=="manual"))e:for(n=null,e=t;;){if(e.tag===5||e.tag===26||e.tag===27){if(n===null){u=n=e;try{if(a=u.stateNode,l)r=a.style,typeof r.setProperty=="function"?r.setProperty("display","none","important"):r.display="none";else{i=u.stateNode,o=u.memoizedProps.style;var p=o!=null&&o.hasOwnProperty("display")?o.display:null;i.style.display=p==null||typeof p=="boolean"?"":(""+p).trim()}}catch(f){ut(u,u.return,f)}}}else if(e.tag===6){if(n===null){u=e;try{u.stateNode.nodeValue=l?"":u.memoizedProps}catch(f){ut(u,u.return,f)}}}else if((e.tag!==22&&e.tag!==23||e.memoizedState===null||e===t)&&e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;n===e&&(n=null),e=e.return}n===e&&(n=null),e.sibling.return=e.return,e=e.sibling}s&4&&(s=t.updateQueue,s!==null&&(n=s.retryQueue,n!==null&&(s.retryQueue=null,lx(t,n))));break;case 19:Ls(e,t),Ps(t),s&4&&(s=t.updateQueue,s!==null&&(t.updateQueue=null,lx(t,s)));break;case 21:break;default:Ls(e,t),Ps(t)}}function Ps(t){var e=t.flags;if(e&2){try{if(t.tag!==27){e:{for(var n=t.return;n!==null;){if(yI(n)){var s=n;break e}n=n.return}throw Error(Y(160))}switch(s.tag){case 27:var a=s.stateNode,r=ix(t);fm(t,r,a);break;case 5:var i=s.stateNode;s.flags&32&&(au(i,""),s.flags&=-33);var o=ix(t);fm(t,o,i);break;case 3:case 4:var l=s.stateNode.containerInfo,u=ix(t);y0(t,u,l);break;default:throw Error(Y(161))}}}catch(c){ut(t,t.return,c)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function CI(t){if(t.subtreeFlags&1024)for(t=t.child;t!==null;){var e=t;CI(e),e.tag===5&&e.flags&1024&&e.stateNode.reset(),t=t.sibling}}function dr(t,e){if(e.subtreeFlags&8772)for(e=e.child;e!==null;)bI(t,e.alternate,e),e=e.sibling}function Cl(t){for(t=t.child;t!==null;){var e=t;switch(e.tag){case 0:case 11:case 14:case 15:wi(4,e,e.return),Cl(e);break;case 1:$s(e,e.return);var n=e.stateNode;typeof n.componentWillUnmount=="function"&&mI(e,e.return,n),Cl(e);break;case 26:case 27:case 5:$s(e,e.return),Cl(e);break;case 22:$s(e,e.return),e.memoizedState===null&&Cl(e);break;default:Cl(e)}t=t.sibling}}function Xr(t,e,n){for(n=n&&(e.subtreeFlags&8772)!==0,e=e.child;e!==null;){var s=e.alternate,a=t,r=e,i=r.flags;switch(r.tag){case 0:case 11:case 15:Xr(a,r,n),$h(4,r);break;case 1:if(Xr(a,r,n),s=r,a=s.stateNode,typeof a.componentDidMount=="function")try{a.componentDidMount()}catch(u){ut(s,s.return,u)}if(s=r,a=s.updateQueue,a!==null){var o=s.stateNode;try{var l=a.shared.hiddenCallbacks;if(l!==null)for(a.shared.hiddenCallbacks=null,a=0;a<l.length;a++)hI(l[a],o)}catch(u){ut(s,s.return,u)}}n&&i&64&&fI(r),lo(r,r.return);break;case 26:case 27:case 5:Xr(a,r,n),n&&s===null&&i&4&&gI(r),lo(r,r.return);break;case 12:Xr(a,r,n);break;case 13:Xr(a,r,n),n&&i&4&&vI(a,r);break;case 22:r.memoizedState===null&&Xr(a,r,n),lo(r,r.return);break;default:Xr(a,r,n)}e=e.sibling}}function yw(t,e){var n=null;t!==null&&t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(n=t.memoizedState.cachePool.pool),t=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(t=e.memoizedState.cachePool.pool),t!==n&&(t!=null&&t.refCount++,n!=null&&vh(n))}function bw(t,e){t=null,e.alternate!==null&&(t=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==t&&(e.refCount++,t!=null&&vh(t))}function qr(t,e,n,s){if(e.subtreeFlags&10256)for(e=e.child;e!==null;)$I(t,e,n,s),e=e.sibling}function $I(t,e,n,s){var a=e.flags;switch(e.tag){case 0:case 11:case 15:qr(t,e,n,s),a&2048&&$h(9,e);break;case 3:qr(t,e,n,s),a&2048&&(t=null,e.alternate!==null&&(t=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==t&&(e.refCount++,t!=null&&vh(t)));break;case 12:if(a&2048){qr(t,e,n,s),t=e.stateNode;try{var r=e.memoizedProps,i=r.id,o=r.onPostCommit;typeof o=="function"&&o(i,e.alternate===null?"mount":"update",t.passiveEffectDuration,-0)}catch(l){ut(e,e.return,l)}}else qr(t,e,n,s);break;case 23:break;case 22:r=e.stateNode,e.memoizedState!==null?r._visibility&4?qr(t,e,n,s):Td(t,e):r._visibility&4?qr(t,e,n,s):(r._visibility|=4,$l(t,e,n,s,(e.subtreeFlags&10256)!==0)),a&2048&&yw(e.alternate,e);break;case 24:qr(t,e,n,s),a&2048&&bw(e.alternate,e);break;default:qr(t,e,n,s)}}function $l(t,e,n,s,a){for(a=a&&(e.subtreeFlags&10256)!==0,e=e.child;e!==null;){var r=t,i=e,o=n,l=s,u=i.flags;switch(i.tag){case 0:case 11:case 15:$l(r,i,o,l,a),$h(8,i);break;case 23:break;case 22:var c=i.stateNode;i.memoizedState!==null?c._visibility&4?$l(r,i,o,l,a):Td(r,i):(c._visibility|=4,$l(r,i,o,l,a)),a&&u&2048&&yw(i.alternate,i);break;case 24:$l(r,i,o,l,a),a&&u&2048&&bw(i.alternate,i);break;default:$l(r,i,o,l,a)}e=e.sibling}}function Td(t,e){if(e.subtreeFlags&10256)for(e=e.child;e!==null;){var n=t,s=e,a=s.flags;switch(s.tag){case 22:Td(n,s),a&2048&&yw(s.alternate,s);break;case 24:Td(n,s),a&2048&&bw(s.alternate,s);break;default:Td(n,s)}e=e.sibling}}var ld=8192;function ml(t){if(t.subtreeFlags&ld)for(t=t.child;t!==null;)NI(t),t=t.sibling}function NI(t){switch(t.tag){case 26:ml(t),t.flags&ld&&t.memoizedState!==null&&zL(ya,t.memoizedState,t.memoizedProps);break;case 5:ml(t);break;case 3:case 4:var e=ya;ya=vm(t.stateNode.containerInfo),ml(t),ya=e;break;case 22:t.memoizedState===null&&(e=t.alternate,e!==null&&e.memoizedState!==null?(e=ld,ld=16777216,ml(t),ld=e):ml(t));break;default:ml(t)}}function kI(t){var e=t.alternate;if(e!==null&&(t=e.child,t!==null)){e.child=null;do e=t.sibling,t.sibling=null,t=e;while(t!==null)}}function Qc(t){var e=t.deletions;if(t.flags&16){if(e!==null)for(var n=0;n<e.length;n++){var s=e[n];gn=s,TI(s,t)}kI(t)}if(t.subtreeFlags&10256)for(t=t.child;t!==null;)II(t),t=t.sibling}function II(t){switch(t.tag){case 0:case 11:case 15:Qc(t),t.flags&2048&&wi(9,t,t.return);break;case 3:Qc(t);break;case 12:Qc(t);break;case 22:var e=t.stateNode;t.memoizedState!==null&&e._visibility&4&&(t.return===null||t.return.tag!==13)?(e._visibility&=-5,Vf(t)):Qc(t);break;default:Qc(t)}}function Vf(t){var e=t.deletions;if(t.flags&16){if(e!==null)for(var n=0;n<e.length;n++){var s=e[n];gn=s,TI(s,t)}kI(t)}for(t=t.child;t!==null;){switch(e=t,e.tag){case 0:case 11:case 15:wi(8,e,e.return),Vf(e);break;case 22:n=e.stateNode,n._visibility&4&&(n._visibility&=-5,Vf(e));break;default:Vf(e)}t=t.sibling}}function TI(t,e){for(;gn!==null;){var n=gn;switch(n.tag){case 0:case 11:case 15:wi(8,n,e);break;case 23:case 22:if(n.memoizedState!==null&&n.memoizedState.cachePool!==null){var s=n.memoizedState.cachePool.pool;s!=null&&s.refCount++}break;case 24:vh(n.memoizedState.cache)}if(s=n.child,s!==null)s.return=n,gn=s;else e:for(n=t;gn!==null;){s=gn;var a=s.sibling,r=s.return;if(xI(s),s===n){gn=null;break e}if(a!==null){a.return=r,gn=a;break e}gn=r}}}function Kz(t,e,n,s){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ys(t,e,n,s){return new Kz(t,e,n,s)}function xw(t){return t=t.prototype,!(!t||!t.isReactComponent)}function ci(t,e){var n=t.alternate;return n===null?(n=Ys(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&31457280,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n.refCleanup=t.refCleanup,n}function EI(t,e){t.flags&=31457282;var n=t.alternate;return n===null?(t.childLanes=0,t.lanes=e,t.child=null,t.subtreeFlags=0,t.memoizedProps=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.stateNode=null):(t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.subtreeFlags=0,t.deletions=null,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,t.type=n.type,e=n.dependencies,t.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),t}function Uf(t,e,n,s,a,r){var i=0;if(s=t,typeof t=="function")xw(t)&&(i=1);else if(typeof t=="string")i=OL(t,n,Wa.current)?26:t==="html"||t==="head"||t==="body"?27:5;else e:switch(t){case Rl:return go(n.children,a,r,e);case RN:i=8,a|=24;break;case Bx:return t=Ys(12,n,e,a|2),t.elementType=Bx,t.lanes=r,t;case Vx:return t=Ys(13,n,e,a),t.elementType=Vx,t.lanes=r,t;case Ux:return t=Ys(19,n,e,a),t.elementType=Ux,t.lanes=r,t;case AN:return RI(n,a,r,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case wF:case wr:i=10;break e;case DN:i=9;break e;case B1:i=11;break e;case V1:i=14;break e;case Kr:i=16,s=null;break e}i=29,n=Error(Y(130,t===null?"null":typeof t,"")),s=null}return e=Ys(i,n,e,a),e.elementType=t,e.type=s,e.lanes=r,e}function go(t,e,n,s){return t=Ys(7,t,s,e),t.lanes=n,t}function RI(t,e,n,s){t=Ys(22,t,s,e),t.elementType=AN,t.lanes=n;var a={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var r=a._current;if(r===null)throw Error(Y(456));if(!(a._pendingVisibility&2)){var i=bi(r,2);i!==null&&(a._pendingVisibility|=2,Yn(i,r,2))}},attach:function(){var r=a._current;if(r===null)throw Error(Y(456));if(a._pendingVisibility&2){var i=bi(r,2);i!==null&&(a._pendingVisibility&=-3,Yn(i,r,2))}}};return t.stateNode=a,t}function ux(t,e,n){return t=Ys(6,t,null,e),t.lanes=n,t}function cx(t,e,n){return e=Ys(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function hr(t){t.flags|=4}function PC(t,e){if(e.type!=="stylesheet"||e.state.loading&4)t.flags&=-16777217;else if(t.flags|=16777216,!QI(e)){if(e=oa.current,e!==null&&((qe&4194176)===qe?Ha!==null:(qe&62914560)!==qe&&!(qe&536870912)||e!==Ha))throw vd=t0,gk;t.flags|=8192}}function hf(t,e){e!==null&&(t.flags|=4),t.flags&16384&&(e=t.tag!==22?MN():536870912,t.lanes|=e,lu|=e)}function Zc(t,e){if(!Ke)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var s=null;n!==null;)n.alternate!==null&&(s=n),n=n.sibling;s===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:s.sibling=null}}function Rt(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,s=0;if(e)for(var a=t.child;a!==null;)n|=a.lanes|a.childLanes,s|=a.subtreeFlags&31457280,s|=a.flags&31457280,a.return=t,a=a.sibling;else for(a=t.child;a!==null;)n|=a.lanes|a.childLanes,s|=a.subtreeFlags,s|=a.flags,a.return=t,a=a.sibling;return t.subtreeFlags|=s,t.childLanes=n,e}function Yz(t,e,n){var s=e.pendingProps;switch(J1(e),e.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Rt(e),null;case 1:return Rt(e),null;case 3:return n=e.stateNode,s=null,t!==null&&(s=t.memoizedState.cache),e.memoizedState.cache!==s&&(e.flags|=2048),Nr(on),nu(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(t===null||t.child===null)&&(Kc(e)?hr(e):t===null||t.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,ba!==null&&(S0(ba),ba=null))),Rt(e),null;case 26:return n=e.memoizedState,t===null?(hr(e),n!==null?(Rt(e),PC(e,n)):(Rt(e),e.flags&=-16777217)):n?n!==t.memoizedState?(hr(e),Rt(e),PC(e,n)):(Rt(e),e.flags&=-16777217):(t.memoizedProps!==s&&hr(e),Rt(e),e.flags&=-16777217),null;case 27:em(e),n=oi.current;var a=e.type;if(t!==null&&e.stateNode!=null)t.memoizedProps!==s&&hr(e);else{if(!s){if(e.stateNode===null)throw Error(Y(166));return Rt(e),null}t=Wa.current,Kc(e)?fC(e):(t=XI(a,s,n),e.stateNode=t,hr(e))}return Rt(e),null;case 5:if(em(e),n=e.type,t!==null&&e.stateNode!=null)t.memoizedProps!==s&&hr(e);else{if(!s){if(e.stateNode===null)throw Error(Y(166));return Rt(e),null}if(t=Wa.current,Kc(e))fC(e);else{switch(a=wm(oi.current),t){case 1:t=a.createElementNS("http://www.w3.org/2000/svg",n);break;case 2:t=a.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;default:switch(n){case"svg":t=a.createElementNS("http://www.w3.org/2000/svg",n);break;case"math":t=a.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;case"script":t=a.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild);break;case"select":t=typeof s.is=="string"?a.createElement("select",{is:s.is}):a.createElement("select"),s.multiple?t.multiple=!0:s.size&&(t.size=s.size);break;default:t=typeof s.is=="string"?a.createElement(n,{is:s.is}):a.createElement(n)}}t[Ln]=e,t[cs]=s;e:for(a=e.child;a!==null;){if(a.tag===5||a.tag===6)t.appendChild(a.stateNode);else if(a.tag!==4&&a.tag!==27&&a.child!==null){a.child.return=a,a=a.child;continue}if(a===e)break e;for(;a.sibling===null;){if(a.return===null||a.return===e)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}e.stateNode=t;e:switch(Tn(t,n,s),n){case"button":case"input":case"select":case"textarea":t=!!s.autoFocus;break e;case"img":t=!0;break e;default:t=!1}t&&hr(e)}}return Rt(e),e.flags&=-16777217,null;case 6:if(t&&e.stateNode!=null)t.memoizedProps!==s&&hr(e);else{if(typeof s!="string"&&e.stateNode===null)throw Error(Y(166));if(t=oi.current,Kc(e)){if(t=e.stateNode,n=e.memoizedProps,s=null,a=jn,a!==null)switch(a.tag){case 27:case 5:s=a.memoizedProps}t[Ln]=e,t=!!(t.nodeValue===n||s!==null&&s.suppressHydrationWarning===!0||HI(t.nodeValue,n)),t||Co(e)}else t=wm(t).createTextNode(s),t[Ln]=e,e.stateNode=t}return Rt(e),null;case 13:if(s=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(a=Kc(e),s!==null&&s.dehydrated!==null){if(t===null){if(!a)throw Error(Y(318));if(a=e.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(Y(317));a[Ln]=e}else wh(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;Rt(e),a=!1}else ba!==null&&(S0(ba),ba=null),a=!0;if(!a)return e.flags&256?(Cr(e),e):(Cr(e),null)}if(Cr(e),e.flags&128)return e.lanes=n,e;if(n=s!==null,t=t!==null&&t.memoizedState!==null,n){s=e.child,a=null,s.alternate!==null&&s.alternate.memoizedState!==null&&s.alternate.memoizedState.cachePool!==null&&(a=s.alternate.memoizedState.cachePool.pool);var r=null;s.memoizedState!==null&&s.memoizedState.cachePool!==null&&(r=s.memoizedState.cachePool.pool),r!==a&&(s.flags|=2048)}return n!==t&&n&&(e.child.flags|=8192),hf(e,e.updateQueue),Rt(e),null;case 4:return nu(),t===null&&Nw(e.stateNode.containerInfo),Rt(e),null;case 10:return Nr(e.type),Rt(e),null;case 19:if(vn(un),a=e.memoizedState,a===null)return Rt(e),null;if(s=(e.flags&128)!==0,r=a.rendering,r===null)if(s)Zc(a,!1);else{if(Pt!==0||t!==null&&t.flags&128)for(t=e.child;t!==null;){if(r=lm(t),r!==null){for(e.flags|=128,Zc(a,!1),t=r.updateQueue,e.updateQueue=t,hf(e,t),e.subtreeFlags=0,t=n,n=e.child;n!==null;)EI(n,t),n=n.sibling;return It(un,un.current&1|2),e.child}t=t.sibling}a.tail!==null&&Ga()>mm&&(e.flags|=128,s=!0,Zc(a,!1),e.lanes=4194304)}else{if(!s)if(t=lm(r),t!==null){if(e.flags|=128,s=!0,t=t.updateQueue,e.updateQueue=t,hf(e,t),Zc(a,!0),a.tail===null&&a.tailMode==="hidden"&&!r.alternate&&!Ke)return Rt(e),null}else 2*Ga()-a.renderingStartTime>mm&&n!==536870912&&(e.flags|=128,s=!0,Zc(a,!1),e.lanes=4194304);a.isBackwards?(r.sibling=e.child,e.child=r):(t=a.last,t!==null?t.sibling=r:e.child=r,a.last=r)}return a.tail!==null?(e=a.tail,a.rendering=e,a.tail=e.sibling,a.renderingStartTime=Ga(),e.sibling=null,t=un.current,It(un,s?t&1|2:t&1),e):(Rt(e),null);case 22:case 23:return Cr(e),ew(),s=e.memoizedState!==null,t!==null?t.memoizedState!==null!==s&&(e.flags|=8192):s&&(e.flags|=8192),s?n&536870912&&!(e.flags&128)&&(Rt(e),e.subtreeFlags&6&&(e.flags|=8192)):Rt(e),n=e.updateQueue,n!==null&&hf(e,n.retryQueue),n=null,t!==null&&t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(n=t.memoizedState.cachePool.pool),s=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(s=e.memoizedState.cachePool.pool),s!==n&&(e.flags|=2048),t!==null&&vn(mo),null;case 24:return n=null,t!==null&&(n=t.memoizedState.cache),e.memoizedState.cache!==n&&(e.flags|=2048),Nr(on),Rt(e),null;case 25:return null}throw Error(Y(156,e.tag))}function Qz(t,e){switch(J1(e),e.tag){case 1:return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return Nr(on),nu(),t=e.flags,t&65536&&!(t&128)?(e.flags=t&-65537|128,e):null;case 26:case 27:case 5:return em(e),null;case 13:if(Cr(e),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(Y(340));wh()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return vn(un),null;case 4:return nu(),null;case 10:return Nr(e.type),null;case 22:case 23:return Cr(e),ew(),t!==null&&vn(mo),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 24:return Nr(on),null;case 25:return null;default:return null}}function DI(t,e){switch(J1(e),e.tag){case 3:Nr(on),nu();break;case 26:case 27:case 5:em(e);break;case 4:nu();break;case 13:Cr(e);break;case 19:vn(un);break;case 10:Nr(e.type);break;case 22:case 23:Cr(e),ew(),t!==null&&vn(mo);break;case 24:Nr(on)}}var Zz={getCacheForType:function(t){var e=Pn(on),n=e.data.get(t);return n===void 0&&(n=t(),e.data.set(t,n)),n}},Jz=typeof WeakMap=="function"?WeakMap:Map,_t=0,ft=null,Be=null,qe=0,pt=0,Cs=null,yr=!1,Tu=!1,ww=!1,_r=0,Pt=0,vi=0,yo=0,vw=0,Qs=0,lu=0,Ed=null,Va=null,b0=!1,Sw=0,mm=1/0,gm=null,di=null,pf=!1,to=null,Rd=0,x0=0,w0=null,Dd=0,v0=null;function Es(){if(_t&2&&qe!==0)return qe&-qe;if(Oe.T!==null){var t=iu;return t!==0?t:$w()}return WN()}function AI(){Qs===0&&(Qs=!(qe&536870912)||Ke?PN():536870912);var t=oa.current;return t!==null&&(t.flags|=32),Qs}function Yn(t,e,n){(t===ft&&pt===2||t.cancelPendingCommit!==null)&&(uu(t,0),br(t,qe,Qs,!1)),bh(t,n),(!(_t&2)||t!==ft)&&(t===ft&&(!(_t&2)&&(yo|=n),Pt===4&&br(t,qe,Qs,!1)),nr(t))}function _I(t,e,n){if(_t&6)throw Error(Y(327));var s=!n&&(e&60)===0&&(e&t.expiredLanes)===0||yh(t,e),a=s?nL(t,e):dx(t,e,!0),r=s;do{if(a===0){Tu&&!s&&br(t,e,0,!1);break}else if(a===6)br(t,e,0,!yr);else{if(n=t.current.alternate,r&&!eL(n)){a=dx(t,e,!1),r=!1;continue}if(a===2){if(r=e,t.errorRecoveryDisabledLanes&r)var i=0;else i=t.pendingLanes&-536870913,i=i!==0?i:i&536870912?536870912:0;if(i!==0){e=i;e:{var o=t;a=Ed;var l=o.current.memoizedState.isDehydrated;if(l&&(uu(o,i).flags|=256),i=dx(o,i,!1),i!==2){if(ww&&!l){o.errorRecoveryDisabledLanes|=r,yo|=r,a=4;break e}r=Va,Va=a,r!==null&&S0(r)}a=i}if(r=!1,a!==2)continue}}if(a===1){uu(t,0),br(t,e,0,!0);break}e:{switch(s=t,a){case 0:case 1:throw Error(Y(345));case 4:if((e&4194176)===e){br(s,e,Qs,!yr);break e}break;case 2:Va=null;break;case 3:case 5:break;default:throw Error(Y(329))}if(s.finishedWork=n,s.finishedLanes=e,(e&62914560)===e&&(r=Sw+300-Ga(),10<r)){if(br(s,e,Qs,!yr),lg(s,0)!==0)break e;s.timeoutHandle=qI(MC.bind(null,s,n,Va,gm,b0,e,Qs,yo,lu,yr,2,-0,0),r);break e}MC(s,n,Va,gm,b0,e,Qs,yo,lu,yr,0,-0,0)}}break}while(!0);nr(t)}function S0(t){Va===null?Va=t:Va.push.apply(Va,t)}function MC(t,e,n,s,a,r,i,o,l,u,c,d,h){var p=e.subtreeFlags;if((p&8192||(p&16785408)===16785408)&&(Hd={stylesheets:null,count:0,unsuspend:FL},NI(e),e=LL(),e!==null)){t.cancelPendingCommit=e(VC.bind(null,t,n,s,a,i,o,l,1,d,h)),br(t,r,i,!u);return}VC(t,n,s,a,i,o,l,c,d,h)}function eL(t){for(var e=t;;){var n=e.tag;if((n===0||n===11||n===15)&&e.flags&16384&&(n=e.updateQueue,n!==null&&(n=n.stores,n!==null)))for(var s=0;s<n.length;s++){var a=n[s],r=a.getSnapshot;a=a.value;try{if(!Rs(r(),a))return!1}catch{return!1}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function br(t,e,n,s){e&=~vw,e&=~yo,t.suspendedLanes|=e,t.pingedLanes&=~e,s&&(t.warmLanes|=e),s=t.expirationTimes;for(var a=e;0<a;){var r=31-Ts(a),i=1<<r;s[r]=-1,a&=~i}n!==0&&BN(t,n,e)}function bg(){return _t&6?!0:(Nh(0),!1)}function Cw(){if(Be!==null){if(pt===0)var t=Be.return;else t=Be,$r=Xo=null,ow(t),Hl=null,Vd=0,t=Be;for(;t!==null;)DI(t.alternate,t),t=t.return;Be=null}}function uu(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;n!==-1&&(t.timeoutHandle=-1,xL(n)),n=t.cancelPendingCommit,n!==null&&(t.cancelPendingCommit=null,n()),Cw(),ft=t,Be=n=ci(t.current,null),qe=e,pt=0,Cs=null,yr=!1,Tu=yh(t,e),ww=!1,lu=Qs=vw=yo=vi=Pt=0,Va=Ed=null,b0=!1,e&8&&(e|=e&32);var s=t.entangledLanes;if(s!==0)for(t=t.entanglements,s&=e;0<s;){var a=31-Ts(s),r=1<<a;e|=t[a],s&=~r}return _r=e,hg(),n}function OI(t,e){Me=null,Oe.H=Ya,e===wd?(e=yC(),pt=3):e===gk?(e=yC(),pt=4):pt=e===rI?8:e!==null&&typeof e=="object"&&typeof e.then=="function"?6:1,Cs=e,Be===null&&(Pt=1,hm(t,Xs(e,t.current)))}function FI(){var t=Oe.H;return Oe.H=Ya,t===null?Ya:t}function zI(){var t=Oe.A;return Oe.A=Zz,t}function C0(){Pt=4,yr||(qe&4194176)!==qe&&oa.current!==null||(Tu=!0),!(vi&134217727)&&!(yo&134217727)||ft===null||br(ft,qe,Qs,!1)}function dx(t,e,n){var s=_t;_t|=2;var a=FI(),r=zI();(ft!==t||qe!==e)&&(gm=null,uu(t,e)),e=!1;var i=Pt;e:do try{if(pt!==0&&Be!==null){var o=Be,l=Cs;switch(pt){case 8:Cw(),i=6;break e;case 3:case 2:case 6:oa.current===null&&(e=!0);var u=pt;if(pt=0,Cs=null,Bl(t,o,l,u),n&&Tu){i=0;break e}break;default:u=pt,pt=0,Cs=null,Bl(t,o,l,u)}}tL(),i=Pt;break}catch(c){OI(t,c)}while(!0);return e&&t.shellSuspendCounter++,$r=Xo=null,_t=s,Oe.H=a,Oe.A=r,Be===null&&(ft=null,qe=0,hg()),i}function tL(){for(;Be!==null;)LI(Be)}function nL(t,e){var n=_t;_t|=2;var s=FI(),a=zI();ft!==t||qe!==e?(gm=null,mm=Ga()+500,uu(t,e)):Tu=yh(t,e);e:do try{if(pt!==0&&Be!==null){e=Be;var r=Cs;t:switch(pt){case 1:pt=0,Cs=null,Bl(t,e,r,1);break;case 2:if(gC(r)){pt=0,Cs=null,BC(e);break}e=function(){pt===2&&ft===t&&(pt=7),nr(t)},r.then(e,e);break e;case 3:pt=7;break e;case 4:pt=5;break e;case 7:gC(r)?(pt=0,Cs=null,BC(e)):(pt=0,Cs=null,Bl(t,e,r,7));break;case 5:var i=null;switch(Be.tag){case 26:i=Be.memoizedState;case 5:case 27:var o=Be;if(!i||QI(i)){pt=0,Cs=null;var l=o.sibling;if(l!==null)Be=l;else{var u=o.return;u!==null?(Be=u,xg(u)):Be=null}break t}}pt=0,Cs=null,Bl(t,e,r,5);break;case 6:pt=0,Cs=null,Bl(t,e,r,6);break;case 8:Cw(),Pt=6;break e;default:throw Error(Y(462))}}sL();break}catch(c){OI(t,c)}while(!0);return $r=Xo=null,Oe.H=s,Oe.A=a,_t=n,Be!==null?0:(ft=null,qe=0,hg(),Pt)}function sL(){for(;Be!==null&&!NF();)LI(Be)}function LI(t){var e=cI(t.alternate,t,_r);t.memoizedProps=t.pendingProps,e===null?xg(t):Be=e}function BC(t){var e=t,n=e.alternate;switch(e.tag){case 15:case 0:e=DC(n,e,e.pendingProps,e.type,void 0,qe);break;case 11:e=DC(n,e,e.pendingProps,e.type.render,e.ref,qe);break;case 5:ow(e);default:DI(n,e),e=Be=EI(e,_r),e=cI(n,e,_r)}t.memoizedProps=t.pendingProps,e===null?xg(t):Be=e}function Bl(t,e,n,s){$r=Xo=null,ow(e),Hl=null,Vd=0;var a=e.return;try{if(Hz(t,a,e,n,qe)){Pt=1,hm(t,Xs(n,t.current)),Be=null;return}}catch(r){if(a!==null)throw Be=a,r;Pt=1,hm(t,Xs(n,t.current)),Be=null;return}e.flags&32768?(Ke||s===1?t=!0:Tu||qe&536870912?t=!1:(yr=t=!0,(s===2||s===3||s===6)&&(s=oa.current,s!==null&&s.tag===13&&(s.flags|=16384))),PI(e,t)):xg(e)}function xg(t){var e=t;do{if(e.flags&32768){PI(e,yr);return}t=e.return;var n=Yz(e.alternate,e,_r);if(n!==null){Be=n;return}if(e=e.sibling,e!==null){Be=e;return}Be=e=t}while(e!==null);Pt===0&&(Pt=5)}function PI(t,e){do{var n=Qz(t.alternate,t);if(n!==null){n.flags&=32767,Be=n;return}if(n=t.return,n!==null&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!e&&(t=t.sibling,t!==null)){Be=t;return}Be=t=n}while(t!==null);Pt=6,Be=null}function VC(t,e,n,s,a,r,i,o,l,u){var c=Oe.T,d=wt.p;try{wt.p=2,Oe.T=null,aL(t,e,n,s,d,a,r,i,o,l,u)}finally{Oe.T=c,wt.p=d}}function aL(t,e,n,s,a,r,i,o){do Kl();while(to!==null);if(_t&6)throw Error(Y(327));var l=t.finishedWork;if(s=t.finishedLanes,l===null)return null;if(t.finishedWork=null,t.finishedLanes=0,l===t.current)throw Error(Y(177));t.callbackNode=null,t.callbackPriority=0,t.cancelPendingCommit=null;var u=l.lanes|l.childLanes;if(u|=Y1,zF(t,s,u,r,i,o),t===ft&&(Be=ft=null,qe=0),!(l.subtreeFlags&10256)&&!(l.flags&10256)||pf||(pf=!0,x0=u,w0=n,lL(tm,function(){return Kl(),null})),n=(l.flags&15990)!==0,l.subtreeFlags&15990||n?(n=Oe.T,Oe.T=null,r=wt.p,wt.p=2,i=_t,_t|=4,qz(t,l),SI(l,t),Tz(I0,t.containerInfo),$m=!!k0,I0=k0=null,t.current=l,bI(t,l.alternate,l),kF(),_t=i,wt.p=r,Oe.T=n):t.current=l,pf?(pf=!1,to=t,Rd=s):MI(t,u),u=t.pendingLanes,u===0&&(di=null),DF(l.stateNode),nr(t),e!==null)for(a=t.onRecoverableError,l=0;l<e.length;l++)u=e[l],a(u.value,{componentStack:u.stack});return Rd&3&&Kl(),u=t.pendingLanes,s&4194218&&u&42?t===v0?Dd++:(Dd=0,v0=t):Dd=0,Nh(0),null}function MI(t,e){(t.pooledCacheLanes&=e)===0&&(e=t.pooledCache,e!=null&&(t.pooledCache=null,vh(e)))}function Kl(){if(to!==null){var t=to,e=x0;x0=0;var n=UN(Rd),s=Oe.T,a=wt.p;try{if(wt.p=32>n?32:n,Oe.T=null,to===null)var r=!1;else{n=w0,w0=null;var i=to,o=Rd;if(to=null,Rd=0,_t&6)throw Error(Y(331));var l=_t;if(_t|=4,II(i.current),$I(i,i.current,o,n),_t=l,Nh(0,!1),Is&&typeof Is.onPostCommitFiberRoot=="function")try{Is.onPostCommitFiberRoot(gh,i)}catch{}r=!0}return r}finally{wt.p=a,Oe.T=s,MI(t,e)}}return!1}function UC(t,e,n){e=Xs(n,e),e=l0(t.stateNode,e,2),t=ui(t,e,2),t!==null&&(bh(t,2),nr(t))}function ut(t,e,n){if(t.tag===3)UC(t,t,n);else for(;e!==null;){if(e.tag===3){UC(e,t,n);break}else if(e.tag===1){var s=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&(di===null||!di.has(s))){t=Xs(n,t),n=sI(2),s=ui(e,n,2),s!==null&&(aI(n,s,e,t),bh(s,2),nr(s));break}}e=e.return}}function hx(t,e,n){var s=t.pingCache;if(s===null){s=t.pingCache=new Jz;var a=new Set;s.set(e,a)}else a=s.get(e),a===void 0&&(a=new Set,s.set(e,a));a.has(n)||(ww=!0,a.add(n),t=rL.bind(null,t,e,n),e.then(t,t))}function rL(t,e,n){var s=t.pingCache;s!==null&&s.delete(e),t.pingedLanes|=t.suspendedLanes&n,t.warmLanes&=~n,ft===t&&(qe&n)===n&&(Pt===4||Pt===3&&(qe&62914560)===qe&&300>Ga()-Sw?!(_t&2)&&uu(t,0):vw|=n,lu===qe&&(lu=0)),nr(t)}function BI(t,e){e===0&&(e=MN()),t=bi(t,e),t!==null&&(bh(t,e),nr(t))}function iL(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),BI(t,n)}function oL(t,e){var n=0;switch(t.tag){case 13:var s=t.stateNode,a=t.memoizedState;a!==null&&(n=a.retryLane);break;case 19:s=t.stateNode;break;case 22:s=t.stateNode._retryCache;break;default:throw Error(Y(314))}s!==null&&s.delete(e),BI(t,n)}function lL(t,e){return U1(t,e)}var ym=null,Nl=null,$0=!1,bm=!1,px=!1,bo=0;function nr(t){t!==Nl&&t.next===null&&(Nl===null?ym=Nl=t:Nl=Nl.next=t),bm=!0,$0||($0=!0,cL(uL))}function Nh(t,e){if(!px&&bm){px=!0;do for(var n=!1,s=ym;s!==null;){if(t!==0){var a=s.pendingLanes;if(a===0)var r=0;else{var i=s.suspendedLanes,o=s.pingedLanes;r=(1<<31-Ts(42|t)+1)-1,r&=a&~(i&~o),r=r&201326677?r&201326677|1:r?r|2:0}r!==0&&(n=!0,WC(s,r))}else r=qe,r=lg(s,s===ft?r:0),!(r&3)||yh(s,r)||(n=!0,WC(s,r));s=s.next}while(n);px=!1}}function uL(){bm=$0=!1;var t=0;bo!==0&&(bL()&&(t=bo),bo=0);for(var e=Ga(),n=null,s=ym;s!==null;){var a=s.next,r=VI(s,e);r===0?(s.next=null,n===null?ym=a:n.next=a,a===null&&(Nl=n)):(n=s,(t!==0||r&3)&&(bm=!0)),s=a}Nh(t)}function VI(t,e){for(var n=t.suspendedLanes,s=t.pingedLanes,a=t.expirationTimes,r=t.pendingLanes&-62914561;0<r;){var i=31-Ts(r),o=1<<i,l=a[i];l===-1?(!(o&n)||o&s)&&(a[i]=FF(o,e)):l<=e&&(t.expiredLanes|=o),r&=~o}if(e=ft,n=qe,n=lg(t,t===e?n:0),s=t.callbackNode,n===0||t===e&&pt===2||t.cancelPendingCommit!==null)return s!==null&&s!==null&&Wb(s),t.callbackNode=null,t.callbackPriority=0;if(!(n&3)||yh(t,n)){if(e=n&-n,e===t.callbackPriority)return e;switch(s!==null&&Wb(s),UN(n)){case 2:case 8:n=zN;break;case 32:n=tm;break;case 268435456:n=LN;break;default:n=tm}return s=UI.bind(null,t),n=U1(n,s),t.callbackPriority=e,t.callbackNode=n,e}return s!==null&&s!==null&&Wb(s),t.callbackPriority=2,t.callbackNode=null,2}function UI(t,e){var n=t.callbackNode;if(Kl()&&t.callbackNode!==n)return null;var s=qe;return s=lg(t,t===ft?s:0),s===0?null:(_I(t,s,e),VI(t,Ga()),t.callbackNode!=null&&t.callbackNode===n?UI.bind(null,t):null)}function WC(t,e){if(Kl())return null;_I(t,e,!0)}function cL(t){wL(function(){_t&6?U1(FN,t):t()})}function $w(){return bo===0&&(bo=PN()),bo}function GC(t){return t==null||typeof t=="symbol"||typeof t=="boolean"?null:typeof t=="function"?t:Ff(""+t)}function HC(t,e){var n=e.ownerDocument.createElement("input");return n.name=e.name,n.value=e.value,t.id&&n.setAttribute("form",t.id),e.parentNode.insertBefore(n,e),t=new FormData(t),n.parentNode.removeChild(n),t}function dL(t,e,n,s,a){if(e==="submit"&&n&&n.stateNode===a){var r=GC((a[cs]||null).action),i=s.submitter;i&&(e=(e=i[cs]||null)?GC(e.formAction):i.getAttribute("formAction"),e!==null&&(r=e,i=null));var o=new ug("action","action",null,s,a);t.push({event:o,listeners:[{instance:null,listener:function(){if(s.defaultPrevented){if(bo!==0){var l=i?HC(a,i):new FormData(a);i0(n,{pending:!0,data:l,method:a.method,action:r},null,l)}}else typeof r=="function"&&(o.preventDefault(),l=i?HC(a,i):new FormData(a),i0(n,{pending:!0,data:l,method:a.method,action:r},r,l))},currentTarget:a}]})}}for(var fx=0;fx<hC.length;fx++){var mx=hC[fx],hL=mx.toLowerCase(),pL=mx[0].toUpperCase()+mx.slice(1);Da(hL,"on"+pL)}Da(uk,"onAnimationEnd");Da(ck,"onAnimationIteration");Da(dk,"onAnimationStart");Da("dblclick","onDoubleClick");Da("focusin","onFocus");Da("focusout","onBlur");Da(Rz,"onTransitionRun");Da(Dz,"onTransitionStart");Da(Az,"onTransitionCancel");Da(hk,"onTransitionEnd");su("onMouseEnter",["mouseout","mouseover"]);su("onMouseLeave",["mouseout","mouseover"]);su("onPointerEnter",["pointerout","pointerover"]);su("onPointerLeave",["pointerout","pointerover"]);Wo("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Wo("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Wo("onBeforeInput",["compositionend","keypress","textInput","paste"]);Wo("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Wo("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Wo("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Wd="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),fL=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Wd));function WI(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var s=t[n],a=s.event;s=s.listeners;e:{var r=void 0;if(e)for(var i=s.length-1;0<=i;i--){var o=s[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==r&&a.isPropagationStopped())break e;r=o,a.currentTarget=u;try{r(a)}catch(c){dm(c)}a.currentTarget=null,r=l}else for(i=0;i<s.length;i++){if(o=s[i],l=o.instance,u=o.currentTarget,o=o.listener,l!==r&&a.isPropagationStopped())break e;r=o,a.currentTarget=u;try{r(a)}catch(c){dm(c)}a.currentTarget=null,r=l}}}}function Ge(t,e){var n=e[qx];n===void 0&&(n=e[qx]=new Set);var s=t+"__bubble";n.has(s)||(GI(e,t,2,!1),n.add(s))}function gx(t,e,n){var s=0;e&&(s|=4),GI(n,t,s,e)}var ff="_reactListening"+Math.random().toString(36).slice(2);function Nw(t){if(!t[ff]){t[ff]=!0,GN.forEach(function(n){n!=="selectionchange"&&(fL.has(n)||gx(n,!1,t),gx(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[ff]||(e[ff]=!0,gx("selectionchange",!1,e))}}function GI(t,e,n,s){switch(nT(e)){case 2:var a=BL;break;case 8:a=VL;break;default:a=Ew}n=a.bind(null,e,n,t),a=void 0,!Qx||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(a=!0),s?a!==void 0?t.addEventListener(e,n,{capture:!0,passive:a}):t.addEventListener(e,n,!0):a!==void 0?t.addEventListener(e,n,{passive:a}):t.addEventListener(e,n,!1)}function yx(t,e,n,s,a){var r=s;if(!(e&1)&&!(e&2)&&s!==null)e:for(;;){if(s===null)return;var i=s.tag;if(i===3||i===4){var o=s.stateNode.containerInfo;if(o===a||o.nodeType===8&&o.parentNode===a)break;if(i===4)for(i=s.return;i!==null;){var l=i.tag;if((l===3||l===4)&&(l=i.stateNode.containerInfo,l===a||l.nodeType===8&&l.parentNode===a))return;i=i.return}for(;o!==null;){if(i=oo(o),i===null)return;if(l=i.tag,l===5||l===6||l===26||l===27){s=r=i;continue e}o=o.parentNode}}s=s.return}ZN(function(){var u=r,c=H1(n),d=[];e:{var h=pk.get(t);if(h!==void 0){var p=ug,f=t;switch(t){case"keypress":if(Lf(n)===0)break e;case"keydown":case"keyup":p=oz;break;case"focusin":f="focus",p=Xb;break;case"focusout":f="blur",p=Xb;break;case"beforeblur":case"afterblur":p=Xb;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=eC;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=KF;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=cz;break;case uk:case ck:case dk:p=ZF;break;case hk:p=hz;break;case"scroll":case"scrollend":p=qF;break;case"wheel":p=fz;break;case"copy":case"cut":case"paste":p=ez;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=nC;break;case"toggle":case"beforetoggle":p=gz}var m=(e&4)!==0,y=!m&&(t==="scroll"||t==="scrollend"),g=m?h!==null?h+"Capture":null:h;m=[];for(var b=u,x;b!==null;){var w=b;if(x=w.stateNode,w=w.tag,w!==5&&w!==26&&w!==27||x===null||g===null||(w=Ld(b,g),w!=null&&m.push(Gd(b,w,x))),y)break;b=b.return}0<m.length&&(h=new p(h,f,null,n,c),d.push({event:h,listeners:m}))}}if(!(e&7)){e:{if(h=t==="mouseover"||t==="pointerover",p=t==="mouseout"||t==="pointerout",h&&n!==Yx&&(f=n.relatedTarget||n.fromElement)&&(oo(f)||f[ku]))break e;if((p||h)&&(h=c.window===c?c:(h=c.ownerDocument)?h.defaultView||h.parentWindow:window,p?(f=n.relatedTarget||n.toElement,p=u,f=f?oo(f):null,f!==null&&(y=Nu(f),m=f.tag,f!==y||m!==5&&m!==27&&m!==6)&&(f=null)):(p=null,f=u),p!==f)){if(m=eC,w="onMouseLeave",g="onMouseEnter",b="mouse",(t==="pointerout"||t==="pointerover")&&(m=nC,w="onPointerLeave",g="onPointerEnter",b="pointer"),y=p==null?h:od(p),x=f==null?h:od(f),h=new m(w,b+"leave",p,n,c),h.target=y,h.relatedTarget=x,w=null,oo(c)===u&&(m=new m(g,b+"enter",f,n,c),m.target=x,m.relatedTarget=y,w=m),y=w,p&&f)t:{for(m=p,g=f,b=0,x=m;x;x=gl(x))b++;for(x=0,w=g;w;w=gl(w))x++;for(;0<b-x;)m=gl(m),b--;for(;0<x-b;)g=gl(g),x--;for(;b--;){if(m===g||g!==null&&m===g.alternate)break t;m=gl(m),g=gl(g)}m=null}else m=null;p!==null&&jC(d,h,p,m,!1),f!==null&&y!==null&&jC(d,y,f,m,!0)}}e:{if(h=u?od(u):window,p=h.nodeName&&h.nodeName.toLowerCase(),p==="select"||p==="input"&&h.type==="file")var v=iC;else if(rC(h))if(ak)v=kz;else{v=$z;var C=Cz}else p=h.nodeName,!p||p.toLowerCase()!=="input"||h.type!=="checkbox"&&h.type!=="radio"?u&&G1(u.elementType)&&(v=iC):v=Nz;if(v&&(v=v(t,u))){sk(d,v,n,c);break e}C&&C(t,h,u),t==="focusout"&&u&&h.type==="number"&&u.memoizedProps.value!=null&&Kx(h,"number",h.value)}switch(C=u?od(u):window,t){case"focusin":(rC(C)||C.contentEditable==="true")&&(Ol=C,Zx=u,xd=null);break;case"focusout":xd=Zx=Ol=null;break;case"mousedown":Jx=!0;break;case"contextmenu":case"mouseup":case"dragend":Jx=!1,dC(d,n,c);break;case"selectionchange":if(Ez)break;case"keydown":case"keyup":dC(d,n,c)}var $;if(X1)e:{switch(t){case"compositionstart":var k="onCompositionStart";break e;case"compositionend":k="onCompositionEnd";break e;case"compositionupdate":k="onCompositionUpdate";break e}k=void 0}else _l?tk(t,n)&&(k="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(k="onCompositionStart");k&&(ek&&n.locale!=="ko"&&(_l||k!=="onCompositionStart"?k==="onCompositionEnd"&&_l&&($=JN()):(si=c,j1="value"in si?si.value:si.textContent,_l=!0)),C=xm(u,k),0<C.length&&(k=new tC(k,t,null,n,c),d.push({event:k,listeners:C}),$?k.data=$:($=nk(n),$!==null&&(k.data=$)))),($=bz?xz(t,n):wz(t,n))&&(k=xm(u,"onBeforeInput"),0<k.length&&(C=new tC("onBeforeInput","beforeinput",null,n,c),d.push({event:C,listeners:k}),C.data=$)),dL(d,t,u,n,c)}WI(d,e)})}function Gd(t,e,n){return{instance:t,listener:e,currentTarget:n}}function xm(t,e){for(var n=e+"Capture",s=[];t!==null;){var a=t,r=a.stateNode;a=a.tag,a!==5&&a!==26&&a!==27||r===null||(a=Ld(t,n),a!=null&&s.unshift(Gd(t,a,r)),a=Ld(t,e),a!=null&&s.push(Gd(t,a,r))),t=t.return}return s}function gl(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5&&t.tag!==27);return t||null}function jC(t,e,n,s,a){for(var r=e._reactName,i=[];n!==null&&n!==s;){var o=n,l=o.alternate,u=o.stateNode;if(o=o.tag,l!==null&&l===s)break;o!==5&&o!==26&&o!==27||u===null||(l=u,a?(u=Ld(n,r),u!=null&&i.unshift(Gd(n,u,l))):a||(u=Ld(n,r),u!=null&&i.push(Gd(n,u,l)))),n=n.return}i.length!==0&&t.push({event:e,listeners:i})}var mL=/\r\n?/g,gL=/\u0000|\uFFFD/g;function qC(t){return(typeof t=="string"?t:""+t).replace(mL,`
`).replace(gL,"")}function HI(t,e){return e=qC(e),qC(t)===e}function wg(){}function nt(t,e,n,s,a,r){switch(n){case"children":typeof s=="string"?e==="body"||e==="textarea"&&s===""||au(t,s):(typeof s=="number"||typeof s=="bigint")&&e!=="body"&&au(t,""+s);break;case"className":rf(t,"class",s);break;case"tabIndex":rf(t,"tabindex",s);break;case"dir":case"role":case"viewBox":case"width":case"height":rf(t,n,s);break;case"style":QN(t,s,r);break;case"data":if(e!=="object"){rf(t,"data",s);break}case"src":case"href":if(s===""&&(e!=="a"||n!=="href")){t.removeAttribute(n);break}if(s==null||typeof s=="function"||typeof s=="symbol"||typeof s=="boolean"){t.removeAttribute(n);break}s=Ff(""+s),t.setAttribute(n,s);break;case"action":case"formAction":if(typeof s=="function"){t.setAttribute(n,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof r=="function"&&(n==="formAction"?(e!=="input"&&nt(t,e,"name",a.name,a,null),nt(t,e,"formEncType",a.formEncType,a,null),nt(t,e,"formMethod",a.formMethod,a,null),nt(t,e,"formTarget",a.formTarget,a,null)):(nt(t,e,"encType",a.encType,a,null),nt(t,e,"method",a.method,a,null),nt(t,e,"target",a.target,a,null)));if(s==null||typeof s=="symbol"||typeof s=="boolean"){t.removeAttribute(n);break}s=Ff(""+s),t.setAttribute(n,s);break;case"onClick":s!=null&&(t.onclick=wg);break;case"onScroll":s!=null&&Ge("scroll",t);break;case"onScrollEnd":s!=null&&Ge("scrollend",t);break;case"dangerouslySetInnerHTML":if(s!=null){if(typeof s!="object"||!("__html"in s))throw Error(Y(61));if(n=s.__html,n!=null){if(a.children!=null)throw Error(Y(60));t.innerHTML=n}}break;case"multiple":t.multiple=s&&typeof s!="function"&&typeof s!="symbol";break;case"muted":t.muted=s&&typeof s!="function"&&typeof s!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(s==null||typeof s=="function"||typeof s=="boolean"||typeof s=="symbol"){t.removeAttribute("xlink:href");break}n=Ff(""+s),t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":s!=null&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,""+s):t.removeAttribute(n);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":s&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,""):t.removeAttribute(n);break;case"capture":case"download":s===!0?t.setAttribute(n,""):s!==!1&&s!=null&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,s):t.removeAttribute(n);break;case"cols":case"rows":case"size":case"span":s!=null&&typeof s!="function"&&typeof s!="symbol"&&!isNaN(s)&&1<=s?t.setAttribute(n,s):t.removeAttribute(n);break;case"rowSpan":case"start":s==null||typeof s=="function"||typeof s=="symbol"||isNaN(s)?t.removeAttribute(n):t.setAttribute(n,s);break;case"popover":Ge("beforetoggle",t),Ge("toggle",t),Of(t,"popover",s);break;case"xlinkActuate":ur(t,"http://www.w3.org/1999/xlink","xlink:actuate",s);break;case"xlinkArcrole":ur(t,"http://www.w3.org/1999/xlink","xlink:arcrole",s);break;case"xlinkRole":ur(t,"http://www.w3.org/1999/xlink","xlink:role",s);break;case"xlinkShow":ur(t,"http://www.w3.org/1999/xlink","xlink:show",s);break;case"xlinkTitle":ur(t,"http://www.w3.org/1999/xlink","xlink:title",s);break;case"xlinkType":ur(t,"http://www.w3.org/1999/xlink","xlink:type",s);break;case"xmlBase":ur(t,"http://www.w3.org/XML/1998/namespace","xml:base",s);break;case"xmlLang":ur(t,"http://www.w3.org/XML/1998/namespace","xml:lang",s);break;case"xmlSpace":ur(t,"http://www.w3.org/XML/1998/namespace","xml:space",s);break;case"is":Of(t,"is",s);break;case"innerText":case"textContent":break;default:(!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(n=HF.get(n)||n,Of(t,n,s))}}function N0(t,e,n,s,a,r){switch(n){case"style":QN(t,s,r);break;case"dangerouslySetInnerHTML":if(s!=null){if(typeof s!="object"||!("__html"in s))throw Error(Y(61));if(n=s.__html,n!=null){if(a.children!=null)throw Error(Y(60));t.innerHTML=n}}break;case"children":typeof s=="string"?au(t,s):(typeof s=="number"||typeof s=="bigint")&&au(t,""+s);break;case"onScroll":s!=null&&Ge("scroll",t);break;case"onScrollEnd":s!=null&&Ge("scrollend",t);break;case"onClick":s!=null&&(t.onclick=wg);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!HN.hasOwnProperty(n))e:{if(n[0]==="o"&&n[1]==="n"&&(a=n.endsWith("Capture"),e=n.slice(2,a?n.length-7:void 0),r=t[cs]||null,r=r!=null?r[n]:null,typeof r=="function"&&t.removeEventListener(e,r,a),typeof s=="function")){typeof r!="function"&&r!==null&&(n in t?t[n]=null:t.hasAttribute(n)&&t.removeAttribute(n)),t.addEventListener(e,s,a);break e}n in t?t[n]=s:s===!0?t.setAttribute(n,""):Of(t,n,s)}}}function Tn(t,e,n){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Ge("error",t),Ge("load",t);var s=!1,a=!1,r;for(r in n)if(n.hasOwnProperty(r)){var i=n[r];if(i!=null)switch(r){case"src":s=!0;break;case"srcSet":a=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(Y(137,e));default:nt(t,e,r,i,n,null)}}a&&nt(t,e,"srcSet",n.srcSet,n,null),s&&nt(t,e,"src",n.src,n,null);return;case"input":Ge("invalid",t);var o=r=i=a=null,l=null,u=null;for(s in n)if(n.hasOwnProperty(s)){var c=n[s];if(c!=null)switch(s){case"name":a=c;break;case"type":i=c;break;case"checked":l=c;break;case"defaultChecked":u=c;break;case"value":r=c;break;case"defaultValue":o=c;break;case"children":case"dangerouslySetInnerHTML":if(c!=null)throw Error(Y(137,e));break;default:nt(t,e,s,c,n,null)}}XN(t,r,o,l,u,i,a,!1),nm(t);return;case"select":Ge("invalid",t),s=i=r=null;for(a in n)if(n.hasOwnProperty(a)&&(o=n[a],o!=null))switch(a){case"value":r=o;break;case"defaultValue":i=o;break;case"multiple":s=o;default:nt(t,e,a,o,n,null)}e=r,n=i,t.multiple=!!s,e!=null?Wl(t,!!s,e,!1):n!=null&&Wl(t,!!s,n,!0);return;case"textarea":Ge("invalid",t),r=a=s=null;for(i in n)if(n.hasOwnProperty(i)&&(o=n[i],o!=null))switch(i){case"value":s=o;break;case"defaultValue":a=o;break;case"children":r=o;break;case"dangerouslySetInnerHTML":if(o!=null)throw Error(Y(91));break;default:nt(t,e,i,o,n,null)}YN(t,s,a,r),nm(t);return;case"option":for(l in n)if(n.hasOwnProperty(l)&&(s=n[l],s!=null))switch(l){case"selected":t.selected=s&&typeof s!="function"&&typeof s!="symbol";break;default:nt(t,e,l,s,n,null)}return;case"dialog":Ge("cancel",t),Ge("close",t);break;case"iframe":case"object":Ge("load",t);break;case"video":case"audio":for(s=0;s<Wd.length;s++)Ge(Wd[s],t);break;case"image":Ge("error",t),Ge("load",t);break;case"details":Ge("toggle",t);break;case"embed":case"source":case"link":Ge("error",t),Ge("load",t);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(u in n)if(n.hasOwnProperty(u)&&(s=n[u],s!=null))switch(u){case"children":case"dangerouslySetInnerHTML":throw Error(Y(137,e));default:nt(t,e,u,s,n,null)}return;default:if(G1(e)){for(c in n)n.hasOwnProperty(c)&&(s=n[c],s!==void 0&&N0(t,e,c,s,n,void 0));return}}for(o in n)n.hasOwnProperty(o)&&(s=n[o],s!=null&&nt(t,e,o,s,n,null))}function yL(t,e,n,s){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var a=null,r=null,i=null,o=null,l=null,u=null,c=null;for(p in n){var d=n[p];if(n.hasOwnProperty(p)&&d!=null)switch(p){case"checked":break;case"value":break;case"defaultValue":l=d;default:s.hasOwnProperty(p)||nt(t,e,p,null,s,d)}}for(var h in s){var p=s[h];if(d=n[h],s.hasOwnProperty(h)&&(p!=null||d!=null))switch(h){case"type":r=p;break;case"name":a=p;break;case"checked":u=p;break;case"defaultChecked":c=p;break;case"value":i=p;break;case"defaultValue":o=p;break;case"children":case"dangerouslySetInnerHTML":if(p!=null)throw Error(Y(137,e));break;default:p!==d&&nt(t,e,h,p,s,d)}}Xx(t,i,o,l,u,c,r,a);return;case"select":p=i=o=h=null;for(r in n)if(l=n[r],n.hasOwnProperty(r)&&l!=null)switch(r){case"value":break;case"multiple":p=l;default:s.hasOwnProperty(r)||nt(t,e,r,null,s,l)}for(a in s)if(r=s[a],l=n[a],s.hasOwnProperty(a)&&(r!=null||l!=null))switch(a){case"value":h=r;break;case"defaultValue":o=r;break;case"multiple":i=r;default:r!==l&&nt(t,e,a,r,s,l)}e=o,n=i,s=p,h!=null?Wl(t,!!n,h,!1):!!s!=!!n&&(e!=null?Wl(t,!!n,e,!0):Wl(t,!!n,n?[]:"",!1));return;case"textarea":p=h=null;for(o in n)if(a=n[o],n.hasOwnProperty(o)&&a!=null&&!s.hasOwnProperty(o))switch(o){case"value":break;case"children":break;default:nt(t,e,o,null,s,a)}for(i in s)if(a=s[i],r=n[i],s.hasOwnProperty(i)&&(a!=null||r!=null))switch(i){case"value":h=a;break;case"defaultValue":p=a;break;case"children":break;case"dangerouslySetInnerHTML":if(a!=null)throw Error(Y(91));break;default:a!==r&&nt(t,e,i,a,s,r)}KN(t,h,p);return;case"option":for(var f in n)if(h=n[f],n.hasOwnProperty(f)&&h!=null&&!s.hasOwnProperty(f))switch(f){case"selected":t.selected=!1;break;default:nt(t,e,f,null,s,h)}for(l in s)if(h=s[l],p=n[l],s.hasOwnProperty(l)&&h!==p&&(h!=null||p!=null))switch(l){case"selected":t.selected=h&&typeof h!="function"&&typeof h!="symbol";break;default:nt(t,e,l,h,s,p)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var m in n)h=n[m],n.hasOwnProperty(m)&&h!=null&&!s.hasOwnProperty(m)&&nt(t,e,m,null,s,h);for(u in s)if(h=s[u],p=n[u],s.hasOwnProperty(u)&&h!==p&&(h!=null||p!=null))switch(u){case"children":case"dangerouslySetInnerHTML":if(h!=null)throw Error(Y(137,e));break;default:nt(t,e,u,h,s,p)}return;default:if(G1(e)){for(var y in n)h=n[y],n.hasOwnProperty(y)&&h!==void 0&&!s.hasOwnProperty(y)&&N0(t,e,y,void 0,s,h);for(c in s)h=s[c],p=n[c],!s.hasOwnProperty(c)||h===p||h===void 0&&p===void 0||N0(t,e,c,h,s,p);return}}for(var g in n)h=n[g],n.hasOwnProperty(g)&&h!=null&&!s.hasOwnProperty(g)&&nt(t,e,g,null,s,h);for(d in s)h=s[d],p=n[d],!s.hasOwnProperty(d)||h===p||h==null&&p==null||nt(t,e,d,h,s,p)}var k0=null,I0=null;function wm(t){return t.nodeType===9?t:t.ownerDocument}function XC(t){switch(t){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function jI(t,e){if(t===0)switch(e){case"svg":return 1;case"math":return 2;default:return 0}return t===1&&e==="foreignObject"?0:t}function T0(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.children=="bigint"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var bx=null;function bL(){var t=window.event;return t&&t.type==="popstate"?t===bx?!1:(bx=t,!0):(bx=null,!1)}var qI=typeof setTimeout=="function"?setTimeout:void 0,xL=typeof clearTimeout=="function"?clearTimeout:void 0,KC=typeof Promise=="function"?Promise:void 0,wL=typeof queueMicrotask=="function"?queueMicrotask:typeof KC<"u"?function(t){return KC.resolve(null).then(t).catch(vL)}:qI;function vL(t){setTimeout(function(){throw t})}function xx(t,e){var n=e,s=0;do{var a=n.nextSibling;if(t.removeChild(n),a&&a.nodeType===8)if(n=a.data,n==="/$"){if(s===0){t.removeChild(a),Kd(e);return}s--}else n!=="$"&&n!=="$?"&&n!=="$!"||s++;n=a}while(n);Kd(e)}function E0(t){var e=t.firstChild;for(e&&e.nodeType===10&&(e=e.nextSibling);e;){var n=e;switch(e=e.nextSibling,n.nodeName){case"HTML":case"HEAD":case"BODY":E0(n),W1(n);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(n.rel.toLowerCase()==="stylesheet")continue}t.removeChild(n)}}function SL(t,e,n,s){for(;t.nodeType===1;){var a=n;if(t.nodeName.toLowerCase()!==e.toLowerCase()){if(!s&&(t.nodeName!=="INPUT"||t.type!=="hidden"))break}else if(s){if(!t[zd])switch(e){case"meta":if(!t.hasAttribute("itemprop"))break;return t;case"link":if(r=t.getAttribute("rel"),r==="stylesheet"&&t.hasAttribute("data-precedence"))break;if(r!==a.rel||t.getAttribute("href")!==(a.href==null?null:a.href)||t.getAttribute("crossorigin")!==(a.crossOrigin==null?null:a.crossOrigin)||t.getAttribute("title")!==(a.title==null?null:a.title))break;return t;case"style":if(t.hasAttribute("data-precedence"))break;return t;case"script":if(r=t.getAttribute("src"),(r!==(a.src==null?null:a.src)||t.getAttribute("type")!==(a.type==null?null:a.type)||t.getAttribute("crossorigin")!==(a.crossOrigin==null?null:a.crossOrigin))&&r&&t.hasAttribute("async")&&!t.hasAttribute("itemprop"))break;return t;default:return t}}else if(e==="input"&&t.type==="hidden"){var r=a.name==null?null:""+a.name;if(a.type==="hidden"&&t.getAttribute("name")===r)return t}else return t;if(t=va(t.nextSibling),t===null)break}return null}function CL(t,e,n){if(e==="")return null;for(;t.nodeType!==3;)if((t.nodeType!==1||t.nodeName!=="INPUT"||t.type!=="hidden")&&!n||(t=va(t.nextSibling),t===null))return null;return t}function va(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?"||e==="F!"||e==="F")break;if(e==="/$")return null}}return t}function YC(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}function XI(t,e,n){switch(e=wm(n),t){case"html":if(t=e.documentElement,!t)throw Error(Y(452));return t;case"head":if(t=e.head,!t)throw Error(Y(453));return t;case"body":if(t=e.body,!t)throw Error(Y(454));return t;default:throw Error(Y(451))}}var la=new Map,QC=new Set;function vm(t){return typeof t.getRootNode=="function"?t.getRootNode():t.ownerDocument}var Lr=wt.d;wt.d={f:$L,r:NL,D:kL,C:IL,L:TL,m:EL,X:DL,S:RL,M:AL};function $L(){var t=Lr.f(),e=bg();return t||e}function NL(t){var e=Iu(t);e!==null&&e.tag===5&&e.type==="form"?Xk(e):Lr.r(t)}var Eu=typeof document>"u"?null:document;function KI(t,e,n){var s=Eu;if(s&&typeof e=="string"&&e){var a=qs(e);a='link[rel="'+t+'"][href="'+a+'"]',typeof n=="string"&&(a+='[crossorigin="'+n+'"]'),QC.has(a)||(QC.add(a),t={rel:t,crossOrigin:n,href:e},s.querySelector(a)===null&&(e=s.createElement("link"),Tn(e,"link",t),yn(e),s.head.appendChild(e)))}}function kL(t){Lr.D(t),KI("dns-prefetch",t,null)}function IL(t,e){Lr.C(t,e),KI("preconnect",t,e)}function TL(t,e,n){Lr.L(t,e,n);var s=Eu;if(s&&t&&e){var a='link[rel="preload"][as="'+qs(e)+'"]';e==="image"&&n&&n.imageSrcSet?(a+='[imagesrcset="'+qs(n.imageSrcSet)+'"]',typeof n.imageSizes=="string"&&(a+='[imagesizes="'+qs(n.imageSizes)+'"]')):a+='[href="'+qs(t)+'"]';var r=a;switch(e){case"style":r=cu(t);break;case"script":r=Ru(t)}la.has(r)||(t=St({rel:"preload",href:e==="image"&&n&&n.imageSrcSet?void 0:t,as:e},n),la.set(r,t),s.querySelector(a)!==null||e==="style"&&s.querySelector(kh(r))||e==="script"&&s.querySelector(Ih(r))||(e=s.createElement("link"),Tn(e,"link",t),yn(e),s.head.appendChild(e)))}}function EL(t,e){Lr.m(t,e);var n=Eu;if(n&&t){var s=e&&typeof e.as=="string"?e.as:"script",a='link[rel="modulepreload"][as="'+qs(s)+'"][href="'+qs(t)+'"]',r=a;switch(s){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":r=Ru(t)}if(!la.has(r)&&(t=St({rel:"modulepreload",href:t},e),la.set(r,t),n.querySelector(a)===null)){switch(s){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(n.querySelector(Ih(r)))return}s=n.createElement("link"),Tn(s,"link",t),yn(s),n.head.appendChild(s)}}}function RL(t,e,n){Lr.S(t,e,n);var s=Eu;if(s&&t){var a=Ul(s).hoistableStyles,r=cu(t);e=e||"default";var i=a.get(r);if(!i){var o={loading:0,preload:null};if(i=s.querySelector(kh(r)))o.loading=5;else{t=St({rel:"stylesheet",href:t,"data-precedence":e},n),(n=la.get(r))&&kw(t,n);var l=i=s.createElement("link");yn(l),Tn(l,"link",t),l._p=new Promise(function(u,c){l.onload=u,l.onerror=c}),l.addEventListener("load",function(){o.loading|=1}),l.addEventListener("error",function(){o.loading|=2}),o.loading|=4,Wf(i,e,s)}i={type:"stylesheet",instance:i,count:1,state:o},a.set(r,i)}}}function DL(t,e){Lr.X(t,e);var n=Eu;if(n&&t){var s=Ul(n).hoistableScripts,a=Ru(t),r=s.get(a);r||(r=n.querySelector(Ih(a)),r||(t=St({src:t,async:!0},e),(e=la.get(a))&&Iw(t,e),r=n.createElement("script"),yn(r),Tn(r,"link",t),n.head.appendChild(r)),r={type:"script",instance:r,count:1,state:null},s.set(a,r))}}function AL(t,e){Lr.M(t,e);var n=Eu;if(n&&t){var s=Ul(n).hoistableScripts,a=Ru(t),r=s.get(a);r||(r=n.querySelector(Ih(a)),r||(t=St({src:t,async:!0,type:"module"},e),(e=la.get(a))&&Iw(t,e),r=n.createElement("script"),yn(r),Tn(r,"link",t),n.head.appendChild(r)),r={type:"script",instance:r,count:1,state:null},s.set(a,r))}}function ZC(t,e,n,s){var a=(a=oi.current)?vm(a):null;if(!a)throw Error(Y(446));switch(t){case"meta":case"title":return null;case"style":return typeof n.precedence=="string"&&typeof n.href=="string"?(e=cu(n.href),n=Ul(a).hoistableStyles,s=n.get(e),s||(s={type:"style",instance:null,count:0,state:null},n.set(e,s)),s):{type:"void",instance:null,count:0,state:null};case"link":if(n.rel==="stylesheet"&&typeof n.href=="string"&&typeof n.precedence=="string"){t=cu(n.href);var r=Ul(a).hoistableStyles,i=r.get(t);if(i||(a=a.ownerDocument||a,i={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},r.set(t,i),(r=a.querySelector(kh(t)))&&!r._p&&(i.instance=r,i.state.loading=5),la.has(t)||(n={rel:"preload",as:"style",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy},la.set(t,n),r||_L(a,t,n,i.state))),e&&s===null)throw Error(Y(528,""));return i}if(e&&s!==null)throw Error(Y(529,""));return null;case"script":return e=n.async,n=n.src,typeof n=="string"&&e&&typeof e!="function"&&typeof e!="symbol"?(e=Ru(n),n=Ul(a).hoistableScripts,s=n.get(e),s||(s={type:"script",instance:null,count:0,state:null},n.set(e,s)),s):{type:"void",instance:null,count:0,state:null};default:throw Error(Y(444,t))}}function cu(t){return'href="'+qs(t)+'"'}function kh(t){return'link[rel="stylesheet"]['+t+"]"}function YI(t){return St({},t,{"data-precedence":t.precedence,precedence:null})}function _L(t,e,n,s){t.querySelector('link[rel="preload"][as="style"]['+e+"]")?s.loading=1:(e=t.createElement("link"),s.preload=e,e.addEventListener("load",function(){return s.loading|=1}),e.addEventListener("error",function(){return s.loading|=2}),Tn(e,"link",n),yn(e),t.head.appendChild(e))}function Ru(t){return'[src="'+qs(t)+'"]'}function Ih(t){return"script[async]"+t}function JC(t,e,n){if(e.count++,e.instance===null)switch(e.type){case"style":var s=t.querySelector('style[data-href~="'+qs(n.href)+'"]');if(s)return e.instance=s,yn(s),s;var a=St({},n,{"data-href":n.href,"data-precedence":n.precedence,href:null,precedence:null});return s=(t.ownerDocument||t).createElement("style"),yn(s),Tn(s,"style",a),Wf(s,n.precedence,t),e.instance=s;case"stylesheet":a=cu(n.href);var r=t.querySelector(kh(a));if(r)return e.state.loading|=4,e.instance=r,yn(r),r;s=YI(n),(a=la.get(a))&&kw(s,a),r=(t.ownerDocument||t).createElement("link"),yn(r);var i=r;return i._p=new Promise(function(o,l){i.onload=o,i.onerror=l}),Tn(r,"link",s),e.state.loading|=4,Wf(r,n.precedence,t),e.instance=r;case"script":return r=Ru(n.src),(a=t.querySelector(Ih(r)))?(e.instance=a,yn(a),a):(s=n,(a=la.get(r))&&(s=St({},n),Iw(s,a)),t=t.ownerDocument||t,a=t.createElement("script"),yn(a),Tn(a,"link",s),t.head.appendChild(a),e.instance=a);case"void":return null;default:throw Error(Y(443,e.type))}else e.type==="stylesheet"&&!(e.state.loading&4)&&(s=e.instance,e.state.loading|=4,Wf(s,n.precedence,t));return e.instance}function Wf(t,e,n){for(var s=n.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),a=s.length?s[s.length-1]:null,r=a,i=0;i<s.length;i++){var o=s[i];if(o.dataset.precedence===e)r=o;else if(r!==a)break}r?r.parentNode.insertBefore(t,r.nextSibling):(e=n.nodeType===9?n.head:n,e.insertBefore(t,e.firstChild))}function kw(t,e){t.crossOrigin==null&&(t.crossOrigin=e.crossOrigin),t.referrerPolicy==null&&(t.referrerPolicy=e.referrerPolicy),t.title==null&&(t.title=e.title)}function Iw(t,e){t.crossOrigin==null&&(t.crossOrigin=e.crossOrigin),t.referrerPolicy==null&&(t.referrerPolicy=e.referrerPolicy),t.integrity==null&&(t.integrity=e.integrity)}var Gf=null;function e2(t,e,n){if(Gf===null){var s=new Map,a=Gf=new Map;a.set(n,s)}else a=Gf,s=a.get(n),s||(s=new Map,a.set(n,s));if(s.has(t))return s;for(s.set(t,null),n=n.getElementsByTagName(t),a=0;a<n.length;a++){var r=n[a];if(!(r[zd]||r[Ln]||t==="link"&&r.getAttribute("rel")==="stylesheet")&&r.namespaceURI!=="http://www.w3.org/2000/svg"){var i=r.getAttribute(e)||"";i=t+i;var o=s.get(i);o?o.push(r):s.set(i,[r])}}return s}function t2(t,e,n){t=t.ownerDocument||t,t.head.insertBefore(n,e==="title"?t.querySelector("head > title"):null)}function OL(t,e,n){if(n===1||e.itemProp!=null)return!1;switch(t){case"meta":case"title":return!0;case"style":if(typeof e.precedence!="string"||typeof e.href!="string"||e.href==="")break;return!0;case"link":if(typeof e.rel!="string"||typeof e.href!="string"||e.href===""||e.onLoad||e.onError)break;switch(e.rel){case"stylesheet":return t=e.disabled,typeof e.precedence=="string"&&t==null;default:return!0}case"script":if(e.async&&typeof e.async!="function"&&typeof e.async!="symbol"&&!e.onLoad&&!e.onError&&e.src&&typeof e.src=="string")return!0}return!1}function QI(t){return!(t.type==="stylesheet"&&!(t.state.loading&3))}var Hd=null;function FL(){}function zL(t,e,n){if(Hd===null)throw Error(Y(475));var s=Hd;if(e.type==="stylesheet"&&(typeof n.media!="string"||matchMedia(n.media).matches!==!1)&&!(e.state.loading&4)){if(e.instance===null){var a=cu(n.href),r=t.querySelector(kh(a));if(r){t=r._p,t!==null&&typeof t=="object"&&typeof t.then=="function"&&(s.count++,s=Sm.bind(s),t.then(s,s)),e.state.loading|=4,e.instance=r,yn(r);return}r=t.ownerDocument||t,n=YI(n),(a=la.get(a))&&kw(n,a),r=r.createElement("link"),yn(r);var i=r;i._p=new Promise(function(o,l){i.onload=o,i.onerror=l}),Tn(r,"link",n),e.instance=r}s.stylesheets===null&&(s.stylesheets=new Map),s.stylesheets.set(e,t),(t=e.state.preload)&&!(e.state.loading&3)&&(s.count++,e=Sm.bind(s),t.addEventListener("load",e),t.addEventListener("error",e))}}function LL(){if(Hd===null)throw Error(Y(475));var t=Hd;return t.stylesheets&&t.count===0&&R0(t,t.stylesheets),0<t.count?function(e){var n=setTimeout(function(){if(t.stylesheets&&R0(t,t.stylesheets),t.unsuspend){var s=t.unsuspend;t.unsuspend=null,s()}},6e4);return t.unsuspend=e,function(){t.unsuspend=null,clearTimeout(n)}}:null}function Sm(){if(this.count--,this.count===0){if(this.stylesheets)R0(this,this.stylesheets);else if(this.unsuspend){var t=this.unsuspend;this.unsuspend=null,t()}}}var Cm=null;function R0(t,e){t.stylesheets=null,t.unsuspend!==null&&(t.count++,Cm=new Map,e.forEach(PL,t),Cm=null,Sm.call(t))}function PL(t,e){if(!(e.state.loading&4)){var n=Cm.get(t);if(n)var s=n.get(null);else{n=new Map,Cm.set(t,n);for(var a=t.querySelectorAll("link[data-precedence],style[data-precedence]"),r=0;r<a.length;r++){var i=a[r];(i.nodeName==="LINK"||i.getAttribute("media")!=="not all")&&(n.set(i.dataset.precedence,i),s=i)}s&&n.set(null,s)}a=e.instance,i=a.getAttribute("data-precedence"),r=n.get(i)||s,r===s&&n.set(null,a),n.set(i,a),this.count++,s=Sm.bind(this),a.addEventListener("load",s),a.addEventListener("error",s),r?r.parentNode.insertBefore(a,r.nextSibling):(t=t.nodeType===9?t.head:t,t.insertBefore(a,t.firstChild)),e.state.loading|=4}}var jd={$$typeof:wr,Provider:null,Consumer:null,_currentValue:po,_currentValue2:po,_threadCount:0};function ML(t,e,n,s,a,r,i,o){this.tag=1,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Gb(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Gb(0),this.hiddenUpdates=Gb(null),this.identifierPrefix=s,this.onUncaughtError=a,this.onCaughtError=r,this.onRecoverableError=i,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=o,this.incompleteTransitions=new Map}function ZI(t,e,n,s,a,r,i,o,l,u,c,d){return t=new ML(t,e,n,i,o,l,u,d),e=1,r===!0&&(e|=24),r=Ys(3,null,null,e),t.current=r,r.stateNode=t,e=tw(),e.refCount++,t.pooledCache=e,e.refCount++,r.memoizedState={element:s,isDehydrated:n,cache:e},gw(r),t}function JI(t){return t?(t=Ll,t):Ll}function eT(t,e,n,s,a,r){a=JI(a),s.context===null?s.context=a:s.pendingContext=a,s=li(e),s.payload={element:n},r=r===void 0?null:r,r!==null&&(s.callback=r),n=ui(t,s,e),n!==null&&(Yn(n,t,e),Nd(n,t,e))}function n2(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function Tw(t,e){n2(t,e),(t=t.alternate)&&n2(t,e)}function tT(t){if(t.tag===13){var e=bi(t,67108864);e!==null&&Yn(e,t,67108864),Tw(t,67108864)}}var $m=!0;function BL(t,e,n,s){var a=Oe.T;Oe.T=null;var r=wt.p;try{wt.p=2,Ew(t,e,n,s)}finally{wt.p=r,Oe.T=a}}function VL(t,e,n,s){var a=Oe.T;Oe.T=null;var r=wt.p;try{wt.p=8,Ew(t,e,n,s)}finally{wt.p=r,Oe.T=a}}function Ew(t,e,n,s){if($m){var a=D0(s);if(a===null)yx(t,e,s,Nm,n),s2(t,s);else if(WL(a,t,e,n,s))s.stopPropagation();else if(s2(t,s),e&4&&-1<UL.indexOf(t)){for(;a!==null;){var r=Iu(a);if(r!==null)switch(r.tag){case 3:if(r=r.stateNode,r.current.memoizedState.isDehydrated){var i=Qi(r.pendingLanes);if(i!==0){var o=r;for(o.pendingLanes|=2,o.entangledLanes|=2;i;){var l=1<<31-Ts(i);o.entanglements[1]|=l,i&=~l}nr(r),!(_t&6)&&(mm=Ga()+500,Nh(0))}}break;case 13:o=bi(r,2),o!==null&&Yn(o,r,2),bg(),Tw(r,2)}if(r=D0(s),r===null&&yx(t,e,s,Nm,n),r===a)break;a=r}a!==null&&s.stopPropagation()}else yx(t,e,s,null,n)}}function D0(t){return t=H1(t),Rw(t)}var Nm=null;function Rw(t){if(Nm=null,t=oo(t),t!==null){var e=Nu(t);if(e===null)t=null;else{var n=e.tag;if(n===13){if(t=_N(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null)}}return Nm=t,null}function nT(t){switch(t){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(IF()){case FN:return 2;case zN:return 8;case tm:case TF:return 32;case LN:return 268435456;default:return 32}default:return 32}}var A0=!1,hi=null,pi=null,fi=null,qd=new Map,Xd=new Map,ti=[],UL="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function s2(t,e){switch(t){case"focusin":case"focusout":hi=null;break;case"dragenter":case"dragleave":pi=null;break;case"mouseover":case"mouseout":fi=null;break;case"pointerover":case"pointerout":qd.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Xd.delete(e.pointerId)}}function Jc(t,e,n,s,a,r){return t===null||t.nativeEvent!==r?(t={blockedOn:e,domEventName:n,eventSystemFlags:s,nativeEvent:r,targetContainers:[a]},e!==null&&(e=Iu(e),e!==null&&tT(e)),t):(t.eventSystemFlags|=s,e=t.targetContainers,a!==null&&e.indexOf(a)===-1&&e.push(a),t)}function WL(t,e,n,s,a){switch(e){case"focusin":return hi=Jc(hi,t,e,n,s,a),!0;case"dragenter":return pi=Jc(pi,t,e,n,s,a),!0;case"mouseover":return fi=Jc(fi,t,e,n,s,a),!0;case"pointerover":var r=a.pointerId;return qd.set(r,Jc(qd.get(r)||null,t,e,n,s,a)),!0;case"gotpointercapture":return r=a.pointerId,Xd.set(r,Jc(Xd.get(r)||null,t,e,n,s,a)),!0}return!1}function sT(t){var e=oo(t.target);if(e!==null){var n=Nu(e);if(n!==null){if(e=n.tag,e===13){if(e=_N(n),e!==null){t.blockedOn=e,LF(t.priority,function(){if(n.tag===13){var s=Es(),a=bi(n,s);a!==null&&Yn(a,n,s),Tw(n,s)}});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function Hf(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=D0(t.nativeEvent);if(n===null){n=t.nativeEvent;var s=new n.constructor(n.type,n);Yx=s,n.target.dispatchEvent(s),Yx=null}else return e=Iu(n),e!==null&&tT(e),t.blockedOn=n,!1;e.shift()}return!0}function a2(t,e,n){Hf(t)&&n.delete(e)}function GL(){A0=!1,hi!==null&&Hf(hi)&&(hi=null),pi!==null&&Hf(pi)&&(pi=null),fi!==null&&Hf(fi)&&(fi=null),qd.forEach(a2),Xd.forEach(a2)}function mf(t,e){t.blockedOn===e&&(t.blockedOn=null,A0||(A0=!0,hn.unstable_scheduleCallback(hn.unstable_NormalPriority,GL)))}var gf=null;function r2(t){gf!==t&&(gf=t,hn.unstable_scheduleCallback(hn.unstable_NormalPriority,function(){gf===t&&(gf=null);for(var e=0;e<t.length;e+=3){var n=t[e],s=t[e+1],a=t[e+2];if(typeof s!="function"){if(Rw(s||n)===null)continue;break}var r=Iu(n);r!==null&&(t.splice(e,3),e-=3,i0(r,{pending:!0,data:a,method:n.method,action:s},s,a))}}))}function Kd(t){function e(l){return mf(l,t)}hi!==null&&mf(hi,t),pi!==null&&mf(pi,t),fi!==null&&mf(fi,t),qd.forEach(e),Xd.forEach(e);for(var n=0;n<ti.length;n++){var s=ti[n];s.blockedOn===t&&(s.blockedOn=null)}for(;0<ti.length&&(n=ti[0],n.blockedOn===null);)sT(n),n.blockedOn===null&&ti.shift();if(n=(t.ownerDocument||t).$$reactFormReplay,n!=null)for(s=0;s<n.length;s+=3){var a=n[s],r=n[s+1],i=a[cs]||null;if(typeof r=="function")i||r2(n);else if(i){var o=null;if(r&&r.hasAttribute("formAction")){if(a=r,i=r[cs]||null)o=i.formAction;else if(Rw(a)!==null)continue}else o=i.action;typeof o=="function"?n[s+1]=o:(n.splice(s,3),s-=3),r2(n)}}}function Dw(t){this._internalRoot=t}vg.prototype.render=Dw.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(Y(409));var n=e.current,s=Es();eT(n,s,t,e,null,null)};vg.prototype.unmount=Dw.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;t.tag===0&&Kl(),eT(t.current,2,null,t,null,null),bg(),e[ku]=null}};function vg(t){this._internalRoot=t}vg.prototype.unstable_scheduleHydration=function(t){if(t){var e=WN();t={blockedOn:null,target:t,priority:e};for(var n=0;n<ti.length&&e!==0&&e<ti[n].priority;n++);ti.splice(n,0,t),n===0&&sT(t)}};var i2=TN.version;if(i2!=="19.0.0")throw Error(Y(527,i2,"19.0.0"));wt.findDOMNode=function(t){var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(Y(188)):(t=Object.keys(t).join(","),Error(Y(268,t)));return t=$F(e),t=t!==null?ON(t):null,t=t===null?null:t.stateNode,t};var HL={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:Oe,findFiberByHostInstance:oo,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var yf=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yf.isDisabled&&yf.supportsFiber)try{gh=yf.inject(HL),Is=yf}catch{}}ig.createRoot=function(t,e){if(!EN(t))throw Error(Y(299));var n=!1,s="",a=eI,r=tI,i=nI,o=null;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(s=e.identifierPrefix),e.onUncaughtError!==void 0&&(a=e.onUncaughtError),e.onCaughtError!==void 0&&(r=e.onCaughtError),e.onRecoverableError!==void 0&&(i=e.onRecoverableError),e.unstable_transitionCallbacks!==void 0&&(o=e.unstable_transitionCallbacks)),e=ZI(t,1,!1,null,null,n,s,a,r,i,o,null),t[ku]=e.current,Nw(t.nodeType===8?t.parentNode:t),new Dw(e)};ig.hydrateRoot=function(t,e,n){if(!EN(t))throw Error(Y(299));var s=!1,a="",r=eI,i=tI,o=nI,l=null,u=null;return n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(a=n.identifierPrefix),n.onUncaughtError!==void 0&&(r=n.onUncaughtError),n.onCaughtError!==void 0&&(i=n.onCaughtError),n.onRecoverableError!==void 0&&(o=n.onRecoverableError),n.unstable_transitionCallbacks!==void 0&&(l=n.unstable_transitionCallbacks),n.formState!==void 0&&(u=n.formState)),e=ZI(t,1,!0,e,n??null,s,a,r,i,o,l,u),e.context=JI(null),n=e.current,s=Es(),a=li(s),a.callback=null,ui(n,a,s),e.current.lanes=s,bh(e,s),nr(e),t[ku]=e.current,Nw(t),new vg(e)};ig.version="19.0.0";function aT(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(aT)}catch(t){console.error(t)}}aT(),SN.exports=ig;var jL=SN.exports,o2={},qL="@vercel/analytics",XL="1.5.0",KL=()=>{window.va||(window.va=function(...e){(window.vaq=window.vaq||[]).push(e)})};function rT(){return typeof window<"u"}function iT(){try{const t="production"}catch{}return"production"}function YL(t="auto"){if(t==="auto"){window.vam=iT();return}window.vam=t}function QL(){return(rT()?window.vam:iT())||"production"}function _0(){return QL()==="development"}function ZL(t){return t.scriptSrc?t.scriptSrc:_0()?"https://va.vercel-scripts.com/v1/script.debug.js":t.basePath?`${t.basePath}/insights/script.js`:"/_vercel/insights/script.js"}function JL(t={debug:!0}){var e;if(!rT())return;YL(t.mode),KL(),t.beforeSend&&((e=window.va)==null||e.call(window,"beforeSend",t.beforeSend));const n=ZL(t);if(document.head.querySelector(`script[src*="${n}"]`))return;const s=document.createElement("script");s.src=n,s.defer=!0,s.dataset.sdkn=qL+(t.framework?`/${t.framework}`:""),s.dataset.sdkv=XL,t.disableAutoTrack&&(s.dataset.disableAutoTrack="1"),t.endpoint?s.dataset.endpoint=t.endpoint:t.basePath&&(s.dataset.endpoint=`${t.basePath}/insights`),t.dsn&&(s.dataset.dsn=t.dsn),s.onerror=()=>{const a=_0()?"Please check if any ad blockers are enabled and try again.":"Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.";console.log(`[Vercel Web Analytics] Failed to load script from ${n}. ${a}`)},_0()&&t.debug===!1&&(s.dataset.debug="false"),document.head.appendChild(s)}function eP({route:t,path:e}){var n;(n=window.va)==null||n.call(window,"pageview",{route:t,path:e})}function tP(){if(!(typeof process>"u"||typeof o2>"u"))return o2.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH}function nP(t){return $t.useEffect(()=>{var e;t.beforeSend&&((e=window.va)==null||e.call(window,"beforeSend",t.beforeSend))},[t.beforeSend]),$t.useEffect(()=>{JL({framework:t.framework||"react",basePath:t.basePath??tP(),...t.route!==void 0&&{disableAutoTrack:!0},...t})},[]),$t.useEffect(()=>{t.route&&t.path&&eP({route:t.route,path:t.path})},[t.route,t.path]),null}var l2={},sP="@vercel/speed-insights",aP="1.2.0",rP=()=>{window.si||(window.si=function(...e){(window.siq=window.siq||[]).push(e)})};function iP(){return typeof window<"u"}function oP(){try{const t="production"}catch{}return"production"}function oT(){return oP()==="development"}function lP(t){return t.scriptSrc?t.scriptSrc:oT()?"https://va.vercel-scripts.com/v1/speed-insights/script.debug.js":t.dsn?"https://va.vercel-scripts.com/v1/speed-insights/script.js":t.basePath?`${t.basePath}/speed-insights/script.js`:"/_vercel/speed-insights/script.js"}function uP(t={}){var e;if(!iP()||t.route===null)return null;rP();const n=lP(t);if(document.head.querySelector(`script[src*="${n}"]`))return null;t.beforeSend&&((e=window.si)==null||e.call(window,"beforeSend",t.beforeSend));const s=document.createElement("script");return s.src=n,s.defer=!0,s.dataset.sdkn=sP+(t.framework?`/${t.framework}`:""),s.dataset.sdkv=aP,t.sampleRate&&(s.dataset.sampleRate=t.sampleRate.toString()),t.route&&(s.dataset.route=t.route),t.endpoint?s.dataset.endpoint=t.endpoint:t.basePath&&(s.dataset.endpoint=`${t.basePath}/speed-insights/vitals`),t.dsn&&(s.dataset.dsn=t.dsn),oT()&&t.debug===!1&&(s.dataset.debug="false"),s.onerror=()=>{console.log(`[Vercel Speed Insights] Failed to load script from ${n}. Please check if any content blockers are enabled and try again.`)},document.head.appendChild(s),{setRoute:a=>{s.dataset.route=a??void 0}}}function cP(){if(!(typeof process>"u"||typeof l2>"u"))return l2.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH}function dP(t){$t.useEffect(()=>{var n;t.beforeSend&&((n=window.si)==null||n.call(window,"beforeSend",t.beforeSend))},[t.beforeSend]);const e=$t.useRef(null);return $t.useEffect(()=>{if(e.current)t.route&&e.current(t.route);else{const n=uP({framework:t.framework??"react",basePath:t.basePath??cP(),...t});n&&(e.current=n.setRoute)}},[t.route]),null}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hP=1e-7,pP=1e-4;class Aw{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Sg{refCount(e){return ss("refCount")}incRef(e){return ss("incRef")}timerAvailable(){return!0}time(e){return ss("time")}read(e){return ss("read")}readSync(e){return ss("readSync")}readToGPU(e,n){return ss("readToGPU")}numDataIds(){return ss("numDataIds")}disposeData(e,n){return ss("disposeData")}write(e,n,s){return ss("write")}move(e,n,s,a,r){return ss("move")}createTensorFromGPUData(e,n,s){return ss("createTensorFromGPUData")}memory(){return ss("memory")}floatPrecision(){return ss("floatPrecision")}epsilon(){return this.floatPrecision()===32?hP:pP}dispose(){return ss("dispose")}}function ss(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,kl(t,e,n)}function To(t,e,n){return Math.max(t,Math.min(e,n))}function _w(t){return t%2===0?t:t+1}function kl(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function lT(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function N(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function ns(t,e,n=""){N(Ee(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function Du(t){N(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function L(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function u2(t){return t.length===0}function mP(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function Ee(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function du(t){return t%1===0}function O0(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Yl(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function c2(t,e=a=>0,n,s){return new Promise((a,r)=>{let i=0;const o=()=>{if(t()){a();return}i++;const l=e(i);if(n!=null&&i>=n){r();return}s!=null?s(o,l):setTimeout(o,l)};o()})}function Ow(t,e){let n=1,s=-1;for(let r=0;r<t.length;++r)if(t[r]>=0)n*=t[r];else if(t[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(t[r]<0)throw Error(`Shapes can not be < 0. Found ${t[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[s]=e/n,a}function Ie(t,e){const n=e.length;return t=t==null?e.map((s,a)=>a):[].concat(t),N(t.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),N(t.every(s=>du(s)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(s=>s<0?n+s:s)}function Oi(t,e){const n=[],s=[],a=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||a?null:Ie(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(r!=null){if(r[i]===o&&t[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(r[i]==null||r[i]>o)&&t[o]===1&&(n.push(t[o]),s.push(o)),r[i]<=o&&i++}t[o]!==1&&(n.push(t[o]),s.push(o))}return{newShape:n,keptDims:s}}function nn(t,e){return Ot(t,e)}function Ot(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function gP(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function yP(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function Fw(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function km(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function bP(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Au(t){return typeof t=="string"||t instanceof String}function xP(t){return typeof t=="boolean"}function F0(t){return typeof t=="number"}function Ko(t){return Array.isArray(t)?Ko(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":F0(t)?"float32":Au(t)?"string":xP(t)?"bool":"float32"}function z0(t){return!!(t&&t.constructor&&t.call&&t.apply)}function L0(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function be(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function uT(t,e,n,s=!1){const a=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let i=0;i<r;i++)a[i]=n[t+i]}else{const r=e[0],i=e.slice(1),o=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<r;l++)a[l]=uT(t+l*o,i,n,s)}return a}function ra(t,e,n=!1){if(t.length===0)return e[0];const s=t.reduce((a,r)=>a*r)*(n?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return uT(0,t,e,n)}function jf(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function zw(t,e){const n=Sn(t,e);for(let s=0;s<n.length;s++)n[s]=1;return n}function Sn(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function cT(t,e){const n=t.reduce((s,a)=>s*a,1);if(e==null||e==="float32")return ra(t,new Float32Array(n));if(e==="int32")return ra(t,new Int32Array(n));if(e==="bool")return ra(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function _s(t){t.forEach(e=>{N(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function ja(t,e,n){if(e===0)return 0;if(e===1)return t[0];let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=n[a]*t[a];return s}function _u(t,e,n){if(e===0)return[];if(e===1)return[t];const s=new Array(e);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(t/n[a]),t-=s[a]*n[a];return s[s.length-1]=t,s}function Eo(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d2="tfjsflags";class wP{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=vP,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,s){if(this.flagRegistry[e]={evaluationFn:n,setHook:s},this.urlFlags[e]!=null){const a=this.urlFlags[e];M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(Eo(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);d2 in e&&e[d2].split(",").forEach(s=>{const[a,r]=s.split(":");this.urlFlags[a]=CP(a,r)})}}function vP(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(SP(e,s[0],s[1]),s.join("="))),e}function SP(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function CP(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function M(){return dT}let dT=null;function $P(t){dT=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wx;function hT(){if(wx==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");wx=t}return wx}function NP(){const t=hT();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function Lw(t,e){const n=NP();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const Th="Abs",Ou="Acos",Fu="Acosh",Yo="Add",Eh="AddN",Cg="All",$g="Any",Rh="ArgMax",Dh="ArgMin",zu="Asin",Lu="Asinh",Pu="Atan",Mu="Atanh",Bu="Atan2",Ah="AvgPool",Ng="AvgPoolGrad",_h="AvgPool3D",kg="AvgPool3DGrad",Oh="BatchMatMul",Fh="BatchToSpaceND",Ig="Bincount",Tg="BitwiseAnd",kP="BroadcastTo",Eg="BroadcastArgs",Vu="Cast",Uu="Ceil",Wu="ClipByValue",Rg="Complex",zh="ComplexAbs",Lh="Concat",Ph="Conv2D",Dg="Conv2DBackpropFilter",Mh="Conv2DBackpropInput",Bh="Conv3D",Ag="Conv3DBackpropFilterV2",_g="Conv3DBackpropInputV2",Gu="Cos",Hu="Cosh",Og="Cumprod",Vh="Cumsum",Fg="CropAndResize",zg="DenseBincount",Lg="DepthToSpace",Uh="DepthwiseConv2dNative",Pg="DepthwiseConv2dNativeBackpropFilter",Mg="DepthwiseConv2dNativeBackpropInput",Bg="Diag",Wh="Dilation2D",Im="Dilation2DBackpropInput",Tm="Dilation2DBackpropFilter",pT="Draw",ju="RealDiv",Vg="Einsum",qu="Elu",Ug="EluGrad",Xu="Erf",Gh="Equal",Ku="Exp",Hh="ExpandDims",Yu="Expm1",Wg="FFT",Gg="Fill",Hg="FlipLeftRight",Qu="Floor",Zu="FloorDiv",jh="FusedBatchNorm",qh="GatherV2",jg="GatherNd",Xh="Greater",Ju="GreaterEqual",ec="Identity",qg="IFFT",Xg="Imag",tc="IsFinite",nc="IsInf",sc="IsNan",Kh="LeakyRelu",Yh="Less",Qh="LessEqual",Kg="LinSpace",ac="Log",rc="Log1p",Zh="LogicalAnd",Jh="LogicalNot",ep="LogicalOr",IP="LogSoftmax",tp="LRN",Yg="LRNGrad",np="Max",ic="Maximum",sp="MaxPool",Qg="MaxPoolGrad",ap="MaxPool3D",Zg="MaxPool3DGrad",Jg="MaxPoolWithArgmax",rp="Mean",ip="Min",oc="Minimum",op="MirrorPad",lc="Mod",ey="Multinomial",uc="Multiply",lp="Neg",up="NotEqual",ty="NonMaxSuppressionV3",Pw="NonMaxSuppressionV4",ny="NonMaxSuppressionV5",cp="OnesLike",dp="OneHot",hp="Pack",pp="PadV2",cc="Pow",fp="Prelu",mp="Prod",Mw="RaggedGather",Bw="RaggedRange",Vw="RaggedTensorToTensor",sy="Range",ay="Real",dc="Reciprocal",hc="Relu",gp="Reshape",yp="ResizeNearestNeighbor",ry="ResizeNearestNeighborGrad",bp="ResizeBilinear",iy="ResizeBilinearGrad",pc="Relu6",xp="Reverse",fc="Round",mc="Rsqrt",oy="ScatterNd",ly="TensorScatterUpdate",uy="SearchSorted",wp="Select",gc="Selu",vp="Slice",yc="Sin",bc="Sinh",xc="Sign",wc="Sigmoid",vc="Softplus",Sc="Sqrt",Sp="Sum",Cp="SpaceToBatchND",$p="SplitV",Np="Softmax",Uw="SparseFillEmptyRows",Ww="SparseReshape",cy="SparseSegmentMean",dy="SparseSegmentSum",hy="SparseToDense",Cc="SquaredDifference",py="Square",fy="StaticRegexReplace",my="StridedSlice",gy="StringNGrams",Gw="StringSplit",Hw="StringToHashBucketFast",$c="Sub",Nc="Tan",kc="Tanh",Ic="Tile",yy="TopK",by="Transform",xo="Transpose",jw="Unique",kp="Unpack",Ip="UnsortedSegmentSum",Tp="ZerosLike",Tc="Step",Em="FromPixels",xy="RotateWithOffset",Yd="_FusedMatMul",Qd="FusedConv2D",Zd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(...t)}function TP(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rm=Lw("kernelRegistry",()=>new Map),P0=Lw("gradRegistry",()=>new Map);function M0(t,e){const n=fT(t,e);return Rm.get(n)}function h2(t){return P0.get(t)}function p2(t){const e=Rm.entries(),n=[];for(;;){const{done:s,value:a}=e.next();if(s)break;const[r,i]=a,[o]=r.split("_");o===t&&n.push(i)}return n}function qw(t){const{kernelName:e,backendName:n}=t,s=fT(e,n);Rm.has(s)&&Ns(`The kernel '${e}' for backend '${n}' is already registered`),Rm.set(s,t)}function EP(t){const{kernelName:e}=t;P0.has(e)&&M().getBool("DEBUG")&&Ns(`Overriding the gradient for '${e}'`),P0.set(e,t)}function fT(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var gT=mt,Zs=null;try{Zs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function mt(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}mt.prototype.__isLong__;Object.defineProperty(mt.prototype,"__isLong__",{value:!0});function bs(t){return(t&&t.__isLong__)===!0}mt.isLong=bs;var f2={},m2={};function Qo(t,e){var n,s,a;return e?(t>>>=0,(a=0<=t&&t<256)&&(s=m2[t],s)?s:(n=gt(t,(t|0)<0?-1:0,!0),a&&(m2[t]=n),n)):(t|=0,(a=-128<=t&&t<128)&&(s=f2[t],s)?s:(n=gt(t,t<0?-1:0,!1),a&&(f2[t]=n),n))}mt.fromInt=Qo;function Js(t,e){if(isNaN(t))return e?uo:ea;if(e){if(t<0)return uo;if(t>=yT)return wT}else{if(t<=-y2)return ls;if(t+1>=y2)return xT}return t<0?Js(-t,e).neg():gt(t%hu|0,t/hu|0,e)}mt.fromNumber=Js;function gt(t,e,n){return new mt(t,e,n)}mt.fromBits=gt;var Dm=Math.pow;function Xw(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return ea;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Xw(t.substring(1),e,n).neg();for(var a=Js(Dm(n,8)),r=ea,i=0;i<t.length;i+=8){var o=Math.min(8,t.length-i),l=parseInt(t.substring(i,i+o),n);if(o<8){var u=Js(Dm(n,o));r=r.mul(u).add(Js(l))}else r=r.mul(a),r=r.add(Js(l))}return r.unsigned=e,r}mt.fromString=Xw;function Aa(t,e){return typeof t=="number"?Js(t,e):typeof t=="string"?Xw(t,e):gt(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}mt.fromValue=Aa;var g2=65536,RP=1<<24,hu=g2*g2,yT=hu*hu,y2=yT/2,b2=Qo(RP),ea=Qo(0);mt.ZERO=ea;var uo=Qo(0,!0);mt.UZERO=uo;var Vl=Qo(1);mt.ONE=Vl;var bT=Qo(1,!0);mt.UONE=bT;var B0=Qo(-1);mt.NEG_ONE=B0;var xT=gt(-1,2147483647,!1);mt.MAX_VALUE=xT;var wT=gt(-1,-1,!0);mt.MAX_UNSIGNED_VALUE=wT;var ls=gt(0,-2147483648,!1);mt.MIN_VALUE=ls;var oe=mt.prototype;oe.toInt=function(){return this.unsigned?this.low>>>0:this.low};oe.toNumber=function(){return this.unsigned?(this.high>>>0)*hu+(this.low>>>0):this.high*hu+(this.low>>>0)};oe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(ls)){var n=Js(e),s=this.div(n),a=s.mul(n).sub(this);return s.toString(e)+a.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=Js(Dm(e,6),this.unsigned),i=this,o="";;){var l=i.div(r),u=i.sub(l.mul(r)).toInt()>>>0,c=u.toString(e);if(i=l,i.isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}};oe.getHighBits=function(){return this.high};oe.getHighBitsUnsigned=function(){return this.high>>>0};oe.getLowBits=function(){return this.low};oe.getLowBitsUnsigned=function(){return this.low>>>0};oe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ls)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};oe.isZero=function(){return this.high===0&&this.low===0};oe.eqz=oe.isZero;oe.isNegative=function(){return!this.unsigned&&this.high<0};oe.isPositive=function(){return this.unsigned||this.high>=0};oe.isOdd=function(){return(this.low&1)===1};oe.isEven=function(){return(this.low&1)===0};oe.equals=function(e){return bs(e)||(e=Aa(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};oe.eq=oe.equals;oe.notEquals=function(e){return!this.eq(e)};oe.neq=oe.notEquals;oe.ne=oe.notEquals;oe.lessThan=function(e){return this.comp(e)<0};oe.lt=oe.lessThan;oe.lessThanOrEqual=function(e){return this.comp(e)<=0};oe.lte=oe.lessThanOrEqual;oe.le=oe.lessThanOrEqual;oe.greaterThan=function(e){return this.comp(e)>0};oe.gt=oe.greaterThan;oe.greaterThanOrEqual=function(e){return this.comp(e)>=0};oe.gte=oe.greaterThanOrEqual;oe.ge=oe.greaterThanOrEqual;oe.compare=function(e){if(bs(e)||(e=Aa(e)),this.eq(e))return 0;var n=this.isNegative(),s=e.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};oe.comp=oe.compare;oe.negate=function(){return!this.unsigned&&this.eq(ls)?ls:this.not().add(Vl)};oe.neg=oe.negate;oe.add=function(e){bs(e)||(e=Aa(e));var n=this.high>>>16,s=this.high&65535,a=this.low>>>16,r=this.low&65535,i=e.high>>>16,o=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,d=0,h=0,p=0;return p+=r+u,h+=p>>>16,p&=65535,h+=a+l,d+=h>>>16,h&=65535,d+=s+o,c+=d>>>16,d&=65535,c+=n+i,c&=65535,gt(h<<16|p,c<<16|d,this.unsigned)};oe.subtract=function(e){return bs(e)||(e=Aa(e)),this.add(e.neg())};oe.sub=oe.subtract;oe.multiply=function(e){if(this.isZero())return ea;if(bs(e)||(e=Aa(e)),Zs){var n=Zs.mul(this.low,this.high,e.low,e.high);return gt(n,Zs.get_high(),this.unsigned)}if(e.isZero())return ea;if(this.eq(ls))return e.isOdd()?ls:ea;if(e.eq(ls))return this.isOdd()?ls:ea;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b2)&&e.lt(b2))return Js(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,a=this.high&65535,r=this.low>>>16,i=this.low&65535,o=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,d=0,h=0,p=0,f=0;return f+=i*c,p+=f>>>16,f&=65535,p+=r*c,h+=p>>>16,p&=65535,p+=i*u,h+=p>>>16,p&=65535,h+=a*c,d+=h>>>16,h&=65535,h+=r*u,d+=h>>>16,h&=65535,h+=i*l,d+=h>>>16,h&=65535,d+=s*c+a*u+r*l+i*o,d&=65535,gt(p<<16|f,d<<16|h,this.unsigned)};oe.mul=oe.multiply;oe.divide=function(e){if(bs(e)||(e=Aa(e)),e.isZero())throw Error("division by zero");if(Zs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Zs.div_u:Zs.div_s)(this.low,this.high,e.low,e.high);return gt(n,Zs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?uo:ea;var s,a,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return uo;if(e.gt(this.shru(1)))return bT;r=uo}else{if(this.eq(ls)){if(e.eq(Vl)||e.eq(B0))return ls;if(e.eq(ls))return Vl;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(ea)?e.isNegative()?Vl:B0:(a=this.sub(e.mul(s)),r=s.add(a.div(e)),r)}else if(e.eq(ls))return this.unsigned?uo:ea;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=ea}for(a=this;a.gte(e);){s=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(s)/Math.LN2),l=o<=48?1:Dm(2,o-48),u=Js(s),c=u.mul(e);c.isNegative()||c.gt(a);)s-=l,u=Js(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=Vl),r=r.add(u),a=a.sub(c)}return r};oe.div=oe.divide;oe.modulo=function(e){if(bs(e)||(e=Aa(e)),Zs){var n=(this.unsigned?Zs.rem_u:Zs.rem_s)(this.low,this.high,e.low,e.high);return gt(n,Zs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};oe.mod=oe.modulo;oe.rem=oe.modulo;oe.not=function(){return gt(~this.low,~this.high,this.unsigned)};oe.and=function(e){return bs(e)||(e=Aa(e)),gt(this.low&e.low,this.high&e.high,this.unsigned)};oe.or=function(e){return bs(e)||(e=Aa(e)),gt(this.low|e.low,this.high|e.high,this.unsigned)};oe.xor=function(e){return bs(e)||(e=Aa(e)),gt(this.low^e.low,this.high^e.high,this.unsigned)};oe.shiftLeft=function(e){return bs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):gt(0,this.low<<e-32,this.unsigned)};oe.shl=oe.shiftLeft;oe.shiftRight=function(e){return bs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):gt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};oe.shr=oe.shiftRight;oe.shiftRightUnsigned=function(e){if(bs(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var s=this.low;return gt(s>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?gt(n,0,this.unsigned):gt(n>>>e-32,0,this.unsigned)};oe.shru=oe.shiftRightUnsigned;oe.shr_u=oe.shiftRightUnsigned;oe.toSigned=function(){return this.unsigned?gt(this.low,this.high,!1):this};oe.toUnsigned=function(){return this.unsigned?this:gt(this.low,this.high,!0)};oe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};oe.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};oe.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};mt.fromBytes=function(e,n,s){return s?mt.fromBytesLE(e,n):mt.fromBytesBE(e,n)};mt.fromBytesLE=function(e,n){return new mt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};mt.fromBytesBE=function(e,n){return new mt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const vT=XO(gT),DP=qO({__proto__:null,default:vT},[gT]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=vT||DP;function wy(t){return no.fromString(t,!0,16)}const ST=wy("c3a5c85c97cb3127"),Ji=wy("b492b66fbe98f273"),On=wy("9ae16a3b2f90404f");function V0(t){return t.xor(t.shru(47))}function CT(t,e,n){const s=t.slice(e,e+n);return no.fromBytes(Array.from(s),!0,!0)}function lt(t,e){return CT(t,e,8)}function x2(t,e){return CT(t,e,4)}function ln(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function mi(t,e,n=wy("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let a=e.xor(s).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function AP(t,e,n,s,a,r){a=a.add(t),r=ln(r.add(a).add(s),21);const i=a;return a=a.add(e),a=a.add(n),r=r.add(ln(a,44)),[a.add(s),r.add(i)]}function bf(t,e,n,s){return AP(lt(t,e),lt(t,e+8),lt(t,e+16),lt(t,e+24),n,s)}function _P(t,e=t.length){if(e>=8){const n=On.add(e*2),s=lt(t,0).add(On),a=lt(t,e-8),r=ln(a,37).mul(n).add(s),i=ln(s,25).add(a).mul(n);return mi(r,i,n)}if(e>=4){const n=On.add(e*2),s=x2(t,0);return mi(s.shl(3).add(e),x2(t,e-4),n)}if(e>0){const n=t[0],s=t[e>>1],a=t[e-1],r=n+(s<<8),i=e+(a<<2);return V0(On.mul(r).xor(ST.mul(i))).mul(On)}return On}function OP(t,e=t.length){const n=On.add(e*2),s=lt(t,0).mul(Ji),a=lt(t,8),r=lt(t,e-8).mul(n),i=lt(t,e-16).mul(On);return mi(ln(s.add(a),43).add(ln(r,30)).add(i),s.add(ln(a.add(On),18)).add(r),n)}function FP(t,e=t.length){const n=On.add(e*2),s=lt(t,0).mul(On),a=lt(t,8),r=lt(t,e-8).mul(n),i=lt(t,e-16).mul(On),o=ln(s.add(a),43).add(ln(r,30)).add(i),l=mi(o,s.add(ln(a.add(On),18)).add(r),n),u=lt(t,16).mul(n),c=lt(t,24),d=o.add(lt(t,e-32)).mul(n),h=l.add(lt(t,e-24)).mul(n);return mi(ln(u.add(c),43).add(ln(d,30)).add(h),u.add(ln(c.add(s),18)).add(d),n)}function zP(t,e=t.length){const n=no.fromNumber(81,!0);if(e<=32)return e<=16?_P(t,e):OP(t,e);if(e<=64)return FP(t,e);let s=n,a=n.mul(Ji).add(113),r=V0(a.mul(On).add(113)).mul(On),i=[no.UZERO,no.UZERO],o=[no.UZERO,no.UZERO];s=s.mul(On).add(lt(t,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=ln(s.add(a).add(i[0]).add(lt(t,l+8)),37).mul(Ji),a=ln(a.add(i[1]).add(lt(t,l+48)),42).mul(Ji),s=s.xor(o[1]),a=a.add(i[0]).add(lt(t,l+40)),r=ln(r.add(o[0]),33).mul(Ji),i=bf(t,l,i[1].mul(Ji),s.add(o[0])),o=bf(t,l+32,r.add(o[1]),a.add(lt(t,l+16))),[r,s]=[s,r],l+=64;while(l!==u);const d=Ji.add(r.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=ln(s.add(a).add(i[0]).add(lt(t,l+8)),37).mul(d),a=ln(a.add(i[1]).add(lt(t,l+48)),42).mul(d),s=s.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(lt(t,l+40))),r=ln(r.add(o[0]),33).mul(d),i=bf(t,l,i[1].mul(d),s.add(o[0])),o=bf(t,l+32,r.add(o[1]),a.add(lt(t,l+16))),[r,s]=[s,r],mi(mi(i[0],o[0],d).add(V0(a).mul(ST)).add(r),mi(i[1],o[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fi(t,e){return e==="string"?kr(t):Zo([t],e)}function LP(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function Zo(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Or(t)),M().getBool("DEBUG")&&gP(t,e),LP(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let s=0;s<n.length;++s)Math.round(t[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${e}`)}function Gn(){return M().platform.now()}function kr(t,e="utf-8"){return e=e||"utf-8",M().platform.encode(t,e)}function $a(t,e="utf-8"){return e=e||"utf-8",M().platform.decode(t,e)}function ua(t){return M().platform.isTypedArray!=null?M().platform.isTypedArray(t):mT(t)}function Or(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||Eo(t)||t==null||ua(t)&&n)e.push(t);else if(Array.isArray(t)||ua(t))for(let s=0;s<t.length;++s)Or(t[s],e,n);else{let s=-1;for(const a of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(a)&&(s=Math.max(s,Number(a)));for(let a=0;a<=s;a++)Or(t[a],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PP{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new BP)}profileKernel(e,n,s){let a;const r=()=>{a=s()};let i;const o=Gn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const u of a)u.dataSync();i=Promise.resolve({kernelMs:Gn()-o})}if(M().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<a.length;u++){const c=a[u];c.data().then(d=>{MP(d,c.dtype,e)})}return{kernelName:e,outputs:a,inputs:n,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:s,timeMs:a,inputs:r,extraInfo:i}=e;s.forEach(o=>{Promise.all([o.data(),a,i]).then(l=>{this.logger.logKernelProfile(n,o,l[0],l[1],r,l[2])})})}}function MP(t,e,n){if(e!=="float32")return!1;for(let s=0;s<t.length;s++){const a=t[s];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class BP{logKernelProfile(e,n,s,a,r,i){const o=typeof a=="number"?Yl(`${a}ms`,9):a.error,l=Yl(e,25),u=n.rank,c=n.size,d=Yl(n.shape.toString(),14);let h="";for(const p in r){const f=r[p];if(f!=null){const m=f.shape||n.shape,y=m.length;h+=`${p}: ${y}D ${y>0?m:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${d}	%c${c}	%c${h}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(t,e,n){const s={},a={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<t.length;l++){const u=t[l],c=u.inputs;for(const d in c){const h=c[d];let p=!1;for(let f=0;f<e.length;f++)if(s[h.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,a[u.id]=!0;break}if(p)break}}const r={};r[n.id]=!0;const i={};for(let l=t.length-1;l>=0;l--){const u=t[l],c=u.inputs;for(let d=0;d<u.outputs.length;d++)if(r[u.outputs[d].id]){for(const h in c)r[c[h].id]=!0,i[u.id]=!0;break}}const o=[];for(let l=0;l<t.length;l++){const u=t[l];if(a[u.id]&&i[u.id]){const c={};for(const h in u.inputs){const p=u.inputs[h];s[p.id]&&(c[h]=p)}const d=Object.assign({},u);d.inputs=c,d.outputs=u.outputs,o.push(d)}}return o}function UP(t,e,n,s){for(let a=e.length-1;a>=0;a--){const r=e[a],i=[];if(r.outputs.forEach(l=>{const u=t[l.id];u!=null?i.push(u):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(i);for(const l in r.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=r.inputs[l];if(!Ee(u.shape,c.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=u;else{const d=t[c.id];t[c.id]=s(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w2=20,ed=3,vx=7;function WP(t,e,n,s){const a=be(e),r=GP(t,e,n,a),i=e.length,o=qf(t,e,n,a,r),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function GP(t,e,n,s){const a=L(e),r=s[s.length-1],i=new Array(r).fill(0),o=e.length,l=n==="complex64"?cd(t):t;if(o>1)for(let u=0;u<a/r;u++){const c=u*r;for(let d=0;d<r;d++)i[d]=Math.max(i[d],ud(l[c+d],0,n).length)}return i}function ud(t,e,n){let s;return Array.isArray(t)?s=`${parseFloat(t[0].toFixed(vx))} + ${parseFloat(t[1].toFixed(vx))}j`:Au(t)?s=`'${t}'`:n==="bool"?s=$T(t):s=parseFloat(t.toFixed(vx)).toString(),Yl(s,e)}function $T(t){return t===0?"false":"true"}function qf(t,e,n,s,a,r=!0){const i=n==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(n==="complex64"){const m=cd(t);return[ud(m[0],0,n)]}return n==="bool"?[$T(t[0])]:[t[0].toString()]}if(l===1){if(o>w2){const y=ed*i;let g=Array.from(t.slice(0,y)),b=Array.from(t.slice((o-ed)*i,o*i));return n==="complex64"&&(g=cd(g),b=cd(b)),["["+g.map((x,w)=>ud(x,a[w],n)).join(", ")+", ..., "+b.map((x,w)=>ud(x,a[o-ed+w],n)).join(", ")+"]"]}return["["+(n==="complex64"?cd(t):Array.from(t)).map((y,g)=>ud(y,a[g],n)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),d=s[0]*i,h=[];if(o>w2){for(let m=0;m<ed;m++){const y=m*d,g=y+d;h.push(...qf(t.slice(y,g),u,n,c,a,!1))}h.push("...");for(let m=o-ed;m<o;m++){const y=m*d,g=y+d;h.push(...qf(t.slice(y,g),u,n,c,a,m===o-1))}}else for(let m=0;m<o;m++){const y=m*d,g=y+d;h.push(...qf(t.slice(y,g),u,n,c,a,m===o-1))}const p=l===2?",":"";h[0]="["+(o>0?h[0]+p:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(r?"":f),h}function cd(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jt{constructor(e,n,s){if(this.dtype=n,this.shape=e.slice(),this.size=L(e),s!=null){const a=s.length;N(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ot(n,this.size),this.strides=be(e)}set(e,...n){n.length===0&&(n=[0]),N(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const a of e){if(a<0||a>=this.shape[n]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}n++}let s=e[e.length-1];for(let a=0;a<e.length-1;++a)s+=this.strides[a]*e[a];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(e/this.strides[s]),e-=n[s]*this.strides[s];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return xa().makeTensor(this.values,this.shape,this.dtype)}}let xa=null,Il=null;function HP(t){xa=t}function jP(t){Il=t}class kt{constructor(e,n,s,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=L(e),this.strides=be(e),this.dataId=s,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Il.buffer(this.shape,this.dtype,e)}bufferSync(){return Il.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ra(this.shape,e,this.dtype==="complex64")}arraySync(){return ra(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=xa().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(s=>$a(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=xa().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>$a(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await xa().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),xa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Il.print(this,e)}clone(){return this.throwIfDisposed(),Il.clone(this)}toString(e=!1){const n=this.dataSync();return WP(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Il.cast(this,e)}variable(e=!0,n,s){return this.throwIfDisposed(),xa().makeVariable(this,e,n,s)}}Object.defineProperty(kt,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function q(){return Lw("Tensor",()=>kt)}q();class Am extends kt{constructor(e,n,s,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=n,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ee(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);xa().disposeTensor(this),this.dataId=e.dataId,xa().incRef(this,null)}dispose(){xa().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Am,Symbol.hasInstance,{value:t=>t instanceof kt&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var v2;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(v2||(v2={}));var U0;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(U0||(U0={}));var W0;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(W0||(W0={}));var G0;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(G0||(G0={}));var H0;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(H0||(H0={}));const qP={float32:G0,int32:U0,bool:W0,complex64:H0};function pn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return qP[t][e]}function vy(t){return pn(t,"int32")}function NT(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function kT(t){return typeof GPUBuffer<"u"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(t,e){if(t.dtype===e.dtype)return[t,e];const n=pn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function XP(t,e){N(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function IT(t){const e=[];return TT(t,e,new Set),e}function TT(t,e,n){if(t==null)return;if(t instanceof kt){e.push(t);return}if(!KP(t))return;const s=t;for(const a in s){const r=s[a];n.has(r)||(n.add(r),TT(r,e,n))}}function KP(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sx(t){return t.kernelName!=null}class S2{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class pu{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new S2}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,s=1){return e in this.registryFactory?(Ns(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(e);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new PP(this.backendInstance),!0}setupRegisteredKernels(){p2(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){p2(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof Sg)&&typeof s.then=="function"){const a=++this.pendingBackendInitId,r=s.then(i=>a<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Ns(`Initialization of backend ${e} failed`),Ns(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Ns(`Initialization of backend ${e} failed`),Ns(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n],{success:a,asyncInit:r}=this.initializeBackend(s);if(r||a)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const s=this.state.tensorInfo.get(n),a=s.backend,r=this.readSync(n),i=a.refCount(n);a.disposeData(n,!0),s.backend=e,e.move(n,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let s=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let a;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=n(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,n,s){e();try{const a=s();return n(),a}catch(a){throw n(),a}}nextTensorId(){return pu.nextTensorId++}nextVariableId(){return pu.nextVariableId++}clone(e){const n=A.runKernel(ec,{x:e}),s={x:e},a=i=>({x:()=>{const o="float32",l={x:i},u={dtype:o};return A.runKernel(Vu,l,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[n],a,r,{}),n}runKernel(e,n,s){if(this.backendName==null&&this.backend,!(M0(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,s){const a=this.backend.numDataIds();let r=0;s.forEach(l=>{r+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-n-r-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let n,s=[];const a=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=Sx(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Sx(e)){const{kernelName:f,inputs:m,attrs:y}=e;this.backendName==null&&this.backend;const g=M0(f,this.backendName);N(g!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),o=()=>{const b=this.backend.numDataIds();l=g.kernelFunc({inputs:m,attrs:y,backend:this.backend});const x=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,x);const w=x.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(a){const v=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(v)}return w}}else{const{forwardFunc:f}=e,m=y=>{a&&(s=y.map(g=>this.keep(this.clone(g))))};o=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,g),g}}const{inputs:c,attrs:d}=e,h=Sx(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(p=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),a&&this.addTapeNode(u,c,n,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,n,s){const a=h2(e);if(a!=null){const r=a.inputsToSave||[],i=a.outputsToSave||[];let o;a.saveAllInputs?(N(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(u=>n[u])):o=r.map(u=>n[u]);const l=s.filter((u,c)=>i[c]);return o.concat(l)}return[]}makeTensor(e,n,s,a){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",a=a||this.backend;let r=e;s==="string"&&Au(e[0])&&(r=e.map(l=>kr(l)));const i=a.write(r,n,s),o=new kt(n,s,i,this.nextTensorId());if(this.trackTensor(o,a),s==="string"){const l=this.state.tensorInfo.get(i),u=bP(r);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(e,n,s,a){s=s||"float32";const r={dataId:e,shape:n,dtype:s};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,n){const{dataId:s,shape:a,dtype:r}=e,i=new kt(a,r,s,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(e,n=!0,s,a){s=s||this.nextVariableId().toString(),a!=null&&a!==e.dtype&&(e=e.cast(a));const r=new Am(e,n,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*km(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Am||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*km(e.dtype);this.state.numBytes-=s}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,s,a,r,i){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:s,saved:r},l=h2(e);l!=null&&(a=l.gradFunc),a!=null&&(o.gradient=u=>(u=u.map((c,d)=>{if(c==null){const h=s[d],p=Sn(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return c}),a(u.length>1?u:u[0],r,i))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=IT(e),s=new Set(n.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(e,n,s,a=!1){if(N(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));N(r instanceof kt,()=>"The result y returned by f() must be a tensor.");const i=VP(this.state.activeTape,n,r);if(!a&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[r.id]=s??YP(r.shape),UP(o,i,u=>this.tidy(u),QP);const l=n.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return N(z0(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{N(n.every(o=>o instanceof kt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const a={};n.forEach((o,l)=>{a[l]=o});const r=(o,l)=>(s=e(...n,l),N(s.value instanceof kt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(z0(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(o,l)=>{const u=s.gradFunc(o,l),c=Array.isArray(u)?u:[u];N(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(c.every(h=>h instanceof kt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return c.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=Gn(),s=await this.backend.time(e);return s.wallMs=Gn()-n,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new S2;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}pu.nextTensorId=0;pu.nextVariableId=0;function YP(t){const e=zw(L(t),"float32");return A.makeTensor(e,t,"float32")}function ET(){const t=hT();if(t._tfengine==null){const e=new wP(t);t._tfengine=new pu(e)}return $P(t._tfengine.ENV),HP(()=>t._tfengine),t._tfengine}const A=ET();function QP(t,e){const n={a:t,b:e};return A.runKernel(Yo,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(){return typeof navigator<"u"&&navigator!=null}function RT(t){if(t||ZP()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function DT(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=M();Jn.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Jn.registerFlag("IS_BROWSER",()=>DT());Jn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Jn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Jn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Jn.registerFlag("PROD",()=>!1);Jn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Jn.getBool("DEBUG"));Jn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Jn.registerFlag("IS_TEST",()=>!1);Jn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Jn.getBool("DEBUG"));Jn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Jn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Jn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(t,e){let n=t;if(ua(t))return e==="string"?[]:[t.length];if(NT(t)){const a=t.channels||"RGBA";return[t.height,t.width*a.length]}else if(kT(t))return[t.buffer.size/(e==null?4:km(e))];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||ua(n)&&e!=="string";)s.push(n.length),n=n[0];return Array.isArray(t)&&M().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&AT(t,s,[]),s}function AT(t,e,n){if(n=n||[],!Array.isArray(t)&&!ua(t)){N(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}N(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),N(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const s=e.slice(1);for(let a=0;a<t.length;++a)AT(t[a],s,n.concat(a))}function C2(t,e,n,s){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function I(t,e,n,s="numeric"){if(t instanceof q())return C2(s,t.dtype,e,n),t;let a=Ko(t);if(a!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),C2(s,a,e,n),t==null||!ua(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const l=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const r=zi(t,a);!ua(t)&&!Array.isArray(t)&&(t=[t]);const o=a!=="string"?Zo(t,a):Or(t,[],!0);return A.makeTensor(o,r,a)}function _m(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((r,i)=>I(r,`${e}[${i}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T="__op";function R(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+_T;const a=(...r)=>{A.startScope(n);try{const i=s(...r);return Eo(i)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(i),i}catch(i){throw A.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(t,e){const n=I(t,"real","complex"),s=I(e,"imag","complex");ns(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:n,imag:s};return A.runKernel(Rg,a)}const Si=R({complex_:JP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(t,e,n,s){if(s==null)s=Ko(t);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(kT(t)||NT(t)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return A.backend.createTensorFromGPUData(t,e||n,s)}if(!ua(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){_s(e);const a=L(e),r=L(n);N(a===r,()=>`Based on the provided shape, [${e}], the tensor should have ${a} values but has ${r}`);for(let i=0;i<n.length;++i){const o=n[i],l=i===n.length-1?o!==L(e.slice(i)):!0;N(n[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!ua(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=s!=="string"?Zo(t,s):Or(t,[],!0),A.makeTensor(t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sa(t,e,n){const s=zi(t,n);return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ro={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class _a{static join(e){return new _a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>ua(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let s=0;s<e.length;s++){const a=e[s];s!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=n+a.byteLength;this.shards.push({buffer:a,start:n,end:r}),n=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const a=n-e,r=new ArrayBuffer(a),i=new Uint8Array(r);let o=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],d=e+o-u.start,h=o,f=Math.min(n,u.end)-u.start,m=new Uint8Array(u.buffer,d,f-d);if(i.set(m,h),o+=m.length,n<u.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(a){return e<a.start?-1:e>=a.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=eM(this.shards,n);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function eM(t,e){let n=0,s=t.length;for(;n<=s;){const a=Math.floor((s-n)/2)+n,r=e(t[a]);if(r===0)return a;r<0?s=a:n=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(){return A}function $2(){return A.memory()}function U(t,e){return A.tidy(t,e)}function _e(t){IT(t).forEach(n=>n.dispose())}function cn(t){return A.keep(t)}function tM(t){return A.setBackend(t)}function nM(){return A.ready()}function sM(){return A.backendName}function Kw(t,e,n=1){return A.registerBackend(t,e,n)}function OT(){return A.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci=4;async function j0(t,e){const n=[],s=[],a=Array.isArray(t)?t.map(i=>i.name):Object.keys(t);for(let i=0;i<a.length;++i){const o=a[i],l=Array.isArray(t)?t[i].tensor:t[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async d=>{const h=await l.bytes(),p=h.reduce((y,g)=>y+g.length,0)+Ci*h.length,f=new Uint8Array(p);let m=0;for(let y=0;y<h.length;y++){const g=h[y],b=new Uint8Array(new Uint32Array([g.length]).buffer);f.set(b,m),m+=Ci,f.set(g,m),m+=g.length}d(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),n.push(u)}const r=await Promise.all(s);return{data:iM(r),specs:n}}function FT(t,e){const n=new _a(t),s={};let a=0;for(const r of e){const i=aM(r,(o,l)=>n.slice(a+o,a+l));s[r.name]=zT(r,n.slice(a,a+i)),a+=i}return s}function aM(t,e){const n=L(t.shape);let s;if("quantization"in t){const a=t.quantization;s=Ro[a.dtype]}else if(t.dtype==="string"){let a=0;for(let r=0;r<n;r++)a+=Ci+new Uint32Array(e(a,a+Ci))[0];return a}else s=Ro[t.dtype];return n*s}async function rM(t,e){const n=L(t.shape);let s;if("quantization"in t){const a=t.quantization;s=Ro[a.dtype]}else if(t.dtype==="string"){let a=0;for(let r=0;r<n;r++)a+=Ci+new Uint32Array(await e(a,a+Ci))[0];return a}else s=Ro[t.dtype];return n*s}function zT(t,e){const n=t.name,s=t.dtype,a=t.shape,r=L(a);let i,o=0;if("quantization"in t){const l=t.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${t.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${t.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${t.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Ro[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];i[d]=h*l.scale+l.min}}else if(l.dtype==="float16")i=hM()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];i[d]=Math.round(h*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${s}`);o+=r*u}else if(s==="string"){const l=L(t.shape);i=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(o,o+Ci))[0];o+=Ci;const d=new Uint8Array(e.slice(o,o+c));i.push(d),o+=c}}else{const l=Ro[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let f=0;f<u.length;f++)u[f]=i[f*2],c[f]=i[f*2+1];const d=Sa(u,a,"float32"),h=Sa(c,a,"float32"),p=Si(d,h);return d.dispose(),h.dispose(),p}else throw new Error(`Unsupported dtype in weight '${n}': ${s}`);o+=r*l}return Sa(i,a,s)}async function N2(t,e,n){let s=new Uint8Array(e);for(;s.byteLength<n;){const{done:a,value:r}=await t.read();if(a&&r==null){const o=n-s.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const i=new Uint8Array(s.length+r.byteLength);i.set(s,0),i.set(new Uint8Array(r),s.length),s=i}return s.buffer}async function LT(t,e){const n={},s=t.getReader();let a=new ArrayBuffer(0);for(const r of e){const i=await rM(r,async(u,c)=>(a=await N2(s,a,c),a.slice(u,c)));a=await N2(s,a,i);const o=a.slice(0,i);a=a.slice(i);const l=zT(r,o);if(n[r.name]=l,sM()==="webgpu"){const u=OT();"uploadToGPU"in u&&L(l.shape)>=M().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return n}function iM(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(r=>{if(e+=r.byteLength,n.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let a=0;return n.forEach(r=>{s.set(new Uint8Array(r.buffer),a),a+=r.byteLength}),s.buffer}const Yw=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function k2(t){return Yw?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function oM(t){if(Yw)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let s=0,a=e.length;s<a;s++)n+=String.fromCharCode(e[s]);return btoa(n)}function lM(t){if(Yw){const s=Buffer.from(t,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let s=0;s<e.length;++s)n.set([e.charCodeAt(s)],s);return n.buffer}function PT(t){return _a.join(t)}function I2(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function MT(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function BT(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(s.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return t.signature!=null&&(s.signature=t.signature),t.userDefinedMetadata!=null&&(s.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(s.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(s.initializerSignature=t.initializerSignature),s}async function Qw(t,e){let n,s;return t.weightsManifest!=null&&([n,s]=await e(t.weightsManifest)),BT(t,n,s)}function Ep(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:k2(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:k2(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new _a(t.weightData).byteLength}}function q0(t){const e=[];for(const n of t)e.push(...n.weights);return e}function uM(){const t=n=>{let s=n<<13,a=0;for(;!(s&8388608);)a-=8388608,s<<=1;return s&=-8388609,a+=947912704,s|a},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function cM(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function dM(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function hM(){const t=uM(),e=cM(),n=dM();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const o=s[i],l=t[n[o>>10]+(o&1023)]+e[o>>10];r[i]=l}return new Float32Array(a)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Nt.instance==null&&(Nt.instance=new Nt),Nt.instance}static registerSaveRouter(e){Nt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Nt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Nt.getHandlers(e,"save")}static getLoadHandlers(e,n){return Nt.getHandlers(e,"load",n)}static getHandlers(e,n,s){const a=[];return(n==="load"?Nt.getInstance().loadRouters:Nt.getInstance().saveRouters).forEach(i=>{const o=i(e,s);o!==null&&a.push(o)}),a}}const pM=t=>Nt.registerSaveRouter(t),fM=t=>Nt.registerLoadRouter(t),VT=t=>Nt.getSaveHandlers(t),mM=(t,e)=>Nt.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X0="tensorflowjs",K0=1,co="models_store",ai="model_info_store";function UT(){if(!M().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Y0(t){const e=t.result;e.createObjectStore(co,{keyPath:"modelPath"}),e.createObjectStore(ai,{keyPath:"modelPath"})}class Do{constructor(e){if(this.indexedDB=UT(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((s,a)=>{const r=this.indexedDB.open(X0,K0);r.onupgradeneeded=()=>Y0(r),r.onsuccess=()=>{const i=r.result;if(n==null){const o=i.transaction(co,"readonly"),u=o.objectStore(co).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(i.close(),a(u.error)),o.oncomplete=()=>i.close()}else{n.weightData=_a.join(n.weightData);const o=Ep(n),l=i.transaction(ai,"readwrite");let u=l.objectStore(ai),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(h){return a(h)}let d;c.onsuccess=()=>{d=i.transaction(co,"readwrite");const h=d.objectStore(co);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:o})}catch(f){return a(f)}p.onsuccess=()=>s({modelArtifactsInfo:o}),p.onerror=f=>{u=l.objectStore(ai);const m=u.delete(this.modelPath);m.onsuccess=()=>(i.close(),a(p.error)),m.onerror=y=>(i.close(),a(p.error))}},c.onerror=h=>(i.close(),a(c.error)),l.oncomplete=()=>{d==null?i.close():d.oncomplete=()=>i.close()}}},r.onerror=i=>a(r.error)})}}Do.URL_SCHEME="indexeddb://";const WT=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Do.URL_SCHEME)?gM(t.slice(Do.URL_SCHEME.length)):null;Nt.registerSaveRouter(WT);Nt.registerLoadRouter(WT);function gM(t){return new Do(t)}function yM(t){return t.startsWith(Do.URL_SCHEME)?t.slice(Do.URL_SCHEME.length):t}class bM{constructor(){this.indexedDB=UT()}async listModels(){return new Promise((e,n)=>{const s=this.indexedDB.open(X0,K0);s.onupgradeneeded=()=>Y0(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(ai,"readonly"),o=r.objectStore(ai).getAll();o.onsuccess=()=>{const l={};for(const u of o.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},o.onerror=l=>(a.close(),n(o.error)),r.oncomplete=()=>a.close()},s.onerror=a=>n(s.error)})}async removeModel(e){return e=yM(e),new Promise((n,s)=>{const a=this.indexedDB.open(X0,K0);a.onupgradeneeded=()=>Y0(a),a.onsuccess=()=>{const r=a.result,i=r.transaction(ai,"readwrite"),o=i.objectStore(ai),l=o.get(e);let u;l.onsuccess=()=>{if(l.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=o.delete(e),d=()=>{u=r.transaction(co,"readwrite");const p=u.objectStore(co).delete(e);p.onsuccess=()=>n(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=d,c.onerror=h=>(d(),r.close(),s(l.error))}},l.onerror=c=>(r.close(),s(l.error)),i.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},a.onerror=r=>s(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr="/",Tl="tensorflowjs_models",GT="info",xM="model_topology",wM="weight_specs",vM="weight_data",SM="model_metadata";function HT(t){return{info:[Tl,t,GT].join(xr),topology:[Tl,t,xM].join(xr),weightSpecs:[Tl,t,wM].join(xr),weightData:[Tl,t,vM].join(xr),modelMetadata:[Tl,t,SM].join(xr)}}function jT(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function CM(t){const e=t.split(xr);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(xr)}function $M(t){return t.startsWith(Ao.URL_SCHEME)?t.slice(Ao.URL_SCHEME.length):t}class Ao{constructor(e){if(!M().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=HT(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),a=Ep(e),r=_a.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,oM(r));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw jT(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const o=JSON.parse(r);n.format=o.format,n.generatedBy=o.generatedBy,n.convertedBy=o.convertedBy,o.signature!=null&&(n.signature=o.signature),o.userDefinedMetadata!=null&&(n.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(n.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(n.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(n.trainingConfig=o.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=lM(i),n}}Ao.URL_SCHEME="localstorage://";const qT=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ao.URL_SCHEME)?NM(t.slice(Ao.URL_SCHEME.length)):null;Nt.registerSaveRouter(qT);Nt.registerLoadRouter(qT);function NM(t){return new Ao(t)}class kM{constructor(){N(M().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=Tl+xr,s=xr+GT;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(n)&&r.endsWith(s)){const i=CM(r);e[i]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=$M(e);const n=HT(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return jT(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ql="://";class _n{constructor(){this.managers={}}static getInstance(){return _n.instance==null&&(_n.instance=new _n),_n.instance}static registerManager(e,n){N(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ql)&&(e=e.slice(0,e.indexOf(Ql))),N(e.length>0,()=>"scheme must not be an empty string.");const s=_n.getInstance();N(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=n}static getManager(e){const n=_n.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(_n.getInstance().managers)}}function Xf(t){if(t.indexOf(Ql)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${_n.getSchemes().join(",")}`);return{scheme:t.split(Ql)[0],path:t.split(Ql)[1]}}async function XT(t,e,n=!1){N(t!==e,()=>`Old path and new path are the same: '${t}'`);const s=Nt.getLoadHandlers(t);N(s.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),N(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${t}.`);const a=s[0],r=Nt.getSaveHandlers(e);N(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),N(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=r[0],o=Xf(t).scheme,l=Xf(t).path,u=o===Xf(t).scheme,c=await a.load();n&&u&&await _n.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await _n.getManager(o).removeModel(l),d.modelArtifactsInfo}async function IM(){const t=_n.getSchemes(),e={};for(const n of t){const s=await _n.getManager(n).listModels();for(const a in s){const r=n+Ql+a;e[r]=s[a]}}return e}async function TM(t){const e=Xf(t);return _n.getManager(e.scheme).removeModel(e.path)}async function EM(t,e){return XT(t,e,!1)}async function RM(t,e){return XT(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DM{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!M().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const a=this.functionRefs[s.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return mT(e)}}if(M().get("IS_BROWSER")){M().setPlatform("browser",new DM);try{_n.registerManager(Ao.URL_SCHEME,new kM)}catch{}try{_n.registerManager(Do.URL_SCHEME,new bM)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM={importFetch:()=>require("node-fetch")};let Cx;class _M{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return M().global.fetch!=null?M().global.fetch(e,n):(Cx==null&&(Cx=AM.importFetch()),Cx(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}M().get("IS_NODE")&&!M().get("IS_BROWSER")&&M().setPlatform("node",new _M);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(t,e="float32",n){return e=e||"float32",_s(t),new Jt(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(t,e){const n=I(t,"x","cast");if(!yP(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},a={dtype:e};return A.runKernel(Vu,s,a)}const le=R({cast_:OM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(t){const n={x:I(t,"x","clone","string_or_numeric")};return A.runKernel(ec,n)}const Ir=R({clone_:FM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ET();const zM={buffer:ke,cast:le,clone:Ir,print:KT};jP(zM);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(t,e){let n=I(t,"a","add"),s=I(e,"b","add");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel(Yo,a)}const K=R({add_:LM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(t,e){let n=I(t,"a","floorDiv"),s=I(e,"b","floorDiv");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel(Zu,a)}const Zw=R({floorDiv_:PM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(t,e){let n=I(t,"a","div"),s=I(e,"b","div");if([n,s]=Ft(n,s),n.dtype==="int32"&&s.dtype==="int32")return Zw(n,s);const a={a:n,b:s},r={};return A.runKernel(ju,a,r)}const ge=R({div_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(t,e){let n=I(t,"a","mul"),s=I(e,"b","mul");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel(uc,a)}const _=R({mul_:BM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(t){const e=I(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return A.runKernel(zh,n)}else{const n={x:e};return A.runKernel(Th,n)}}const Kt=R({abs_:VM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(t){const n={x:I(t,"x","acos")};return A.runKernel(Ou,n)}const YT=R({acos_:UM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(t){const n={x:I(t,"x","acosh")};return A.runKernel(Fu,n)}const QT=R({acosh_:WM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(t){N(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),N(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((a,r)=>I(a,`tensors${r}`,"addN")),n=e[0];e.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(a=>{if(!Ee(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return A.runKernel(Eh,s)}const HM=R({addN_:GM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(t,e=null,n=!1){const a={x:I(t,"x","all","bool")},r={axis:e,keepDims:n};return A.runKernel(Cg,a,r)}const Jw=R({all_:jM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(t,e=null,n=!1){const a={x:I(t,"x","any","bool")},r={axis:e,keepDims:n};return A.runKernel($g,a,r)}const Om=R({any_:qM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(t,e=0){const s={x:I(t,"x","argMax")},a={axis:e};return A.runKernel(Rh,s,a)}const fu=R({argMax_:XM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(t,e=0){const s={x:I(t,"x","argMin")},a={axis:e};return A.runKernel(Dh,s,a)}const ZT=R({argMin_:KM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(t){const n={x:I(t,"x","asin")};return A.runKernel(zu,n)}const JT=R({asin_:YM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(t){const n={x:I(t,"x","asinh")};return A.runKernel(Lu,n)}const eE=R({asinh_:QM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(t){const n={x:I(t,"x","atan")};return A.runKernel(Pu,n)}const tE=R({atan_:ZM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(t,e){let n=I(t,"a","atan2"),s=I(e,"b","atan2");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel(Bu,a)}const nE=R({atan2_:JM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(t){const n={x:I(t,"x","atanh")};return A.runKernel(Mu,n)}const sE=R({atanh_:eB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(t,e,n,s,a="NHWC",r){const i=t[3],o=[...e,i],l=xs(a);return dt(t,o,n,r,s,null,null,l)}function Rn(t,e,n,s,a,r,i="channelsLast"){const[o,l]=Jd(e);let u;if(i==="channelsLast")u=[o,l,t[3],t[3]];else if(i==="channelsFirst")u=[o,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return dt(t,u,n,s,a,r,!1,i)}function Os(t,e,n,s,a,r,i="NDHWC"){const[o,l,u]=Q0(e);let c,d;if(i==="NDHWC")d="channelsLast",c=[o,l,u,t[4],t[4]];else if(i==="NCDHW")d="channelsFirst",c=[o,l,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return Oa(t,c,n,s,a,!1,d,r)}function dt(t,e,n,s,a,r,i=!1,o="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,d]=t;else if(o==="channelsFirst")[l,d,u,c]=t;else throw new Error(`Unknown dataFormat ${o}`);const[h,p,,f]=e,[m,y]=Jd(n),[g,b]=Jd(s),x=Zl(h,g),w=Zl(p,b),{padInfo:v,outHeight:C,outWidth:$}=sB(a,u,c,m,y,x,w,r,o),k=i?f*d:f;let T;return o==="channelsFirst"?T=[l,k,C,$]:o==="channelsLast"&&(T=[l,C,$,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:d,outHeight:C,outWidth:$,outChannels:k,padInfo:v,strideHeight:m,strideWidth:y,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:g,dilationWidth:b,inShape:t,outShape:T,filterShape:e}}function Oa(t,e,n,s,a,r=!1,i="channelsLast",o){let[l,u,c,d,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,d,h]=t;else if(i==="channelsFirst")[l,h,u,c,d]=t;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,y]=e,[g,b,x]=Q0(n),[w,v,C]=Q0(s),$=Zl(p,w),k=Zl(f,v),T=Zl(m,C),{padInfo:E,outDepth:O,outHeight:B,outWidth:W}=aB(a,u,c,d,g,b,x,$,k,T,o),V=r?y*h:y;let G;return i==="channelsFirst"?G=[l,V,O,B,W]:i==="channelsLast"&&(G=[l,O,B,W,V]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:d,inChannels:h,outDepth:O,outHeight:B,outWidth:W,outChannels:V,padInfo:E,strideDepth:g,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:k,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:v,dilationWidth:C,inShape:t,outShape:G,filterShape:e}}function tB(t,e,n,s,a){s==null&&(s=ev(t,e,n));const r=t[0],i=t[1],o=eh((r-e+2*s)/n+1,a),l=eh((i-e+2*s)/n+1,a);return[o,l]}function nB(t,e,n,s,a,r){a==null&&(a=ev(t,e[0],s[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)t[o]+2*a>=e[o]&&(i[o]=eh((t[o]-e[o]+2*a)/s[o]+1,r));return i}function ev(t,e,n,s=1){const a=Zl(e,s);return Math.floor((t[0]*(n-1)-n+a)/2)}function Jd(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function Q0(t){return typeof t=="number"?[t,t,t]:t}function Zl(t,e){return e<=1?t:t+(t-1)*(e-1)}function sB(t,e,n,s,a,r,i,o,l){let u,c,d;if(typeof t=="number"){u={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const p=tB([e,n],r,s,t,o);c=p[0],d=p[1]}else if(t==="same"){c=Math.ceil(e/s),d=Math.ceil(n/a);const h=Math.max(0,(c-1)*s+r-e),p=Math.max(0,(d-1)*a+i-n),f=Math.floor(h/2),m=h-f,y=Math.floor(p/2),g=p-y;u={top:f,bottom:m,left:y,right:g,type:"SAME"}}else if(t==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-r+1)/s),d=Math.ceil((n-i+1)/a);else if(typeof t=="object"){const h=l==="channelsLast"?t[1][0]:t[2][0],p=l==="channelsLast"?t[1][1]:t[2][1],f=l==="channelsLast"?t[2][0]:t[3][0],m=l==="channelsLast"?t[2][1]:t[3][1];u={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=eh((e-r+h+p)/s+1,o),d=eh((n-i+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:u,outHeight:c,outWidth:d}}function aB(t,e,n,s,a,r,i,o,l,u,c){let d,h,p,f;if(t==="valid"&&(t=0),typeof t=="number"){d={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const y=nB([e,n,s,1],[o,l,u],1,[a,r,i],t,c);h=y[0],p=y[1],f=y[2]}else if(t==="same"){h=Math.ceil(e/a),p=Math.ceil(n/r),f=Math.ceil(s/i);const m=(h-1)*a+o-e,y=(p-1)*r+l-n,g=(f-1)*i+u-s,b=Math.floor(m/2),x=m-b,w=Math.floor(y/2),v=y-w,C=Math.floor(g/2),$=g-C;d={top:w,bottom:v,left:C,right:$,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function eh(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function $i(t){const[e,n,s]=Jd(t);return e===1&&n===1&&s===1}function an(t,e){return $i(t)||$i(e)}function _o(t){return Jd(t).every(e=>e>0)}function xs(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Vn(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")N(du(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(a=>{N(du(a),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(t,e){const s={x:I(t,"x","reshape","string_or_numeric")},a={shape:e};return A.runKernel(gp,s,a)}const F=R({reshape_:rB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(t,e,n,s,a){const r=I(t,"x","avgPool","float32"),i=1;N(an(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=r,l=!1;r.rank===3&&(l=!0,o=F(r,[1,r.shape[0],r.shape[1],r.shape[2]])),N(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Vn("avgPool",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a};let d=A.runKernel(Ah,u,c);return d=le(d,r.dtype),l?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Sy=R({avgPool_:iB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(t,e,n,s,a,r="NDHWC"){const i=I(t,"x","avgPool3d","float32");let o=i,l=!1;i.rank===4&&(l=!0,o=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),N(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),N(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Vn("avgPool3d",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a,dataFormat:r};let d=A.runKernel(_h,u,c);return d=le(d,o.dtype),l?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const aE=R({avgPool3d_:oB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(t,e=0){N(t.length>=1,()=>"Pass at least one tensor to concat");const n=_m(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),n.length===1)return Ir(n[0]);const s=n,a={axis:e};return A.runKernel(Lh,s,a)}const Bt=R({concat_:lB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(t,e,n=!1,s=!1){let a=I(t,"a","matMul"),r=I(e,"b","matMul");[a,r]=Ft(a,r);const i={a,b:r},o={transposeA:n,transposeB:s};return A.runKernel(Oh,i,o)}const Pe=R({matMul_:uB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(t){const n={x:I(t,"x","sigmoid","float32")};return A.runKernel(wc,n)}const qa=R({sigmoid_:cB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(t,e,n){const s=I(t,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:e,size:n};return A.runKernel(vp,a,r)}const Ve=R({slice_:dB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(t){const n={x:I(t,"x","tanh","float32")};return A.runKernel(kc,n)}const Oo=R({tanh_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(t,e,n,s,a,r){const i=I(t,"forgetBias","basicLSTMCell"),o=I(e,"lstmKernel","basicLSTMCell"),l=I(n,"lstmBias","basicLSTMCell"),u=I(s,"data","basicLSTMCell"),c=I(a,"c","basicLSTMCell"),d=I(r,"h","basicLSTMCell"),h=Bt([u,d],1),p=Pe(h,o),f=K(p,l),m=f.shape[0],y=f.shape[1]/4,g=[m,y],b=Ve(f,[0,0],g),x=Ve(f,[0,y],g),w=Ve(f,[0,y*2],g),v=Ve(f,[0,y*3],g),C=K(_(qa(b),Oo(x)),_(c,qa(K(i,w)))),$=_(Oo(C),qa(v));return[C,$]}const fB=R({basicLSTMCell_:pB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(t,e,n){const s=I(t,"x","batchToSpaceND"),a=e.reduce((o,l)=>o*l);N(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),N(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),N(s.shape[0]%a===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${a}`);const r={x:s},i={blockShape:e,crops:n};return A.runKernel(Fh,r,i)}const Cy=R({batchToSpaceND_:mB});function gB(t){let e;return t.rank===0||t.rank===1?e=F(t,[1,1,1,t.size]):t.rank===2?e=F(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(t,e,n,s,a,r){r==null&&(r=.001);const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;s!=null&&(c=I(s,"offset","batchNorm")),N(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:gB(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:r},f=A.runKernel(jh,h,p);return F(f,i.shape)}const Rp=R({batchNorm_:yB});function bB(t,e,n,s,a,r){const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),N(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),N(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Rp(i,o,l,c,u,r)}const rE=R({batchNorm2d_:bB});function xB(t,e,n,s,a,r){const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),N(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),N(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Rp(i,o,l,c,u,r)}const iE=R({batchNorm3d_:xB});function wB(t,e,n,s,a,r){const i=I(t,"x","batchNorm"),o=I(e,"mean","batchNorm"),l=I(n,"variance","batchNorm");let u;a!=null&&(u=I(a,"scale","batchNorm"));let c;return s!=null&&(c=I(s,"offset","batchNorm")),N(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),N(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Rp(i,o,l,c,u,r)}const oE=R({batchNorm4d_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(t,e,n){const s=I(t,"x","bincount"),a=I(e,"weights","bincount");N(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),N(n>=0,()=>`size must be non-negative, but got ${n}.`),N(a.size===s.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`);const r={x:s,weights:a},i={size:n};return A.runKernel(Ig,r,i)}const lE=R({bincount_:vB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(t,e){const n=I(t,"x","bitwiseAnd"),s=I(e,"y","bitwiseAnd");if(!Ee(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if(n.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const a={a:n,b:s};return A.runKernel(Tg,a)}const CB=R({bitwiseAnd_:SB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(t,e){const n=I(t,"s0","broadcastArgs","int32"),s=I(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:n,s1:s};return A.runKernel(Eg,a)}const NB=R({broadcastArgs_:$B});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(t,e){let n=I(t,"broadcastTo","x");const s=n.shape;if(_s(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const u=n.shape.slice();for(;u.length<e.length;)u.unshift(1);n=F(n,u)}const a=n.shape,r=Array.from(e);for(let u=e.length-1;u>=0;u--)if(a[u]===e[u])r[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Ir(n);const o={x:n},l={reps:r};return A.runKernel(Ic,o,l)}const Jl=R({broadcastTo_:kB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(t){const n={x:I(t,"x","ceil","float32")};return A.runKernel(Uu,n)}const uE=R({ceil_:IB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(t,e,n){_s(t),n=n||Ko(e);const s={shape:t,value:e,dtype:n};return A.runKernel(Gg,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(t,e,n){const s=I(t,"x","clipByValue");if(N(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Ec(s.shape,e,s.dtype);const a={x:s},r={clipValueMin:e,clipValueMax:n};return A.runKernel(Wu,a,r)}const ds=R({clipByValue_:TB});function EB(t){return Bt(t,0)}const cE=R({concat1d_:EB});function RB(t,e){return Bt(t,e)}const dE=R({concat2d_:RB});function DB(t,e){return Bt(t,e)}const hE=R({concat3d_:DB});function AB(t,e){return Bt(t,e)}const pE=R({concat4d_:AB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(t,e,n,s,a="NHWC",r=[1,1],i){const o=I(t,"x","conv2d","float32"),l=I(e,"filter","conv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Vn("conv2d",s,i);const d=a==="NHWC"?u.shape[3]:u.shape[1];N(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),N(an(n,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),N(_o(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),N(_o(n),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},f=A.runKernel(Ph,h,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ni=R({conv2d_:_B});function OB(t,e,n,s,a="NWC",r=1,i){const o=I(t,"x","conv1d"),l=I(e,"filter","conv1d");let u=o,c=!1;o.rank===2&&(c=!0,u=F(o,[1,o.shape[0],o.shape[1]])),N(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Vn("conv1d",s,i),N(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(an(n,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${r}'`),N(_o(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),N(_o(n),()=>"Error in conv1D: Stride should be larger than 0."),N(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const d=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=F(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Ni(h,d,[1,n],s,"NHWC",[1,r],i);return c?F(y,[y.shape[2],y.shape[3]]):F(y,[y.shape[0],y.shape[2],y.shape[3]])}const tv=R({conv1d_:OB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(t,e,n,s,a,r="NHWC",i){N(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;e.rank===3&&(u=!0,l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),N(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=r==="NHWC"?o[3]:o[1],d=r==="NHWC"?l.shape[3]:l.shape[1];N(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),N(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),Vn("conv2dDerInput",a,i);const h={dy:l,filter:n},p={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:o},f=A.runKernel(Mh,h,p);return u?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const nv=R({conv2DBackpropInput_:FB});function zB(t,e,n,s,a,r){const i=I(t,"x","conv2dTranspose"),o=I(e,"filter","conv2dTranspose");return nv(n,i,o,s,a,"NHWC",r)}const sv=R({conv2dTranspose_:zB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(t,e,n,s,a="NDHWC",r=[1,1,1]){const i=I(t,"x","conv3d"),o=I(e,"filter","conv3d");let l=i,u=!1;i.rank===4&&(u=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),N(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),N(an(n,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),N(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),N(_o(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),N(_o(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},d={strides:n,pad:s,dataFormat:a,dilations:r},h=A.runKernel(Bh,c,d);return u?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const fE=R({conv3d_:LB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(t,e,n,s,a){N(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let r=t,i=e,o=!1;e.rank===4&&(o=!0,i=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,t[0],t[1],t[2],t[3]]);const l=r[4],u=i.shape[4];N(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),N(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),N(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),N(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),N(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},d={pad:a,strides:s,inputShape:r},h=A.runKernel(_g,c,d);return o?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const mE=R({conv3DBackpropInput_:PB});function MB(t,e,n,s,a){const r=I(t,"x","conv3dTranspose"),i=I(e,"filter","conv3dTranspose");return mE(n,r,i,s,a)}const gE=R({conv3dTranspose_:MB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(t){const n={x:I(t,"x","cos","float32")};return A.runKernel(Gu,n)}const $y=R({cos_:BB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(t){const n={x:I(t,"x","cosh","float32")};return A.runKernel(Hu,n)}const av=R({cosh_:VB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(t,e=0,n=!1,s=!1){const r={x:I(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:s};return A.runKernel(Og,r,i)}const Fm=R({cumprod_:UB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(t,e=0,n=!1,s=!1){const r={x:I(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:s};return A.runKernel(Vh,r,i)}const rv=R({cumsum_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(t,e,n,s=!1){const a=I(t,"x","denseBincount"),r=I(e,"weights","denseBincount");N(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),N(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),N(n>=0,()=>`size must be non-negative, but got ${n}.`),N(r.size===a.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`);const i={x:a,weights:r},o={size:n,binaryOutput:s};return A.runKernel(zg,i,o)}const Z0=R({denseBincount_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(t,e,n="NHWC"){const s=I(t,"x","depthToSpace","float32"),a=n==="NHWC"?s.shape[1]:s.shape[2],r=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];N(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),N(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${e}  for depthToSpace with input shape
    ${s.shape}`),N(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),N(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const o={x:s},l={blockSize:e,dataFormat:n};return A.runKernel(Lg,o,l)}const yE=R({depthToSpace_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(t,e,n,s,a="NHWC",r=[1,1],i){const o=I(t,"x","depthwiseConv2d","float32"),l=I(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const d=a==="NHWC"?u.shape[3]:u.shape[1];N(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),Vn("depthwiseConv2d",s,i);const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},f=A.runKernel(Uh,h,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Dp=R({depthwiseConv2d_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(t){const n={x:I(t,"x","diag")};return A.runKernel(Bg,n)}const XB=R({diag_:qB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(t,e,n,s,a=[1,1],r="NHWC"){const i=I(t,"x","dilation2d"),o=I(e,"filter","dilation2d");N(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),N(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),N(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=i,u=!1;i.rank===3&&(l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),N(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},d={strides:n,pad:s,dilations:a},h=A.runKernel(Wh,c,d);return u?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const bE=R({dilation2d_:KB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(t,e){const n=t.length,s=[];for(let a=0;a<n;a++){const r=n-1-a,i=t[r]||1;(e[e.length-1-a]||1)>1&&i===1&&s.unshift(r)}return s}function sn(t,e){const n=[];for(let s=0;s<e.length;s++){const a=t[t.length-s-1],r=e.length-s-1,i=e[r];(a==null||a===1&&i>1)&&n.unshift(r)}return n}function Se(t,e){const n=Math.max(t.length,e.length),s=new Array(n);for(let a=0;a<n;a++){let r=t[t.length-a-1];r==null&&(r=1);let i=e[e.length-a-1];if(i==null&&(i=1),r===1)s[n-a-1]=i;else if(i===1)s[n-a-1]=r;else if(r!==i){const o=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(o)}else s[n-a-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(t,e){let n=I(t,"a","equal","string_or_numeric"),s=I(e,"b","equal","string_or_numeric");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Gh,a)}const Na=R({equal_:YB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(t,e,n){const s=I(e,"a","where"),a=I(n,"b","where"),r=I(t,"condition","where","bool"),i=Se(Se(r.shape,s.shape),a.shape),o=Jl(r,i),l=Jl(s,i),u=Jl(a,i),c={condition:o,t:l,e:u};return A.runKernel(wp,c)}const En=R({where_:QB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(t){const n={x:I(t,"x","zerosLike")};return A.runKernel(Tp,n)}const We=R({zerosLike_:ZB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(t,e){let n=I(t,"a","div"),s=I(e,"b","div");[n,s]=Ft(n,s);const a=ge(n,s),r=We(a),i=Na(s,r);return En(i,r,a)}const xE=R({divNoNan_:JB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(t,e){const n=I(t,"t1","dot"),s=I(e,"t2","dot");N((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const a=n.rank===1?n.size:n.shape[1],r=s.rank===1?s.size:s.shape[0];if(N(a===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`),n.rank===1&&s.rank===1){const i=F(n,[1,-1]),o=F(s,[-1,1]),l=Pe(i,o);return F(l,[])}else if(n.rank===1&&s.rank===2){const i=F(n,[1,-1]),o=F(s,[s.shape[0],s.shape[1]]),l=Pe(i,o);return F(l,[l.size])}else if(n.rank===2&&s.rank===1){const i=F(s,[-1,1]),o=Pe(n,i);return F(o,[o.size])}else{const i=F(s,[s.shape[0],s.shape[1]]);return Pe(n,i)}}const wE=R({dot_:eV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(t,...e){const n=e.map((a,r)=>I(a,`tensors${r}`,"einsum")),s={equation:t};return A.runKernel(Vg,n,s)}const El=R({einsum_:tV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(t){const n={x:I(t,"x","elu","float32")};return A.runKernel(qu,n)}const Ap=R({elu_:nV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(t,e){const n=I(t,"x","ensureShape","string_or_numeric");if(!mP(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const aV=R({ensureShape_:sV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(t){let e=I(t,"x","erf");N(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=le(e,"float32"));const n={x:e};return A.runKernel(Xu,n)}const iv=R({erf_:rV});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ov(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function vE(t,e,n){const s=t.length+e.length,a=[];let r=0,i=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?a.push(t[r++]):a.push(e[i++]);return a}function Vt(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&n.push(t[r]);const a=e.map(r=>t[r]);return[n,a]}function zt(t,e){const n=e.map(s=>1);return vE(t,n,e)}function jt(t,e,n){N(ov(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function tt(t,e){if(ov(t,e))return null;const n=[];for(let s=0;s<e;++s)t.indexOf(s)===-1&&n.push(s);return t.forEach(s=>n.push(s)),n}function sr(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function ht(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(t,e=null,n=!1){const a={x:I(t,"x","max")},r={reductionIndices:e,keepDims:n};return A.runKernel(np,a,r)}const ia=R({max_:iV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(t,e=null,n=!1){const a={x:I(t,"x","min")},r={axis:e,keepDims:n};return A.runKernel(ip,a,r)}const th=R({min_:oV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(t,e){let n=I(t,"base","pow"),s=I(e,"exp","pow");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel(cc,a)}const Fr=R({pow_:lV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(t,e){if((ua(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&ua(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Li(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(t){const n={x:I(t,"x","sqrt","float32")};return A.runKernel(Sc,n)}const Cn=R({sqrt_:uV});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(t){const e=I(t,"x","square"),n={};return A.runKernel("Square",{x:e},n)}const at=R({square_:cV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(t,e=null,n=!1){let s=I(t,"x","sum");s.dtype==="bool"&&(s=le(s,"int32"));const a={x:s},r={axis:e,keepDims:n};return A.runKernel(Sp,a,r)}const fe=R({sum_:dV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(t,e="euclidean",n=null,s=!1){t=I(t,"x","norm");const a=SE(t,e,n);let r=a.shape;if(s){const i=Ie(n,t.shape);r=zt(a.shape,i)}return F(a,r)}function SE(t,e,n=null){if(t.rank===0)return Kt(t);if(t.rank!==1&&n===null)return SE(F(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return fe(Kt(t),n);if(e===1/0)return ia(Kt(t),n);if(e===-1/0)return th(Kt(t),n);if(e==="euclidean"||e===2)return Cn(fe(Fr(Kt(t),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return ia(fe(Kt(t),n[0]),n[1]-1);if(e===1/0)return ia(fe(Kt(t),n[1]),n[0]);if(e===-1/0)return th(fe(Kt(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return Cn(fe(at(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const _p=R({norm_:hV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(t,e=null,n=!1){return _p(t,"euclidean",e,n)}const CE=R({euclideanNorm_:pV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(t){const n={x:I(t,"x","exp")};return A.runKernel(Ku,n)}const hs=R({exp_:fV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(t,e=0){const n=I(t,"x","expandDims","string_or_numeric");N(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},a={dim:e};return A.runKernel(Hh,s,a)}const Fn=R({expandDims_:mV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(t){const n={x:I(t,"x","expm1")};return A.runKernel(Yu,n)}const $E=R({expm1_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(t,e){const n=I(t,"x","tile","string_or_numeric");N(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const s={x:n},a={reps:e};return A.runKernel(Ic,s,a)}const ta=R({tile_:yV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(t,e,n,s="float32"){e==null&&(e=t);const a=ke([t,e],s),r=t<=e?t:e;for(let o=0;o<r;++o)a.set(1,o,o);const i=F(a.toTensor(),[t,e]);if(n==null)return i;if(n.length===1)return ta(Fn(i,0),[n[0],1,1]);if(n.length===2)return ta(Fn(Fn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return ta(Fn(Fn(Fn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const lv=R({eye_:bV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(t){const n={x:I(t,"x","floor","float32")};return A.runKernel(Qu,n)}const Op=R({floor_:xV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(t,e,n=0,s=0){const a=I(t,"x","gather"),r=I(e,"indices","gather","int32"),i={x:a,indices:r},o={axis:n,batchDims:s};return A.runKernel(qh,i,o)}const Fp=R({gather_:wV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(t,e){let n=I(t,"a","greater","string_or_numeric"),s=I(e,"b","greater","string_or_numeric");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Xh,a)}const ws=R({greater_:vV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(t,e){let n=I(t,"a","greaterEqual","string_or_numeric"),s=I(e,"b","greaterEqual","string_or_numeric");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Ju,a)}const Mi=R({greaterEqual_:SV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(t){const n={input:I(t,"input","imag")};return A.runKernel(Xg,n)}const Ny=R({imag_:CV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(t){const n={x:I(t,"x","isFinite")};return A.runKernel(tc,n)}const NE=R({isFinite_:$V});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(t){const n={x:I(t,"x","isInf")};return A.runKernel(nc,n)}const kE=R({isInf_:NV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(t){const n={x:I(t,"x","isNaN")};return A.runKernel(sc,n)}const IE=R({isNaN_:kV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(t,e=.2){const s={x:I(t,"x","leakyRelu")},a={alpha:e};return A.runKernel(Kh,s,a)}const ky=R({leakyRelu_:IV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(t,e){let n=I(t,"a","less","string_or_numeric"),s=I(e,"b","less","string_or_numeric");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Yh,a)}const nh=R({less_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(t,e){let n=I(t,"a","lessEqual","string_or_numeric"),s=I(e,"b","lessEqual","string_or_numeric");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Qh,a)}const Jo=R({lessEqual_:EV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return A.runKernel(Kg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(t,e=5,n=1,s=1,a=.5){const r=I(t,"x","localResponseNormalization");N(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),N(du(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=r,o=!1;r.rank===3&&(o=!0,i=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:s,beta:a},c=A.runKernel(tp,l,u);return o?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const TE=R({localResponseNormalization_:DV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(t){const n={x:I(t,"x","log","float32")};return A.runKernel(ac,n)}const Ds=R({log_:AV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(t){const n={x:I(t,"x","log1p")};return A.runKernel(rc,n)}const Iy=R({log1p_:_V});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(t,e){N(z0(t),()=>"The f passed in variableGrads(f) must be a function"),N(e==null||Array.isArray(e)&&e.every(u=>u instanceof Am),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const u in A.registeredVariables)e.push(A.registeredVariables[u])}const s=n?e.filter(u=>!u.trainable):null,a=e.length;e=e.filter(u=>u.trainable),N(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const r=!0,{value:i,grads:o}=A.gradients(t,e,null,r);N(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:i,grads:l}}function zr(t){return A.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(t){const n={x:I(t,"x","neg")};return A.runKernel(lp,n)}const yt=R({neg_:FV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(t){const n={x:I(t,"x","softplus")};return A.runKernel(vc,n)}const Rc=R({softplus_:zV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(t){const e=I(t,"x","logSigmoid");return zr(s=>({value:yt(Rc(yt(s))),gradFunc:i=>_(i,qa(yt(s)))}))(e)}const EE=R({logSigmoid_:LV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(t,e){let n=I(t,"a","sub"),s=I(e,"b","sub");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel($c,a)}const de=R({sub_:PV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(t,e=-1){const n=I(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return zr((a,r)=>{const o=ia(a,e,!0),l=de(a,o),u=de(le(l,"float32"),Ds(fe(hs(l),e,!0)));return r([u]),{value:u,gradFunc:(d,h)=>{const[p]=h,f=!0,m=hs(p);return de(d,_(fe(d,e,f),m))}}})(n)}const uv=R({logSoftmax_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(t,e=null,n=!1){const s=I(t,"x","logSumExp"),a=Ie(e,s.shape),r=ia(s,a,!0),i=de(s,r),o=hs(i),l=fe(o,a),u=Ds(l),c=K(F(r,u.shape),u);if(n){const d=zt(c.shape,a);return F(c,d)}return c}const Ty=R({logSumExp_:BV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(t,e){const n=I(t,"a","logicalAnd","bool"),s=I(e,"b","logicalAnd","bool");Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(Zh,a)}const Qa=R({logicalAnd_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(t){const n={x:I(t,"x","logicalNot","bool")};return A.runKernel(Jh,n)}const Ey=R({logicalNot_:UV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(t,e){const n=I(t,"a","logicalOr","bool"),s=I(e,"b","logicalOr","bool");Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(ep,a)}const cv=R({logicalOr_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(t,e){const n=I(t,"a","logicalXor","bool"),s=I(e,"b","logicalXor","bool");return Se(n.shape,s.shape),Qa(cv(t,e),Ey(Qa(t,e)))}const RE=R({logicalXor_:GV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xf=2147483648;function HV(t,e,n="left"){const s=I(t,"sortedSequence","searchSorted"),a=I(e,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],o=F(s,[-1,r]),l=F(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(L(l.shape)>=xf)throw new Error(`values tensor size must less than ${xf}`);if(o.shape[1]>=xf)throw new Error(`trailing dim_size must less than ${xf} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return A.runKernel(uy,u,c)}const dv=R({searchSorted_:HV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(t,e){return dv(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(t,e,n,s,a){const r=I(t,"x","maxPool"),i=1;let o=r,l=!1;r.rank===3&&(l=!0,o=F(r,[1,r.shape[0],r.shape[1],r.shape[2]])),N(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),N(an(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Vn("maxPool",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a},d=A.runKernel(sp,u,c);return l?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Ry=R({maxPool_:qV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(t,e=[1,1,1],n,s,a,r="NDHWC"){const i=I(t,"x","maxPool3d");let o=i,l=!1;i.rank===4&&(l=!0,o=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),N(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Vn("maxPool3d",s,a);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:a,dataFormat:r},d=A.runKernel(ap,u,c);return l?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const DE=R({maxPool3d_:XV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(t,e,n,s,a=!1){const i={x:I(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:s,includeBatchInIndex:a},l=A.runKernel(Jg,i,o);return{result:l[0],indexes:l[1]}}const YV=R({maxPoolWithArgmax_:KV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(t,e){let n=I(t,"a","maximum"),s=I(e,"b","maximum");[n,s]=Ft(n,s),n.dtype==="bool"&&(n=le(n,"int32"),s=le(s,"int32")),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(ic,a)}const Pr=R({maximum_:QV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(t,e=null,n=!1){const a={x:I(t,"x","mean")},r={axis:e,keepDims:n};return A.runKernel(rp,a,r)}const Dt=R({mean_:ZV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(t,e="float32"){if(_s(t),e==="complex64"){const s=Ht(t,"float32"),a=Ht(t,"float32");return Si(s,a)}const n=Sn(L(t),e);return A.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(t,e="float32"){if(_s(t),e==="complex64"){const s=Kn(t,"float32"),a=Ht(t,"float32");return Si(s,a)}const n=zw(L(t),e);return A.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let s=I(t,"x","meshgrid",t instanceof kt?t.dtype:"float32");if(e===void 0)return[s];let a=I(e,"y","meshgrid",e instanceof kt?e.dtype:"float32");const r=L(s.shape),i=L(a.shape);return n==="xy"?(s=F(s,[1,-1]),a=F(a,[-1,1]),[Pe(Kn([i,1],s.dtype),s),Pe(a,Kn([1,r],a.dtype))]):(s=F(s,[-1,1]),a=F(a,[1,-1]),[Pe(s,Kn([1,i],s.dtype)),Pe(Kn([r,1],a.dtype),a)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(t,e){let n=I(t,"a","minimum"),s=I(e,"b","minimum");[n,s]=Ft(n,s),n.dtype==="bool"&&(n=le(n,"int32"),s=le(s,"int32")),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(oc,a)}const Fo=R({minimum_:e4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(t,e,n){N(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=I(t,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const a=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)N(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(e[o][0]>=0&&e[o][0]<=s.shape[o]-a&&e[o][1]>=0&&e[o][1]<=s.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-a} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:n},i={x:s};return A.runKernel(op,i,r)}const AE=R({mirrorPad_:t4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(t,e){let n=I(t,"a","mod"),s=I(e,"b","mod");[n,s]=Ft(n,s);const a={a:n,b:s};return A.runKernel(lc,a)}const _E=R({mod_:n4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(t,e=null,n=!1){t=I(t,"x","moments");const s=Ie(e,t.shape),a=Dt(t,s,n);let r=a.shape;n||(r=zt(a.shape,s));const i=at(de(le(t,"float32"),F(a,r))),o=Dt(i,s,n);return{mean:a,variance:o}}const Dy=R({moments_:s4});function a4(t,e,n,s){const a=I(e,"data","multiRNNCell"),r=_m(n,"c","multiRNNCell"),i=_m(s,"h","multiRNNCell");let o=a;const l=[];for(let d=0;d<t.length;d++){const h=t[d](o,r[d],i[d]);l.push(h[0]),l.push(h[1]),o=h[1]}const u=[],c=[];for(let d=0;d<l.length;d+=2)u.push(l[d]),c.push(l[d+1]);return[u,c]}const r4=R({multiRNNCell_:a4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(t,e,n,s=!1){const a=I(t,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const l={logits:i===1?F(a,[1,-1]):a},u={numSamples:e,seed:n,normalized:s},c=A.runKernel(ey,l,u);return i===1?F(c,[c.size]):c}const o4=R({multinomial_:i4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(t,e){let n=I(t,"a","notEqual","string_or_numeric"),s=I(e,"b","notEqual","string_or_numeric");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s};return A.runKernel(up,a)}const mu=R({notEqual_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(t,e,n=1,s=0,a="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:I(t,"indices","oneHot","int32")},o={dtype:a,depth:e,onValue:n,offValue:s};return A.runKernel(dp,i,o)}const hv=R({oneHot_:u4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(t){const n={x:I(t,"x","onesLike")};return A.runKernel(cp,n)}const As=R({onesLike_:c4});function d4(t,e){const n=I(t,"v1","outerProduct"),s=I(e,"v2","outerProduct");N(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);const a=F(n,[-1,1]),r=F(s,[1,-1]);return Pe(a,r)}const h4=R({outerProduct_:d4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(t,e,n=0){const s=I(t,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:e,constantValue:n},r={x:s};return A.runKernel(pp,r,a)}const Bi=R({pad_:p4});function f4(t,e,n=0){return N(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Bi(t,[e],n)}const m4=R({pad1d_:f4});function g4(t,e,n=0){return N(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Bi(t,e,n)}const y4=R({pad2d_:g4});function b4(t,e,n=0){return N(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Bi(t,e,n)}const x4=R({pad3d_:b4});function w4(t,e,n=0){return N(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Bi(t,e,n)}const v4=R({pad4d_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(t,e,n){const s=I(t,"x","spaceToBatchND");N(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),N(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),N(s.shape.reduce((i,o,l)=>l>0&&l<=e.length?i&&(o+n[l-1][0]+n[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const a={x:s},r={blockShape:e,paddings:n};return A.runKernel(Cp,a,r)}const Ay=R({spaceToBatchND_:S4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(t,e,n,s,a,r,i){a==null&&(a=[1,1]),r==null&&(r=1),s===0&&(s="valid");const o=I(t,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(an(r,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`);const c=Rn(l.shape,e,r,a,s),d=[c.dilationHeight,c.dilationWidth];let h;s==="same"?h=N4([c.filterHeight,c.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=$4([c.inHeight,c.inWidth],d,h),y=p?s:"valid",g=p?l:Ay(l,d,f),x=(n==="avg"?()=>Sy(g,e,r,y,i):()=>Ry(g,e,r,y,i))(),w=p?x:Cy(x,d,m);return u?F(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function $4(t,e,n){const s=n.map(c=>c[0]),a=n.map(c=>c[1]),r=t.concat(s,a),i=e.map((c,d)=>(c-r[d]%c)%c),o=a.map((c,d)=>c+i[d]),l=e.map((c,d)=>[s[d],o[d]]),u=e.map((c,d)=>[0,i[d]]);return[l,u]}function N4(t,e){const s=t.map((i,o)=>i+(i-1)*(e[o]-1)).map(i=>i-1),a=s.map(i=>Math.floor(i/2)),r=s.map((i,o)=>i-a[o]);return s.map((i,o)=>[a[o],r[o]])}const OE=R({pool_:C4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(t,e){const n=I(t,"x","prelu"),s=I(e,"alpha","prelu"),a={x:n,alpha:s};return A.runKernel(fp,a)}const _y=R({prelu_:k4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(t,e=null,n=!1){let s=I(t,"x","prod");s.dtype==="bool"&&(s=le(s,"int32"));const a={x:s},r={axis:e,keepDims:n};return A.runKernel(mp,a,r)}const FE=R({prod_:I4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(t,e,n,s){const a=t.map((c,d)=>I(c,`tensors${d}`,"raggedGather","int32")),r=I(e,"paramsDenseValues","raggedGather"),i=I(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:r,indices:i},l={outputRaggedRank:s},u=A.runKernel(Mw,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const E4=R({raggedGather_:T4});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(t,e,n){const s=I(t,"starts","raggedRange"),a=I(e,"limits","raggedRange",s.dtype),r=I(n,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},o=A.runKernel(Bw,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const D4=R({raggedRange_:R4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(t,e,n,s,a){const r=I(t,"shape","raggedTensorToTensor","int32"),i=I(e,"values","raggedTensorToTensor"),o=I(n,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((d,h)=>I(d,`tensors${h}`,"raggedTensorToTensor","int32")),u={shape:r,values:i,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:a};return A.runKernel(Vw,u,c)}const _4=R({raggedTensorToTensor_:A4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(t,e,n){_s(t);const s=L(t);let a=null;if(n==null||n==="float32")a=new Float32Array(s);else if(n==="int32")a=new Int32Array(s);else if(n==="bool")a=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let r=0;r<s;r++)a[r]=e();return A.makeTensor(a,t,n)}const F4=R({rand_:O4});var pv={exports:{}};pv.exports;(function(t){(function(e,n,s){function a(l){var u=this,c=o();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function r(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var c=new a(l),d=u&&u.state,h=c.next;return h.int32=function(){return c.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&r(d,c),h.state=function(){return r(c,{})}),h}function o(){var l=4022871197,u=function(c){c=String(c);for(var d=0;d<c.length;d++){l+=c.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:this.alea=i})(Uo,t)})(pv);var z4=pv.exports,fv={exports:{}};fv.exports;(function(t){(function(e,n,s){function a(o){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function r(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function i(o,l){var u=new a(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&r(c,u),d.state=function(){return r(u,{})}),d}n&&n.exports?n.exports=i:this.xor128=i})(Uo,t)})(fv);var L4=fv.exports,mv={exports:{}};mv.exports;(function(t){(function(e,n,s){function a(o){var l=this,u="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function i(o,l){var u=new a(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&r(c,u),d.state=function(){return r(u,{})}),d}n&&n.exports?n.exports=i:this.xorwow=i})(Uo,t)})(mv);var P4=mv.exports,gv={exports:{}};gv.exports;(function(t){(function(e,n,s){function a(o){var l=this;l.next=function(){var c=l.x,d=l.i,h,p;return h=c[d],h^=h>>>7,p=h^h<<24,h=c[d+1&7],p^=h^h>>>10,h=c[d+3&7],p^=h^h>>>3,h=c[d+4&7],p^=h^h<<7,h=c[d+7&7],h=h^h<<13,p^=h^h<<9,c[d]=p,l.i=d+1&7,p};function u(c,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],c.x=p,c.i=0,h=256;h>0;--h)c.next()}u(l,o)}function r(o,l){return l.x=o.x.slice(),l.i=o.i,l}function i(o,l){o==null&&(o=+new Date);var u=new a(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(c.x&&r(c,u),d.state=function(){return r(u,{})}),d}n&&n.exports?n.exports=i:this.xorshift7=i})(Uo,t)})(gv);var M4=gv.exports,yv={exports:{}};yv.exports;(function(t){(function(e,n,s){function a(o){var l=this;l.next=function(){var c=l.w,d=l.X,h=l.i,p,f;return l.w=c=c+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,l.i=h,f+(c^c>>>16)|0};function u(c,d){var h,p,f,m,y,g=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),f=0,m=-32;m<b;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(y=y+1640531527|0,h=g[m&127]^=p+y,f=h==0?f+1:0);for(f>=128&&(g[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=g[f+34&127],h=g[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,g[f]=p^h;c.w=y,c.X=g,c.i=f}u(l,o)}function r(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function i(o,l){o==null&&(o=+new Date);var u=new a(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(c.X&&r(c,u),d.state=function(){return r(u,{})}),d}n&&n.exports?n.exports=i:this.xor4096=i})(Uo,t)})(yv);var B4=yv.exports,bv={exports:{}};bv.exports;(function(t){(function(e,n,s){function a(o){var l=this,u="";l.next=function(){var d=l.b,h=l.c,p=l.d,f=l.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-p|0,l.d=p<<16^h>>>16^f,l.a=f-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):u+=o;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function r(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function i(o,l){var u=new a(o),c=l&&l.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,c&&(typeof c=="object"&&r(c,u),d.state=function(){return r(u,{})}),d}n&&n.exports?n.exports=i:this.tychei=i})(Uo,t)})(bv);var V4=bv.exports,zE={exports:{}};const U4={},W4=Object.freeze(Object.defineProperty({__proto__:null,default:U4},Symbol.toStringTag,{value:"Module"})),G4=KO(W4);(function(t){(function(e,n,s){var a=256,r=6,i=52,o="random",l=s.pow(a,r),u=s.pow(2,i),c=u*2,d=a-1,h;function p(w,v,C){var $=[];v=v==!0?{entropy:!0}:v||{};var k=g(y(v.entropy?[w,x(n)]:w??b(),3),$),T=new f($),E=function(){for(var O=T.g(r),B=l,W=0;O<u;)O=(O+W)*a,B*=a,W=T.g(1);for(;O>=c;)O/=2,B/=2,W>>>=1;return(O+W)/B};return E.int32=function(){return T.g(4)|0},E.quick=function(){return T.g(4)/4294967296},E.double=E,g(x(T.S),n),(v.pass||C||function(O,B,W,V){return V&&(V.S&&m(V,T),O.state=function(){return m(T,{})}),W?(s[o]=O,B):O})(E,k,"global"in v?v.global:this==s,v.state)}function f(w){var v,C=w.length,$=this,k=0,T=$.i=$.j=0,E=$.S=[];for(C||(w=[C++]);k<a;)E[k]=k++;for(k=0;k<a;k++)E[k]=E[T=d&T+w[k%C]+(v=E[k])],E[T]=v;($.g=function(O){for(var B,W=0,V=$.i,G=$.j,D=$.S;O--;)B=D[V=d&V+1],W=W*a+D[d&(D[V]=D[G=d&G+B])+(D[G]=B)];return $.i=V,$.j=G,W})(a)}function m(w,v){return v.i=w.i,v.j=w.j,v.S=w.S.slice(),v}function y(w,v){var C=[],$=typeof w,k;if(v&&$=="object")for(k in w)try{C.push(y(w[k],v-1))}catch{}return C.length?C:$=="string"?w:w+"\0"}function g(w,v){for(var C=w+"",$,k=0;k<C.length;)v[d&k]=d&($^=v[d&k]*19)+C.charCodeAt(k++);return x(v)}function b(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(e.crypto||e.msCrypto).getRandomValues(w)),x(w)}catch{var v=e.navigator,C=v&&v.plugins;return[+new Date,e,C,e.screen,x(n)]}}function x(w){return String.fromCharCode.apply(0,w)}if(g(s.random(),n),t.exports){t.exports=p;try{h=G4}catch{}}else s["seed"+o]=p})(typeof self<"u"?self:Uo,[],Math)})(zE);var H4=zE.exports,j4=z4,q4=L4,X4=P4,K4=M4,Y4=B4,Q4=V4,el=H4;el.alea=j4;el.xor128=q4;el.xorwow=X4;el.xorshift7=K4;el.xor4096=Y4;el.tychei=Q4;var Oy=el;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xv{constructor(e,n,s,a,r){this.mean=e,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Oy.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let e,n,s=!1;for(;!s;){let a,r,i;do a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r;while(i>=1||i===0);const o=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*o,n=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Z4{constructor(e,n,s,a){this.alpha=e,this.beta=1/n,this.dtype=s;const r=a||Math.random();this.randu=Oy.alea(r.toString()),this.randn=new xv(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,s,a,r,i;for(;;){do a=this.randn.nextValue(),i=1+this.c*a;while(i<=0);if(i*=i*i,e=a*a,n=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),r=this.randu(),r<n||Math.log(r)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class J4{constructor(e=0,n=1,s,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=s,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Oy.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(t,e,n=1,s="float32",a){if(_s(t),n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new Z4(e,n,s,a),i=ke(t,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const tU=R({randomGamma_:eU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(t,e=0,n=1,s,a){if(_s(t),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new xv(e,n,s,!1,a),i=ke(t,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const wv=R({randomNormal_:nU});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return wv(t,0,1,e,n)}const aU=R({randomStandardNormal_:sU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(t,e=0,n=1,s="float32",a){_s(t);const r=ke(t,s),i=new J4(e,n,null,a);for(let o=0;o<r.values.length;o++)r.values[o]=i.nextValue();return r.toTensor()}const tl=R({randomUniform_:rU});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(t,e,n,s){return tl(t,e,n,"int32",s)}const oU=R({randomUniformInt_:iU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(t,e,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const a={start:t,stop:e,step:n,dtype:s};return A.runKernel(sy,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(t){const n={input:I(t,"input","real")};return A.runKernel(ay,n)}const sh=R({real_:lU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(t){const n={x:I(t,"x","reciprocal")};return A.runKernel(dc,n)}const LE=R({reciprocal_:uU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(t){const n={x:I(t,"x","relu")};return A.runKernel(hc,n)}const ar=R({relu_:cU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(t){const n={x:I(t,"x","relu6")};return A.runKernel(pc,n)}const vv=R({relu6_:dU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(t,e){const s={x:I(t,"x","reverse")},a={dims:e};return A.runKernel(xp,s,a)}const ca=R({reverse_:hU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(t){const e=I(t,"x","reverse");return N(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),ca(e,0)}const fU=R({reverse1d_:pU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(t,e){const n=I(t,"x","reverse");return N(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ca(n,e)}const gU=R({reverse2d_:mU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(t,e){const n=I(t,"x","reverse");return N(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ca(n,e)}const bU=R({reverse3d_:yU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(t,e){const n=I(t,"x","reverse");return N(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ca(n,e)}const wU=R({reverse4d_:xU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(t){const n={x:I(t,"x","round")};return A.runKernel(fc,n)}const Sv=R({round_:vU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(t){const n={x:I(t,"x","rsqrt","float32")};return A.runKernel(mc,n)}const Cv=R({rsqrt_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(t){const n={x:I(t,"x","selu")};return A.runKernel(gc,n)}const $v=R({selu_:CU});function $U(t,e,n,s,a,r=[1,1],i="NHWC"){const o=I(t,"x","separableConv2d"),l=I(e,"depthwiseFilter","separableConv2d"),u=I(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(o.rank===3&&(d=!0,c=F(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),N(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const h=l.shape[2],p=l.shape[3];N(u.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`);const f=Dp(c,l,s,a,i,r),y=Ni(f,u,1,"valid",i);return d?F(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const Nv=R({separableConv2d_:$U});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NU(t,e){const n=I(t,"x","setdiff1d"),s=I(e,"y","setdiff1d");N(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),N(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),N(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const a=await n.data(),r=await s.data(),i=new Set(r);let o=0;for(let c=0;c<a.length;c++)i.has(a[c])||o++;const l=new Jt([o],n.dtype),u=new Jt([o],"int32");for(let c=0,d=0;c<a.length;c++)i.has(a[c])||(l.values[d]=a[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]}const kU=NU;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(t){const n={x:I(t,"x","sign")};return A.runKernel(xc,n)}const PE=R({sign_:IU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(t){const n={x:I(t,"x","sin","float32")};return A.runKernel(yc,n)}const kv=R({sin_:TU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(t){const n={x:I(t,"x","sinh")};return A.runKernel(bc,n)}const Iv=R({sinh_:EU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(t,e,n){const s=I(t,"x","slice1d");return N(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ve(s,[e],[n])}const Fy=R({slice1d_:RU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(t,e,n){const s=I(t,"x","slice2d");return N(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const Tv=R({slice2d_:DU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(t,e,n){const s=I(t,"x","slice3d");return N(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const zy=R({slice3d_:AU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _U(t,e,n){const s=I(t,"x","slice4d");return N(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,n)}const ah=R({slice4d_:_U});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(t,e=-1){const n=I(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},a={dim:e};return A.runKernel(Np,s,a)}const Ly=R({softmax_:OU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(t){N(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return A.runKernel(Wg,e)}const Py=R({fft_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(t){N(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return A.runKernel(qg,e)}const rh=R({ifft_:zU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const a=F(t,[n,e]);s=rh(a)}else{const a=[n,2*(e-1)],r=F(sh(t),[n,e]),i=F(Ny(t),[n,e]),o=ca(Ve(r,[0,1],[n,e-2]),1),l=_(ca(Ve(i,[0,1],[n,e-2]),1),we(-1)),u=Bt([r,o],1),c=Bt([i,l],1),d=F(Si(u,c),[a[0],a[1]]);s=rh(d)}if(s=sh(s),t.rank===3&&t.shape[0]!==0){const a=s,r=t.shape[0];s=F(s,[r,s.shape[0]/r,s.shape[1]]),a.dispose()}return s}const Ev=R({irfft_:LU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(t,e,n=0){const a={x:I(t,"x","split")},r={numOrSizeSplits:e,axis:n};return A.runKernel($p,a,r)}const us=R({split_:PU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(t,e){N(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const s=t.size/n;let a;if(e!=null&&e<n){const f=t.shape.map(y=>0),m=t.shape.map(y=>y);m[t.shape.length-1]=e,a=Ve(t,f,m),n=e}else if(e!=null&&e>n){const f=t.shape.map(m=>m);f[t.shape.length-1]=e-n,a=Bt([t,Ht(f)],t.shape.length-1),n=e}else a=t;const r=We(a),i=F(Si(a,r),[s,n]),o=Py(i),l=Math.floor(n/2)+1,u=sh(o),c=Ny(o),d=us(u,[l,n-l],u.shape.length-1),h=us(c,[l,n-l],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=l,F(Si(d[0],h[0]),p)}const My=R({rfft_:MU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(t,e){let n=I(t,"a","squaredDifference"),s=I(e,"b","squaredDifference");[n,s]=Ft(n,s),Se(n.shape,s.shape);const a={a:n,b:s},r={};return A.runKernel(Cc,a,r)}const Rv=R({squaredDifference_:BU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(t,e){const n=I(t,"x","squeeze","string_or_numeric");return F(n,Oi(n.shape,e).newShape)}const nl=R({squeeze_:VU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(t,e=0){const n=_m(t,"tensors","stack","string_or_numeric");N(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&N(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,a={axis:e};return A.runKernel(hp,s,a)}const ps=R({stack_:UU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(t,e=0){const s={x:I(t,"x","step")},a={alpha:e};return A.runKernel(Tc,s,a)}const Dc=R({step_:WU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(t,e,n,s,a=0,r=0,i=0,o=0,l=0){const c={x:I(t,"x","stridedSlice","string_or_numeric")},d={begin:e,end:n,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return A.runKernel(my,c,d)}const ME=R({stridedSlice_:GU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(t){const n={x:I(t,"x","tan","float32")};return A.runKernel(Nc,n)}const BE=R({tan_:HU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(t,e){Du(t);const n=zi(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Li(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(t,e,n){if(Du(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=zi(t,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(t,e,n){if(Du(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=zi(t,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(t,e,n){if(Du(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=zi(t,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(t,e,n){if(Du(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=zi(t,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Li(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(t,e,n){if(Du(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=zi(t,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Li(t,e,s,n)}function UE(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(r+` update.rank < ${a}. `);if(t.length<s+(n.rank-a))throw new Error(r+` Output shape length < ${s+(n.rank-a)}`);if(n.rank!==a+t.length-s)throw new Error(r+` update.rank != ${a+t.length-s}`);for(let i=0;i<a;++i)if(n.shape[i]!==e.shape[i])throw new Error(r+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==t[i+s])throw new Error(r+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${t[i+a]})`)}function Dv(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}UE(n,e,t)}function rr(t,e,n){const s=e.shape.length,a=s>1?e.shape[s-1]:1,r=n.length;let i=1;for(let d=a;d<r;++d)i*=n[d];const o=a<1?1:a,l=L(e.shape)/o,u=[...be(n.slice(0,a)),1],c=L(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(t,e,n){const s=I(t,"tensor","tensorScatterupdate"),a=I(e,"indices","tensorScatterupdate","int32"),r=I(n,"updates","tensorScatterupdate");if(Dv(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},o={};return A.runKernel(ly,i,o)}const YU=R({tensorScatterUpdate_:KU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(t,e=1,n=!0){const s=I(t,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${e}`);const r={x:s},i={k:e,sorted:n},[o,l]=A.runKernel(yy,r,i);return{values:o,indices:l}}const WE=R({topk_:QU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(t,e=0,n=1,s,a){if(_s(t),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new xv(e,n,s,!0,a),i=ke(t,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const Av=R({truncatedNormal_:ZU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(t,e=0){const n=I(t,"x","unique","string_or_numeric");N(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},a={axis:e},[r,i]=A.runKernel(jw,s,a);return{values:r,indices:i}}const GE=R({unique_:JU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(t,e,n){const s=I(t,"x","unsortedSegmentSum"),a=I(e,"segmentIds","unsortedSegmentSum","int32");N(du(n),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:a},i={numSegments:n};return A.runKernel(Ip,r,i)}const _v=R({unsortedSegmentSum_:eW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(t,e=0){const n=I(t,"x","unstack","string_or_numeric");N(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},a={axis:e};return A.runKernel(kp,s,a)}const da=R({unstack_:tW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(t,e){return dv(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(t,e=!0,n,s){return A.makeVariable(t,e,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const s=ke(t,"int32"),a=ke([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const i=s.indexToLoc(n[r]),o=r*t.length;a.values.set(i,o)}return a.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sW(t){const e=I(t,"condition","whereAsync","bool"),n=await e.data(),s=Ov(e.shape,n);return t!==e&&e.dispose(),s}const jE=sW;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function aW(t,e,n){const s=I(t,"tensor","boolMask"),a=I(e,"mask","boolMask","bool"),r=n??0,i=a.rank,o=s.shape;N(i>0,()=>"mask cannot be scalar"),ns(o.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=r;m<r+i;m++)l*=o[m];const u=o.slice(0,r).concat([l],o.slice(r+i)),c=F(s,u),d=F(a,[-1]),h=await jE(d),p=nl(h,[1]),f=Fp(c,p,r);return t!==s&&s.dispose(),e!==a&&a.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f}const rW=aW;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(t,e,n){const s=I(t,"x","transpose");if(e==null&&(e=s.shape.map((i,o)=>o).reverse()),N(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{N(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const a={x:s},r={perm:e};return s.dtype==="complex64"?U(()=>{let i=sh(s),o=Ny(s);return i=A.runKernel(xo,{x:i},r),o=A.runKernel(xo,{x:o},r),n&&(o=yt(o)),Si(i,o)}):A.runKernel(xo,a,r)}const Ue=R({transpose_:iW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(t,e,n,s,a=!0){const r=I(t,"v","movingAverage"),i=I(e,"x","movingAverage"),o=I(n,"decay","movingAverage");XP(r,i),N(Ee(r.shape,i.shape),()=>"Shape mismatch in v and x");const l=we(1),u=de(l,o);let c=_(de(i,r),u);if(a){N(s!=null,()=>"When using zeroDebias: true, step is required.");const d=I(s,"step","movingAverage");c=ge(c,de(l,Fr(o,d)))}return K(r,c)}const lW=R({movingAverage_:oW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(t,e,n){_s(n);const s=I(t,"indices","scatterND","int32"),a=I(e,"updates","scatterND");Dv(a,s,n);const r={indices:s,updates:a},i={shape:n};return A.runKernel(oy,r,i)}const cW=R({scatterND_:uW});function dW(t,e,n,s){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,r=t.rank>1?t.shape[1]:1;if(n.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${r}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(t,e,n,s=0){_s(n);const a=I(t,"sparseIndices","sparseToDense","int32"),r=I(e,"sparseValues","sparseToDense","string_or_numeric"),i=I(s,"defaultValue","sparseToDense",r.dtype);dW(a,r,n,i);const o={sparseIndices:a,sparseValues:r,defaultValue:i},l={outputShape:n};return A.runKernel(hy,o,l)}const pW=R({sparseToDense_:hW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(t,e){const n=I(e,"indices","gatherND","int32"),a={params:I(t,"x","gatherND","string_or_numeric"),indices:n};return A.runKernel(jg,a)}const mW=R({gatherND_:fW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(t,e){if(e==null)return t.shape.slice();if(Ee(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)e[s]==null&&t.shape[s]!=null?n.push(t.shape[s]):n.push(e[s]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(t,e,n,s){const a=I(t,"x","dropout");if(N(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),N(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof kt?a.clone():a;const r=gW(a,n),i=1-e,o=ge(Op(K(tl(r,0,1,"float32",s),i)),i);return _(a,o)}const qE=R({dropout_:yW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Fv(t,e,n){const s=1-t%2,a=new Float32Array(t);for(let r=0;r<t;++r){const i=2*Math.PI*r/(t+s-1);a[r]=e-n*Math.cos(i)}return Mn(a,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bW(t,e,n=1){const s=I(t,"predictions","inTopK"),a=I(e,"targets","inTopK");N(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),N(s.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`),ns(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];N(n>0&&n<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${n}`);const i=await s.data(),o=await a.data(),[l,u]=[i.length/r,r],c=nn("bool",l);for(let d=0;d<l;d++){const h=d*u,p=i.subarray(h,h+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,y)=>y.value-m.value),c[d]=0;for(let m=0;m<n;m++)if(f[m].index===o[d]){c[d]=1;break}}return t!==s&&s.dispose(),e!==a&&a.dispose(),Sa(c,a.shape,"bool")}const xW=bW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(t,e,n,s,a,r="NHWC",i){let o=t;t.rank===3&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]])),N(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=r==="NHWC"?o.shape[3]:o.shape[1],c=r==="NHWC"?l.shape[3]:l.shape[1];N(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),N(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Vn("conv2dDerFilter",a,i);const d={x:o,dy:l},h={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:n};return A.runKernel(Dg,d,h)}const zv=R({conv2DBackpropFilter_:wW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return _(t,Dc(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Vy(t,e){let n=e;const s=sn(t.shape,e.shape);return s.length>0&&(n=fe(n,s)),F(n,t.shape)}function Uy(t,e,n,s){if(e==="linear")return t;if(e==="relu")return ar(t);if(e==="elu")return Ap(t);if(e==="relu6")return vv(t);if(e==="prelu")return _y(t,n);if(e==="leakyrelu")return ky(t,s);if(e==="sigmoid")return qa(t);throw new Error(`Unknown fused activation ${e}.`)}const Wy=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW({x:t,filter:e,strides:n,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Wy(A.state.gradientDepth,l)===!1){N(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Ni(t,e,n,s,a,r,i);return o!=null&&(C=K(C,o)),Uy(C,l,u,c)}const d=I(t,"x","conv2d","float32"),h=I(e,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=F(d,[1,d.shape[0],d.shape[1],d.shape[2]])),N(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),N(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Vn("fused conv2d",s,i);const m=a==="NHWC"?p.shape[3]:p.shape[1];N(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),N(an(n,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`);const y=dt(p.shape,h.shape,n,r,s,i);let g;o!=null&&(g=I(o,"bias","fused conv2d"),[g]=Ft(g,d),a==="NHWC"?Se(y.outShape,g.shape):(N(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),N(g.shape.length===0||g.shape[0]===y.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let b;if(u!=null){const C=u.shape;if(N(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)N(C[0]===1||C[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${y.outChannels}).`);else if(C.length===3)try{Se(C,y.outShape)}catch{const k=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(k)}b=I(u,"prelu weights","fused conv2d")}const x=(C,$)=>{N(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[k,T,E,O]=$,B=By(C,E,l);N($i(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const W=nv(T.shape,B,k,n,s),V=zv(T,B,k.shape,n,s),G=[W,V];if(O!=null){const D=Vy(O,B);G.push(D)}return G},w={x:p,filter:h,bias:g,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return o==null?zr(($,k,T)=>{let E=A.runKernel(Qd,w,v);return T([k,$,E]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(p,h):zr(($,k,T,E)=>{let O=A.runKernel(Qd,w,v);return E([k,$,O,T]),f&&(O=F(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:x}})(p,h,g)}const KE=R({fusedConv2d_:vW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(t,e,n,s,a,r=[1,1],i){let o=t;t.rank===3&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:n};return A.runKernel(Pg,u,c)}const YE=R({depthwiseConv2dNativeBackpropFilter_:SW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(t,e,n,s,a,r=[1,1],i){let o=e,l=!1;e.rank===3&&(l=!0,o=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:t},d=A.runKernel(Mg,u,c);return l?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const QE=R({depthwiseConv2dNativeBackpropInput_:CW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W({x:t,filter:e,strides:n,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Wy(A.state.gradientDepth,l)===!1){let v=Dp(t,e,n,s,a,r,i);return o!=null&&(v=K(v,o)),Uy(v,l,u,c)}const d=I(t,"x","depthwiseConv2d","float32"),h=I(e,"filter","depthwiseConv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=F(d,[1,d.shape[0],d.shape[1],d.shape[2]])),N(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),N(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),N(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),r==null&&(r=[1,1]),N(an(n,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),Vn("fused depthwiseConv2d",s,i);const m=dt(p.shape,h.shape,n,r,s,i,!0);let y;o!=null&&(y=I(o,"bias","fused conv2d"),[y]=Ft(y,d),Se(m.outShape,y.shape));let g;u!=null&&(g=I(u,"prelu weights","fused depthwiseConv2d"));const b=(v,C)=>{N($i(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[$,k,T,E]=C,O=By(v,T,l),B=QE(k.shape,O,$,n,s,r,i),W=YE(k,O,$.shape,n,s,r,i);if(E!=null){const V=Vy(y,O);return[B,W,V]}return[B,W]},x={x:p,filter:h,bias:y,preluActivationWeights:g},w={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return o==null?zr((C,$,k)=>{let T=A.runKernel(Zd,x,w);return k([$,C,T]),f&&(T=F(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:b}})(p,h):zr((C,$,k,T)=>{let E=A.runKernel(Zd,x,w);return T([$,C,E,k]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,h,y)}const NW=R({fusedDepthwiseConv2d_:$W});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Wy(A.state.gradientDepth,r)===!1){let O=Pe(t,e,n,s);return a!=null&&(O=K(O,a)),Uy(O,r,i,o)}let l=I(t,"a","fused matMul"),u=I(e,"b","fused matMul");[l,u]=Ft(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),y=L(f),g=L(m);N(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);const x=Se(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),w=n?F(l,[y,c,h]):F(l,[y,h,c]),v=s?F(u,[g,p,d]):F(u,[g,d,p]);let C;a!=null&&(C=I(a,"bias","fused matMul"),[C]=Ft(C,l),Se(x,C.shape));let $;i!=null&&($=I(i,"prelu weights","fused matMul"));const k=(O,B)=>{const[W,V,G,D]=B,H=By(F(O,G.shape),G,r);let P,j;if(!n&&!s?(P=Pe(H,V,!1,!0),j=Pe(W,H,!0,!1)):!n&&s?(P=Pe(H,V,!1,!1),j=Pe(H,W,!0,!1)):n&&!s?(P=Pe(V,H,!1,!0),j=Pe(W,H,!1,!1)):(P=Pe(V,H,!0,!0),j=Pe(H,W,!0,!0)),a!=null){const X=Vy(D,H);return[P,j,X]}else return[P,j]},T={a:w,b:v,bias:C,preluActivationWeights:$},E={transposeA:n,transposeB:s,activation:r,leakyreluAlpha:o};return a==null?zr((B,W,V)=>{const G=A.runKernel(Yd,T,E);return V([B,W,G]),{value:F(G,x),gradFunc:k}})(w,v):zr((B,W,V,G)=>{const D=A.runKernel(Yd,T,E);return G([B,W,D,V]),{value:F(D,x),gradFunc:k}})(w,v,C)}const J0=R({fusedMatMul_:kW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW=Object.freeze(Object.defineProperty({__proto__:null,conv2d:KE,depthwiseConv2d:NW,matMul:J0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(t){return Fv(t,.54,.46)}const EW=R({hammingWindow_:TW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(t){return Fv(t,.5,.5)}const ZE=R({hannWindow_:RW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(t,e,n,s=!1,a=0){let r=0;const i=[];for(;r+e<=t.size;)i.push(Ve(t,r,e)),r+=n;if(s)for(;r<t.size;){const o=r+e-t.size,l=Bt([Ve(t,r,e-o),Ec([o],a)]);i.push(l),r+=n}return i.length===0?Ad([],[0,e]):F(Bt(i),[i.length,e])}const JE=R({frame_:DW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(t,e,n,s,a=ZE){s==null&&(s=XE(e));const r=JE(t,e,n),i=_(r,a(e));return My(i,s)}const _W=R({stft_:AW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(t,e,n,s,a="bilinear",r=0){const i=I(t,"image","cropAndResize"),o=I(e,"boxes","cropAndResize","float32"),l=I(n,"boxInd","cropAndResize","int32"),u=o.shape[0];N(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),N(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),N(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),N(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),N(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),N(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const c={image:i,boxes:o,boxInd:l},d={method:a,extrapolationValue:r,cropSize:s};return A.runKernel(Fg,c,d)}const FW=R({cropAndResize_:OW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(t){const e=I(t,"image","flipLeftRight","float32");N(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return A.runKernel(Hg,n,{})}const LW=R({flipLeftRight_:zW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(t){const e=I(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];N(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),N(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const a=new Array(e.rank);return a.fill(1,0,n),a[n]=3,ta(e,a)}const MW=R({grayscaleToRGB_:PW});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(t){const e=I(t,"image","RGBToGrayscale"),n=e.rank-1,s=e.shape[n];N(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),N(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const a=e.dtype,r=le(e,"float32"),i=Mn([.2989,.587,.114]);let o;switch(e.rank){case 2:o=El("ij,j->i",r,i);break;case 3:o=El("ijk,k->ij",r,i);break;case 4:o=El("ijkl,l->ijk",r,i);break;case 5:o=El("ijklm,m->ijkl",r,i);break;case 6:o=El("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Fn(o,-1),le(o,a)}const VW=R({rgbToGrayscale_:BW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(t,e,n=0,s=.5){const a=I(t,"image","rotateWithOffset","float32");N(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const r={image:a},i={radians:e,fillValue:n,center:s};return A.runKernel(xy,r,i)}const WW=R({rotateWithOffset_:UW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ac(t,e,n,s,a,r){s==null&&(s=.5),a==null&&(a=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=t.shape[0];return n=Math.min(n,i),N(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),N(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),N(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),N(e.rank===1,()=>"scores must be a 1D tensor"),N(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),N(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY){const r=I(t,"boxes","nonMaxSuppression","float32"),i=I(e,"scores","nonMaxSuppression","float32"),o=Ac(r,i,n,s,a);n=o.maxOutputSize,s=o.iouThreshold,a=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:a};return A.runKernel(ty,{boxes:r,scores:i},l)}const HW=R({nonMaxSuppression_:GW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(t,e,n){const s=qW(t,e,n),a=s<0?-(s+1):s;t.splice(a,0,e)}function qW(t,e,n){return KW(t,e,n||XW)}function XW(t,e){return t>e?1:t<e?-1:0}function KW(t,e,n){let s=0,a=t.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const o=n(e,t[r]);o>0?s=r+1:(a=r,i=!o)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gy(t,e,n,s,a){return Pv(t,e,n,s,a,0)}function Lv(t,e,n,s,a,r){return Pv(t,e,n,s,a,0,!1,r,!0)}function Hy(t,e,n,s,a,r){return Pv(t,e,n,s,a,r,!0)}function Pv(t,e,n,s,a,r,i=!1,o=!1,l=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>a&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(T2);const c=r>0?-.5/r:0,d=[],h=[];for(;d.length<n&&u.length>0;){const y=u.pop(),{score:g,boxIndex:b,suppressBeginIndex:x}=y;if(g<a)break;let w=!1;for(let v=d.length-1;v>=x;--v){const C=YW(t,b,d[v]);if(C>=s){w=!0;break}if(y.score=y.score*QW(s,c,C),y.score<=a)break}y.suppressBeginIndex=d.length,w||(y.score===g?(d.push(b),h.push(y.score)):y.score>a&&jW(u,y,T2))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function YW(t,e,n){const s=t.subarray(e*4,e*4+4),a=t.subarray(n*4,n*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-r)*(l-i),f=(d-u)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(r,u),y=Math.max(i,c),g=Math.min(o,d),b=Math.min(l,h),x=Math.max(g-m,0)*Math.max(b-y,0);return x/(p+f-x)}function QW(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function T2(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ZW(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY){const r=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),o=Ac(r,i,n,s,a);n=o.maxOutputSize,s=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:d}=Gy(u,c,n,s,a);return r!==t&&r.dispose(),i!==e&&i.dispose(),Mn(d,"int32")}const JW=ZW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=I(t,"boxes","nonMaxSuppression"),o=I(e,"scores","nonMaxSuppression"),l=Ac(i,o,n,s,a,r);n=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold,r=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},d=A.runKernel(ny,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}const tG=R({nonMaxSuppressionWithScore_:eG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nG(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=I(t,"boxes","nonMaxSuppressionAsync"),o=I(e,"scores","nonMaxSuppressionAsync"),l=Ac(i,o,n,s,a,r);n=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold,r=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=Hy(c,d,n,s,a,r);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Mn(h,"int32"),selectedScores:Mn(p)}}const sG=nG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=I(t,"boxes","nonMaxSuppression"),o=I(e,"scores","nonMaxSuppression"),l=Ac(i,o,n,s,a,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:r},f=A.runKernel(Pw,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const rG=R({nonMaxSuppressionPadded_:aG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function iG(t,e,n,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=I(t,"boxes","nonMaxSuppressionAsync"),o=I(e,"scores","nonMaxSuppressionAsync"),l=Ac(i,o,n,s,a,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Lv(h,p,u,c,d,r);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Mn(f,"int32"),validOutputs:we(m,"int32")}}const oG=iG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(t,e,n=!1,s=!1){const a=I(t,"images","resizeBilinear");N(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),N(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),N(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:r},l={alignCorners:n,halfPixelCenters:s,size:e},u=A.runKernel(bp,o,l);return i?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const eR=R({resizeBilinear_:lG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(t,e,n=!1,s=!1){const a=I(t,"images","resizeNearestNeighbor");N(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),N(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),N(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:r},l={alignCorners:n,halfPixelCenters:s,size:e},u=A.runKernel(yp,o,l);return i?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const tR=R({resizeNearestNeighbor_:uG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(t,e="binary",n=!1,s=.5){const a=I(t,"image","threshold"),r=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1];let u=_(Mn([s]),255),c,d,h,p;if(N(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),N(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),N(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),N(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),a.shape[2]===3){[c,d,h]=us(a,[1,1,1],-1);const y=_(c,r),g=_(d,i),b=_(h,o);p=K(K(y,g),b)}else p=t;if(e==="otsu"){const y=lE(le(Sv(p),"int32"),Sa([]),256);u=dG(y,l)}const f=n?Jo(p,u):ws(p,u);return le(_(f,255),"int32")}function dG(t,e){let n=Mn([-1]),s=Mn([0]),a=Mn([0]),r,i,o,l,u,c;for(let d=0;d<t.size-1;d++){r=Ve(t,0,d+1),i=Ve(t,d+1),u=ge(fe(r),e),c=ge(fe(i),e);const h=fe(_(r,gu(0,r.size)));o=ge(h,fe(r));const p=Ec(i.shape,r.size),f=K(gu(0,i.size),p),m=_(i,f);l=ge(fe(m),fe(i));const y=de(o,l),g=de(o,l),b=_(u,c);a=_(_(b,y),g);const x=ws(a,s);s=En(x,a,s),n=En(x,Mn([d]),n)}return n}const hG=R({threshold_:cG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(t,e,n="nearest",s="constant",a=0,r){const i=I(t,"image","transform","float32"),o=I(e,"transforms","transform","float32");N(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),N(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:a,outputShape:r};return A.runKernel(by,l,u)}const fG=R({transform_:pG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(t,e,n){const s=I(t,"a","bandPart");N(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const a=s.shape,[r,i]=s.shape.slice(-2);let o,l;typeof e=="number"?(N(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),N(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),o=I(e<0?r:e,"numLower","bandPart")):(N(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=En(nh(e,0),r,Fo(e,r))),typeof n=="number"?(N(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),N(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=I(n<0?i:n,"numUpper","bandPart")):(N(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=En(nh(n,0),i,Fo(n,i)));const u=F(gu(0,r,1,"int32"),[-1,1]),c=gu(0,i,1,"int32"),d=de(u,c),h=Qa(Jo(d,o),Mi(d,yt(l))),p=Ht([r,i],s.dtype);return F(ps(da(F(s,[-1,r,i])).map(f=>En(h,f,p))),a)}const gG=R({bandPart_:mG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(t){let e;if(Array.isArray(t)){e=!1,N(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=t[0].shape[0];for(let r=1;r<t.length;++r)N(t[r].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[r].shape[0]} vs. ${a})`)}else e=!0,t=us(t,t.shape[0],0).map(a=>nl(a,[0]));N(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],s=t;for(let a=0;a<t.length;++a)n.push(A.tidy(()=>{let r=s[a];if(a>0)for(let i=0;i<a;++i){const o=_(fe(_(n[i],r)),n[i]);r=de(r,o)}return ge(r,_p(r,"euclidean"))}));return e?ps(n,0):n}const bG=R({gramSchmidt_:yG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(t,e=!1){if(N(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return E2(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((l,u)=>l*u),s=da(F(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],r=[];s.forEach(l=>{const[u,c]=E2(l,e);a.push(u),r.push(c)});const i=F(ps(a,0),t.shape),o=F(ps(r,0),t.shape);return[i,o]}}function E2(t,e=!1){return A.tidy(()=>{N(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],s=t.shape[1];let a=lv(n),r=Ir(t);const i=Ad([[1]],[1,1]);let o=Ir(i);const l=n>=s?s:n;for(let u=0;u<l;++u){const c=r,d=o,h=a;[o,r,a]=A.tidy(()=>{const p=Ve(r,[u,u],[n-u,1]),f=_p(p),m=Ve(r,[u,u],[1,1]),y=En(ws(m,0),Ad([[-1]]),Ad([[1]])),g=de(m,_(y,f)),b=ge(p,g);b.shape[0]===1?o=Ir(i):o=Bt([i,Ve(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=yt(ge(Pe(y,g),f)),w=Ve(r,[u,0],[n-u,s]),v=_(x,o),C=Ue(o);if(u===0)r=de(w,Pe(v,Pe(C,w)));else{const T=de(w,Pe(v,Pe(C,w)));r=Bt([Ve(r,[0,0],[u,s]),T],0)}const $=Ue(v),k=Ve(a,[0,u],[n,a.shape[1]-u]);if(u===0)a=de(k,Pe(Pe(k,o),$));else{const T=de(k,Pe(Pe(k,o),$));a=Bt([Ve(a,[0,0],[n,u]),T],1)}return[o,r,a]}),_e([c,d,h])}return!e&&n>s&&(a=Ve(a,[0,0],[n,s]),r=Ve(r,[0,0],[s,s])),[a,r]})}const wG=R({qr_:xG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qn;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(qn||(qn={}));function vG(t,e,n=qn.SUM_BY_NONZERO_WEIGHTS){const s=I(t,"losses","computeWeightedLoss");let a=null;e!=null&&(a=I(e,"weights","computeWeightedLoss"));const r=a==null?s:_(s,a);if(n===qn.NONE)return r;if(n===qn.SUM)return fe(r);if(n===qn.MEAN){if(a==null)return Dt(r);{const i=s.size/a.size,o=ge(fe(r),fe(a));return i>1?ge(o,we(i)):o}}if(n===qn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return ge(fe(r),we(s.size));{const i=_(a,Kn(s.shape)),o=le(fe(mu(i,we(0))),"float32");return ge(fe(r),o)}}throw Error(`Unknown reduction: ${n}`)}const Mr=R({computeWeightedLoss_:vG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(t,e,n,s=qn.SUM_BY_NONZERO_WEIGHTS){const a=I(t,"labels","absoluteDifference"),r=I(e,"predictions","absoluteDifference");let i=null;n!=null&&(i=I(n,"weights","absoluteDifference")),ns(a.shape,r.shape,"Error in absoluteDifference: ");const o=Kt(de(a,r));return Mr(o,i,s)}const CG=R({absoluteDifference_:SG});function $G(t,e,n,s,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","cosineDistance"),i=I(e,"predictions","cosineDistance");let o=null;s!=null&&(o=I(s,"weights","cosineDistance")),ns(r.shape,i.shape,"Error in cosineDistance: ");const l=we(1),u=de(l,fe(_(r,i),n,!0));return Mr(u,o,a)}const NG=R({cosineDistance_:$G});function kG(t,e,n,s=qn.SUM_BY_NONZERO_WEIGHTS){let a=I(t,"labels","hingeLoss");const r=I(e,"predictions","hingeLoss");let i=null;n!=null&&(i=I(n,"weights","hingeLoss")),ns(a.shape,r.shape,"Error in hingeLoss: ");const o=we(1);a=de(_(we(2),a),o);const l=ar(de(o,_(a,r)));return Mr(l,i,s)}const IG=R({hingeLoss_:kG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(t,e,n,s=1,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","huberLoss"),i=I(e,"predictions","huberLoss");let o=null;n!=null&&(o=I(n,"weights","huberLoss")),ns(r.shape,i.shape,"Error in huberLoss: ");const l=we(s),u=Kt(de(i,r)),c=Fo(u,l),d=de(u,c),h=K(_(we(.5),at(c)),_(l,d));return Mr(h,o,a)}const EG=R({huberLoss_:TG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(t,e,n,s=1e-7,a=qn.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"labels","logLoss"),i=I(e,"predictions","logLoss");let o=null;n!=null&&(o=I(n,"weights","logLoss")),ns(r.shape,i.shape,"Error in logLoss: ");const l=we(1),u=we(s),c=yt(_(r,Ds(K(i,u)))),d=_(de(l,r),Ds(K(de(l,i),u))),h=de(c,d);return Mr(h,o,a)}const DG=R({logLoss_:RG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(t,e,n,s=qn.SUM_BY_NONZERO_WEIGHTS){const a=I(t,"labels","meanSquaredError"),r=I(e,"predictions","meanSquaredError");let i=null;n!=null&&(i=I(n,"weights","meanSquaredError")),ns(a.shape,r.shape,"Error in meanSquaredError: ");const o=Rv(a,r);return Mr(o,i,s)}const _G=R({meanSquaredError_:AG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OG(t,e){const n=I(t,"labels","sigmoidCrossEntropyWithLogits"),s=I(e,"logits","sigmoidCrossEntropyWithLogits");ns(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ar(s),r=_(s,n),i=Iy(hs(yt(Kt(s))));return K(de(a,r),i)}function FG(t,e,n,s=0,a=qn.SUM_BY_NONZERO_WEIGHTS){let r=I(t,"multiClassLabels","sigmoidCrossEntropy");const i=I(e,"logits","sigmoidCrossEntropy");let o=null;if(n!=null&&(o=I(n,"weights","sigmoidCrossEntropy")),ns(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=we(s),c=we(1),d=we(.5);r=K(_(r,de(c,u)),_(d,u))}const l=OG(r,i);return Mr(l,o,a)}const zG=R({sigmoidCrossEntropy_:FG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return zr((a,r,i)=>{const l=Ty(r,[n],!0),u=de(le(r,"float32"),l);i([a,u]);const c=yt(_(u,a));return{value:fe(c,[n]),gradFunc:(p,f)=>{const[m,y]=f,g=zt(p.shape,[n]);return[_(F(p,g),de(le(m,"float32"),hs(y))),_(F(p,g),de(hs(y),le(m,"float32")))]}}})(t,e)}function PG(t,e,n,s=0,a=qn.SUM_BY_NONZERO_WEIGHTS){let r=I(t,"onehotLabels","softmaxCrossEntropy");const i=I(e,"logits","softmaxCrossEntropy");let o=null;if(n!=null&&(o=I(n,"weights","softmaxCrossEntropy")),ns(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=we(s),c=we(1),d=we(r.shape[1]);r=K(_(r,de(c,u)),ge(u,d))}const l=LG(r,i);return Mr(l,o,a)}const MG=R({softmaxCrossEntropy_:PG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(t,e,n,s){const a=I(t,"indices","sparseFillEmptyRows","int32"),r=I(e,"values","sparseFillEmptyRows"),i=I(n,"denseShape","sparseFillEmptyRows","int32"),o=I(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:r,denseShape:i,defaultValue:o},u=A.runKernel(Uw,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const VG=R({sparseFillEmptyRows_:BG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(t,e,n){const s=I(t,"inputIndices","sparseReshape","int32"),a=I(e,"inputShape","sparseReshape","int32"),r=I(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},o=A.runKernel(Ww,i);return{outputIndices:o[0],outputShape:o[1]}}const WG=R({sparseReshape_:UG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(t,e,n){const s=I(t,"data","sparseSegmentMean"),a=I(e,"indices","sparseSegmentMean","int32"),r=I(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return A.runKernel(cy,i)}const HG=R({sparseSegmentMean_:GG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(t,e,n){const s=I(t,"data","sparseSegmentSum"),a=I(e,"indices","sparseSegmentSum","int32"),r=I(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return A.runKernel(dy,i)}const qG=R({sparseSegmentSum_:jG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(t,e,n,s,a,r,i,o){const l=I(t,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=I(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:u},h=A.runKernel(gy,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}const KG=R({stringNGrams_:XG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(t,e,n=!0){const s=I(t,"input","stringSplit","string"),a=I(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:n},i={input:s,delimiter:a},o=A.runKernel(Gw,i,r);return{indices:o[0],values:o[1],shape:o[2]}}const QG=R({stringSplit_:YG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(t,e){const n=I(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return A.runKernel(Hw,a,s)}const JG=R({stringToHashBucketFast_:ZG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(t,e,n,s=!0){const a=I(t,"input","staticRegexReplace","string"),r={pattern:e,rewrite:n,replaceGlobal:s};return A.runKernel(fy,{x:a},r)}const tH=R({staticRegexReplace_:eH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH={fft:Py,ifft:rh,rfft:My,irfft:Ev},sH={hammingWindow:EW,hannWindow:ZE,frame:JE,stft:_W},na={flipLeftRight:LW,grayscaleToRGB:MW,resizeNearestNeighbor:tR,resizeBilinear:eR,rgbToGrayscale:VW,rotateWithOffset:WW,cropAndResize:FW,nonMaxSuppression:HW,nonMaxSuppressionAsync:JW,nonMaxSuppressionWithScore:tG,nonMaxSuppressionWithScoreAsync:sG,nonMaxSuppressionPadded:rG,nonMaxSuppressionPaddedAsync:oG,threshold:hG,transform:fG},nR={bandPart:gG,gramSchmidt:bG,qr:wG},aH={absoluteDifference:CG,computeWeightedLoss:Mr,cosineDistance:NG,hingeLoss:IG,huberLoss:EG,logLoss:DG,meanSquaredError:_G,sigmoidCrossEntropy:zG,softmaxCrossEntropy:MG},rH={sparseFillEmptyRows:VG,sparseReshape:WG,sparseSegmentMean:HG,sparseSegmentSum:qG},iH={stringNGrams:KG,stringSplit:QG,stringToHashBucketFast:JG,staticRegexReplace:tH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH=new Map,lH=new Map;class _c{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class Ks{constructor(){this.classNameMap={}}static getMap(){return Ks.instance==null&&(Ks.instance=new Ks),Ks.instance}static register(e){Ks.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Z(t,e,n){N(t.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),N(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof n>"u"&&(n=t.className);const s=n,a=e+">"+s;return Ks.register(t),oH.set(a,t),lH.set(t,a),t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vi extends _c{minimize(e,n=!1,s){const{value:a,grads:r}=this.computeGradients(e,s);if(s!=null){const i=s.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(i)}else this.applyGradients(r);return _e(r),n?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return OV(e,n)}dispose(){this.iterations_!=null&&_e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Vi,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sR extends Vi{static get className(){return"Adadelta"}constructor(e,n,s=null){super(),this.learningRate=e,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s],i=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accum_grad`,variable:U(()=>We(r).variable(i))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${s}/accum_var`,variable:U(()=>We(r).variable(i))});const o=Array.isArray(e)?e[a].tensor:e[s];if(o==null)return;const l=this.accumulatedGrads[a].variable,u=this.accumulatedUpdates[a].variable;U(()=>{const c=K(_(l,this.rho),_(at(o),1-this.rho)),d=_(ge(Cn(K(u,this.epsilon)),Cn(K(l,this.epsilon))),o),h=K(_(u,this.rho),_(at(d),1-this.rho));l.assign(c),u.assign(h);const p=K(_(d,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_e(this.accumulatedGrads.map(e=>e.variable)),_e(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedUpdates=e.slice(n,n*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aR extends Vi{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accumulator`,variable:U(()=>Ec(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[a].tensor:e[s];if(i==null)return;const o=this.accumulatedGrads[a].variable;U(()=>{const l=K(o,at(i));o.assign(l);const u=K(_(ge(i,Cn(K(l,A.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_e(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rR extends Vi{static get className(){return"Adam"}constructor(e,n,s,a=null){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],U(()=>{this.accBeta1=we(n).variable(),this.accBeta2=we(s).variable()}),a==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);U(()=>{const s=de(1,this.accBeta1),a=de(1,this.accBeta2);n.forEach((r,i)=>{const o=A.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:U(()=>We(o).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:U(()=>We(o).variable(l))});const u=Array.isArray(e)?e[i].tensor:e[r];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,h=K(_(c,this.beta1),_(u,1-this.beta1)),p=K(_(d,this.beta2),_(at(u),1-this.beta2)),f=ge(h,s),m=ge(p,a);c.assign(h),d.assign(p);const y=K(_(ge(f,K(Cn(m),this.epsilon)),-this.learningRate),o);o.assign(y)}),this.accBeta1.assign(_(this.accBeta1,this.beta1)),this.accBeta2.assign(_(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&_e(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),U(()=>{this.accBeta1.assign(Fr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fr(this.beta2,this.iterations_+1))});const n=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iR extends Vi{static get className(){return"Adamax"}constructor(e,n,s,a=null,r=0){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],U(()=>{this.iteration=we(0).variable(),this.accBeta1=we(n).variable()}),a==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);U(()=>{const s=de(1,this.accBeta1),a=ge(-this.learningRate,K(_(this.iteration,this.decay),1));n.forEach((r,i)=>{const o=A.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:We(o).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:We(o).variable(l)});const u=Array.isArray(e)?e[i].tensor:e[r];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,h=K(_(c,this.beta1),_(u,1-this.beta1)),p=_(d,this.beta2),f=Kt(u),m=Pr(p,f);c.assign(h),d.assign(m);const y=K(_(ge(a,s),ge(h,K(m,this.epsilon))),o);o.assign(y)}),this.iteration.assign(K(this.iteration,1)),this.accBeta1.assign(_(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&_e(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mv extends Vi{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=Array.isArray(e)?e[a].tensor:e[s];if(r==null)return;const i=A.registeredVariables[s];U(()=>{const o=K(_(this.c,r),i);i.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=cn(we(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oR extends Mv{static get className(){return"Momentum"}constructor(e,n,s=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${s}/momentum`,variable:U(()=>We(r).variable(!1))});const i=this.accumulations[a].variable,o=Array.isArray(e)?e[a].tensor:e[s];o!=null&&U(()=>{let l;const u=K(_(this.m,i),o);this.useNesterov?l=K(_(this.c,K(o,_(u,this.m))),r):l=K(_(this.c,u),r),i.assign(u),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_e(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lR extends Vi{static get className(){return"RMSProp"}constructor(e,n=.9,s=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=s,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=A.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,a)=>{const r=A.registeredVariables[s],i=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${s}/rms`,variable:U(()=>We(r).variable(i))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${s}/momentum`,variable:U(()=>We(r).variable(i))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${s}/mg`,variable:U(()=>We(r).variable(i))});const o=Array.isArray(e)?e[a].tensor:e[s];if(o==null)return;const l=this.accumulatedMeanSquares[a].variable,u=this.accumulatedMoments[a].variable;U(()=>{const c=K(_(l,this.decay),_(at(o),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[a].variable,h=K(_(d,this.decay),_(o,1-this.decay)),p=ge(_(o,this.learningRate),Cn(de(c,K(at(h),this.epsilon)))),f=K(_(u,this.momentum),p);l.assign(c),d.assign(h),u.assign(f);const m=de(r,f);r.assign(m)}else{const d=K(_(l,this.decay),_(at(o),1-this.decay)),h=K(_(u,this.momentum),ge(_(o,this.learningRate),Cn(K(d,this.epsilon))));l.assign(d),u.assign(h);const p=de(r,h);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_e(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_e(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&_e(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedMoments=e.slice(n,n*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH=[sR,aR,rR,iR,oR,lR,Mv];function cH(){for(const t of uH)Z(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH="model",hH=".json",pH=".weights.bin";function R2(t){return new Promise(e=>setTimeout(e)).then(t)}class zo{constructor(e){if(!M().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(zo.URL_SCHEME)&&(e=e.slice(zo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=dH),this.modelJsonFileName=e+hH,this.weightDataFileName=e+pH}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=_a.join(e.weightData),s=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=MT(e,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await R2(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await R2(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ep(e)}}}}zo.URL_SCHEME="downloads://";class fH{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const s=new FileReader;s.onload=a=>{const r=JSON.parse(a.target.result),i=r.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=Qw(r,u=>this.loadWeights(u));e(l)},s.onerror=a=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const n=[],s=[];for(const i of e)n.push(...i.weights),s.push(...i.paths);const a=this.checkManifestAndWeightFiles(e),r=s.map(i=>this.loadWeightsFile(i,a[i]));return Promise.all(r).then(i=>[n,i])}loadWeightsFile(e,n){return new Promise((s,a)=>{const r=new FileReader;r.onload=i=>{const o=i.target.result;s(o)},r.onerror=i=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],s=this.weightsFiles.map(r=>I2(r.name)),a={};for(const r of e)r.paths.forEach(i=>{const o=I2(i);if(n.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),s.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);a[i]=this.weightsFiles[s.indexOf(o)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}const mH=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(zo.URL_SCHEME)?gH(t.slice(zo.URL_SCHEME.length)):null;Nt.registerSaveRouter(mH);function gH(t="model"){return new zo(t)}function yH(t){return new fH(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(t,e,n,s){i(t),n=n??0,s=s??1,o(n,s);let a=0;const r=l=>(l.then(u=>{const c=n+ ++a/t.length*(s-n);return e(c),u}),l);function i(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),N(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(t.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function uR(t,e){e==null&&(e={});const n=e.fetchFunc==null?M().platform.fetch:e.fetchFunc,s=t.map(d=>n(d,e.requestInit,{isBinary:!0})),o=(e.onProgress==null?await Promise.all(s):await D2(s,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(o):await D2(o,e.onProgress,.5,1)}function bH(t,e){var n;const s=e.fetchFunc==null?M().platform.fetch:e.fetchFunc;let a=0,r;return(n=e.onProgress)===null||n===void 0||n.call(e,0),new ReadableStream({pull:async i=>{for(var o;a<t.length;){r||(r=(await s(t[a],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await r.read();if(l){a++,r=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,a/t.length);continue}i.enqueue(u);return}i.close()}})}async function xH(t,e="",n,s){return cR(i=>uR(i,{requestInit:s}))(t,e,n)}function cR(t){return async(e,n="",s)=>{const a=e.map(()=>!1),r={},i=s!=null?s.map(()=>!1):[],o=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(y=>{const g="quantization"in y?y.quantization.dtype:y.dtype,b=Ro[g]*L(y.shape),x=()=>{a[f]=!0,r[f]==null&&(r[f]=[]),r[f].push({manifestEntry:y,groupOffset:m,sizeBytes:b})};s!=null?s.forEach((w,v)=>{w===y.name&&(x(),i[v]=!0)}):x(),o.push(y.name),m+=b})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=a.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});const c=await t(u),d={};let h=0;return l.forEach(p=>{const f=e[p].paths.length,m=new _a(c.slice(h,h+f));r[p].forEach(g=>{const b=m.slice(g.groupOffset,g.groupOffset+g.sizeBytes),x=FT(b,[g.manifestEntry]);for(const w in x)d[w]=x[w]}),h+=f}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH="application/octet-stream",vH="application/json";class Bv{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(N(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=M().platform.fetch,N(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&N(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=MT(e,s);if(n.body.append("model.json",new Blob([JSON.stringify(a)],{type:vH}),"model.json"),e.weightData!=null){const i=_a.join(e.weightData);n.body.append("model.weights.bin",new Blob([i],{type:wH}),"model.weights.bin")}const r=await this.fetch(this.path,n);if(r.ok)return{modelArtifactsInfo:Ep(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=n.modelTopology,a=n.weightsManifest;if(s==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Qw(e,n=>this.loadWeights(n))}async loadStream(){const e=await this.loadModelJSON(),n=await this.getWeightUrls(e.weightsManifest),s=q0(e.weightsManifest),a=()=>bH(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:a})}async getWeightUrls(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,a]=SH(n),r=this.weightPathPrefix||s,i=[],o=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):i.push(r+u+a);return this.weightUrlConverter&&i.push(...await Promise.all(o)),i}async loadWeights(e){const n=await this.getWeightUrls(e),s=q0(e),a=await uR(n,this.loadOptions);return[s,a]}}Bv.URL_SCHEME_REGEX=/^https?:\/\//;function SH(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),a=n>e?t.substring(n):"";return[s+"/",a]}function e1(t){return t.match(Bv.URL_SCHEME_REGEX)!=null}const dR=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(s=>e1(s)):n=e1(t),n)return Vv(t,e)}return null};Nt.registerSaveRouter(dR);Nt.registerLoadRouter(dR);function Vv(t,e){return new Bv(t,e)}function CH(t,e){return Vv(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $x{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class hR{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class $H{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function NH(t,e,n,s){const a=arguments;return new $H(pR(...a))}function pR(t,e,n,s){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new $x(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $x({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $x({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:s}))}function kH(t){return new hR(t)}function IH(t){return new hR(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:_a,browserFiles:yH,browserHTTPRequest:CH,concatenateArrayBuffers:PT,copyModel:EM,decodeWeights:FT,decodeWeightsStream:LT,encodeWeights:j0,fromMemory:NH,fromMemorySync:pR,getLoadHandlers:mM,getModelArtifactsForJSON:Qw,getModelArtifactsForJSONSync:BT,getModelArtifactsInfoForJSON:Ep,getSaveHandlers:VT,getWeightSpecs:q0,http:Vv,isHTTPScheme:e1,listModels:IM,loadWeights:xH,moveModel:RM,registerLoadRouter:fM,registerSaveRouter:pM,removeModel:TM,weightsLoaderFactory:cR,withSaveHandler:kH,withSaveHandlerSync:IH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xi;function TH(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,a=!1,r=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&t instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)r=!0;else if(t.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&t instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(M0(Em,A.backendName)!=null){const f={pixels:t},m={numChannels:e};return A.runKernel(Em,f,m)}const[u,c]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let d;if(i)d=t.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)d=t.data;else if(r||a||o){if(Xi==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Xi=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Xi=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Xi.canvas.width=u,Xi.canvas.height=c,Xi.drawImage(t,0,0,u,c),d=Xi.getImageData(0,0,u,c).data}let h;if(e===4)h=new Int32Array(d);else{const f=u*c;h=new Int32Array(f*e);for(let m=0;m<f;m++)for(let y=0;y<e;++y)h[m*e+y]=d[m*4+y]}return VE(h,[c,u,e],"int32")}const EH=R({fromPixels_:TH});function jy(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(L(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const a=e.shape,r=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=t.shape,l=a.slice();l.pop();let u=1;for(let d=r;d<n;++d)u*=o[d],l.push(o[d]);const c=[...be(t.shape).map(d=>d/u),1].slice(0,r);return[l,i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t1=-2,RH=-1;function qy(t,e,n){const s=t.shape.length;N(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),N(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)N(e[a]+n[a]<=t.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${e[a]+n[a]}) would overflow input.shape[${a}] (${t.shape[a]})`)}function DH(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function Xy(t,e,n){const s=[];for(let a=0;a<t.length;a++)s[a]=Math.ceil((e[a]-t[a])/n[a]);return s}function mR(t,e,n,s){const a=[...t];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<n;r++)r===0?a[e]=1:(a.splice(e,0,1),a.pop());return a}function gR(t,e,n){return n<=t?n:n-(e-1)}function yR(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function AH(t,e,n,s,a,r,i,o,l){const u=t.length;let c=new Array(u),d=new Array(u),h=new Array(u);if(e.length&&n>0){const p=e[0],f=n+1;c=bR(i,p,f,s,t),d=xR(o,p,f,a,t),h=mR(r,p,f,t)}else for(let p=0;p<u;p++)c[p]=vR(i,s,r,t,p,l),d[p]=SR(o,a,r,t,p,l),h[p]=wR(r,p,l);return{begin:c,end:d,strides:h}}function bR(t,e,n,s,a){const r=[...a],i=yR(n,e);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=0;else{const l=gR(e,n,o);let u=s[l];t&1<<l&&(u=0),r[o]=u}return r}function xR(t,e,n,s,a){const r=[...a],i=yR(n,e);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=Number.MAX_SAFE_INTEGER;else{const l=gR(e,n,o);let u=s[l];t&1<<l&&(u=Number.MAX_SAFE_INTEGER),r[o]=u}for(let o=0;o<r.length;o++){const l=a[o];r[o]<0&&(r[o]+=l),r[o]=To(0,r[o],a[o])}return r}function wR(t,e,n){let s=t[e];return(n&1<<e||s==null)&&(s=1),s}function vR(t,e,n,s,a,r){let i=e[a];const o=n[a]||1;(t&1<<a||r&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=To(0,i,l-1),i}function SR(t,e,n,s,a,r){let i=e[a];const o=n[a]||1;(t&1<<a||r&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),o>0?i=To(0,i,l):i=To(-1,i,l-1),i}function Uv(t,e,n){let s=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){s=a;break}for(let a=s+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function Wv(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function zp(t,e,n){let s;const a=t.shape.length;typeof e=="number"?s=[e,...new Array(a-1).fill(0)]:e.length<a?s=e.concat(new Array(a-e.length).fill(0)):s=e.slice(),s.forEach(i=>{N(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return n==null?r=new Array(a).fill(-1):typeof n=="number"?r=[n,...new Array(a-1).fill(-1)]:n.length<a?r=n.concat(new Array(a-n.length).fill(-1)):r=n,r=r.map((i,o)=>i>=0?i:(N(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),t.shape[o]-s[o])),[s,r]}function Ky(t,e,n,s,a,r,i,o,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let x=0;x<d.dims;x++)c&&1<<x&o&&d.numAddAxisAfterEllipsis++,1<<x&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};_H(d,h);let p=!0,f=!0,m=!0;const y=[],g=[];for(let x=0;x<t.length;++x){if(h.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);const w=!!(h.shrinkAxisMask&1<<x),v=t[x];if(v===-1){y.push(w?1:-1);continue}const C=[h.beginMask&1<<x,h.endMask&1<<x],$=[h.strides[x]>0?0:-1,h.strides[x]>0?v:v-1];if(w&&h.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[x]===1;const k=!!(h.beginMask&1<<x&&h.endMask&1<<x);if(h.beginValid&&h.endValid){if(w){const B=h.begin[x]<0?v+h.begin[x]:h.begin[x];if(h.begin[x]=B,h.end[x]=h.begin[x]+1,B<0||B>=v)throw Error(`slice index ${h.begin[x]} of dimension ${x} out of bounds.`)}else h.begin[x]=A2(h.begin[x],0,h.strides[x],v,C,$),h.end[x]=A2(h.end[x],1,h.strides[x],v,C,$);const O=h.strides[x]===1&&h.begin[x]===0&&h.end[x]===v;p=p&&O,f=f&&(x===0&&h.strides[x]===1||O)}else p=p&&h.strides[x]===1&&k,f=f&&(x===0&&h.strides[x]===1||k);let T,E=!1;if(h.beginValid&&h.endValid?(T=h.end[x]-h.begin[x],E=!0):w?(T=1,E=!0):k&&v>=0&&(h.strides[x]<0?T=-v:T=v,E=!0),E){let O;T===0||T<0!=h.strides[x]<0?O=0:O=Math.trunc(T/h.strides[x])+(T%h.strides[x]!==0?1:0),y.push(O)}else y.push(-1)}for(let x=0;x<h.finalShapeGatherIndices.length;++x){const w=h.finalShapeGatherIndices[x];w>=0?g.push(y[w]):w===t1&&g.push(1)}return{finalShapeSparse:g.filter((x,w)=>h.finalShapeGatherIndices[w]!==t1),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function _H(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const a=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<a;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(t1),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[s]),t.end!=null&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(RH),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}function A2(t,e,n,s,a,r){if(a[e])return n>0?r[e]:r[e+1&1];{const i=t<0?s+t:t;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const OH=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:qy,computeFlatOffset:Wv,computeOutShape:Xy,getNormalizedAxes:AH,isSliceContinous:Uv,maskToAxes:DH,parseSliceParams:zp,sliceInfo:Ky,startForAxis:vR,startIndicesWithElidedDims:bR,stopForAxis:SR,stopIndicesWithElidedDims:xR,stridesForAxis:wR,stridesWithElidedDims:mR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FH{static sgd(e){return new Mv(e)}static momentum(e,n,s=!1){return new oR(e,n,s)}static rmsprop(e,n=.9,s=0,a=null,r=!1){return new lR(e,n,s,a,r)}static adam(e=.001,n=.9,s=.999,a=null){return new rR(e,n,s,a)}static adadelta(e=.001,n=.95,s=null){return new sR(e,n,s)}static adamax(e=.002,n=.9,s=.999,a=null,r=0){return new iR(e,n,s,a,r)}static adagrad(e,n=.1){return new aR(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yl=FH;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t();function CR(){return new Promise(t=>zH(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yy(t,e){const n=t[0].length;t.forEach((a,r)=>{N(a.length===n,()=>`Error in concat${n}D: rank of tensors[${r}] must be the same as the rank of the rest (${n})`)}),N(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=t[0];t.forEach((a,r)=>{for(let i=0;i<n;i++)N(i===e||a[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Qn(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var wa;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(wa||(wa={}));function $R(t,e,n){let s=new Array;if(n==null&&e==null)return s;if(e==null)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(n==null)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let a=1;a<n.length;++a){const r=n[a],i=s[s.length-n.length+a],o=s[i];if(r>=0)if(o>=0){if(o!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${a+t}] = ${r} but shape[${a+t}] = ${o}`)}else s[i]=r}return s}function NR(t){const e={FIRST_DIM_SIZE:wa.FIRST_DIM_SIZE,VALUE_ROWIDS:wa.VALUE_ROWIDS,ROW_LENGTHS:wa.ROW_LENGTHS,ROW_SPLITS:wa.ROW_SPLITS,ROW_LIMITS:wa.ROW_LIMITS,ROW_STARTS:wa.ROW_STARTS},n=[];for(const s of t)if(s in e)n.push(e[s]);else break;return n}function kR(t){return t.length===0?0:t[0]===wa.FIRST_DIM_SIZE?t.length-1:t.length}function IR(t,e){if(t==null||e==null)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(n,s-1);++a){const r=t[a],i=e[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${a-t.length}] = ${r} but ragged tensor input.flatValues.shape[${a-t.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gv=30;function Qy(t){return t<=Gv?t:L0(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(t,e,n){const s=n*(typeof t=="number"?t:t[0]),a=e*(typeof t=="number"?t:t[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(t,e,n,s=!0){let a=[];if(s)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const r=e.length;for(let i=0;i<r;++i)a=a.concat([t[i+1]/e[i],e[i]]);a=a.concat(t.slice(r+1))}return a}function al(t,e,n=!0){const s=[];if(n){s.push(e);for(let a=e+1;a<t;++a)a<=2*e?(s.push(a),s.push(a-(e+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<t;++i)i>=e*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function rl(t,e,n,s=!0){const a=[];s?a.push(t[0]/n):a.push(t[0]*n);for(let r=1;r<t.length;++r)r<=e.length?s?a.push(e[r-1]*t[r]):a.push(t[r]/e[r-1]):a.push(t[r]);return a}function Jy(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function eb(t,e,n){const s=t.slice(0,1);for(let a=0;a<n;++a)s.push(t[a+1]-e[a][0]-e[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lp=1.7580993408473768,Pp=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tb=.3275911,nb=.254829592,sb=-.284496736,ab=1.421413741,rb=-1.453152027,ib=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function TR(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function ER(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],s[Math.floor(a/4)]=t[a+1];return{real:n,imag:s}}function RR(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],s[Math.floor(a/4)]=t[a+1];return{real:n,imag:s}}function Hv(t,e){const n=t[e*2],s=t[e*2+1];return{real:n,imag:s}}function DR(t,e,n,s){t[s*2]=e,t[s*2+1]=n}function AR(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const r=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:n,imag:s}}function _R(t,e,n){const s=(n?2:-2)*Math.PI*(t/e),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nx="->",LH=/->/g,_2=",",O2="...";function ob(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(LH,"").length)/Nx.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Nx}").`);const[s,a]=t.split(Nx);N(s.indexOf(O2)===-1,()=>`The ellipsis notation ("${O2}") is not supported yet.`);const r=s.split(_2),i=r.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<a.length;++h){const p=a[h];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let h=0;h<s.length;++h){const p=s[h];o.indexOf(p)===-1&&p!==_2&&o.push(p)}const l=new Array(r.length);for(let h=0;h<i;++h){if(new Set(r[h].split("")).size!==r[h].length)throw new Error(`Found duplicate axes in input component ${r[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<r[h].length;++p)l[h].push(o.indexOf(r[h][p]))}const u=o.length,c=a.length,d=[];for(let h=c;h<u;++h)d.push(h);return{allDims:o,summedDims:d,idDims:l}}function lb(t,e){let n=new Array(t);n.fill(-1);for(let a=0;a<e.length;++a)n[e[a]]=a;const s=[];for(let a=0;a<t;++a)n[a]===-1&&s.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:s}}function ub(t,e,n){const s=new Array(t);for(let a=0;a<n.length;++a){const r=n[a].shape;for(let i=0;i<e[a].length;++i)s[e[a][i]]===void 0?s[e[a][i]]=r[i]:N(s[e[a][i]]===r[i],()=>`Expected dimension ${s[e[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function cb(t,e){const n=t,s=[];let a=0;t.length===0&&n.push(-1),a=t.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<n.length;++i){const o=n[i],l=PH(e,o);for(const u of l)r.indexOf(u)===-1&&(s[i].push(u),r.push(u))}return{path:n,steps:s}}function db(t){return t.every((e,n)=>e===n)}function PH(t,e){const n=[];for(let s=0;s<t.length;++s)(t[s].length===0||t[s].indexOf(e)!==-1||e===-1)&&n.push(s);return n}function hb(t,e,n=0){let s=[];if(typeof e=="number")N(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((i,o)=>(o===-1&&(i+=1),i),0);N(a<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const i=e.reduce((o,l)=>l>0?o+l:o);e[r]=t.shape[n]-i}N(t.shape[n]===e.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function FR(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function zR(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function PR(t,e){return`size ${t} must be non-negative, not ${e}`}function MR(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function BR(t,e){const n=L(t),s=L(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${t} outputShape= ${e}`}function VR(t,e){const n=L(t),s=L(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1(){return"segment ids must be >= 0"}function UR(){return"segment ids are not increasing"}function WR(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function GR(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(t,e){let n=!1,s;for(t<=Gv?(s=t,n=!0):s=L0(t,Math.floor(Math.sqrt(t)));!n;)s>e||s===t?n=!0:s=L0(t,s+1);return s}function jv(t,e,n){const s=[],a=t.length;for(let r=0;r<a;r++)r!==e?s.push(t[r]):s.push(n);return s}function pb(t,e,n,s){const a=e.shape.length,r=t.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(t.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${t.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const i=t.shape[n],o=[];let l=1,u=1,c=1;for(let d=0;d<s;++d)o.push(t.shape[d]),l*=t.shape[d];for(let d=s;d<n;d++)o.push(t.shape[d]),u*=t.shape[d];for(let d=s;d<a;d++)o.push(e.shape[d]);for(let d=n+1;d<r;d++)o.push(t.shape[d]),c*=t.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}const MH=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:pb,computeOutShape:jv,segOpComputeOptimalWindowSize:HR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ia(t){try{return t.map(e=>$a(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function jR(t){return t.map(e=>kr(e))}const BH=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:nb,ERF_A2:sb,ERF_A3:ab,ERF_A4:rb,ERF_A5:ib,ERF_P:tb,PARALLELIZE_THRESHOLD:Gv,get RowPartitionType(){return wa},SELU_SCALE:Pp,SELU_SCALEALPHA:Lp,applyActivation:Uy,assertAndGetBroadcastShape:Se,assertAxesAreInnerMostDims:jt,assertParamsConsistent:Yy,assignToTypedArray:DR,axesAreInnerMostDims:ov,calculateShapes:rr,checkEinsumDimSizes:ub,checkPadOnDimRoundingMode:Vn,combineLocations:vE,combineRaggedTensorToTensorShapes:$R,complexWithEvenIndex:ER,complexWithOddIndex:RR,computeConv2DInfo:dt,computeConv3DInfo:Oa,computeDefaultPad:ev,computeDilation2DInfo:Pi,computeOptimalWindowSize:Qy,computeOutAndReduceShapes:Vt,computeOutShape:Qn,computePool2DInfo:Rn,computePool3DInfo:Os,convertConv2DDataFormat:xs,decodeEinsumEquation:ob,eitherStridesOrDilationsAreOne:an,expandShapeToKeepDim:zt,exponent:_R,exponents:AR,fromStringArrayToUint8:jR,fromUint8ToStringArray:Ia,getAxesPermutation:tt,getBroadcastDims:ki,getComplexWithIndex:Hv,getEinsumComputePath:cb,getEinsumPermutation:lb,getFusedBiasGradient:Vy,getFusedDyActivation:By,getImageCenter:Zy,getInnerMostAxes:ht,getPermuted:al,getRaggedRank:kR,getReductionAxes:sn,getReshaped:sl,getReshapedPermuted:rl,getRowPartitionTypesHelper:NR,getSliceBeginCoords:Jy,getSliceSize:eb,getSparseFillEmptyRowsIndicesDenseShapeMismatch:OR,getSparseFillEmptyRowsNegativeIndexErrorMessage:FR,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:zR,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:MR,getSparseReshapeInputOutputMismatchErrorMessage:VR,getSparseReshapeInputOutputMultipleErrorMessage:BR,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:LR,getSparseReshapeNegativeOutputDimErrorMessage:PR,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:GR,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:n1,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:UR,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:WR,getUndoAxesPermutation:sr,isIdentityPermutation:db,log:TP,mergeRealAndImagArrays:ka,prepareAndValidate:jy,prepareSplitSize:hb,segment_util:MH,shouldFuse:Wy,slice_util:OH,splitRealAndImagArrays:TR,stridesOrDilationsArePositive:_o,tupleValuesAreOne:$i,upcastType:pn,validateDefaultValueShape:IR,validateInput:Dv,validateUpdateShape:UE,warn:Ns},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cH();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qR={kernelName:Th,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,Dc(le(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:Ou,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=at(le(n,"float32")),a=Cn(de(we(1),s));return yt(ge(t,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:Fu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Cn(de(at(le(n,"float32")),1));return ge(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={kernelName:Yo,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{let o=t;const l=sn(n.shape,a);return l.length>0&&(o=fe(o,l)),F(o,n.shape)},b:()=>{let o=t;const l=sn(s.shape,a);return l.length>0&&(o=fe(o,l)),F(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH={kernelName:Eh,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((s,a)=>{n[a]=()=>t.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:Rh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>We(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:Dh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>We(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:zu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,Cn(de(we(1),at(le(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH={kernelName:Lu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Cn(K(we(1),at(le(n,"float32"))));return ge(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH={kernelName:Bu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=K(at(n),at(s));let l=_(t,ge(s,o));const u=sn(n.shape,a);return u.length>0&&(l=fe(l,u)),F(l,n.shape)},b:()=>{const o=K(at(n),at(s));let l=yt(_(t,ge(n,o)));const u=sn(s.shape,a);return u.length>0&&(l=fe(l,u)),F(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH={kernelName:Pu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,K(at(le(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:Mu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,de(we(1),at(le(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(t,e,n,s,a,r){const i=I(t,"dy","avgPool3dGrad"),o=I(e,"input","avgPool3dGrad");let l=i,u=o,c=!1;o.rank===4&&(c=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Vn("avgPool3dGrad",a,r);const d={dy:l,input:u},h={filterSize:n,strides:s,pad:a,dimRoundingMode:r},p=A.runKernel(kg,d,h);return c?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const JH=R({avgPool3dGrad_:ZH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:_h,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:a,strides:r,pad:i,dimRoundingMode:o}=n;return{x:()=>JH(t,s,a,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(t,e,n,s,a){const r=I(t,"dy","avgPoolGrad"),i=I(e,"input","avgPoolGrad");N(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let o=i,l=r,u=!1;i.rank===3&&(u=!0,o=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=F(r,[1,r.shape[0],r.shape[1],r.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},d={filterSize:n,strides:s,pad:a},h=A.runKernel(Ng,c,d);return u?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const n6=R({avgPoolGrad_:t6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:Ah,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:a,strides:r,pad:i}=n;return{x:()=>n6(t,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6={kernelName:Oh,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,a]=e,{transposeA:r,transposeB:i}=n;return!r&&!i?{a:()=>Pe(t,a,!1,!0),b:()=>Pe(s,t,!0,!1)}:!r&&i?{a:()=>Pe(t,a,!1,!1),b:()=>Pe(t,s,!0,!1)}:r&&!i?{a:()=>Pe(a,t,!1,!0),b:()=>Pe(s,t,!1,!1)}:{a:()=>Pe(a,t,!0,!0),b:()=>Pe(t,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:Fh,gradFunc:(t,e,n)=>{const{blockShape:s,crops:a}=n;return{x:()=>Ay(t,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:kP,gradFunc:(t,e,n)=>{const s=n,a=s.inputShape,r=s.shape,i=Array.from(r);for(let l=a.length-1;l>=0;l--)if(a[l]===r[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>fe(t,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={kernelName:Vu,gradFunc:t=>({x:()=>t.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:Uu,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:Wu,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:a,clipValueMax:r}=n;return{x:()=>En(Qa(Mi(s,a),Jo(s,r)),t,We(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:zh,inputsToSave:["x"],gradFunc:qR.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6={kernelName:Lh,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map(l=>l.shape),{axis:a}=n,r=Ie(a,e[0].shape)[0],i=s.map(l=>l[r]);return us(t,i,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6={kernelName:Ph,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,a]=e,{dilations:r,strides:i,pad:o,dataFormat:l}=n;return N($i(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>nv(s.shape,t,a,i,o,l),filter:()=>zv(s,t,a.shape,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:Mh,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,a]=e,{strides:r,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ni(t,a,r,i,o,1,l),filter:()=>zv(t,s,a.shape,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(t,e,n,s,a){let r=t;t.rank===4&&(r=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;i.rank===4&&(i=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),N(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),N(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),N(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),N(r.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${n[3]}.`),N(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:r,dy:i},l={strides:s,pad:a,filterShape:n};return A.runKernel(Ag,o,l)}const m6=R({conv3DBackpropFilter_:f6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6={kernelName:Bh,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:a,pad:r}=n;N($i(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,o]=e;return{x:()=>mE(i.shape,t,o,a,r),filter:()=>m6(i,t,o.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:Gu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(yt(kv(le(n,"float32"))),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:Hu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(Iv(le(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:Vh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:a,exclusive:r,reverse:i}=n;return{x:()=>{const o=tt([a],s.rank);let l=rv(t,a,r,!i);return o!=null&&(l=Ue(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6={kernelName:Uh,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=n,o=s??[1,1];N($i(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),N(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),N(an(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),Vn("depthwiseConv2d",r,i),{x:()=>QE(l.shape,t,u,a,r,o,i),filter:()=>YE(l,t,u.shape,a,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:Wh,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,a]=e,r={x:s,filter:a,dy:t},i={x:s,filter:a,dy:t};return{x:()=>A.runKernel(Im,r,n),filter:()=>A.runKernel(Tm,i,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:qu,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>A.runKernel(Ug,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6={kernelName:Xu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=_(hs(yt(at(n))),2/Math.sqrt(Math.PI));return{x:()=>_(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:Ku,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:Hh,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>F(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:Yu,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,hs(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:Qu,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6={kernelName:Zu,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=ge(t,le(s,"float32")),l=sn(n.shape,a);return l.length>0?F(fe(o,l),n.shape):o},b:()=>{let o=_(t,le(n,"float32"));const l=sn(s.shape,a);l.length>0&&(o=F(fe(o,l),s.shape));const u=at(s);return yt(ge(o,le(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6={kernelName:jh,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[a,r,i,o]=e,l=o??we(1),u=sn(r.shape,a.shape),c=[];if(r.rank===1){for(let w=0;w<a.shape.length-1;++w)c.push(a.shape[w]);c.push(1)}const d=de(a,r),h=_(t,l),p=Cv(K(i,we(s))),f=_(_(_(p,p),p),we(-.5));return{x:()=>r.rank===1?F(_(_(t,ta(F(p,[1,1,1,r.shape[0]]),c)),l),a.shape):F(_(_(t,p),l),a.shape),mean:()=>{let w=_(_(p,we(-1)),h);return r.rank===1&&(w=fe(w,u)),F(w,r.shape)},variance:()=>{let w=_(_(f,d),h);return r.rank===1&&(w=fe(w,u)),F(w,r.shape)},scale:()=>{const w=_(d,p);let v=_(t,w);return r.rank===1&&(v=fe(v,u)),F(v,r.shape)},offset:()=>{let w=t;return r.rank===1&&(w=fe(w,u)),F(w,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:qh,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,a]=e,{axis:r,batchDims:i}=n,o=Ie(r,s.shape)[0],l=(u,c,d)=>()=>{const h=u.shape,p=c.size,f=h.slice(0,o),m=f.length,y=h.slice(r,h.length).slice(1),g=y.length,b=F2(0,m),x=F2(m+1,m+1+g),w=z2([f,[p],y]),v=F(d,w),C=F(c,[p]),$=z2([[m],b,x]),k=Ue(v,$);let T=_v(k,C,u.shape[o]);const E=sr($);return T=Ue(T,E),T};if(i===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>ps(c.map((p,f)=>l(p,a.slice(f,1),t.slice(f,1))())).reshape(s.shape),indices:()=>a}}else return{x:l(s,a,t),indices:()=>a}}};function F2(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function z2(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:Ju,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>We(n),b:()=>We(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:ec,gradFunc:t=>({x:()=>le(t,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:tc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:nc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:sc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6={kernelName:Kh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:a}=n,r=ws(s,0);return{x:()=>En(r,t,_(t,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6={kernelName:rc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,K(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:ac,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,le(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:IP,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:a}=n;return{logits:()=>{const i=hs(s);return de(t,_(fe(t,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B6(t,e,n,s=5,a=1,r=1,i=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:a,alpha:r,beta:i};return A.runKernel(Yg,o,l)}const V6=R({localResponseNormalizationBackprop_:B6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6={kernelName:tp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,a]=e,{depthRadius:r,bias:i,alpha:o,beta:l}=n;return{x:()=>V6(s,a,t,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(t,e,n,s){return e.rank<n.rank&&(e=F(e,zt(e.shape,s))),t.rank<n.rank&&(t=F(t,zt(t.shape,s))),{x:()=>_(t,le(Na(n,e),t.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L2={kernelName:np,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:a}=s,r=e[0],i=e[1],o=Ie(a,r.shape),l=XR(t,i,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6={kernelName:ic,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>_(t,le(Mi(n,s),"float32")),b:()=>_(t,le(nh(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(t,e,n,s,a,r,i){const o=I(t,"dy","maxPool3dGrad"),l=I(e,"input","maxPool3dGrad"),u=I(n,"output","maxPool3dGrad");let c=o,d=l,h=u,p=!1;l.rank===4&&(p=!0,c=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=F(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),N(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),N(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),N(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Vn("maxPool3dGrad",r,i);const f={dy:c,input:d,output:h},m={filterSize:s,strides:a,pad:r,dimRoundingMode:i},y=A.runKernel(Zg,f,m);return p?F(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const H6=R({maxPool3dGrad_:G6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:ap,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,a]=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>H6(t,s,a,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(t,e,n,s,a,r,i){const o=I(t,"dy","maxPoolGrad"),l=I(e,"input","maxPoolGrad"),u=I(n,"output","maxPoolGrad");N(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),N(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Vn("maxPoolGrad",r,i);const c={dy:o,input:l,output:u},d={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return A.runKernel(Qg,c,d)}const X6=R({maxPoolGrad_:q6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:sp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,a]=e,{filterSize:r,strides:i,pad:o}=n;return{x:()=>X6(t,s,a,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6={kernelName:rp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:a}=n,r=Ie(a,s.shape),o=Vt(s.shape,r)[1],l=L(o);return{x:()=>{const c=s.shape.slice();r.forEach(p=>{c[p]=1});const d=F(t,c);return ge(_(d,Kn(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:ip,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:a}=s,[r,i]=e,o=Ie(a,r.shape),l=XR(t,i,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6={kernelName:oc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>_(t,le(Jo(n,s),"float32")),b:()=>_(t,le(ws(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:op,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:a}=n,r=a.map(i=>i[0]);return{x:()=>Ve(t,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:lc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=sn(n.shape,a);return o.length>0?F(fe(t,o),n.shape):t},b:()=>{const o=_(t,yt(Op(ge(n,s)))),l=sn(s.shape,a);return l.length>0?F(fe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:uc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=_(t,le(s,"float32")),l=sn(n.shape,a);return l.length>0?F(fe(o,l),n.shape):o},b:()=>{const o=_(t,le(n,"float32")),l=sn(s.shape,a);return l.length>0?F(fe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:lp,gradFunc:t=>({x:()=>yt(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:dp,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Ht(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:cp,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:hp,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return da(t,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P2={kernelName:pp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:a}=n,r=a.map(i=>i[0]);return{x:()=>Ve(t,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:cc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,a]=e,r=n,i=s,o=Se(r.shape,i.shape);return{a:()=>{const c=le(i,"float32");let d=_(t,_(c,Fr(r,de(c,we(1)))));const h=sn(r.shape,o);return h.length>0&&(d=fe(d,h)),F(d,r.shape)},b:()=>{const c=ws(r,0),d=En(c,Ds(r),We(r));let h=_(t,_(a,d));const p=sn(i.shape,o);return p.length>0&&(h=fe(h,p)),F(h,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:fp,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,a=ws(n,0);return{x:()=>En(a,t,_(t,s)),alpha:()=>{let r=En(a,We(t),_(t,n));const i=sn(s.shape,t.shape);return i.length>0&&(r=fe(r,i)),F(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(t,e,n){const s=t.shape.slice();s[n]=1;const a=F(e,s),r=Fm(t,n,!0,!1),i=Fm(t,n,!0,!0),o=_(r,i);return _(a,o)}function uj(t,e,n){const s=t.shape.length,a=s-n.length,r=tt(n,s);let i=t;r!=null&&(i=Ue(t,r));const o=i.shape.slice(),u=o.splice(s-n.length,n.length).reduce((h,p)=>h*p,1);o.push(u);const c=i.reshape(o);let d=lj(c,e,a);if(d=d.reshape(i.shape),r!=null){const h=sr(r);d=Ue(d,h)}return d}const cj={kernelName:mp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:a}=n;let r=[];return a==null?r=s.shape.map((i,o)=>o):typeof a=="number"?r=[a]:r=a,{x:()=>uj(s,t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:ju,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{const o=ge(t,le(s,"float32")),l=sn(n.shape,a);return l.length>0?F(fe(o,l),n.shape):o},b:()=>{let o=_(t,le(n,"float32"));const l=sn(s.shape,a);l.length>0&&(o=F(fe(o,l),s.shape));const u=at(s);return yt(ge(o,le(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,yt(at(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:pc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=_(Jo(n,6),Dc(n));return{x:()=>_(t,le(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:hc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,le(Dc(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:gp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>F(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:bp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,a={dy:t,images:s};return{images:()=>A.runKernel(iy,a,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj={kernelName:yp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,a={dy:t,images:s};return{images:()=>A.runKernel(ry,a,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj={kernelName:xp,gradFunc:(t,e,n)=>{const{dims:s}=n,a=Ie(s,t.shape);return{x:()=>ca(t,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj={kernelName:fc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj={kernelName:mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yt(ge(t,_(Fr(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj={kernelName:wp,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>le(We(n),"float32"),t:()=>_(t,le(n,t.dtype)),e:()=>_(t,le(Ey(n),t.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj={kernelName:gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=ws(n,we(0)),a=we(Lp),r=we(Pp),i=_(t,r),o=_(_(t,a),hs(le(n,"float32")));return En(s,i,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj={kernelName:wc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,_(n,de(we(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $j={kernelName:xc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj={kernelName:yc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_($y(le(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj={kernelName:bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(av(le(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij={kernelName:vp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:a,size:r}=n,i=s.shape,[o,l]=zp(s,a,r),u=[];for(let c=0;c<t.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>Bi(t,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tj={kernelName:Np,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:a}=n,r=!0,i=_(t,s);return{logits:()=>de(i,_(fe(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ej={kernelName:vc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,qa(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M2={kernelName:Cp,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:a}=n;return{x:()=>Cy(t,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B2={kernelName:$p,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Bt(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rj={kernelName:Sc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,_(Cn(le(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj={kernelName:py,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(t,_(le(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aj={kernelName:Cc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=we(2);return{a:()=>_(t,_(a,de(n,s))),b:()=>_(t,_(a,de(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j={kernelName:Tc,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oj={kernelName:$c,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,a=Se(n.shape,s.shape);return{a:()=>{let o=t;const l=sn(n.shape,a);return l.length>0&&(o=fe(o,l)),F(o,n.shape)},b:()=>{let o=t;const l=sn(s.shape,a);return l.length>0&&(o=fe(o,l)),F(yt(o),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj={kernelName:Sp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,a=s.shape.slice(),{axis:r}=n;Ie(r,s.shape).forEach(u=>{a[u]=1});const o=F(t,a),l=_(o,Kn(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj={kernelName:Nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ge(t,at($y(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lj={kernelName:kc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_(de(we(1),at(n)),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj={kernelName:Ic,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:a}=n;return{x:()=>{let i=We(s);if(s.rank===1)for(let o=0;o<a[0];++o)i=K(i,Ve(t,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)i=K(i,Ve(t,[o*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)for(let u=0;u<a[2];++u)i=K(i,Ve(t,[o*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)for(let u=0;u<a[2];++u)for(let c=0;c<a[3];++c)i=K(i,Ve(t,[o*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj={kernelName:xo,gradFunc:(t,e,n)=>{const s=n,{perm:a}=s,r=sr(a);return{x:()=>Ue(t,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj={kernelName:kp,gradFunc:(t,e,n)=>{const s=n,{axis:a}=s;return{value:()=>ps(t,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj={kernelName:Ip,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uj(t,n)}}};function Uj(t,e){const n=Pr(e,We(e)),s=Fp(t,n);let a=Mi(e,we(0,"int32"));const r=s.rank-a.rank;for(let o=0;o<r;++o)a=Fn(a,o+1);a=Qa(a,Kn(s.shape,"bool"));const i=We(s);return En(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj={kernelName:Tp,gradFunc:t=>({x:()=>We(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gj=[qR,VH,UH,WH,GH,HH,jH,qH,XH,KH,YH,QH,e6,s6,a6,r6,i6,o6,l6,u6,c6,d6,p6,h6,g6,y6,b6,x6,w6,v6,dj,S6,C6,$6,N6,k6,T6,I6,E6,R6,D6,A6,_6,O6,F6,z6,L6,P6,M6,U6,L2,L2,W6,j6,K6,Y6,Q6,Z6,J6,ej,tj,nj,sj,aj,rj,P2,P2,ij,oj,cj,hj,pj,fj,mj,gj,yj,bj,xj,wj,vj,Sj,Cj,$j,Nj,kj,Ij,Tj,Ej,M2,M2,B2,B2,Rj,Aj,Dj,_j,Oj,Fj,zj,Lj,Pj,Mj,Bj,Vj,Wj];for(const t of Gj)EP(t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.abs=function(){return this.throwIfDisposed(),Kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acos=function(){return this.throwIfDisposed(),YT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acosh=function(){return this.throwIfDisposed(),QT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.add=function(t){return this.throwIfDisposed(),K(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.all=function(t,e){return this.throwIfDisposed(),Jw(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.any=function(t,e){return this.throwIfDisposed(),Om(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMax=function(t){return this.throwIfDisposed(),fu(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMin=function(t){return this.throwIfDisposed(),ZT(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),F(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asType=function(t){return this.throwIfDisposed(),le(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as2D=function(t,e){return this.throwIfDisposed(),F(this,[t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),F(this,[t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),F(this,[t,e,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as5D=function(t,e,n,s,a){return this.throwIfDisposed(),F(this,[t,e,n,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asin=function(){return this.throwIfDisposed(),JT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asinh=function(){return this.throwIfDisposed(),eE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan=function(){return this.throwIfDisposed(),tE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan2=function(t){return this.throwIfDisposed(),nE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atanh=function(){return this.throwIfDisposed(),sE(this)};q().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),Sy(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Cy(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchNorm=function(t,e,n,s,a){return this.throwIfDisposed(),Rp(this,t,e,n,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Jl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cast=function(t){return this.throwIfDisposed(),le(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ceil=function(){return this.throwIfDisposed(),uE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ds(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof kt&&(t=[t]),Bt([this,...t],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv1d=function(t,e,n,s,a,r){return this.throwIfDisposed(),tv(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2dTranspose=function(t,e,n,s,a){return this.throwIfDisposed(),sv(this,t,e,n,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2d=function(t,e,n,s,a,r){return this.throwIfDisposed(),Ni(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cos=function(){return this.throwIfDisposed(),$y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cosh=function(){return this.throwIfDisposed(),av(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Fm(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),rv(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),yE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthwiseConv2d=function(t,e,n,s,a,r){return this.throwIfDisposed(),Dp(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dilation2d=function(t,e,n,s,a){return this.throwIfDisposed(),bE(this,t,e,n,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.divNoNan=function(t){return this.throwIfDisposed(),xE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.div=function(t){return this.throwIfDisposed(),ge(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dot=function(t){return this.throwIfDisposed(),wE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.elu=function(){return this.throwIfDisposed(),Ap(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.equal=function(t){return this.throwIfDisposed(),Na(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.erf=function(){return this.throwIfDisposed(),iv(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),CE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.exp=function(){return this.throwIfDisposed(),hs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expandDims=function(t){return this.throwIfDisposed(),Fn(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expm1=function(){return this.throwIfDisposed(),$E(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.fft=function(){return this.throwIfDisposed(),Py(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floor=function(){return this.throwIfDisposed(),Op(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floorDiv=function(t){return this.throwIfDisposed(),Zw(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.gather=function(t,e,n){return this.throwIfDisposed(),Fp(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Mi(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greater=function(t){return this.throwIfDisposed(),ws(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ifft=function(){return this.throwIfDisposed(),rh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.irfft=function(){return this.throwIfDisposed(),Ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isFinite=function(){return this.throwIfDisposed(),NE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isInf=function(){return this.throwIfDisposed(),kE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isNaN=function(){return this.throwIfDisposed(),IE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.leakyRelu=function(t){return this.throwIfDisposed(),ky(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.lessEqual=function(t){return this.throwIfDisposed(),Jo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.less=function(t){return this.throwIfDisposed(),nh(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),TE(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSigmoid=function(){return this.throwIfDisposed(),EE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSoftmax=function(t){return this.throwIfDisposed(),uv(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Ty(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log=function(){return this.throwIfDisposed(),Ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log1p=function(){return this.throwIfDisposed(),Iy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Qa(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalNot=function(){return this.throwIfDisposed(),Ey(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalOr=function(t){return this.throwIfDisposed(),cv(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalXor=function(t){return this.throwIfDisposed(),RE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Pe(this,t,e,n)};q().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Ry(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.max=function(t,e){return this.throwIfDisposed(),ia(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.maximum=function(t){return this.throwIfDisposed(),Pr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mean=function(t,e){return this.throwIfDisposed(),Dt(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.min=function(t,e){return this.throwIfDisposed(),th(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.minimum=function(t){return this.throwIfDisposed(),Fo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),AE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mod=function(t){return this.throwIfDisposed(),_E(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mul=function(t){return this.throwIfDisposed(),_(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.neg=function(){return this.throwIfDisposed(),yt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.norm=function(t,e,n){return this.throwIfDisposed(),_p(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.notEqual=function(t){return this.throwIfDisposed(),mu(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),hv(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.onesLike=function(){return this.throwIfDisposed(),As(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pad=function(t,e){return this.throwIfDisposed(),Bi(this,t,e)};q().prototype.pool=function(t,e,n,s,a,r){return this.throwIfDisposed(),OE(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pow=function(t){return this.throwIfDisposed(),Fr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prelu=function(t){return this.throwIfDisposed(),_y(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prod=function(t,e){return this.throwIfDisposed(),FE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reciprocal=function(){return this.throwIfDisposed(),LE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu=function(){return this.throwIfDisposed(),ar(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu6=function(){return this.throwIfDisposed(),vv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshapeAs=function(t){return this.throwIfDisposed(),F(this,t.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshape=function(t){return this.throwIfDisposed(),F(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),eR(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),tR(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reverse=function(t){return this.throwIfDisposed(),ca(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rfft=function(){return this.throwIfDisposed(),My(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.round=function(){return this.throwIfDisposed(),Sv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rsqrt=function(){return this.throwIfDisposed(),Cv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.selu=function(){return this.throwIfDisposed(),$v(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.separableConv2d=function(t,e,n,s,a,r){return this.throwIfDisposed(),Nv(this,t,e,n,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sigmoid=function(){return this.throwIfDisposed(),qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sign=function(){return this.throwIfDisposed(),PE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sin=function(){return this.throwIfDisposed(),kv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sinh=function(){return this.throwIfDisposed(),Iv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.slice=function(t,e){return this.throwIfDisposed(),Ve(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softmax=function(t){return this.throwIfDisposed(),Ly(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softplus=function(){return this.throwIfDisposed(),Rc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Ay(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.split=function(t,e){return this.throwIfDisposed(),us(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sqrt=function(){return this.throwIfDisposed(),Cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.square=function(){return this.throwIfDisposed(),at(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Rv(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squeeze=function(t){return this.throwIfDisposed(),nl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof kt?[this,t]:[this,...t];return ps(n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.step=function(t){return this.throwIfDisposed(),Dc(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stridedSlice=function(t,e,n,s,a,r,i,o){return this.throwIfDisposed(),ME(this,t,e,n,s,a,r,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sub=function(t){return this.throwIfDisposed(),de(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sum=function(t,e){return this.throwIfDisposed(),fe(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tan=function(){return this.throwIfDisposed(),BE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tanh=function(){return this.throwIfDisposed(),Oo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tile=function(t){return this.throwIfDisposed(),ta(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toBool=function(){return this.throwIfDisposed(),le(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toFloat=function(){return this.throwIfDisposed(),le(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toInt=function(){return this.throwIfDisposed(),le(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.topk=function(t,e){return this.throwIfDisposed(),WE(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.transpose=function(t){return this.throwIfDisposed(),Ue(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unique=function(t){return this.throwIfDisposed(),GE(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),_v(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unstack=function(t){return this.throwIfDisposed(),da(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.where=function(t,e){return this.throwIfDisposed(),En(t,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.zerosLike=function(){return this.throwIfDisposed(),We(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class La extends Error{constructor(e){super(e),Object.setPrototypeOf(this,La.prototype)}}class sa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sa.prototype)}}class z extends Error{constructor(e){super(e),Object.setPrototypeOf(this,z.prototype)}}class Ae extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ae.prototype)}}class qv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qv.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KR{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let n;return this.cache.has(e)&&(n=this.cache.get(e),this.cache.delete(e),this.cache.set(e,n)),n}put(e,n){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let n=0;n<this.maxEntries-e;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lo(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}else{const n=new Array(e);return n.fill(t),n}}function Pa(t,e){if(!t)throw new qv(e)}function V2(t,e){let n=0;for(const s of t)s===e&&n++;return n}function Hn(t){return t.length===1?t[0]:t}function Qe(t){return Array.isArray(t)?t:[t]}function pr(t){const n=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function so(t){return t.length<=1||t.indexOf("_")===-1?t:t.replace(/[_]+(\w|$)/g,(e,n)=>n.toUpperCase())}let Ms={};function Xv(t){if(t==null)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function s1(t){if(!(t==null||typeof t!="object"))if(Array.isArray(t))t.forEach(e=>s1(e));else{const e=Object.keys(t);for(const n of e){const s=t[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?t[n]=s.value:s1(s))}}}function Mp(t,e={},n={},s="object",a=!1){if(typeof t=="string"){const r=t;let i;if(r in n)i=n[r];else if(r in Ms)i=Ms[r];else if(i=e[r],i==null)throw new z(`Unknown ${s}: ${t}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=t;if(r.className==null||r.config==null)throw new z(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let o,l;if(i in n?[o,l]=n[i]:i in Ms?[o,l]=Ms.className:i in e&&([o,l]=e[i]),o==null)throw new z(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(Ms))u[p]=Ms[p];for(const p of Object.keys(n))u[p]=n[p];const c=r.config;c.customObjects=u;const d=Object.assign({},Ms);for(const p of Object.keys(n))Ms[p]=n[p];s1(r.config);const h=l(o,r.config,n,a);return Ms=Object.assign({},d),h}else{const u=Object.assign({},Ms);for(const d of Object.keys(n))Ms[d]=n[d];const c=new o(r.config);return Ms=Object.assign({},u),c}}}function Hj(t,e){return t<e?-1:t>e?1:0}function wf(t,e){return-1*Hj(t,e)}function gi(t){if(t==null)return t;const e=[];for(const n of t)e.indexOf(n)===-1&&e.push(n);return e}function jj(t){if(t==null)throw new z(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function il(t,e,n){if(n!=null&&t.indexOf(n)<0)throw new z(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Kv(t,e,n=0,s=1/0){return Pa(n>=0),Pa(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every(a=>typeof a===e)}function dn(t,e){Array.isArray(t)?(N(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((n,s)=>dn(n,`element ${s+1} of ${e}`))):N(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${YR(t)}.`)}function YR(t){return t===null?"null":Array.isArray(t)?"["+t.map(e=>YR(e)).join(",")+"]":typeof t=="string"?`"${t}"`:`${t}`}function qj(t,e,n){let s=n!=null?n():Gn(),a;return(...i)=>{const o=n!=null?n():Gn();return o-s<e||(s=o,a=t(...i)),a}}function QR(t){return t==="relu"?"relu":t==="linear"?"linear":t==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Xj=0;function ZR(){return Xj++}const vf={};function fb(t=""){return t in vf||(vf[t]=0),vf[t]+=1,t+vf[t].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Kj=["channelsFirst","channelsLast"],Yj=["nearest","bilinear"],Qj=["valid","same","causal"],Zj=["max","avg"],Jj=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const bl=new Map;function Ut(t){il(Kj,"DataFormat",t)}function eq(t){il(Yj,"InterpolationFormat",t)}function Fs(t){il(Qj,"PaddingMode",t)}function JR(t){il(Zj,"PoolMode",t)}const _d=[],U2="/";function wo(t,e){_d.push(t);try{const n=e();return _d.pop(),n}catch(n){throw _d.pop(),n}}function tq(){return _d.length===0?"":_d.join(U2)+U2}function eD(t){if(!nD(t))throw new Error("Not a valid tensor name: '"+t+"'");return tq()+t}function tD(t){if(!nD(t))throw new Error("Not a valid tensor name: '"+t+"'");bl.has(t)||bl.set(t,0);const e=bl.get(t);if(bl.set(t,bl.get(t)+1),e>0){const n=`${t}_${e}`;return bl.set(n,1),n}else return t}const nq=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function nD(t){return!!t.match(nq)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sq(t){return t===parseInt(t.toString(),10)}function yi(t,e,n){e==null&&(e=0),n==null&&(n=t.length);let s=1;for(let a=e;a<n;++a)s*=t[a];return s}function yu(t){if(t.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function Ii(t){if(t.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function Ta(t,e){if(e<t)throw new z(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let kx;function Yt(){return kx==null&&(kx=OT().epsilon()),kx}function Ea(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xa(t,e){return le(t,e)}function Bp(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),F(t,n)}function aq(t,e){return U(()=>{if(t.shape.length!==2)throw new z(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=Bp(t,1);return a1(n,[1,e,1])})}function rq(t){const e=[yi(t.shape)];return F(t,e)}function iq(t){if(t.rank<=1)throw new z(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],yi(t.shape,1)];return F(t,e)}function vo(t,e,n){return U(()=>{switch(t.rank){case 1:return Fy(t,e,n);case 2:return Tv(t,[e,0],[n,t.shape[1]]);case 3:return zy(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return ah(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Ve(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Ve(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Ix(t,e,n){return U(()=>{switch(t.rank){case 1:return Fy(t,e,n);case 2:return Tv(t,[0,e],[t.shape[0],n]);case 3:return zy(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return ah(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Sf(t,e,n,s){return U(()=>{switch(t.rank){case 1:return Fy(t,e,n);case 2:switch(s){case 1:return vo(t,e,n);case 2:return Ix(t,e,n);default:throw new z(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return vo(t,e,n);case 2:return zy(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Ix(t,e,n);default:throw new z(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return vo(t,e,n);case 2:return ah(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return ah(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Ix(t,e,n);default:throw new z(`The axis is not within the rank of the tensor ${s}`)}default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Yv(t,e=-1){let n;return e<0&&(n=t[0].rank,n!==0?e=n:e=0),e===t[0].rank&&(e=-1),Bt(t,e)}function W2(t,e){switch(t.rank){case 1:return cE([t,e]);case 2:return dE([t,e],0);case 3:return hE([t,e],0);case 4:return pE([t,e],0);default:throw new z(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function a1(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new z(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return ta(t,e)}function mb(t,e=0,n=1,s,a){return wv(t,e,n,s,a)}function Ka(t,e,n,s){if(t.rank<2||e.rank<2)throw new Ae(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const a=t.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(a!==r)throw new Ae(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(t.rank===2&&e.rank===2)return J0({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?r1(t.rank,s,Ea()):null,activation:n});{const a=t.shape.slice(),r=a.pop();t=F(t,[-1,r]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=F(Ue(e,c),[l,-1]);const d=[...a,...u];return F(J0({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?r1(t.rank,s,Ea()):null,activation:n}),d)}}function sD(t,e,n){return U(()=>(Array.isArray(e)?e=Mn(e,"int32"):e=le(e,"int32"),Fp(t,e,n)))}function Vp(t){return _(t,t)}function r1(t,e,n){const s=e.shape;if(e.rank!==1&&e.rank!==t)throw new z(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(t===5){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1,1]):F(e,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,1,1,s[0]]):F(e,[1].concat(s))}else if(t===4){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1]):F(e,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,1,s[0]]):F(e,[1].concat(s))}else if(t===3){if(n==="channelsFirst")return s.length===1?F(e,[1,s[0],1]):F(e,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?F(e,[1,1,s[0]]):F(e,[1].concat(s))}else if(t<3)return e;throw new z(`Unsupported input rank by biasAdd: ${e.rank}`)}function Fa(t,e,n){return U(()=>(n==null&&(n=Ea()),Ut(n),K(t,r1(t.rank,e,n))))}function oq(t,e=1){if(e!==1)throw new Ae(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ap(t)}function lq(t){return U(()=>ge(t,K(Kt(t),1)))}function aD(t,e,n,s){return U(()=>qE(t,e,n,s))}function uq(t){return U(()=>{const e=K(.5,_(.2,t));return ds(e,0,1)})}function Up(t,e,n=!1){return n?t():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cq=["fanIn","fanOut","fanAvg"],dq=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hq(t){il(cq,"FanMode",t)}function pq(t){il(dq,"Distribution",t)}class ha extends _c{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class rD extends ha{apply(e,n){return Ht(e,n)}}rD.className="Zeros";Z(rD);class Qv extends ha{apply(e,n){return Kn(e,n)}}Qv.className="Ones";Z(Qv);class iD extends ha{constructor(e){if(super(),typeof e!="object")throw new z(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new z(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return U(()=>_(we(this.value),Kn(e,n)))}getConfig(){return{value:this.value}}}iD.className="Constant";Z(iD);class oD extends ha{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return tl(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}oD.className="RandomUniform";Z(oD);class lD extends ha{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`randomNormal does not support dType ${n}.`);return mb(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}lD.className="RandomNormal";Z(lD);class uD extends ha{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`truncatedNormal does not support dType ${n}.`);return Av(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}uD.className="TruncatedNormal";Z(uD);class cD extends ha{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return U(()=>{if(e.length!==2||e[0]!==e[1])throw new z("Identity matrix initializer can only be used for 2D square matrices.");return _(this.gain,lv(e[0]))})}getConfig(){return{gain:this.gain}}}cD.className="Identity";Z(cD);function fq(t,e="channelsLast"){let n,s;if(Ut(e),t.length===2)n=t[0],s=t[1];else if([3,4,5].indexOf(t.length)!==-1){if(e==="channelsFirst"){const a=yi(t,2);n=t[1]*a,s=t[0]*a}else if(e==="channelsLast"){const a=yi(t,0,t.length-2);n=t[t.length-2]*a,s=t[t.length-1]*a}}else{const a=yi(t);n=Math.sqrt(a),s=Math.sqrt(a)}return[n,s]}class fs extends ha{constructor(e){if(super(),e.scale<0)throw new z(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,hq(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,pq(this.distribution),this.seed=e.seed}apply(e,n){const s=fq(e),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const o=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`${this.getClassName()} does not support dType ${n}.`);return Av(e,0,o,n,this.seed)}else{const o=Math.sqrt(3*i);return tl(e,-o,o,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}fs.className="VarianceScaling";Z(fs);class Zv extends fs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return fs.className}}Zv.className="GlorotUniform";Z(Zv);class Jv extends fs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return fs.className}}Jv.className="GlorotNormal";Z(Jv);class eS extends fs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return fs.className}}eS.className="HeNormal";Z(eS);class tS extends fs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return fs.className}}tS.className="HeUniform";Z(tS);class nS extends fs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return fs.className}}nS.className="LeCunNormal";Z(nS);class sS extends fs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return fs.className}}sS.className="LeCunUniform";Z(sS);class dD extends ha{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,n){return U(()=>{if(e.length<2)throw new Ae("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;const s=L(e.slice(0,-1)),a=e[e.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],o=mb(i,0,1,n,this.seed),l=nR.qr(o,!1);let u=l[0];const d=l[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return u=_(u,d.sign()),s<a&&(u=u.transpose()),_(we(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}dD.className="Orthogonal";Z(dD);const G2={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function H2(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"initializer")}function Tt(t){return Xv(t)}function xt(t){if(typeof t=="string"){const e=t in G2?G2[t]:t;if(e==="GlorotNormal")return new Jv;if(e==="GlorotUniform")return new Zv;if(e==="HeNormal")return new eS;if(e==="HeUniform")return new tS;if(e==="LeCunNormal")return new nS;if(e==="LeCunUniform")return new sS;{const n={};return n.className=e,n.config={},H2(n)}}else return t instanceof ha?t:H2(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function i1(t){return Array.isArray(t)&&Array.isArray(t[0])}function zm(t){return t.length===0?[]:Array.isArray(t[0])?t:[t]}function Ne(t){let e;if(Array.isArray(t)){if(t.length!==1)throw new z(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Xe(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(t.length===1)return t=t,t[0];throw new z(`Expected exactly 1 Shape; got ${t.length}`)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lm(t){let e=0;for(const n of t)n.shape.length===0?e+=1:e+=n.shape.reduce((s,a)=>s*a);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const j2="Variable";class mq{constructor(e,n="float32",s=j2,a=!0,r=null){this.dtype=n??"float32",this.shape=e.shape,this.id=ZR(),s=s??j2,this.originalName=eD(s),this.name=tD(this.originalName),this.trainable_=a,this.constraint=r,this.val=HE(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),gq(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function gq(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function o1(t){return t.map(e=>e.read())}function aS(t){t.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Za{constructor(e,n,s,a,r,i,o){this.dtype=e,this.shape=n,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=ZR(),i!=null&&(this.originalName=eD(i),this.name=tD(this.originalName)),this.rank=n.length}}let yq=0;class gb{constructor(e,n){this.callArgs=n,this.id=yq++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const n of this.inboundLayers)n!=null?e.push(n.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let bq=0;class Le extends _c{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=bq++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){const s=this.getClassName();n=pr(s)+"_"+fb(s)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new sa(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new z(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Hn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Hn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new La(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new La(`Layer ${this.name} is not connected, no input to return.`);return Hn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new La(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new La(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const n=Qe(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Qe(this.inputSpec);if(n.length!==s.length)throw new z(`Layer ${this.name} expects ${s.length} inputs, but it received ${n.length} input tensors. Input received: ${e}`);for(let a=0;a<n.length;a++){const r=n[a],i=s[a];if(i==null)continue;const o=r.rank;if(i.ndim!=null&&o!==i.ndim)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${o}`);if(i.maxNDim!=null&&o>i.maxNDim)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${o}`);if(i.minNDim!=null&&o<i.minNDim)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${o}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new z(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const l=r.shape;for(const u in i.axes){const c=Number(u),d=i.axes[u],h=c>=0?l[c]:l[l.length+c];if(d!=null&&[d,null].indexOf(h)===-1)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${d} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const u=i.shape[l],c=r.shape[l];if(u!=null&&c!=null&&u!==c)throw new z(`Input ${a} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();const s=Qe(e),a=vq(e),r=Sq(e);if(a===r)throw new z("Arguments to apply() must be all SymbolicTensors or all Tensors");return wo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const o of Qe(e))i.push(o.shape);this.build(Hn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let i=this.call(e,n);this.supportsMasking&&this.setMaskMetadata(e,i);const o=Qe(i),l=[];for(let u of o)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=Hn(l),this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=xq(e),o=this.computeOutputShape(i);let l;const u=wq(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((c,d)=>new Za(u,c,this,Qe(e),n,this.name,d)):l=new Za(u,o,this,Qe(e),n,this.name),this.addInboundNode(e,l,null,null,i,o,n),this._refCount++,this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&e[a]!=null&&e[a]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new La(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new La(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new sa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Lm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return o1(e?this.trainableWeights:this.weights)}setWeights(e){U(()=>{const n=this.weights;if(n.length!==e.length)throw new z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;const s=[],a=o1(n);for(let r=0;r<a.length;++r){const i=a[r],o=n[r],l=e[r];if(!Ee(i.shape,l.shape))throw new z(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}aS(s)})}addWeight(e,n,s,a,r,i,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new z(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=l!=null?l():xt("zeros"));const u=a.apply(n,s),c=new mq(u,s,e,i,o);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Qe(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}setMaskMetadata(e,n,s){if(!this.supportsMasking)return;const a=this.computeMask(e,s),r=Qe(n),i=Qe(a);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let o=0;o<r.length;o++)r[o].kerasMask=i[o]}addInboundNode(e,n,s,a,r,i,o=null){const l=Qe(e);n=Qe(n),s=Qe(s),a=Qe(a),r=zm(r),i=zm(i);const u=[],c=[],d=[];for(const h of l)u.push(h.sourceLayer),c.push(h.nodeIndex),d.push(h.tensorIndex);new gb({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:d,inputTensors:l,outputTensors:n,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},o);for(let h=0;h<n.length;h++)n[h].sourceLayer=this,n[h].nodeIndex=this.inboundNodes.length-1,n[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function xq(t){t=Qe(t);const e=[];for(const n of t)e.push(n.shape);return Hn(e)}function wq(t){return"float32"}function hD(t,e,n){if((e==null||n!=null&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),e.inboundNodes.length===0)return[t];{const s=e.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],o=s.inboundLayers[r],l=s.nodeIndices[r],u=hD(i,o,l);for(const c of u)a.indexOf(c)===-1&&a.push(c)}return a}}}function vq(t){let e=!0;for(const n of Qe(t))if(!(n instanceof Za)){e=!1;break}return e}function Sq(t){let e=!0;for(const n of Qe(t))if(n instanceof Za){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wp extends Le{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:fb("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const a=new Za(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new gb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Wp.className="InputLayer";Z(Wp);function Cq(t){if(t.batchShape==null&&t.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(t.batchShape!=null&&t.shape!=null)throw new z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;t.shape!=null&&e==null&&(e=[null].concat(t.shape));let n=t.dtype;return n==null&&(n="float32"),new Wp({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $q(t,e){if(t.dtype==null||t.dtype===e.dtype)return e;try{return le(e,t.dtype)}catch{throw new z(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class ri{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ri)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(e==null)return;for(const n of e)this.add(n.key,n.value)}}add(e,n,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=$q(e,n),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new z(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Za){if(this.id2Value[e.id]==null)throw new z(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const n=this.name2Id[e];if(n==null)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[n]}}getMask(e){if(e instanceof Za){if(this.id2Value[e.id]==null)throw new z(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const n=this.name2Id[e];if(n==null)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&_e(this.id2Mask)}}const Pm=new KR,Mm=new KR;function Nq(t){Pm!=null&&Pm.setMaxEntries(t),Mm!=null&&Mm.setMaxEntries(t)}function dd(t,e,n,s){const a=n==null?!1:n.training,r=Array.isArray(t),i=r?t:[t],o=i.map(f=>f.name),l=[],u=e.names();for(const f of o)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const c=o.join(",")+"|"+e.names().sort().join(",");let d=Pm.get(c),h;if(d==null){const f=kq(i,e);d=f.sorted,h=f.recipientCounts,Pm.put(c,d),Mm.put(c,h)}h={},a||Object.assign(h,Mm.get(c));const p=new ri(e);for(let f=0;f<d.length;++f){const m=d[f],y=m.sourceLayer;if(y instanceof Wp)continue;const g=[],b=[],x=[];let w=!1;for(const T of m.inputs){const E=p.getValue(T),O=p.getMask(T);g.push(E),b.push(O),O!=null&&(w=!0),a||(h[T.name]--,h[T.name]===0&&!e.hasKey(T)&&o.indexOf(T.name)===-1&&!E.isDisposed&&T.sourceLayer.stateful!==!0&&x.push(E))}w&&(n=n||{},n.mask=b[0]);const v=Qe(y.apply(g,n));let C=null;y.supportsMasking&&(C=y.computeMask(g,b));const $=Tq(m),k=Array.isArray($)?$:[$];for(let T=0;T<k.length;++T){p.hasKey(k[T])||p.add(k[T],v[T],Array.isArray(C)?C[0]:C);const E=o.indexOf(k[T].name);E!==-1&&(l[E]=v[T])}a||_e(x)}return p.disposeMasks(),r?l:l[0]}function kq(t,e){N(t!=null&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(t.length===1){const a=q2(t[0],e);n=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of t){const{sorted:i,recipientMap:o}=q2(r,e);for(const l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:Iq(s)}}function Iq(t){const e={};for(const n in t)e[n]=t[n].size;return e}function q2(t,e){const n=new Set,s=[],a={};for(const o of e.names())n.add(o);const r=[],i=[];for(r.push(t);r.length>0;){const o=r[r.length-1];if(n.has(o.name)){r.pop();continue}const l=i[i.length-1]===r.length-1;if(o.inputs.length===0||l)r.pop(),s.push(o),n.add(o.name),l&&i.pop();else{i.push(r.length-1);for(const u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!n.has(u.name)&&r.push(u)}}return{sorted:s,recipientMap:a}}function Tq(t){let e;if(t.sourceLayer.inboundNodes.length===1)e=t.sourceLayer.output;else{let n=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const a of t.sourceLayer.inboundNodes[s].outputTensors)if(a.id===t.id){n=s;break}e=t.sourceLayer.getOutputAt(n)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq=M();Eq.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,Nq);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rS(t,e){return U(()=>Cn(fe(_(t,t),e,!0)))}class Gp extends _c{getConfig(){return{}}}class pD extends Gp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{const n=rS(e,this.axis),s=ds(n,0,this.maxValue);return _(e,ge(s,K(Yt(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}pD.className="MaxNorm";Z(pD);class fD extends Gp{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>ge(e,K(Yt(),rS(e,this.axis))))}getConfig(){return{axis:this.axis}}}fD.className="UnitNorm";Z(fD);class mD extends Gp{apply(e){return ar(e)}}mD.className="NonNeg";Z(mD);class gD extends Gp{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{const n=rS(e,this.axis),s=K(_(this.rate,ds(n,this.minValue,this.maxValue)),_(1-this.rate,n));return _(e,ge(s,K(Yt(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}gD.className="MinMaxNorm";Z(gD);const X2={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function en(t){return Xv(t)}function K2(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"constraint")}function tn(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in X2?X2[t]:t,config:{}};return K2(n)}else return t instanceof Gp?t:K2(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ki(t){if(t==null)return;const e=[],n=[],s=[];for(const a in t){const r=t[a];if(typeof r!="number"){const i=r;e.push(i.data()),n.push(a),s.push(i)}}if(e.length>0){const a=await Promise.all(e);for(let r=0;r<a.length;++r)t[n[r]]=a[r][0];_e(s)}}function yD(t){if(t!=null)for(const e in t){const n=t[e];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Y2;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(Y2||(Y2={}));const Rq=125;class ih{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,n){}async onEpochEnd(e,n){}async onBatchBegin(e,n){}async onBatchEnd(e,n){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Dq{constructor(e,n=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=n}append(e){this.callbacks.push(e)}setParams(e){for(const n of this.callbacks)n.setParams(e)}setModel(e){for(const n of this.callbacks)n.setModel(e)}async onEpochBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(e,n)}async onEpochEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(e,n)}async onBatchBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(e,n)}async onBatchEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(e,n)}async onTrainBegin(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainEnd(e)}}class Aq extends ih{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const a in n){const r=n[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const o=U(()=>K(this.totals[a],_(r,s)));this.totals[a]=o,i!=null&&i.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:U(()=>{const a=_(ge(1,this.seen),this.totals[s]);n[s]=a,this.totals[s].dispose(),cn(n[s])}))}}class _q extends ih{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const e=[],n=[],s=[];for(const r in this.history){const i=this.history[r];for(let o=0;o<i.length;++o)if(typeof i[o]!="number"){const l=i[o];e.push(l.data()),n.push(r),s.push(o)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r)this.history[n[r]][s[r]].dispose(),this.history[n[r]][s[r]]=a[r][0]}}class Oq extends ih{constructor(e,n){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||CR,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=Rq),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");F0(this.yieldEvery)&&(this.maybeWait=qj(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,s){const a=[];this.yield!=null&&(await Ki(s),a.push(this.yield(e,n,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await Ki(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){const s=[];this.epochEnd!=null&&(await Ki(n),s.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,n){this.batchBegin!=null&&(await Ki(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){const s=[];this.batchEnd!=null&&(await Ki(n),s.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):F0(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Ki(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ki(e),await this.trainEnd(e))}}function bD(t,e){return t==null&&(t={}),t instanceof ih?[t]:Array.isArray(t)&&t[0]instanceof ih?t:Qe(t).map(s=>new Oq(s,e))}class Vs{constructor(){}static registerCallbackConstructor(e,n){N(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Vs.checkForDuplicate(n),Vs.constructors[e]==null&&(Vs.constructors[e]=[]),Vs.constructors[e].push(n)}static checkForDuplicate(e){for(const n in Vs.constructors)Vs.constructors[+n].forEach(a=>{if(a===e)throw new z("Duplicate callback constructor.")})}static clear(){Vs.constructors={}}static createCallbacks(e){const n=[];for(const s in Vs.constructors){const a=+s;e>=a&&n.push(...Vs.constructors[a])}return n.map(s=>new s)}}Vs.constructors={};function xD(t,e,n,s,a,r,i,o,l){const u=new _q,c=[new Aq,...Vs.createCallbacks(e)];t!=null&&c.push(...t),c.push(u);const d=new Dq(c);return d.setParams({epochs:n,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tr(t,e={},n=!1){return Mp(t,Ks.getMap().classNameMap,e,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bm(t,e){return U(()=>{t.dtype!=="float32"&&(t=le(t,"float32"));const n=fe(Vp(t),e,!0),s=Ec(n.shape,Yt()),a=Cn(Pr(n,s));return ge(t,a)})}function yb(t,e){return U(()=>Dt(Vp(de(e,t)),-1))}function iS(t,e){return U(()=>Dt(Kt(de(e,t)),-1))}function oS(t,e){return U(()=>{const n=de(t,e),s=ds(Kt(t),Yt(),Number.MAX_VALUE),a=Kt(ge(n,s));return _(100,Dt(a,-1))})}function Fq(t,e){return U(()=>{const n=ds(e,Yt(),Number.MAX_VALUE),s=Ds(K(1,n)),a=ds(t,Yt(),Number.MAX_VALUE),r=Ds(K(1,a));return Dt(Vp(de(s,r)),-1)})}function zq(t,e){return U(()=>{const n=Pr(0,de(1,_(t,e)));return Dt(Vp(n),-1)})}function Lq(t,e){return U(()=>{const n=Pr(0,de(1,_(t,e)));return Dt(n,-1)})}function Pq(t,e){return U(()=>{const n=fe(_(t,e),-1),s=ia(_(de(1,t),e),-1);return Pr(0,K(1,de(s,n)))})}function Mq(t,e){return U(()=>{const n=Math.log(2),s=de(e,t),a=de(K(s,Rc(_(-2,s))),n);return Dt(a,-1)})}function oh(t,e,n=!1){return U(()=>{if(n)e=Ly(e);else{const s=fe(e,e.shape.length-1,!0);e=ge(e,s)}return e=ds(e,Yt(),1-Yt()),yt(fe(_(le(t,"float32"),Ds(e)),e.shape.length-1))})}function Vm(t,e,n=!1){return U(()=>{const s=le(Op(rq(t)),"int32");e=ds(e,Yt(),1-Yt());const a=e.shape,r=F(hv(s,a[a.length-1]),a);return oh(r,e,n)})}function Bq(t,e){if(!Ee(t.shape,e.shape))throw new z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return U(()=>{const n=ar(e),s=yt(Kt(e));return K(de(n,_(e,t)),Iy(hs(s)))})}function bb(t,e){return U(()=>{let n;return n=ds(e,Yt(),1-Yt()),n=Ds(ge(n,de(1,n))),Dt(Bq(t,n),-1)})}function Vq(t,e){return U(()=>{const n=ds(t,Yt(),1),s=ds(e,Yt(),1);return fe(_(t,Ds(ge(n,s))),-1)})}function Uq(t,e){return U(()=>{const n=Ds(K(Yt(),e));return Dt(de(e,_(t,n)),-1)})}function wD(t,e){return U(()=>{const n=Bm(t,-1),s=Bm(e,-1),a=_(n,s);return yt(fe(a,-1))})}const Um={meanSquaredError:yb,meanAbsoluteError:iS,meanAbsolutePercentageError:oS,meanSquaredLogarithmicError:Fq,squaredHinge:zq,hinge:Lq,categoricalHinge:Pq,logcosh:Mq,categoricalCrossentropy:oh,sparseCategoricalCrossentropy:Vm,binaryCrossentropy:bb,kullbackLeiblerDivergence:Vq,poisson:Uq,cosineProximity:wD};function Tx(t){if(typeof t=="string"){if(t in Um)return Um[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new z(e)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vD(t,e){return U(()=>{const n=_(.5,As(e)),s=Xa(ws(e,n),t.dtype);return Dt(Na(t,s),-1)})}function SD(t,e){return U(()=>Xa(Na(fu(t,-1),fu(e,-1)),"float32"))}function Wq(t,e){return U(()=>le(fe(Qa(Na(t,1),Na(e,1))),"float32"))}function Gq(t,e){return U(()=>le(fe(Qa(Na(t,0),Na(e,1))),"float32"))}function Hq(t,e){return U(()=>{const n=Wq(t,e),s=Gq(t,e),a=K(n,s);return le(En(ws(a,0),ge(n,a),0),"float32")})}function jq(t,e){return bb(t,e)}function qq(t,e){return t.rank===e.rank&&(t=nl(t,[t.rank-1])),e=fu(e,-1),e.dtype!==t.dtype&&(e=le(e,t.dtype)),le(Na(t,e),"float32")}const Xq=yb,Kq=yb,Yq=iS,Qq=iS,Zq=oS,Jq=oS,CD=oh,e5=wD,$D=Vm,Wm={binaryAccuracy:vD,categoricalAccuracy:SD,precision:Hq,categoricalCrossentropy:CD,sparseCategoricalCrossentropy:$D,mse:Xq,MSE:Kq,mae:Yq,MAE:Qq,mape:Zq,MAPE:Jq,cosine:e5};function t5(t){if(typeof t=="string"&&t in Wm)return Wm[t];if(typeof t!="string"&&t!=null)return t;throw new z(`Unknown metric ${t}`)}function Cf(t){if(Pa(t!==null,`Unknown LossOrMetricFn ${t}`),typeof t=="string")return t;{let e;for(const n of Object.keys(Um))if(Um[n]===t){e=n;break}if(e!==void 0)return e;for(const n of Object.keys(Wm))if(Wm[n]===t){e=n;break}return e!==void 0?e:t.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function n5(t){const e={Adagrad:()=>yl.adagrad(.01),Adadelta:()=>yl.adadelta(1,.95,Yt()),Adam:()=>yl.adam(.001,.9,.999,Yt()),Adamax:()=>yl.adamax(.002,.9,.999,Yt(),0),RMSProp:()=>yl.rmsprop(.001,.9,0,Yt()),SGD:()=>yl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new z(`Unknown Optimizer ${t}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Q2=1*1024*1024;function Z2(t,e,n=!1){if(t==null||typeof t!="object"||Object.getPrototypeOf(t)!==Object.prototype||!l1(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(t);s.length>Q2&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Q2}.`)}}function l1(t){if(t===null)return!0;if(typeof t=="object")if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if(typeof n!="string"||!l1(t[n]))return!1;return!0}else if(Array.isArray(t)){for(const e of t)if(!l1(e))return!1;return!0}else return!1;else{const e=typeof t;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s5(t,e,n,s=console.log){const a=r5(t),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(e*c)));let i;if(!a){r.push("Receives inputs"),i=[];for(const c in t.nodesByDepth)i.push(...t.nodesByDepth[c])}s("_".repeat(e)),Gm(r,n,s),s("=".repeat(e));const o=t.layers;for(let c=0;c<o.length;++c)a?i5(o[c],n,s):o5(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=a5(t),u=Lm(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function a5(t){let e;return t.collectedTrainableWeights!=null?e=Lm(t.collectedTrainableWeights):e=Lm(t.trainableWeights),e}function r5(t){let e=!0;const n=[],s=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){e=!1;break}s.push(...a)}if(e)for(const a of t.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function Gm(t,e,n=console.log){let s="";for(let a=0;a<t.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=t[a],s=s.slice(0,e[a]),s+=" ".repeat(e[a]-s.length);n(s)}function i5(t,e,n){let s,a;try{a=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(t.outputShape)}catch{s="multiple"}const r=t.name,i=t.getClassName(),o=[`${r} (${i})`,a,s,t.countParams().toString()];Gm(o,e,n)}function o5(t,e,n,s){let a,r;try{r=t.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(t.outputShape)}catch{a="multiple"}const i=[];for(const d of t.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];i.push(`${p}[${f}][${m}]`)}const o=t.name,l=t.getClassName(),u=i.length===0?"":i[0],c=[`${o} (${l})`,r,a,t.countParams().toString(),u];Gm(c,e,s);for(let d=1;d<i.length;++d)Gm(["","","","",i[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ND(t,e,n){return(t==="inboundNodes"||t==="outputLayers"||t==="inputLayers")&&e===0&&typeof n=="string"}function u1(t,e){if(t===null)return null;if(typeof t=="string")return so(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let a=0;a<s;++a){const r=t[a];ND(e,a,r)?n.push(r):n.push(u1(r,e))}return n}else{const n={};for(const s of Object.keys(t)){const a=t[s];if(s==="name"&&typeof a=="string")n[s]=a;else{const r=so(s);n[r]=u1(a,r)}}return n}}function c1(t,e){if(t==null)return null;if(typeof t=="string")return pr(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let a=0;a<s;++a){const r=t[a];ND(e,a,r)?n.push(r):n.push(c1(r,e))}return n}else{const n={};for(const s of Object.keys(t)){const a=t[s],r=pr(s);(s==="name"||s==="className")&&typeof a=="string"?n[r]=a:n[r]=c1(a,s)}return n}}/** @license See the LICENSE file. */const kD="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const l5=t=>{const e=Object.keys(t);if(e.length===0)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))};class ga extends Le{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=fb(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],gi(this.inputs).length!==this.inputs.length)throw new z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);gi(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const x=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const x=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;Pa(w===0,"input layer has >1 nodes"),Pa(v===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const x=this.inputLayers[b];if(!(x instanceof Wp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const n={},s={},a={},r={},i={},o=[],l=(b,x,w,v,C,$)=>{(v==null||C==null||$==null)&&(v=b.sourceLayer,C=b.nodeIndex,$=b.tensorIndex);const k=v.inboundNodes[C];if(w.indexOf(k)!==-1)throw new sa(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(x.indexOf(k)!==-1)return;this.containerNodes.add(ga.nodeKey(v,C)),v.id in i||(i[v.id]=Object.keys(i).length),w.indexOf(k)===-1&&w.push(k);const T=k.inboundLayers.length;for(let E=0;E<T;E++){const O=k.inputTensors[E],B=k.inboundLayers[E],W=k.nodeIndices[E],V=k.tensorIndices[E];l(O,x,w,B,W,V)}for(x.push(k);w.indexOf(k)>=0;)w.splice(w.indexOf(k),1);o.push(k)},u=[],c=[];for(const b of this.outputs)l(b,u,c);const d=o.slice().reverse();for(const b of d){s[b.id]=b,b.id in n||(n[b.id]=0);let x=n[b.id];const w=a[b.outboundLayer.id]==null?0:a[b.outboundLayer.id];x=Math.max(x,w),a[b.outboundLayer.id]=x,r[b.outboundLayer.id]=b.outboundLayer,n[b.id]=x;for(let v=0;v<b.inboundLayers.length;v++){const C=b.inboundLayers[v],$=b.nodeIndices[v],k=C.inboundNodes[$],T=n[k.id]==null?0:n[k.id];n[k.id]=Math.max(x+1,T),s[k.id]=k}}const h={};for(const b in n){const x=n[b];x in h||(h[x]=[]),h[x].push(s[b])}const p={};for(const b in a){const x=a[b];x in p||(p[x]=[]),p[x].push(r[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(wf);this.layers=[];for(const b of f){const x=p[b];x.sort((w,v)=>{const C=i[w.id],$=i[v.id];return C<$?-1:C>$?1:0});for(const w of x)w instanceof ga&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(h).map(b=>parseInt(b,10)).sort(wf);const m=this.inputs.slice(),y=[];for(const b of f)for(const x of h[b]){const w=x.outboundLayer;if(w!=null){for(const v of x.inputTensors)if(m.indexOf(v)===-1)throw new sa(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${y}`);for(const v of x.outputTensors)m.push(v);y.push(w.name)}}this.nodesByDepth=h;const g=this.layers.map(b=>b.name);for(const b of g){const x=g.filter(w=>w===b).length;if(x!==1)throw new sa(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new gb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){const s={};let a=0;const r=l5(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[l,u]of o.weights.entries()){const c=r?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new z(`Duplicate weight name: ${c}`);s[c]=u,a++}const i=[];for(const o in e){let l=o;if(s[o]==null){const u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[o]]);else if(n)throw new z(`Provided weight data has no target variable: ${o}`);delete s[l]}if(n){const o=[];for(const l in s)o.push(l);if(o.length>0)throw new z(`${o.length} of ${a} weights are not set: ${o}`)}aS(i)}parseWeights(e){for(const n in Object.keys(e)){const s=n.split("/"),a=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");r!==n&&(e[r]=e[n],delete e[n])}}updatedConfig(){const e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${kD}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){const s=c1(this.updatedConfig());return n?JSON.stringify(s):s}call(e,n){return U(()=>{e=Qe(e);const s=new ri;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],e[a]);return dd(this.outputs,s,n)})}computeMask(e,n){return U(()=>{e=Qe(e);let s;return n==null?s=Lo(null,e.length):s=Qe(n),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const n=zm(e);if(n.length!==this.inputLayers.length)throw new z(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<n.length;o++){const l=this.inputLayers[o],u=n[o],c=l.name+"_0_0";s[c]=u}const a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(wf);if(a.length>1)for(const o of a){const l=this.nodesByDepth[o];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const d=[];for(let m=0;m<u.inboundLayers.length;m++){const y=u.inboundLayers[m],g=u.nodeIndices[m],b=u.tensorIndices[m],x=`${y.name}_${g}_${b}`,w=s[x];d.push(w)}const h=c.computeOutputShape(Hn(d)),p=zm(h),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const y=`${c.name}_${f}_${m}`;s[y]=p[m]}}}const r=[],i=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],d=`${l.name}_${u}_${c}`;i.push(d)}for(let o=0;o<i.length;o++){const l=i[o];Pa(l in s),r.push(s[l])}return Hn(r)}runInternalGraph(e,n){n==null&&(n=Lo(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],d=n[l];s[u.id]=[c,d]}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(wf);for(const l of a){const u=this.nodesByDepth[l];for(const c of u){const d=c.outboundLayer,h=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},y,g,b,x;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[w,v]=f[0];m.mask==null&&(m.mask=v),b=Qe(d.call(w,m)),x=Qe(d.computeMask(w,v)),y=[w],g=[v]}else y=f.map(w=>w[0]),g=f.map(w=>w[1]),m.mask==null&&(m.mask=g),b=Qe(d.call(y,m)),x=Qe(d.computeMask(y,g));if(d.activityRegularizer)throw new Ae("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const v=p[w],C=b[w],$=x[w];s[v.id]=[C,$]}}}}const r=[],i=[],o=[];for(const l of this.outputs){Pa(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];o.push(u.shape),r.push(u),i.push(c)}return[r,i,o]}buildNodeConversionMap(e){const n={};let s;for(const a of this.layers){s=a instanceof ga?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=ga.nodeKey(a,r);this.containerNodes.has(i)&&(n[i]=s,s+=1)}}return n}getLayer(e,n){if(n!=null)return this.findLayer(n);if(e==null)throw new z("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new z(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new z(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return U(()=>{const e=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const a=ga.nodeKey(n,s);this.containerNodes.has(a)&&e.push(...n.calculateLosses())}return e})}getConfig(){const e={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const o=i.getClassName(),l=i.getConfig(),u=[];for(let d=0;d<i.inboundNodes.length;d++){const h=i.inboundNodes[d],p=ga.nodeKey(i,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let y=0;y<h.inboundLayers.length;y++){const g=h.inboundLayers[y],b=h.nodeIndices[y],x=h.tensorIndices[y],w=ga.nodeKey(g,b);let v=n[w];v==null&&(v=0),m.push([g.name,v,x,f])}u.push(m)}}}const c={};c.name=i.name,c.className=o,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=ga.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const d=this.inputLayersTensorIndices[i];a.push([o.name,c,d])}e.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=ga.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const d=this.outputLayersTensorIndices[i];r.push([o.name,c,d])}return e.outputLayers=r,e}static fromConfig(e,n,s={},a=!1){const r={},i={};function o(y,g){y.name in i?i[y.name].push(g):i[y.name]=[g]}function l(y,g){const b=[];let x;for(const w of g){const v=w[0],C=w[1],$=w[2];if(x=w[3]==null?{}:w[3],!(v in r)){o(y,g);return}const k=r[v];if(k.inboundNodes.length<=C){o(y,g);return}const T=k.inboundNodes[C];b.push(T.outputTensors[$])}b.length>0&&y.apply(Hn(b),x)}function u(y){const g=y.name,b=Tr(y,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(a),r[g]=b,y.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new z(`Corrupted configuration, expected array for nodeData: ${w}`);o(b,w)})}const c=n.name,d=n.layers;for(const y of d)u(y);for(;!jj(i);)for(const y of d){const g=r[y.name];if(g.name in i){const b=i[g.name];delete i[g.name];for(const x of b)l(g,x)}}const h=[],p=[],f=n.inputLayers;for(const y of f){const g=y[0],b=y[1],x=y[2];Pa(g in r);const v=r[g].inboundNodes[b].outputTensors;h.push(v[x])}const m=n.outputLayers;for(const y of m){const g=y[0],b=y[1],x=y[2];Pa(g in r);const v=r[g].inboundNodes[b].outputTensors;p.push(v[x])}return new e({inputs:h,outputs:p,name:c})}get stateful(){if(this._stateful)throw new z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){U(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function u5(t,e,n){const s=e.length;if(t==null||Array.isArray(t)&&t.length===0)return e.map(a=>null);if(s===1)return Array.isArray(t)&&t.length===1?t:typeof t=="object"&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}else if(typeof t=="object"&&Object.keys(t).length>0&&typeof t[Object.keys(t)[0]]=="object"){const a=[];return e.forEach(r=>{r in t?a.push(t[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function ID(t,e){return u5(t,e,"classWeight")}async function TD(t,e,n,s){if(n!=null){const a=U(()=>{if(t.shape.length===1)return Ir(t);if(t.shape.length===2){if(t.shape[1]>1)return fu(t,1);if(t.shape[1]===1)return F(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());_e(a);const i=[];return r.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Mn(i,"float32")}else return null}function c5(t,e){return _(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const d5=32;function ED(t,e){let n,s;const a=e;n=a.xs,s=a.ys,N(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=J2("input",t.inputNames,n),i=J2("output",t.outputNames,s),o=r[0].shape[0];N(r.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),N(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<r.length;l++)N(r[l].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${r[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let l=0;l<i.length;l++)N(i[l].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:r,ys:i}}function J2(t,e,n){if(n instanceof kt)return[n];if(Array.isArray(n))return N(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const s=[];for(const a of e){if(n[a]==null)throw new z(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);s.push(n[a])}return s}}function h5(t){if(t.length===3)throw new Ae("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function p5(t,e,n){const s=n.batchesPerEpoch!=null;if(N(t.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),N(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),N(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),N(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),N(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=n.validationData!=null;let r,i;if(a)if(e$(n.validationData))N(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const y=h5(n.validationData);r=y.xs,i=y.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;a?u=l.slice().concat(l.map(y=>"val_"+y)):u=l.slice();const c=bD(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:h,history:p}=xD(c,d,n.epochs,null,null,f5(e,n),null,a,u);h.setModel(t),t.history=p,await h.onTrainBegin(),t.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const y={};await h.onEpochBegin(f);let g=0,b=0;for(s||(m=await e.iterator());!s||g<n.batchesPerEpoch;){const x=await m.next();if(s&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${g} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){const{xs:w,ys:v}=ED(t,x.value),C={};C.batch=b,C.size=w[0].shape[0],await h.onBatchBegin(b,C);const $=[];if(n.classWeight!=null){const E=ID(n.classWeight,t.outputNames);for(let O=0;O<E.length;++O)$.push(await TD(v[O],null,E[O]))}const k=w.concat(v).concat($),T=o(k);_e(k);for(let E=0;E<l.length;++E){const O=l[E],B=T[E];C[O]=B,cn(B)}await h.onBatchEnd(b,C),yD(C),b++,g++}if(s?g>=n.batchesPerEpoch:x.done){if(a){let w;e$(n.validationData)?w=Qe(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=Qe(t.evaluate(r,i,{batchSize:n.validationBatchSize==null?d5:n.validationBatchSize,verbose:0}));for(let v=0;v<t.metricsNames.length;++v)y[`val_${t.metricsNames[v]}`]=w[v]}break}if(t.stopTraining_)break}if(await h.onEpochEnd(f,y),f++,t.stopTraining_)break}return await h.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function f5(t,e){let n=null;return e.batchesPerEpoch!=null?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function e$(t){return typeof t.iterator=="function"}function m5(t){return typeof t.next=="function"}async function g5(t,e,n){n=n||{};const s=n.batches!=null,a=t.testFunction;let r=[];if(n.verbose>0)throw new Ae("Verbose mode is not implemented yet.");N(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i=m5(e)?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const u=await i.next();if(r=U(()=>{if(u.value){const{xs:c,ys:d}=ED(t,u.value),h=c.concat(d),p=U(()=>a(h));if(_e(h),l===0)for(let m=0;m<p.length;++m)r.push(we(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const y=p[m],g=r[m];r[m]=U(()=>K(r[m],_(f,y))),l>0&&_e(g)}_e(p),o+=f,++l}return r}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<r.length;++u){const c=r[u];r[u]=ge(r[u],o),_e(c)}return Hn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ex(t){N(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function td(t,e,n){return t==null?[null]:Array.isArray(t)?t.map(s=>vo(s,e,n-e)):vo(t,e,n-e)}function d1(t,e){return U(()=>t==null?null:Array.isArray(t)?t.map(n=>d1(n,e)):sD(t,e.dtype==="int32"?e:le(e,"int32")))}function Rx(t,e){const n=[];let s=0,a=null;for(;s<t;)a=s+e,a>=t&&(a=t),n.push([s,a]),s=a;return n}function RD(t){const e=[];t instanceof kt&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(s.rank===1)e.push(Bp(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ma(t,e){if(t==null)return;const n=[];if(e instanceof kt)n.push(e.id);else if(Array.isArray(e))e.forEach(a=>n.push(a.id));else if(e!=null)for(const a in e){const r=e[a];n.push(r.id)}const s=[];if(t instanceof kt)n.indexOf(t.id)===-1&&s.push(t);else if(Array.isArray(t))t.forEach(a=>{n.indexOf(a.id)===-1&&s.push(a)});else if(t!=null)for(const a in t){const r=t[a];n.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function y5(t){return t instanceof kt}function h1(t){return Array.isArray(t)}function t$(t){return!y5(t)&&!h1(t)}function n$(t,e,n,s=!0,a=""){if(e==null||e.length===0){if(t!=null){let i=!1;if(h1(t)&&t.length>0)i=!0;else if(t$(t)){for(const o in t)if(t.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new z(`Error when checking model ${a} expected no data, but got ${t}`)}return[]}if(t==null)return e.map(i=>null);let r;if(t$(t)){t=t,r=[];for(const i of e){if(t[i]==null)throw new z(`No data provided for "${i}". Need data for each key in: ${e}`);r.push(t[i])}}else if(h1(t)){if(t=t,t.length!==e.length)throw new z(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);r=t}else{if(t=t,e.length>1)throw new z(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);r=[t]}if(r=RD(r),n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const o=r[i];if(o.shape.length!==n[i].length)throw new z(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=n[i][l];if(c!=null&&c>=0&&u!==c)throw new z(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return r}function b5(t,e,n){const s=gi(t.map(r=>r.shape[0]));s.sort();const a=gi(e.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(a.length>1)throw new z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!Ee(s,a))throw new z(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function x5(t,e,n){const s=[yb,bb,oh];for(let a=0;a<t.length;++a){const r=t[a],i=e[a],o=n[a];if(i!=null){if(i===oh&&r.shape[r.shape.length-1]===1)throw new z(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=r.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){const d=l[c],h=u[c];if(h!=null&&d!==h)throw new z(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function s$(t,e,n,s=!0,a=""){let r;if(Array.isArray(t)){if(t.length!==e.length)throw new z(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);r=t}else{if(e.length>1)throw new z(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);r=[t]}if(n!=null)for(let i=0;i<e.length;++i){if(n[i]==null)continue;const o=r[i];if(o.shape.length!==n[i].length)throw new z(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=n[i][l];if(c!=null&&c!==u)throw new z(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function w5(t,e){if(t==null||Array.isArray(t)&&t.length===0)return e.map(s=>[]);let n;if(typeof t=="string"||typeof t=="function")n=[t];else if(Array.isArray(t)||typeof t=="object")n=t;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);if(Array.isArray(n))return e.map(s=>n);{const s=[];for(const a of e){let r=n.hasOwnProperty(a)?n[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const v5="layers-model";class eu extends ga{constructor(e){super(e),this.isTraining=!1}summary(e,n,s=console.log){if(!this.built)throw new z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");s5(this,e,n,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=n5(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vi))throw new z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new z(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(Tx(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(o=>Tx(o))}else{const i=Tx(e.loss);this.outputs.forEach(o=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const o=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wo("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const o=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([o,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=w5(e.metrics,this.outputNames),r=(i,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[i]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,i])};wo("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const o=a[i];(u=>{const c="";let d,h,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const y=this.internalOutputShapes[i];y[y.length-1]===1||this.lossFunctions[i]===bb?["accuracy","acc"].indexOf(f)!==-1?h=vD:["crossentropy","ce"].indexOf(f)!==-1&&(h=jq):this.lossFunctions[i]===Vm?["accuracy","acc"].indexOf(f)!==-1?h=qq:["crossentropy","ce"].indexOf(f)!==-1&&(h=$D):["accuracy","acc"].indexOf(f)!==-1?h=SD:["crossentropy","ce"].indexOf(f)!==-1&&(h=CD);let g;["accuracy","acc"].indexOf(f)!==-1?g="acc":["crossentropy","ce"].indexOf(f)!==-1&&(g="ce"),p=h,d=c+g}else p=t5(f),d=c+Cf(f);let m;wo(d,()=>{m=p}),r(i,d,m)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,s={}){const a=s.batchSize==null?32:s.batchSize;Ex(a);const i=this.standardizeUserDataXY(e,n,!0,a);try{const o=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,o,a,s.verbose,s.steps);return Hn(u)}finally{ma(i[0],e),ma(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),g5(this,e,n)}checkNumSamples(e,n,s,a="steps"){let r;if(s!=null){if(r=null,n!=null)throw new z(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new z(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new z("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),a=s?n:[n],r=this.retrieveSymbolicTensors(a),i=new ri;if(e instanceof kt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new z(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new z(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const o=dd(r,i);return s?o:o[0]}retrieveSymbolicTensors(e){const n=Lo(null,e.length);let s=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(o=>o.name);for(let o=0;o<e.length;++o){const l=i.indexOf(e[o]);if(l!==-1&&(n[o]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw n.forEach((r,i)=>{r==null&&a.push(e[i])}),new z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return n}predictLoop(e,n=32,s=!1){return U(()=>{const a=this.checkNumSamples(e);if(s)throw new Ae("Verbose predictLoop() is not implemented yet.");const r=Rx(a,n),i=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)U(()=>{const u=r[o][0],c=r[o][1],d=td(e,u,c),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new ri(h);return dd(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return Hn(i.map(o=>Bt(o,0)))})}predict(e,n={}){const s=RD(e);s$(s,this.inputNames,this.feedInputShapes,!1);try{const a=n.batchSize==null?32:n.batchSize;return Ex(a),this.predictLoop(s,a)}finally{ma(s,e)}}predictOnBatch(e){s$(e,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,s=!0,a){if(this.optimizer_==null)throw new sa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const o=this.feedOutputShapes[i];this.feedLossFns[i]===Vm?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=n$(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=n$(n,this.feedOutputNames,r,!1,"target"),b5(e,n),x5(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!==0)throw new z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,s,a,r=!0,i){const[o,l]=this.standardizeUserDataXY(e,n,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(a!=null){const c=ID(a,this.outputNames);u=[];for(let d=0;d<c.length;++d)u.push(await TD(l[d],null,c[d]))}return[o,l,u]}testLoop(e,n,s,a=0,r){return U(()=>{const i=this.checkNumSamples(n,s,r,"steps"),o=[];if(a>0)throw new Ae("Verbose mode is not implemented yet.");if(r!=null)throw new Ae("steps mode in testLoop() is not implemented yet");{const l=Rx(i,s),u=Mn(Ta(0,i));for(let c=0;c<l.length;++c){const d=l[c][0],h=l[c][1],p=vo(u,d,h-d),f=d1(n,p),m=e(f);if(c===0)for(let y=0;y<m.length;++y)o.push(we(0));for(let y=0;y<m.length;++y){const g=m[y];o[y]=K(o[y],_(h-d,g))}}for(let c=0;c<o.length;++c)o[c]=ge(o[c],i)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,n=[];for(let s=0;s<e.length;++s){const a=e[s];let r=a;if(V2(e,a)>1){const i=V2(e.slice(0,s),a);r+=`_${i}`}n.push(r)}return n}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],o=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new ri(d),p=dd(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const y=this.lossFunctions[m];let g=y(a[m],p[m]);r[m]!=null&&(g=c5(g,r[m]));const b=Dt(g);n.push(b),m===0?f=g:f=K(f,g)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=n[m];else{const g=this.metricsTensors[m][0],b=this.metricsTensors[m][1];y=Dt(g(a[b],p[b]))}cn(y),i.push(y)}return f=Dt(f),this.calculateLosses().forEach(m=>{f=K(f,m)}),f},l=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(o,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>U(()=>{const n=[];let s;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:a[u]});const o=new ri(i),l=dd(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],d=Dt(c(r[u],l[u]));u===0?s=d:s=K(s,d),n.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],d=this.metricsTensors[u][1],h=Dt(c(r[d],l[d]));n.push(h)}return n})}async fit(e,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,o,l,u,c,d,h;try{const p=s.batchSize==null?32:s.batchSize;Ex(p);const m=await this.standardizeUserData(e,n,s.sampleWeight,s.classWeight,!1,p);a=m[0],r=m[1],h=m[2];let y=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new Ae("validationData including sample weights is not supported yet."):new z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const E=await this.standardizeUserData(l,u,null,null,!0,p);c=E[0],d=E[1],g=c.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const T=Math.floor(a[0].shape[0]*(1-s.validationSplit)),E=a[0].shape[0];c=td(a,T,E),i=a,a=td(a,0,T),d=td(r,T,E),o=r,r=td(r,0,T),g=c.concat(d)}else s.validationSteps!=null&&(y=!0);const b=a.concat(r).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let v,C;y?(this.makeTestFunction(),v=this.testFunction,C=w.slice().concat(w.map(T=>"val_"+T))):(v=null,g=[],C=w.slice());const $=bD(s.callbacks,s.yieldEvery);return await this.fitLoop(x,b,w,p,s.epochs,s.verbose,$,v,g,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,ma(a,e),ma(r,n),ma(i,e),ma(o,n),ma(c,l),ma(d,u),h!=null&&_e(h)}}async fitLoop(e,n,s,a,r,i,o,l,u,c,d,h,p,f){a==null&&(a=32),r==null&&(r=1),c==null&&(c=!0),h==null&&(h=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(n,a,p,"steps_per_epoch");let g;y!=null&&(g=Ta(0,y)),i==null&&(i=1);const{callbackList:b,history:x}=xD(o,i,r,h,y,p,a,m,d);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let w=h;w<r;++w){await b.onEpochBegin(w);const v={};if(p!=null)throw new Ae("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Ae("batch shuffling is not implemneted yet");c&&fP(g);const C=Mn(g),$=Rx(y,a);for(let k=0;k<$.length;++k){const T={};if(await b.onBatchBegin(k,T),U(()=>{const E=$[k][0],O=$[k][1],B=vo(C,E,O-E);T.batch=k,T.size=O-E;const W=d1(n,B),V=e(W);for(let G=0;G<s.length;++G){const D=s[G],H=V[G];T[D]=H,cn(H)}if(k===$.length-1&&m){const G=this.testLoop(l,u,a);for(let D=0;D<s.length;++D){const H=s[D],P=G[D];cn(P),v["val_"+H]=P}}}),await b.onBatchEnd(k,T),yD(T),this.stopTraining_)break}C.dispose()}if(await b.onEpochEnd(w,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,n){return p5(this,e,n)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),a=s[0],r=s[1],o=this.makeTrainFunction()(a.concat(r)),l=[];for(const u of o){const c=await u.data();l.push(c[0])}return _e(o),ma(s[0],e),ma(s[1],n),Hn(l)}getNamedWeights(e){const n=[],s=e!=null&&e.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||n.push({name:a[i].originalName,tensor:r[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=$2().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-$2().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=pr(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>pr(n))}else{const n=Object.keys(this.loss);e={};const s=this.loss;for(const a of n)if(typeof s[a]=="string")e[a]=pr(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[pr(Cf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>pr(Cf(e)));{const e={};for(const n in this.metrics)e[n]=pr(Cf(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=u1(e.optimizer_config),s=Tr(n);let a;if(typeof e.loss=="string")a=so(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(i=>so(i));else if(e.loss!=null){a={};for(const i in e.loss)a[i]=so(e.loss[i])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(i=>so(i));else if(e.metrics!=null){r={};for(const i in e.metrics)r[i]=so(e.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(e,n){if(typeof e=="string"){const u=VT(e);if(u.length===0)throw new z(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new z(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await j0(this.getNamedWeights(n)),o={modelTopology:this.toJSON(null,!1),format:v5,generatedBy:`TensorFlow.js tfjs-layers v${kD}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:d}=await j0(await this.optimizer.getWeights(),u);s.specs.push(...d),s.data=PT([s.data,c])}return this.userDefinedMetadata!=null&&(Z2(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,e.save(o)}setUserDefinedMetadata(e){Z2(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}eu.className="Model";Z(eu);class DD extends eu{}DD.className="Functional";Z(DD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lh extends eu{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:fb("sequential_"),e.layers!=null)for(const n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new z(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof lh||e instanceof eu;let s;if(n){if(s=e,s.outputs.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=Cq({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=hD(this.outputs[0])}this.inboundNodes=[],new gb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Lo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(Xe(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new eu({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,s=console.log){this.built||this.build(),super.summary(e,n,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,s={}){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.evaluate(e,n,s)}async evaluateDataset(e,n){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,s={}){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.fit(e,n,s)}async fitDataset(e,n){if(!this.built)throw new sa("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,s={},a=!1){let r,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new z("Legacy serialization format not supported yet.");r=n}else N(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=n.layers,delete n.layers,i=n;const o=new e(i);if(!(o instanceof lh))throw new Ae(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of r){const c=Tr(l,void 0,a);a&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),e.push(s)}return{name:this.name,layers:e}}}lh.className="Sequential";Z(lh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Dn=class extends _c{getConfig(){return{}}};class AD extends Dn{apply(e,n=1){return oq(e,n)}}AD.className="elu";Z(AD);class _D extends Dn{apply(e){return $v(e)}}_D.className="selu";Z(_D);class OD extends Dn{apply(e){return ar(e)}}OD.className="relu";Z(OD);class FD extends Dn{apply(e){return U(()=>Fo(6,ar(e)))}}FD.className="relu6";Z(FD);class zD extends Dn{apply(e){return e}}zD.className="linear";Z(zD);class LD extends Dn{apply(e){return qa(e)}}LD.className="sigmoid";Z(LD);class PD extends Dn{apply(e){return uq(e)}}PD.className="hardSigmoid";Z(PD);class MD extends Dn{apply(e){return Rc(e)}}MD.className="softplus";Z(MD);class BD extends Dn{apply(e){return lq(e)}}BD.className="softsign";Z(BD);class VD extends Dn{apply(e){return Oo(e)}}VD.className="tanh";Z(VD);let lS=class extends Dn{apply(e,n=-1){return Ly(e,n)}};lS.className="softmax";Z(lS);class UD extends Dn{apply(e,n=-1){return uv(e,n)}}UD.className="logSoftmax";Z(UD);class WD extends Dn{apply(e){return U(()=>U(()=>{const n=Math.sqrt(2),s=_(.5,K(1,iv(ge(e,n))));return _(e,s)}))}}WD.className="gelu";Z(WD);class GD extends Dn{apply(e){return U(()=>_(.5,_(e,K(1,Oo(_(Cn(ge(2,Math.PI)),K(e,_(.044715,Fr(e,3)))))))))}}GD.className="gelu_new";Z(GD);class HD extends Dn{apply(e){return U(()=>_(e,Oo(Rc(e))))}}HD.className="mish";Z(HD);class jD extends Dn{apply(e,n=1){return U(()=>_(qa(_(e,n)),e))}}jD.className="swish";Z(jD);function Ti(t){return t.getClassName()}function Dx(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"activation")}function Ei(t){if(t==null){const e={};return e.className="linear",e.config={},Dx(e)}if(typeof t=="string"){const e={};return e.className=t,e.config={},Dx(e)}else return t instanceof Dn?t:Dx(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function S5(t){if(t!=null&&typeof t!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}class qD extends _c{}class XD extends qD{constructor(e){super(),S5(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return U(()=>{let n=Ht([1]);return this.hasL1&&(n=K(n,fe(_(this.l1,Kt(e))))),this.hasL2&&(n=K(n,fe(_(this.l2,Vp(e))))),F(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}XD.className="L1L2";Z(XD);const a$={l1l2:"L1L2"};function rt(t){return Xv(t)}function r$(t,e={}){return Mp(t,Ks.getMap().classNameMap,e,"regularizer")}function vt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in a$?a$[t]:t,config:{}};return r$(n)}else return t instanceof qD?t:r$(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KD extends Le{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Ne(e);let s=ar(e);return this.maxValue!=null&&(s=ds(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}KD.className="ReLU";Z(KD);class YD extends Le{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ne(e);return ky(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}YD.className="LeakyReLU";Z(YD);class QD extends Le{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vt(e.alphaRegularizer),this.alphaConstraint=tn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new z(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Xe(e);const n=e.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)n[a-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)s[a]=e[a];this.inputSpec=[new Qt({ndim:e.length,axes:s})],this.built=!0}call(e,n){return e=Ne(e),_y(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Tt(this.alphaInitializer),alphaRegularizer:rt(this.alphaRegularizer),alphaConstraint:en(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}QD.className="PReLU";Z(QD);let ZD=class extends Le{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ae(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ne(e);return Ap(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};ZD.className="ELU";Z(ZD);class JD extends Le{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){const s=Ne(e);return _(s,le(ws(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}JD.className="ThresholdedReLU";Z(JD);class eA extends Le{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new lS().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){return U(()=>{let s=Ne(e);const a=n.mask;if(a!=null){const r=_(de(Kn(s.shape),le(a,s.dtype)),we(-1e9));s=K(s,r)}return this.axis instanceof Array?this.axis.length>1?hs(de(s,Ty(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}eA.className="Softmax";Z(eA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tu(t,e,n){if(typeof t=="number")return Lo(t,e);if(t.length!==e)throw new z(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if(!sq(a))throw new z(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t}function Ca(t,e,n,s,a=1){if(t==null)return t;const r=e+(e-1)*(a-1);let i;return n==="same"?i=t:i=t-r+1,Math.floor((i+s-1)/s)}function Ma(t,e,n,s){if(t==null)return null;if(s==="valid")t=t*e+Ii([n-e,0]);else if(s==="same")t=t*e;else throw new z(`Unsupport padding mode: ${s}.`);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uS(t,e){return U(()=>(Ut(e),e==="channelsFirst"?Ue(t,[0,2,3,1]):t))}function tA(t,e){return U(()=>(Ut(e),e==="channelsFirst"?Ue(t,[0,2,3,4,1]):t))}function C5(t,e,n,s=1,a="valid",r,i=1){return U(()=>{if(r==null&&(r=Ea()),Ut(r),t.shape.length!==3)throw new z(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(e.shape.length!==3)throw new z(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new z(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if(r==="channelsFirst"&&(t=Ue(t,[0,2,1])),a==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=tv(t,e,s,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Fa(o,n)),o})}function i$(t,e,n,s=[1,1],a="valid",r,i,o=null){return U(()=>{if(r==null&&(r=Ea()),Ut(r),t.rank!==3&&t.rank!==4)throw new z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(e.rank!==3&&e.rank!==4)throw new z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=uS(t,r);if(a==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=KE({x:l,filter:e,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),r==="channelsFirst"&&(l=Ue(l,[0,3,1,2])),l})}function $5(t,e,n,s=[1,1,1],a="valid",r,i){return U(()=>{if(r==null&&(r=Ea()),Ut(r),t.rank!==4&&t.rank!==5)throw new z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(e.rank!==4&&e.rank!==5)throw new z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=tA(t,r);if(a==="causal")throw new Ae("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=fE(o,e,s,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Fa(o,n)),r==="channelsFirst"&&(o=Ue(o,[0,4,1,2,3])),o})}class xb extends Le{constructor(e,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",xb.verifyArgs(n),this.rank=e,dn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ae(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tu(n.kernelSize,e,"kernelSize"),this.strides=tu(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,Fs(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Ut(this.dataFormat),this.activation=Ei(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=xt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=tn(n.biasConstraint),this.biasRegularizer=vt(n.biasRegularizer),this.activityRegularizer=vt(n.activityRegularizer),this.dilationRate=tu(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Pa("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Kv(e.kernelSize,"number",1,3))throw new z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ti(this.activation),useBias:this.useBias,biasInitializer:Tt(this.biasInitializer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),biasConstraint:en(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}class Oc extends xb{constructor(e,n){super(e,n),this.kernel=null,Oc.verifyArgs(n),this.filters=n.filters,dn(this.filters,"filters"),this.kernelInitializer=xt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=tn(n.kernelConstraint),this.kernelRegularizer=vt(n.kernelRegularizer)}build(e){e=Xe(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new z(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(e,n){return U(()=>{e=Ne(e);let s;const a=this.bias==null?null:this.bias.read(),r=QR(this.activation.getClassName());if(r!=null&&this.rank===2)s=i$(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=C5(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=i$(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=$5(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ae("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Xe(e);const n=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const i=Ca(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);n.push(i)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(n),a.push(this.filters)):(a.push(this.filters),a=a.concat(n)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Tt(this.kernelInitializer),kernelRegularizer:rt(this.kernelRegularizer),kernelConstraint:en(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Hp extends Oc{constructor(e){super(2,e),Hp.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Kv(e.kernelSize,"number",1,2))throw new z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Hp.className="Conv2D";Z(Hp);class jp extends Oc{constructor(e){super(3,e),jp.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}jp.className="Conv3D";Z(jp);class nA extends Hp{constructor(e){if(super(e),this.inputSpec=[new Qt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Xe(e),e.length!==4)throw new z("Input should have rank 4; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:4,axes:{[n]:s}})],this.built=!0}call(e,n){return U(()=>{let s=Ne(e);if(s.shape.length!==4)throw new z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,o;this.dataFormat==="channelsFirst"?(i=2,o=3):(i=1,o=2);const l=a[i],u=a[o],c=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Ma(l,h,c,this.padding),m=Ma(u,p,d,this.padding),y=[r,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,1]));let g=sv(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ue(g,[0,3,1,2])),this.bias!=null&&(g=Fa(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Xe(e);const n=e.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[s]=this.filters,n[a]=Ma(n[a],l,i,this.padding),n[r]=Ma(n[r],u,o,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}nA.className="Conv2DTranspose";Z(nA);class sA extends jp{constructor(e){if(super(e),this.inputSpec=[new Qt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Xe(e),e.length!==5)throw new z("Input should have rank 5; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:5,axes:{[n]:s}})],this.built=!0}call(e,n){return U(()=>{let s=Ne(e);if(s.shape.length!==5)throw new z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,o,l;this.dataFormat==="channelsFirst"?(l=2,i=3,o=4):(l=1,i=2,o=3);const u=a[l],c=a[i],d=a[o],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],y=this.strides[1],g=this.strides[2],b=Ma(u,m,h,this.padding),x=Ma(c,y,p,this.padding),w=Ma(d,g,f,this.padding),v=[r,b,x,w,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,4,1]));let C=gE(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Ue(C,[0,4,1,2,3])),this.bias!==null&&(C=Fa(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(e){e=Xe(e);const n=e.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],d=this.strides[1],h=this.strides[2];return n[s]=this.filters,n[a]=Ma(n[a],c,o,this.padding),n[r]=Ma(n[r],d,l,this.padding),n[i]=Ma(n[i],h,u,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}sA.className="Conv3DTranspose";Z(sA);class aA extends Oc{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=xt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vt(n.depthwiseRegularizer),this.depthwiseConstraint=tn(n.depthwiseConstraint),this.pointwiseInitializer=xt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vt(n.pointwiseRegularizer),this.pointwiseConstraint=tn(n.pointwiseConstraint)}build(e){if(e=Xe(e),e.length<this.rank+2)throw new z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);const s=e[n],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Qt({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(e,n){return U(()=>{e=Ne(e);let s;if(this.rank===1)throw new Ae("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),s=Nv(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Fa(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ue(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.pointwiseInitializer=Tt(this.pointwiseInitializer),e.depthwiseRegularizer=rt(this.depthwiseRegularizer),e.pointwiseRegularizer=rt(this.pointwiseRegularizer),e.depthwiseConstraint=en(this.depthwiseConstraint),e.pointwiseConstraint=en(this.pointwiseConstraint),e}}aA.className="SeparableConv";class rA extends aA{constructor(e){super(2,e)}}rA.className="SeparableConv2D";Z(rA);class wb extends Oc{constructor(e){super(1,e),wb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Kv(e.kernelSize,"number",1,1))throw new z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}wb.className="Conv1D";Z(wb);class iA extends Le{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return U(()=>{if(e=Ne(e),this.dataFormat==="channelsLast"){const s=Sf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sf(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Sf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sf(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}iA.className="Cropping2D";Z(iA);class oA extends Le{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,eq(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const n=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,s]}else{const n=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],n,s,e[3]]}}call(e,n){return U(()=>{let s=Ne(e);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=Ue(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],o=this.interpolation==="nearest"?na.resizeNearestNeighbor(s,[r,i]):na.resizeBilinear(s,[r,i]);return Ue(o,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?na.resizeNearestNeighbor(s,[r,i]):na.resizeBilinear(s,[r,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}oA.className="UpSampling2D";Z(oA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N5(t,e,n=[1,1],s="valid",a,r){return U(()=>{a==null&&(a=Ea()),Ut(a);let i=uS(t,a);if(t.rank!==4)throw new z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(e.rank!==4)throw new z(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Dp(i,e,n,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}class lA extends xb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=xt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=tn(e.depthwiseConstraint),this.depthwiseRegularizer=vt(e.depthwiseRegularizer)}build(e){if(e=Xe(e),e.length<4)throw new z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);const s=e[n],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return U(()=>{e=Ne(e);let s=N5(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Fa(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Xe(e);const n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ca(n,this.kernelSize[0],this.padding,this.strides[0]),i=Ca(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,r,i]:[e[0],r,i,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.depthwiseRegularizer=rt(this.depthwiseRegularizer),e.depthwiseConstraint=en(this.depthwiseRegularizer),e}}lA.className="DepthwiseConv2D";Z(lA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uA(t,e,n,s){if(Array.isArray(t)){if(e!=null||n!=null)throw new z("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return e=a(e),n=a(n),{inputs:t,initialState:e,constants:n}}function cA(t,e,n,s=!1,a,r,i=!1,o=!1){return U(()=>{const l=e.shape.length;if(l<3)throw new z(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ta(2,l));e=Ue(e,u),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=le(le(a,"bool"),"float32"),a.rank===l-1&&(a=Fn(a,-1)),a=Ue(a,u)),s&&(e=ca(e,0),a!=null&&(a=ca(a,0)));const c=[];let d,h=n;const p=e.shape[0],f=da(e);let m;a!=null&&(m=da(a));for(let g=0;g<p;++g){const b=f[g],x=U(()=>t(b,h));if(a==null)d=x[0],h=x[1];else{const w=U(()=>{const v=m[g],C=de(As(v),v),$=K(_(x[0],v),_(h[0],C)),k=h.map((T,E)=>K(_(x[1][E],v),_(T,C)));return{output:$,newStates:k}});d=w.output,h=w.newStates}o&&c.push(d)}let y;return o&&(y=ps(c,1)),[d,y,h]})}class Ui extends Le{constructor(e){super(e);let n;if(e.cell==null)throw new z("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new hS({cells:e.cell}):n=e.cell,n.stateSize==null)throw new z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ta(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){i1(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let a;if(this.returnSequences?a=[e[0],e[1],s]:a=[e[0],s],this.returnState){const r=[];for(const i of n)r.push([e[0],i]);return[a].concat(r)}else return a}computeMask(e,n){return U(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<e;++s)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ae("Constants support is not implemented in RNN yet.");i1(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Qt({shape:[n,null,...s]});const a=[e[0]].concat(e.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ee(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new Qt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){U(()=>{if(!this.stateful)throw new La("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Ht([s,a])):this.states_=[Ht([s,this.cell.stateSize])];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Ht([s,a])):this.states_[0]=Ht([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let a=0;a<this.states_.length;++a){const r=e[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,o=[s,i];if(!Ee(r.shape,o))throw new z(`State ${a} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>cn(a.clone()))})}apply(e,n){let s=n==null?null:n.initialState,a=n==null?null:n.constants;n==null&&(n={});const r=uA(e,s,a,this.numConstants);e=r.inputs,s=r.initialState,a=r.constants;let i=[],o=[];if(s!=null){n.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Qt({shape:u.shape}));o=o.concat(this.stateSpec)}if(a!=null&&(n.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof Za){const u=[e].concat(i),c=this.inputSpec.concat(o),d=this.inputSpec;this.inputSpec=c;const h=super.apply(u,n);return this.inputSpec=d,h}else return super.apply(e,n)}call(e,n){return U(()=>{const s=n==null?null:n.mask,a=n==null?null:n.training;let r=n==null?null:n.initialState;e=Ne(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new z(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},u=cA((f,m)=>{const y=this.cell.call([f].concat(m),o);return[y[0],y.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],d=u[1],h=u[2];this.stateful&&this.resetStates(h,a);const p=this.returnSequences?d:c;return this.returnState?[p].concat(h):p})}getInitialState(e){return U(()=>{let n=Ht(e.shape);return n=fe(n,[1,2]),n=Bp(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?a1(n,[1,s]):n):this.cell.stateSize>1?[a1(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Ui.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),n)}static fromConfig(e,n,s={}){const a=n.cell,r=Tr(a,s);return new e(Object.assign(n,{cell:r}))}}Ui.className="RNN";Z(Ui);class vb extends Le{}class cS extends vb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dn(this.units,"units"),this.activation=Ei(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=yu([1,Ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yu([1,Ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xe(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return U(()=>{if(e=e,e.length!==2)throw new z(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const a=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,o=this.recurrentDropoutMask;i!=null?r=Ka(_(e,i),this.kernel.read()):r=Ka(e,this.kernel.read()),this.bias!=null&&(r=Fa(r,this.bias.read())),o!=null&&(s=_(s,o));let l=K(r,Ka(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Ti(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:rt(this.kernelRegularizer),recurrentRegularizer:rt(this.recurrentRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),n)}}cS.className="SimpleRNNCell";Z(cS);class dA extends Ui{constructor(e){e.cell=new cS(e),super(e)}call(e,n){return U(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,n){return new e(n)}}dA.className="SimpleRNN";Z(dA);class dS extends vb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new z("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dn(this.units,"units"),this.activation=Ei(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ei(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=yu([1,Ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yu([1,Ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Xe(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return U(()=>{if(e=e,e.length!==2)throw new z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training==null?!1:n.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=_(e,r[0]));let c=Ka(e,this.kernel.read());this.useBias&&(c=Fa(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=_(a,i[0]));const d=this.recurrentKernel.read(),[h,p]=us(d,[2*this.units,this.units],d.rank-1),f=Ka(a,h),[m,y,g]=us(c,3,c.rank-1),[b,x]=us(f,2,f.rank-1);o=this.recurrentActivation.apply(K(m,b)),l=this.recurrentActivation.apply(K(y,x));const w=Ka(_(l,a),p);u=this.activation.apply(K(g,w));const v=K(_(o,a),_(K(1,yt(o)),u));return[v,v]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Ti(this.activation),recurrentActivation:Ti(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:rt(this.kernelRegularizer),recurrentRegularizer:rt(this.recurrentRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),n)}}dS.className="GRUCell";Z(dS);class hA extends Ui{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new dS(e),super(e)}call(e,n){return U(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}hA.className="GRU";Z(hA);class Sb extends vb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dn(this.units,"units"),this.activation=Ei(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ei(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=yu([1,Ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yu([1,Ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=Xe(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(n=class extends ha{apply(l,u){const c=r.apply([i]),d=new Qv().apply([i]),h=r.apply([i*2]);return W2(W2(c,d),h)}},n.className="CustomInit",n)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return U(()=>{const s=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,d;0<this.dropout&&this.dropout<1&&(e=_(e,i[0]));let h=Ka(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=_(a,o[0])),h=K(h,Ka(a,this.recurrentKernel.read())),this.useBias&&(h=Fa(h,this.bias.read()));const[p,f,m,y]=us(h,4,h.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=K(_(u,r),_(l,this.activation.apply(m))),d=this.recurrentActivation.apply(y);const g=_(d,this.activation.apply(c));return[g,g,c]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:Ti(this.activation),recurrentActivation:Ti(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:rt(this.kernelRegularizer),recurrentRegularizer:rt(this.recurrentRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),n)}}Sb.className="LSTMCell";Z(Sb);class pA extends Ui{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sb(e),super(e)}call(e,n){return U(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}pA.className="LSTM";Z(pA);class hS extends vb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return U(()=>{e=e;let s=e.slice(1);const a=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?a.push(s.splice(0,o.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=a[o],o===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,n),r.push(i.slice(1))}s=[];for(const o of r.slice().reverse())s.push(...o);return[i[0]].concat(s)})}build(e){i1(e)&&(e=e[0]),e=e;let n;this.cells.forEach((s,a)=>{wo(`RNNCell_${a}`,()=>{s.build(e),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){const e=super.getConfig(),n=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(n)};return Object.assign(Object.assign({},e),a)}static fromConfig(e,n,s={}){const a=[];for(const r of n.cells)a.push(Tr(r,s));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(e)}return e}getWeights(){const e=[];for(const n of this.cells)e.push(...n.weights);return o1(e)}setWeights(e){const n=[];for(const s of this.cells){const a=s.weights.length,r=e.splice(a);for(let i=0;i<s.weights.length;++i)n.push([s.weights[i],r[i]])}aS(n)}}hS.className="StackedRNNCells";Z(hS);function Ri(t){const{ones:e,rate:n,training:s=!1,count:a=1,dropoutFunc:r}=t,i=()=>r!=null?r(e(),n):aD(e(),n),o=()=>Up(i,e,s);return!a||a<=1?cn(o().clone()):Array(a).fill(void 0).map(o).map(u=>cn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var k5=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(t);a<s.length;a++)e.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(t,s[a])&&(n[s[a]]=t[s[a]]);return n};class fA extends Ui{constructor(e){if(e.unroll)throw new Ae("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ae("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Qt({ndim:5})]}call(e,n){return U(()=>{if(this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new z("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,a=n==null?null:n.training,r=n==null?null:n.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return U(()=>{const{stateSize:n}=this.cell,s=e.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=Ht(r);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){U(()=>{if(!this.stateful)throw new La("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_=[Ht(r)];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_[0]=Ht(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let o=0;o<this.states_.length;++o){const l=e[o],u=r;if(!Ee(l.shape,u))throw new z(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[o]=l}}this.states_=this.states_.map(o=>cn(o.clone()))})}computeSingleOutputShape(e){const{dataFormat:n,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:o}=this.cell,l=n==="channelsFirst",u=e[l?3:2],c=e[l?4:3],d=Ca(u,a[0],r,i[0],o[0]),h=Ca(c,a[1],r,i[1],o[1]);return[...e.slice(0,2),...l?[s,d,h]:[d,h,s]]}}fA.className="ConvRNN2D";class pS extends Sb{constructor(e){const{filters:n,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:n})),this.filters=n,dn(this.filters,"filters"),this.kernelSize=tu(s,2,"kernelSize"),this.kernelSize.forEach(l=>dn(l,"kernelSize")),this.strides=tu(a||1,2,"strides"),this.strides.forEach(l=>dn(l,"strides")),this.padding=r||"valid",Fs(this.padding),this.dataFormat=i||"channelsLast",Ut(this.dataFormat),this.dilationRate=tu(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>dn(l,"dilationRate"))}build(e){var n;e=Xe(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new z(`The channel dimension of the input should be defined. Found ${e[s]}`);const a=e[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(n=class extends ha{apply(h,p){const f=u.apply([c]),m=Kn([c]),y=u.apply([c*2]);return Yv([f,m,y])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return U(()=>{if(e.length!==3)throw new z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,a=e[0],r=e[1],i=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ri({ones:()=>As(a),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(X,Q,ee)=>!Q||!Q[ee]?X:_(Q[ee],X);let c=u(a,l,0),d=u(a,l,1),h=u(a,l,2),p=u(a,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ri({ones:()=>As(r),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(r,f,0),y=u(r,f,1),g=u(r,f,2),b=u(r,f,3);const x=3,[w,v,C,$]=us(this.kernel.read(),o,x),[k,T,E,O]=this.useBias?us(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,w,k,this.padding),d=this.inputConv(d,v,T,this.padding),h=this.inputConv(h,C,E,this.padding),p=this.inputConv(p,$,O,this.padding);const[B,W,V,G]=us(this.recurrentKernel.read(),o,x);m=this.recurrentConv(m,B),y=this.recurrentConv(y,W),g=this.recurrentConv(g,V),b=this.recurrentConv(b,G);const D=this.recurrentActivation.apply(K(c,m)),H=this.recurrentActivation.apply(K(d,y)),P=K(_(H,i),_(D,this.activation.apply(K(h,g)))),j=_(this.recurrentActivation.apply(K(p,b)),this.activation.apply(P));return[j,j,P]})}getConfig(){const e=super.getConfig(),n=k5(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,n,s,a){const r=Ni(e,n,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Fa(r,s,this.dataFormat):r}recurrentConv(e,n){return Ni(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}pS.className="ConvLSTM2DCell";Z(pS);class mA extends fA{constructor(e){const n=new pS(e);super(Object.assign(Object.assign({},e),{cell:n}))}static fromConfig(e,n){return new e(n)}}mA.className="ConvLSTM2D";Z(mA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fS extends Le{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const n=e.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?n[a]:this.noiseShape[a]);return s}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);if(0<this.rate&&this.rate<1){const a=n.training==null?!1:n.training,r=this.getNoiseShape(s);return Up(()=>aD(s,this.rate,r,this.seed),()=>s,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}fS.className="Dropout";Z(fS);class gA extends fS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const n=e.shape;return[n[0],1,n[2]]}}gA.className="SpatialDropout1D";Z(gA);class yA extends Le{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,dn(this.units,"units"),this.activation=Ei(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=tn(e.kernelConstraint),this.biasConstraint=tn(e.biasConstraint),this.kernelRegularizer=vt(e.kernelRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Xe(e);const n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=Xe(e);const n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e),a=QR(this.activation.getClassName());let r;return a!=null?r=Ka(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ka(s,this.kernel.read()),this.bias!=null&&(r=Fa(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Ti(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:rt(this.kernelRegularizer),biasRegularizer:rt(this.biasRegularizer),activityRegularizer:rt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),biasConstraint:en(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}yA.className="Dense";Z(yA);class bA extends Le{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Xe(e);for(const n of e.slice(1))if(n==null)throw new z(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],yi(e,1)]}call(e,n){return U(()=>{this.invokeCallHook(e,n);let s=Ne(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=Ue(s,a)}return iq(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(e,n),e}}bA.className="Flatten";Z(bA);class xA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ei(e.activation)}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);return this.activation.apply(s)})}getConfig(){const e={activation:Ti(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}xA.className="Activation";Z(xA);class wA extends Le{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return U(()=>(e=Ne(e),aq(e,this.n)))}getConfig(){const e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}wA.className="RepeatVector";Z(wA);class vA extends Le{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){const s="Total size of new array must be unchanged.",a=n.slice();let r=1,i=null;for(let l=0;l<a.length;++l){const u=a[l];if(this.isUnknown(u))if(i===null)i=l;else throw new z("Can only specifiy one unknown dimension.");else r*=u}const o=yi(e);if(i!==null){if(r===0||o%r!==0)throw new z(s);a[i]=o/r}else if(o!==r)throw new z(s);return a}computeOutputShape(e){let n=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return F(s,r)})}getConfig(){const e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}vA.className="Reshape";Z(vA);class SA extends Le{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const n=Ta(1,e.dims.length+1);if(!Ee(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Xe(e);const n=e.slice();return this.dims.forEach((s,a)=>{n[a+1]=e[s]}),n}call(e,n){return Ue(Ne(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}SA.className="Permute";Z(SA);class CA extends Le{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){const s=Ne(e);return Om(mu(s,this.maskValue),-1)}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e),i=Om(mu(s,this.maskValue),-1,!0);return _(s,le(i,s.dtype))})}}CA.className="Masking";Z(CA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $A extends Le{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(Qe(e.inputLength))}this.inputDim=e.inputDim,dn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dn(this.outputDim,"outputDim"),this.embeddingsInitializer=xt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vt(e.embeddingsRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.embeddingsConstraint=tn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return U(()=>this.maskZero?(e=Ne(e),mu(e,We(e))):null)}computeOutputShape(e){if(e=Xe(e),this.inputLength==null)return[...e,this.outputDim];const n=Qe(this.inputLength);if(n.length!==e.length-1)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let a=0;a<n.length;++a){const r=n[a],i=e[a+1];if(r!=null&&i!=null&&r!==i)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(n[s]=i),s++}}return[e[0],...n,this.outputDim]}call(e,n){return U(()=>{this.invokeCallHook(e,n);let s=Ne(e);s.dtype!=="int32"&&(s=Xa(s,"int32"));const a=sD(this.embeddings.read(),F(s,[s.size]));return F(a,Xe(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tt(this.embeddingsInitializer),embeddingsRegularizer:rt(this.embeddingsRegularizer),activityRegularizer:rt(this.activityRegularizer),embeddingsConstraint:en(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}$A.className="Embedding";Z($A);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ol extends Le{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ae}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;const s=e.slice(0,e.length-n.length);for(let a=0;a<n.length;++a){const r=e[e.length-n.length+a],i=n[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new z("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Xe(e)]),e=e,e.length<2)throw new z(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(const r of e)r!=null&&r[0]!==null&&n.push(r[0]);if(n=gi(n),n.length>1)throw new z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=e.map(r=>r.length);e.indexOf(null)===-1&&gi(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return U(()=>{if(e=e,this.reshapeRequired){const s=[],a=e.map(r=>r.rank);if(a.indexOf(null)===-1){const r=Ii(a);for(let i of e){const o=i.rank;for(let l=0;l<r-o;++l)i=Bp(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,d=c[0],h=c.slice(1).concat([d]);let p=F(l,[d].concat(yi(c.slice(1))));p=Ue(p,[1,0]),p=F(p,h),s.push(p),r=!0}else if(u>1){const c=Ta(1,u).concat([0]);s.push(Ue(l,c)),r=!0}else s.push(l)}let i=this.mergeFunction(s);const o=i.rank;if(r){if(o==null){const l=i.shape,u=l.length,c=l[u-1],d=[c].concat(l.slice(0,l.length-1));i=F(Ue(F(i,[-1,c]),[1,0]),d)}else if(o>1){const l=[o-1].concat(Ta(0,o-1));i=Ue(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let a=1;a<e.length;++a){const r=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let s=[];for(const a of e)a!=null&&a[0]!==null&&s.push(a[0]);return s=gi(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(e,n){return U(()=>{if(n==null)return null;if(!Array.isArray(n))throw new z("`mask` should be an Array");if(!Array.isArray(e))throw new z("`inputs` should be an Array");if(n.length!==e.length)throw new z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(a=>a==null))return null;n=n.map(a=>a==null?a:Fn(a,0));let s=n[0];for(let a=1;a<n.length-1;++a)s=Qa(s,n[a]);return s})}}class NA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=K(n,e[s]);return n})}}NA.className="Add";Z(NA);class kA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=_(n,e[s]);return n})}}kA.className="Multiply";Z(kA);class IA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=K(n,e[s]);return _(1/e.length,n)})}}IA.className="Average";Z(IA);class TA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Pr(n,e[s]);return n})}}TA.className="Maximum";Z(TA);class EA extends ol{constructor(e){super(e)}mergeFunction(e){return U(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Fo(n,e[s]);return n})}}EA.className="Minimum";Z(EA);class RA extends ol{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new z("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(const a of e)if(a!=null){n=!1;break}if(n)return;const s=[];for(let a=0;a<e.length;++a){const r=e[a].slice();r.splice(this.axis,1);let i=!1;for(const o of s)if(Ee(o,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return U(()=>Yv(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new z("A `Concatenate` layer should be called on a list of inputs.");const n=e,s=n[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of n.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new z("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new z("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new z(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return U(()=>{let s=!0;if(n.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<e.length;++i)n[i]==null?a.push(le(As(e[i]),"bool")):n[i].rank<e[i].rank?a.push(Fn(n[i],-1)):a.push(n[i]);const r=Bt(a,this.axis);return Jw(r,-1,!1)})}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}RA.className="Concatenate";Z(RA);function nd(t,e){for(;t<0;)t+=e;return t}function I5(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Ae("batchDot is not implemented for tensors of 4D or higher rank yet");if(N(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),N(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof n=="number"&&(n=[n,n]),t.dtype==="complex64"||e.dtype==="complex64")throw new Ae("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,a=e.shape.length;n==null&&(n=[s-1,a-2]);const r=n;return U(()=>{let i;if(s>a){i=s-a;const l=[];for(let u=0;u<i;++u)l.push(1);e=F(e,e.shape.concat(l))}else if(a>s){i=a-s;const l=[];for(let u=0;u<i;++u)l.push(1);t=F(t,t.shape.concat(l))}else i=0;let o;if(t.shape.length===2&&e.shape.length===2)r[0]===r[1]?o=fe(_(t,e),r[0]):o=fe(_(Ue(t,[1,0]),e),r[1]);else{const l=r[0]!==t.shape.length-1,u=r[1]===e.shape.length-1;o=Pe(t,e,l,u)}if(i>0){let l;s>a?l=s+a-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);o=nl(o,u)}return o.shape.length===1&&(o=Fn(o,1)),o})}class DA extends ol{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(n,s);if(n[a[0]]!==s[a[1]])throw new z(`Dimension incompatibility: ${n[a[0]]} !== ${s[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],s=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>nd(r,e[i].shape.length)):a=[nd(this.axes,n.shape.length),nd(this.axes,s.shape.length)],this.normalize&&(n=Bm(n,a[0]),s=Bm(s,a[1])),I5(n,s,a)}interpretAxes(e,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[nd(this.axes,e.length),nd(this.axes,n.length)],s}computeOutputShape(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(n,s);n.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=n.concat(s);return r.length===1&&r.push(1),r}computeMask(e,n){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}DA.className="Dot";Z(DA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);return Up(()=>K(mb(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}AA.className="GaussianNoise";Z(AA);class _A extends Le{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return U(()=>{this.invokeCallHook(e,n);const s=Ne(e);return this.rate>0&&this.rate<1?Up(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return _(s,mb(s.shape,1,r))},()=>s,n.training||!1):s})}}_A.className="GaussianDropout";Z(_A);class OA extends Le{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ne(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return U(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Up(()=>{const r=Ne(e),l=-1.6732632423543772*1.0507009873554805;let u=Mi(tl(s),this.rate);u=Xa(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,d=-c*l*this.rate,h=K(_(r,u),_(K(u,-1),l));return K(_(h,c),d)},()=>Ne(e),n.training||!1)}return e})}}OA.className="AlphaDropout";Z(OA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uh(t,e,n,s,a,r=.001){let i;if(t.rank===2)i=rE(t,e,n,s,a,r);else if(t.rank===3)i=iE(t,e,n,s,a,r);else if(t.rank===4)i=oE(t,e,n,s,a,r);else throw new Ae(`batchNormalization is not implemented for array of rank ${t.rank} yet`);return i}function T5(t,e,n,s,a=.001){return U(()=>{const r=Dy(t,s),i=r.mean,o=r.variance;return[uh(t,i,o,n,e,a),i,o]})}function E5(t,e,n,s,a=.001){return U(()=>{const r=Dy(t,s),i=r.mean,o=r.variance,l=[];for(const f of Ta(0,t.rank))s.indexOf(f)!==-1?l.push(1):l.push(t.shape[f]);const u=F(i,l),c=F(o,l),d=e==null?null:F(e,l),h=n==null?null:F(n,l);return[uh(t,u,c,h,d,a),i,o]})}function R5(t,e,n,s,a=.001){return Ee(s.slice().sort(),Ta(0,t.rank-1))?T5(t,e,n,s,a):E5(t,e,n,s,a)}class FA extends Le{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.movingMeanInitializer=xt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xt(e.movingVarianceInitializer||"ones"),this.betaConstraint=tn(e.betaConstraint),this.gammaConstraint=tn(e.gammaConstraint),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer)}build(e){e=Xe(e);const n=this.axis>=0?this.axis:this.axis+e.length,s=e[n];if(s==null)throw new z(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qt({ndim:e.length,axes:{[n]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return U(()=>{const s=n.training==null?!1:n.training,a=Ne(e),r=a.shape,i=r.length,o=Ta(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Lo(1,i);u[l]=r[l];const c=o.slice();c.sort();const d=!Ee(c,Ta(0,i).slice(0,i-1)),h=()=>{if(d){const b=F(this.movingMean.read(),u),x=F(this.movingVariance.read(),u),w=this.center?F(this.beta.read(),u):null,v=this.scale?F(this.gamma.read(),u):null;return uh(a,b,x,w,v,this.epsilon)}else return uh(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=R5(a,this.gamma.read(),this.beta.read(),o,this.epsilon),y=(b,x,w)=>{U(()=>{const v=1-w,C=b.read(),$=_(de(C,x),v);b.write(de(C,$))})};return(()=>{y(this.movingMean,f,this.momentum),y(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),movingMeanInitializer:Tt(this.movingMeanInitializer),movingVarianceInitializer:Tt(this.movingVarianceInitializer),betaRegularizer:rt(this.betaRegularizer),gammaRegularizer:rt(this.gammaRegularizer),betaConstraint:en(this.betaConstraint),gammaConstraint:en(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}FA.className="BatchNormalization";Z(FA);class zA extends Le{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Xe(e);const n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=n);for(const r of this.axis)if(r<0||r>=n)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==gi(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,n){const s=Ne(e),a=s.shape,r=a.length;return U(()=>{let{mean:o,variance:l}=Dy(s,this.axis,!0);const u=Lo(1,r);for(const m of this.axis)u[m]=a[m];const c=m=>m!=null&&m.shape.length!==r?F(m,u):m;let d=this.scale?c(this.gamma.read()):null,h=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(p.push(a[m]),f.push(1)):(p.push(1),f.push(a[m]));return o=ta(o,p),l=ta(l,p),d!=null&&(d=ta(d,f)),h!=null&&(h=ta(h,f)),uh(s,o,l,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),betaRegularizer:rt(this.betaRegularizer),gammaRegularizer:rt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}zA.className="LayerNormalization";Z(zA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function D5(t,e,n){return U(()=>{if(t.rank!==4)throw new z(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ea()),n!=="channelsLast"&&n!=="channelsFirst")throw new z(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Bi(t,s)})}class LA extends Le{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ea():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,s;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[n,s]}this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=Xe(e);let n,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],n,s]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],n,s,e[3]])}call(e,n){return U(()=>D5(Ne(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}LA.className="ZeroPadding2D";Z(LA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cb(t,e,n,s,a,r){return U(()=>{Ut(a),JR(r),Fs(s),n==null&&(n=[1,1]),s==null&&(s="valid"),a==null&&(a=Ea()),r==null&&(r="max"),t=uS(t,a);let i;const o=s==="same"?"same":"valid";return r==="max"?i=Ry(t,e,n,o):i=Sy(t,e,n,o),a==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}function PA(t,e,n,s,a,r){return U(()=>{Ut(a),JR(r),Fs(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),a==null&&(a=Ea()),r==null&&(r="max"),t=tA(t,a);let i;const o=s==="same"?"same":"valid";return r==="max"?i=DE(t,e,n,o):i=aE(t,e,n,o),a==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}class MA extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(dn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);dn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Fs(this.padding),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){e=Xe(e);const n=Ca(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return U(()=>{this.invokeCallHook(e,n),e=Bp(Ne(e),2);const s=this.poolingFunction(Ne(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nl(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}}class BA extends MA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Ut(r),Fs(a),Cb(e,n,s,a,r,"max")}}BA.className="MaxPooling1D";Z(BA);class VA extends MA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Ut(r),Fs(a),Cb(e,n,s,a,r,"avg")}}VA.className="AveragePooling1D";Z(VA);class UA extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];dn(this.poolSize,"poolSize"),dn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Fs(this.padding),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=Xe(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=Ca(n,this.poolSize[0],this.padding,this.strides[0]),s=Ca(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s]:[e[0],n,s,e[3]]}call(e,n){return U(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ne(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class WA extends UA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Ut(r),Fs(a),Cb(e,n,s,a,r,"max")}}WA.className="MaxPooling2D";Z(WA);class GA extends UA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Ut(r),Fs(a),Cb(e,n,s,a,r,"avg")}}GA.className="AveragePooling2D";Z(GA);class HA extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dn(this.poolSize,"poolSize"),dn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Fs(this.padding),this.inputSpec=[new Qt({ndim:5})]}computeOutputShape(e){e=Xe(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=Ca(n,this.poolSize[0],this.padding,this.strides[0]),s=Ca(s,this.poolSize[1],this.padding,this.strides[1]),a=Ca(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s,a]:[e[0],n,s,a,e[4]]}call(e,n){return U(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ne(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class jA extends HA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Ut(r),Fs(a),PA(e,n,s,a,r,"max")}}jA.className="MaxPooling3D";Z(jA);class qA extends HA{constructor(e){super(e)}poolingFunction(e,n,s,a,r){return Ut(r),Fs(a),PA(e,n,s,a,r,"avg")}}qA.className="AveragePooling3D";Z(qA);class XA extends Le{constructor(e){super(e),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,n){throw new Ae}}class KA extends XA{constructor(e){super(e||{})}call(e,n){return U(()=>{const s=Ne(e);return Dt(s,1)})}}KA.className="GlobalAveragePooling1D";Z(KA);class YA extends XA{constructor(e){super(e||{})}call(e,n){return U(()=>{const s=Ne(e);return ia(s,1)})}}YA.className="GlobalMaxPooling1D";Z(YA);class QA extends Le{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new Ae}getConfig(){const e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class ZA extends QA{call(e,n){return U(()=>{const s=Ne(e);return this.dataFormat==="channelsLast"?Dt(s,[1,2]):Dt(s,[2,3])})}}ZA.className="GlobalAveragePooling2D";Z(ZA);class JA extends QA{call(e,n){return U(()=>{const s=Ne(e);return this.dataFormat==="channelsLast"?ia(s,[1,2]):ia(s,[2,3])})}}JA.className="GlobalMaxPooling2D";Z(JA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class e3 extends Le{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,s={}){const a=n.layer,r=Tr(a,s);delete n.layer;const i={layer:r};return Object.assign(i,n),new e(i)}}class t3 extends e3{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Xe(e),e.length<3)throw new z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Xe(e);const n=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(n),a=e[1];return[s[0],a].concat(s.slice(1))}call(e,n){return U(()=>(e=Ne(e),cA((i,o)=>[Ne(this.layer.call(i,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}t3.className="TimeDistributed";Z(t3);function A5(t){il(Jj,"BidirectionalMergeMode",t)}const _5="concat";class n3 extends e3{constructor(e){super(e);const n=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=n,this.forwardLayer=Tr(s),n.goBackwards=n.goBackwards!==!0;const a={};if(a.className=e.layer.getClassName(),a.config=n,this.backwardLayer=Tr(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?_5:e.mergeMode,A5(this.mergeMode),e.weights)throw new Ae("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const n=e.length,s=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,a,r;return this.returnState&&(r=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):Hn(a)}apply(e,n){let s=n==null?null:n.initialState,a=n==null?null:n.constants;n==null&&(n={});const r=uA(e,s,a,this.numConstants);if(e=r.inputs,s=r.initialState,a=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&a==null)return super.apply(e,n);const i=[],o=[];if(s!=null){const u=s.length;if(u%2>0)throw new z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,i.push(...s);const c=s.map(d=>new Qt({shape:d.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(a!=null)throw new Ae("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Za;for(const u of i)if(u instanceof Za!==l)throw new z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(o),d=this.inputSpec;this.inputSpec=c;const h=super.apply(u,n);return this.inputSpec=d,h}else return super.apply(e,n)}call(e,n){return U(()=>{const s=n.initialState;let a,r;if(s==null)a=this.forwardLayer.call(e,n),r=this.backwardLayer.call(e,n);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);a=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(n,{initialState:u}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=ca(r,1));let o;return this.mergeMode==="concat"?o=Yv([a,r]):this.mergeMode==="sum"?o=K(a,r):this.mergeMode==="ave"?o=_(.5,K(a,r)):this.mergeMode==="mul"?o=_(a,r):this.mergeMode==null&&(o=[a,r]),this.returnState?this.mergeMode==null?o.concat(i):[o].concat(i):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){const s=Tr(n.layer);if(delete n.layer,n.numConstants!=null)throw new Ae("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=n;return a.layer=s,new e(a)}}n3.className="Bidirectional";Z(n3);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class s3 extends Le{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return U(()=>(e=Ne(e),e.dtype!=="float32"&&(e=Xa(e,"float32")),K(_(e,this.scale),this.offset)))}}s3.className="Rescaling";Z(s3);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:O5,cropAndResize:F5}=na;class a3 extends Le{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,n,s,a,r,i,o,l){return U(()=>{let u,c=!1;const d=n/i,h=s/o,p=(a+n)/i,f=(r+s)/o,m=[d,h,p,f],y=[];e.rank===3?(c=!0,u=ps([e])):u=e;for(let v=0;v<u.shape[0];v++)y.push(m);const g=Sa(y,[y.length,4]),b=gu(0,y.length,1,"int32"),w=F5(u,g,b,[a,r],"nearest");return Xa(c?Ne(da(w)):w,l)})}upsize(e,n,s,a){return U(()=>{const r=O5(e,[n,s]);return Xa(r,a)})}call(e,n){return U(()=>{const s=Ne(e),a=s.dtype,r=s.shape,i=r[r.length-3],o=r[r.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,o,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Xe(e);const n=e.length-3,s=e.length-2;return e[n]=this.height,e[s]=this.width,e}}a3.className="CenterCrop";Z(a3);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function z5(t,e,n,s){let a=Ne(t);if(a.dtype!=="int32"&&(a=Xa(a,"int32")),e==="int")return a;const r=a.shape;if(a.rank===0&&(a=Fn(a,-1)),e==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Fn(a,-1)),a.rank>2)throw new z(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(e),o=a;let l;if(typeof s<"u"&&e==="count"?l=Z0(o,s,n,i):l=Z0(o,[],n,i),e!=="tfIdf")return l;if(s)return _(l,s);throw new z("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class r3 extends Le{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=Xe(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return U(()=>{e=Ne(e),e.dtype!=="int32"&&(e=Xa(e,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new z(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=Ne(n.countWeights)}const a=ia(e),r=th(e),i=ws(this.numTokens,a).bufferSync().get(0),o=Mi(r,0).bufferSync().get(0);if(!(i&&o))throw new z(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return z5(e,this.outputMode,this.numTokens,s)})}}r3.className="CategoryEncoding";Z(r3);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const L5=["bilinear","nearest"],o$=new Set(L5);class i3 extends Le{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(o$.has(e.interpolation))this.interpolation=e.interpolation;else throw new z(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Xe(e);const n=e[2];return[this.height,this.width,n]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return U(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return na.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return na.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...o$]} are supported`)})}}i3.className="Resizing";Z(i3);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class o3{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}o3.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class l3 extends Le{constructor(e){super(e),this.randomGenerator=new o3(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(e,n),e}}l3.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const P5=["bilinear","nearest"],l$=new Set(P5);class u3 extends l3{constructor(e){super(e);const{factor:n,interpolation:s="bilinear"}=e;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new z(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new z(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new z(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(l$.has(s))this.interpolation=s;else throw new z(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Xe(e);const n=e[2];return[this.imgHeight,-1,n]}call(e,n){return U(()=>{const s=Ne(e);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=tl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return na.resizeBilinear(e,i);case"nearest":return na.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...l$]} are supported`)}})}}u3.className="RandomWidth";Z(u3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=M();M5.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var as;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(as||(as={}));var u$;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(u$||(u$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={};function c3(t){return B5[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(t,e,n,s,a){const r=e.inputParams[t];if(r&&r.inputIndexStart!==void 0){const o=r.inputIndexStart,l=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?o+1:r.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(r.type==="tensor")return bn(e.inputNames[u],n,s,a);if(r.type==="tensors"){const h=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((f,m)=>{var y;return((y=h[m])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(f=>bn(f,n,s,a))}const c=bn(e.inputNames[u],n,s,a),d=c.dataSync();return r.type==="number"?d[0]:ra(c.shape,d)}const i=e.attrParams[t];return i&&i.value}function bn(t,e,n,s){const[a,r]=is(t,n);if(s!=null){const o=s.getHashTableHandleByName(a);if(o!=null)return o}const i=n.currentContextIds.find(o=>!!e[Hm(a,o)]);return i!==void 0?e[Hm(a,i)][r]:void 0}function c$(t,e,n){return e[Hm(t,n.currentContextId)]}function fr(t,e){const[n,s,a]=is(t,e);return[Hm(n,e&&e.currentContextId),s,a]}function Hm(t,e){return e?`${t}-${e}`:t}function is(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const r=e.parseNodeNameCache.get(t);if(r!=null)return r}const s=t.split(":");let a;if(s.length===1)a=[t,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,o=Number(s[s.length-1]);a=[r,o,i]}return n&&e.parseNodeNameCache.set(t,a),a}function Kf(t,e,n){let s=S("pad",t,e,n);if(s==="explicit"){s=S("explicitPaddings",t,e,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function mr(t){return t.kept?t:Ir(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U5=Object.freeze(Object.defineProperty({__proto__:null,json:V5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G5=Object.freeze(Object.defineProperty({__proto__:null,json:W5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],j5=Object.freeze(Object.defineProperty({__proto__:null,json:H5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],X5=Object.freeze(Object.defineProperty({__proto__:null,json:q5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Y5=Object.freeze(Object.defineProperty({__proto__:null,json:K5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Z5=Object.freeze(Object.defineProperty({__proto__:null,json:Q5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],eX=Object.freeze(Object.defineProperty({__proto__:null,json:J5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],nX=Object.freeze(Object.defineProperty({__proto__:null,json:tX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],aX=Object.freeze(Object.defineProperty({__proto__:null,json:sX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],iX=Object.freeze(Object.defineProperty({__proto__:null,json:rX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],lX=Object.freeze(Object.defineProperty({__proto__:null,json:oX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],cX=Object.freeze(Object.defineProperty({__proto__:null,json:uX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dX=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],hX=Object.freeze(Object.defineProperty({__proto__:null,json:dX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],fX=Object.freeze(Object.defineProperty({__proto__:null,json:pX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],gX=Object.freeze(Object.defineProperty({__proto__:null,json:mX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],bX=Object.freeze(Object.defineProperty({__proto__:null,json:yX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xX=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],wX=Object.freeze(Object.defineProperty({__proto__:null,json:xX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],SX=Object.freeze(Object.defineProperty({__proto__:null,json:vX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],$X=Object.freeze(Object.defineProperty({__proto__:null,json:CX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d${static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[U5,G5,j5,X5,Y5,Z5,eX,nX,aX,iX,lX,cX,hX,fX,gX,bX,wX,SX,$X],n=[].concat(...e.map(s=>s.json));this.opMappers=n.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(e,n={}){const s=e.node,a=[],r=[],i=[],o=s.reduce((m,y)=>(m[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?a.push(m[y.name]):y.op==="Const"?r.push(m[y.name]):(y.input==null||y.input.length===0)&&i.push(m[y.name]),m),{});let l=[];const u=[];let c={},d={};n!=null&&(c=this.mapSignatureEntries(n.inputs),d=this.mapSignatureEntries(n.outputs));const h=Object.keys(o);h.forEach(m=>{const y=o[m];y.inputNames.forEach((g,b)=>{const[x,,w]=fr(g),v=o[x];if(v.outputs!=null){const C=v.outputs.indexOf(w);if(C!==-1){const $=`${x}:${C}`;y.inputNames[b]=$}}y.inputs.push(v),v.children.push(y)})}),Object.keys(d).length===0?h.forEach(m=>{const y=o[m];y.children.length===0&&u.push(y)}):Object.keys(d).forEach(m=>{const[y]=fr(m),g=o[y];g!=null&&(g.signatureKey=d[m],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[y]=fr(m),g=o[y];g&&(g.signatureKey=c[m],l.push(g))}):l=a;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,y)=>(m[y.signature.name]=this.mapFunction(y),m),{}));const f={nodes:o,inputs:l,outputs:u,weights:r,placeholders:a,signature:n,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,s)=>(n[e[s].name]=s,n),{})}mapNode(e){const n=c3(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(s.inputParams=n.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),n.attrs!=null&&(s.attrParams=n.attrs.reduce((a,r)=>{const i=r.type;let o;switch(r.type){case"string":o=p1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=p1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=w1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=w1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=m1(e.attr,r.tfName,r.defaultValue||0),o===void 0&&r.tfDeprecatedName&&(o=m1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=x1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=x1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=f1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=f1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=S1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=S1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=b1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=b1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=v1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=v1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=g1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=g1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=y1(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=y1(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=h$(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=h$(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return a[r.name]={value:o,type:i},a},{})),s}mapFunction(e){const n=e.nodeDef,s=[],a=[];let r={};n!=null&&(r=n.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&a.push(d[h.name]),d),{}));const i=[],o=[];e.signature.inputArg.forEach(d=>{const[h]=fr(d.name),p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:mS(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,i.push(p),r[h]=p}),Object.keys(r).forEach(d=>{const h=r[d];h.inputNames.forEach((p,f)=>{const[m,,y]=fr(p),g=r[m];if(g.outputs!=null){const b=g.outputs.indexOf(y);if(b!==-1){const x=`${m}:${b}`;h.inputNames[f]=x}}h.inputs.push(g),g.children.push(h)})});const u=e.ret;e.signature.outputArg.forEach(d=>{const[h,p]=fr(u[d.name]),f=r[h];f!=null&&(f.defaultOutput=p,o.push(f))});const c=this.mapArgsToSignature(e);return{nodes:r,inputs:i,outputs:o,weights:a,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s),n),{}),outputs:e.signature.outputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s,e.ret),n),{})}}mapArgToTensorInfo(e,n){let s=e.name;return n!=null&&(s=n[s]),{name:s,dtype:e.type}}}function NX(t){const e=M().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function d3(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):NX(t);return e?n:n.toLowerCase()}function p1(t,e,n,s=!1){const a=t[e];return a!=null?d3(a.s,s):n}function f1(t,e,n){const s=t[e];return s?s.b:n}function m1(t,e,n){const s=t[e]||{},a=s.i!=null?s.i:s.f!=null?s.f:n;return typeof a=="number"?a:parseInt(a,10)}function mS(t){switch(typeof t=="string"&&(t=as[t]),t){case as.DT_FLOAT:case as.DT_HALF:return"float32";case as.DT_INT32:case as.DT_INT64:case as.DT_INT8:case as.DT_UINT8:return"int32";case as.DT_BOOL:return"bool";case as.DT_DOUBLE:return"float32";case as.DT_STRING:return"string";case as.DT_COMPLEX64:case as.DT_COMPLEX128:return"complex64";default:return null}}function h$(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function g1(t,e,n){const s=t[e];return s&&s.type?mS(s.type):n}function y1(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map(a=>mS(a)):n}function h3(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function b1(t,e,n){const s=t[e];return s&&s.shape?h3(s.shape):n}function x1(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function w1(t,e,n,s=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(r=>d3(r,s)):n}function v1(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map(a=>h3(a)):n}function S1(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kX{constructor(e,n,s){this.node=e,this.tensorMap=n,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(a=>this.getInput(a)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(e){return bn(e,this.tensorMap,this.context)}getAttr(e,n){const s=this.node.rawAttrs[e];if(s.tensor!=null)return bn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return m1(this.node.rawAttrs,e,n);if(s.s!=null)return p1(this.node.rawAttrs,e,n);if(s.b!=null)return f1(this.node.rawAttrs,e,n);if(s.shape!=null)return b1(this.node.rawAttrs,e,n);if(s.type!=null)return g1(this.node.rawAttrs,e,n);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return x1(this.node.rawAttrs,e,n);if(s.list.s!=null)return w1(this.node.rawAttrs,e,n);if(s.list.shape!=null)return v1(this.node.rawAttrs,e,n);if(s.list.b!=null)return S1(this.node.rawAttrs,e,n);if(s.list.type!=null)return y1(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:_T,abs:Kt,acos:YT,acosh:QT,add:K,addN:HM,all:Jw,any:Om,argMax:fu,argMin:ZT,asin:JT,asinh:eE,atan:tE,atan2:nE,atanh:sE,avgPool:Sy,avgPool3d:aE,basicLSTMCell:fB,batchNorm:Rp,batchNorm2d:rE,batchNorm3d:iE,batchNorm4d:oE,batchToSpaceND:Cy,bincount:lE,bitwiseAnd:CB,booleanMaskAsync:rW,broadcastArgs:NB,broadcastTo:Jl,buffer:ke,cast:le,ceil:uE,clipByValue:ds,clone:Ir,complex:Si,concat:Bt,concat1d:cE,concat2d:dE,concat3d:hE,concat4d:pE,conv1d:tv,conv2d:Ni,conv2dTranspose:sv,conv3d:fE,conv3dTranspose:gE,cos:$y,cosh:av,cosineWindow:Fv,cumprod:Fm,cumsum:rv,denseBincount:Z0,depthToSpace:yE,depthwiseConv2d:Dp,diag:XB,dilation2d:bE,div:ge,divNoNan:xE,dot:wE,dropout:qE,einsum:El,elu:Ap,enclosingPowerOfTwo:XE,ensureShape:aV,equal:Na,erf:iv,euclideanNorm:CE,exp:hs,expandDims:Fn,expm1:$E,eye:lv,fft:Py,fill:Ec,floor:Op,floorDiv:Zw,fused:IW,gather:Fp,gatherND:mW,greater:ws,greaterEqual:Mi,ifft:rh,imag:Ny,image:na,inTopKAsync:xW,irfft:Ev,isFinite:NE,isInf:kE,isNaN:IE,leakyRelu:ky,less:nh,lessEqual:Jo,linalg:nR,linspace:RV,localResponseNormalization:TE,log:Ds,log1p:Iy,logSigmoid:EE,logSoftmax:uv,logSumExp:Ty,logicalAnd:Qa,logicalNot:Ey,logicalOr:cv,logicalXor:RE,losses:aH,lowerBound:jV,matMul:Pe,max:ia,maxPool:Ry,maxPool3d:DE,maxPoolWithArgmax:YV,maximum:Pr,mean:Dt,meshgrid:JV,min:th,minimum:Fo,mirrorPad:AE,mod:_E,moments:Dy,movingAverage:lW,mul:_,multiRNNCell:r4,multinomial:o4,neg:yt,norm:_p,notEqual:mu,oneHot:hv,ones:Kn,onesLike:As,op:R,outerProduct:h4,pad:Bi,pad1d:m4,pad2d:y4,pad3d:x4,pad4d:v4,pool:OE,pow:Fr,prelu:_y,print:KT,prod:FE,raggedGather:E4,raggedRange:D4,raggedTensorToTensor:_4,rand:F4,randomGamma:tU,randomNormal:wv,randomStandardNormal:aU,randomUniform:tl,randomUniformInt:oU,range:gu,real:sh,reciprocal:LE,relu:ar,relu6:vv,reshape:F,reverse:ca,reverse1d:fU,reverse2d:gU,reverse3d:bU,reverse4d:wU,rfft:My,round:Sv,rsqrt:Cv,scalar:we,scatterND:cW,searchSorted:dv,selu:$v,separableConv2d:Nv,setdiff1dAsync:kU,sigmoid:qa,sign:PE,signal:sH,sin:kv,sinh:Iv,slice:Ve,slice1d:Fy,slice2d:Tv,slice3d:zy,slice4d:ah,softmax:Ly,softplus:Rc,spaceToBatchND:Ay,sparse:rH,sparseToDense:pW,spectral:nH,split:us,sqrt:Cn,square:at,squaredDifference:Rv,squeeze:nl,stack:ps,step:Dc,stridedSlice:ME,string:iH,sub:de,sum:fe,tan:BE,tanh:Oo,tensor:Sa,tensor1d:Mn,tensor2d:Ad,tensor3d:VE,tensor4d:jU,tensor5d:qU,tensor6d:XU,tensorScatterUpdate:YU,tile:ta,topk:WE,transpose:Ue,truncatedNormal:Av,unique:GE,unsortedSegmentSum:_v,unstack:da,upperBound:nW,variable:HE,where:En,whereAsync:jE,zeros:Ht,zerosLike:We},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=(t,e,n,s=$n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(S("a",t,e,n),S("b",t,e,n))];case"AddN":return[s.addN(S("tensors",t,e,n))];case"FloorMod":case"Mod":return[s.mod(S("a",t,e,n),S("b",t,e,n))];case"Mul":return[s.mul(S("a",t,e,n),S("b",t,e,n))];case"RealDiv":case"Div":return[s.div(S("a",t,e,n),S("b",t,e,n))];case"DivNoNan":return[s.divNoNan(S("a",t,e,n),S("b",t,e,n))];case"FloorDiv":return[s.floorDiv(S("a",t,e,n),S("b",t,e,n))];case"Sub":return[s.sub(S("a",t,e,n),S("b",t,e,n))];case"Minimum":return[s.minimum(S("a",t,e,n),S("b",t,e,n))];case"Maximum":return[s.maximum(S("a",t,e,n),S("b",t,e,n))];case"Pow":return[s.pow(S("a",t,e,n),S("b",t,e,n))];case"SquaredDifference":return[s.squaredDifference(S("a",t,e,n),S("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX=(t,e,n,s=$n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[s.abs(S("x",t,e,n))];case"Acos":return[s.acos(S("x",t,e,n))];case"Acosh":return[s.acosh(S("x",t,e,n))];case"Asin":return[s.asin(S("x",t,e,n))];case"Asinh":return[s.asinh(S("x",t,e,n))];case"Atan":return[s.atan(S("x",t,e,n))];case"Atan2":return[s.atan2(S("x",t,e,n),S("y",t,e,n))];case"Atanh":return[s.atanh(S("x",t,e,n))];case"Ceil":return[s.ceil(S("x",t,e,n))];case"Complex":return[s.complex(S("real",t,e,n),S("imag",t,e,n))];case"Cos":return[s.cos(S("x",t,e,n))];case"Cosh":return[s.cosh(S("x",t,e,n))];case"Elu":return[s.elu(S("x",t,e,n))];case"Erf":return[s.erf(S("x",t,e,n))];case"Exp":return[s.exp(S("x",t,e,n))];case"Expm1":return[s.expm1(S("x",t,e,n))];case"Floor":return[s.floor(S("x",t,e,n))];case"Log":return[s.log(S("x",t,e,n))];case"Log1p":return[s.log1p(S("x",t,e,n))];case"Imag":return[s.imag(S("x",t,e,n))];case"Neg":return[s.neg(S("x",t,e,n))];case"Reciprocal":return[s.reciprocal(S("x",t,e,n))];case"Real":return[s.real(S("x",t,e,n))];case"Relu":return[s.relu(S("x",t,e,n))];case"Round":return[s.round(S("x",t,e,n))];case"Selu":return[s.selu(S("x",t,e,n))];case"Sigmoid":return[s.sigmoid(S("x",t,e,n))];case"Sin":return[s.sin(S("x",t,e,n))];case"Sign":return[s.sign(S("x",t,e,n))];case"Sinh":return[s.sinh(S("x",t,e,n))];case"Softplus":return[s.softplus(S("x",t,e,n))];case"Sqrt":return[s.sqrt(S("x",t,e,n))];case"Square":return[s.square(S("x",t,e,n))];case"Tanh":return[s.tanh(S("x",t,e,n))];case"Tan":return[s.tan(S("x",t,e,n))];case"ClipByValue":return[s.clipByValue(S("x",t,e,n),S("clipValueMin",t,e,n),S("clipValueMax",t,e,n))];case"Relu6":return[s.relu6(S("x",t,e,n))];case"Rsqrt":return[s.rsqrt(bn(t.inputNames[0],e,n))];case"LeakyRelu":return[s.leakyRelu(S("x",t,e,n),S("alpha",t,e,n))];case"Prelu":return[s.prelu(S("x",t,e,n),S("alpha",t,e,n))];case"IsNan":return[s.isNaN(bn(t.inputNames[0],e,n))];case"IsInf":return[s.isInf(bn(t.inputNames[0],e,n))];case"IsFinite":return[s.isFinite(bn(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){N(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let s=0;s<t.length;s++){const a=t[s],r=e[s];N(a<0||r<0||a===r,()=>n+` Shapes ${t} and ${e} must match`)}}}function p$(t){return!(typeof t=="number"||t.some(e=>e<0))}function sd(t,e,n){let s=C1(t,n);const a=!p$(s);if(a&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&e.forEach(r=>{s=C1(r.shape,s)}),!p$(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function C1(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const a=t[s],r=e[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=a>=0?a:r}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EX{constructor(e,n,s,a,r,i,o){this.name=e,this.dtype=n,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=we(0),cn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Ws(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=n,cn(n),s.written=!0,this.tensors[e]=s}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((s,a)=>this.write(s,n[a]))}gather(e,n){if(n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let a=0;a<this.size();a++)e.push(a)}if(e.length===0)return Sa([],[0].concat(this.elementShape));const s=this.readMany(e);return Ws(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ps(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Sa([],[0].concat(this.elementShape));const n=[];for(let a=0;a<this.size();a++)n.push(a);const s=this.readMany(n);return Ws(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Bt(s,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,da(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let s=0;const a=e.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:n.size/s,i=[];U(()=>{n=F(n,[1,s,r]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:a[l-1],0],d=[1,e[l],r];i[l]=F(Ve(n,c,d),this.elementShape)}return i});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Po{get id(){return this.idTensor.id}constructor(e,n,s,a=-1){this.tensors=e,this.elementShape=n,this.elementDtype=s,e!=null&&e.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);Ws(n,r.shape,"TensorList shape mismatch: "),cn(r)}),this.idTensor=we(0),this.maxNumElements=a,cn(this.idTensor)}copy(){return new Po([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,s=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ws(e,this.elementShape,"TensorList shape mismatch: ");const a=sd(this.elementShape,this.tensors,e);return U(()=>{const r=this.tensors.map(i=>F(i,a));return ps(r,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=sd(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Ws(a.shape,e,"TensorList shape mismatch: "),F(a,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ws(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");cn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new Po([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)n.tensors[s]=this.tensors[s];return n}getItem(e,n,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ws(this.tensors[e].shape,n,"TensorList shape mismatch: ");const a=sd(this.elementShape,this.tensors,n);return F(this.tensors[e],a)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ws(this.elementShape,n.shape,"TensorList shape mismatch: "),cn(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,s){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Ws(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=sd(this.elementShape,this.tensors,s);return e.length===0?Sa([],[0].concat(a)):U(()=>{const r=e.map(i=>F(this.tensors[i],a));return ps(r,0)})}concat(e,n){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ws(this.elementShape,n,"TensorList shape mismatch: ");const s=sd(this.elementShape,this.tensors,n);return this.size()===0?Sa([],[0].concat(s)):U(()=>{const a=this.tensors.map(r=>F(r,s));return Bt(a,0)})}}function RX(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const a=t.shape.slice(1);Ws(a,e,"TensorList shape mismatch: ");const r=da(t);return new Po(r,e,s)}function DX(t,e,n,s){return new Po([],t,e,s)}function AX(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const a=Math.max(...e);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new Po([],n,t.dtype,s),i=da(t,0);return e.forEach((o,l)=>{r.setItem(o,i[l])}),r}function _X(t,e,n){let s=0;const a=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);const r=t.shape.slice(1),i=C1(r,n),o=s===0?0:t.size/s,l=U(()=>{const c=[];t=F(t,[1,s,o]);for(let d=0;d<e.length;++d){const p=[0,d===0?0:a[d-1],0],f=[1,e[d],o];c[d]=F(Ve(t,p,f),i)}return t.dispose(),c}),u=new Po([],n,t.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OX=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=S("thenBranch",t,e,n),a=S("elseBranch",t,e,n),r=S("cond",t,e,n),i=S("args",t,e,n);return(await r.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=S("body",t,e,n),a=S("cond",t,e,n),r=S("args",t,e,n),i=await n.functionMap[a].executeFunctionAsync(r,n.tensorArrayMap,n.tensorListMap),o=r.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=r;for(;l[0];){const c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const d=u.map(p=>p.id);c.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await h[0].data(),h.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=S("pred",t,e,n);return[mr(s)]}case"Switch":{const s=S("pred",t,e,n);let a=S("data",t,e,n);return a.kept||(a=mr(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=t.inputNames.find(a=>bn(a,e,n)!==void 0);if(s){const a=bn(s,e,n);return[mr(a)]}return}case"Enter":{const s=S("frameName",t,e,n),a=S("tensor",t,e,n);return n.enterFrame(s),[mr(a)]}case"Exit":{const s=S("tensor",t,e,n);return n.exitFrame(),[mr(s)]}case"NextIteration":{const s=S("tensor",t,e,n);return n.nextIteration(),[mr(s)]}case"TensorArrayV3":{const s=S("size",t,e,n),a=S("dtype",t,e,n),r=S("elementShape",t,e,n),i=S("dynamicSize",t,e,n),o=S("clearAfterRead",t,e,n),l=S("identicalElementShapes",t,e,n),u=S("name",t,e,n),c=new EX(u,a,s,r,l,i,o);return n.addTensorArray(c),[c.idTensor,we(1)]}case"TensorArrayWriteV3":{const s=S("tensorArrayId",t,e,n),a=S("index",t,e,n),r=S("tensor",t,e,n),i=n.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=S("tensorArrayId",t,e,n),a=S("index",t,e,n);return[n.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=S("tensorArrayId",t,e,n),a=S("indices",t,e,n),r=S("dtype",t,e,n);return[n.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=S("tensorArrayId",t,e,n),a=S("indices",t,e,n),r=S("tensor",t,e,n),i=n.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=S("tensorArrayId",t,e,n),a=n.getTensorArray(s.id),r=S("dtype",t,e,n);return[a.concat(r)]}case"TensorArraySplitV3":{const s=S("tensorArrayId",t,e,n),a=S("tensor",t,e,n),r=S("lengths",t,e,n),i=n.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=S("tensorArrayId",t,e,n),a=n.getTensorArray(s.id);return[we(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=S("tensorArrayId",t,e,n),a=n.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=S("tensorListId",t,e,n),a=S("index",t,e,n),r=S("tensor",t,e,n),i=n.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=S("tensorListId",t,e,n),a=S("index",t,e,n),r=S("elementShape",t,e,n),i=S("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=S("indices",t,e,n),a=S("tensor",t,e,n),r=S("elementShape",t,e,n),i=S("numElements",t,e,n),o=AX(a,s,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=S("elementShape",t,e,n),a=S("elementDType",t,e,n);let r;t.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=S(r,t,e,n),o=t.op==="TensorListReserve"?-1:i,l=DX(s,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=S("tensorListId",t,e,n),a=S("indices",t,e,n),r=S("elementShape",t,e,n),i=S("elementDType",t,e,n);return[n.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=S("tensorListId",t,e,n),a=S("elementShape",t,e,n),r=S("elementDType",t,e,n),i=S("numElements",t,e,n);return[n.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=S("tensor",t,e,n),a=S("elementShape",t,e,n),r=S("elementDType",t,e,n),i=RX(s,a,r);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=S("tensorListId",t,e,n),a=n.getTensorList(s.id),r=S("dtype",t,e,n),i=S("elementShape",t,e,n);return[a.concat(r,i)]}case"TensorListPushBack":{const s=S("tensorListId",t,e,n),a=S("tensor",t,e,n),r=n.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=S("tensorListId",t,e,n),a=S("elementShape",t,e,n),r=S("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=S("tensor",t,e,n),a=S("elementShape",t,e,n),r=S("lengths",t,e,n),i=_X(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=S("tensorListId",t,e,n),a=n.getTensorList(s.id);return[we(a.size(),"int32")]}case"TensorListResize":{const s=S("tensorListId",t,e,n),a=S("size",t,e,n),i=n.getTensorList(s.id).resize(a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(t,e,n){const[s,a]=S("fusedOps",t,e,n),r=s==="biasadd",i=!r,o=a==="prelu",l=s==="fusedbatchnorm",u=S("numArgs",t,e,n);if(r){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&r&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=S("strides",t,e,n),d=Kf(t,e,n),h=S("dataFormat",t,e,n).toUpperCase(),p=S("dilations",t,e,n);let[f,m]=S("args",t,e,n);i&&(m=f,f=void 0);const y=S("leakyreluAlpha",t,e,n);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:y}}const FX=(t,e,n,s=$n)=>{switch(t.op){case"Conv1D":{const a=S("stride",t,e,n),r=S("pad",t,e,n),i=S("dataFormat",t,e,n).toUpperCase(),o=S("dilation",t,e,n);return[s.conv1d(S("x",t,e,n),S("filter",t,e,n),a,r,i,o)]}case"Conv2D":{const a=S("strides",t,e,n),r=Kf(t,e,n),i=S("dataFormat",t,e,n).toUpperCase(),o=S("dilations",t,e,n);return[s.conv2d(S("x",t,e,n),S("filter",t,e,n),[a[1],a[2]],r,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=f$(t,e,n);return[s.fused.conv2d({x:S("x",t,e,n),filter:S("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=f$(t,e,n);return[s.fused.depthwiseConv2d({x:S("x",t,e,n),filter:S("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=S("outputShape",t,e,n),r=S("strides",t,e,n),i=Kf(t,e,n);return[s.conv2dTranspose(S("x",t,e,n),S("filter",t,e,n),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=S("strides",t,e,n),r=Kf(t,e,n),i=S("dilations",t,e,n),o=S("dataFormat",t,e,n).toUpperCase();return[s.depthwiseConv2d(S("input",t,e,n),S("filter",t,e,n),[a[1],a[2]],r,o,[i[1],i[2]])]}case"Conv3D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("dataFormat",t,e,n).toUpperCase(),o=S("dilations",t,e,n);return[s.conv3d(S("x",t,e,n),S("filter",t,e,n),[a[1],a[2],a[3]],r,i,[o[1],o[2],o[3]])]}case"AvgPool":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.avgPool(S("x",t,e,n),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.maxPool(S("x",t,e,n),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n),o=S("includeBatchInIndex",t,e,n),{result:l,indexes:u}=s.maxPoolWithArgmax(S("x",t,e,n),[i[1],i[2]],[a[1],a[2]],r,o);return[l,u]}case"AvgPool3D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.avgPool3d(S("x",t,e,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("kernelSize",t,e,n);return[s.maxPool3d(S("x",t,e,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=S("strides",t,e,n),r=S("pad",t,e,n),i=S("dilations",t,e,n),o=a[1],l=a[2],u=i[1],c=i[2];return[s.dilation2d(S("x",t,e,n),S("filter",t,e,n),[o,l],r,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX=(t,e,n,s=$n)=>{switch(t.op){case"Fill":{const a=S("shape",t,e,n),r=S("dtype",t,e,n),i=S("value",t,e,n);return[s.fill(a,i,r)]}case"LinSpace":{const a=S("start",t,e,n),r=S("stop",t,e,n),i=S("num",t,e,n);return[s.linspace(a,r,i)]}case"Multinomial":{const a=S("logits",t,e,n),r=S("numSamples",t,e,n),i=S("seed",t,e,n);return[s.multinomial(a,r,i)]}case"OneHot":{const a=S("indices",t,e,n),r=S("depth",t,e,n),i=S("onValue",t,e,n),o=S("offValue",t,e,n),l=S("dtype",t,e,n);return[s.oneHot(a,r,i,o,l)]}case"Ones":return[s.ones(S("shape",t,e,n),S("dtype",t,e,n))];case"OnesLike":return[s.onesLike(S("x",t,e,n))];case"RandomStandardNormal":return[s.randomStandardNormal(S("shape",t,e,n),S("dtype",t,e,n),S("seed",t,e,n))];case"RandomUniform":return[s.randomUniform(S("shape",t,e,n),S("minval",t,e,n),S("maxval",t,e,n),S("dtype",t,e,n))];case"RandomUniformInt":return[s.randomUniformInt(S("shape",t,e,n),S("minval",t,e,n),S("maxval",t,e,n),S("seed",t,e,n))];case"Range":{const a=S("start",t,e,n),r=S("stop",t,e,n),i=S("step",t,e,n);return[s.range(a,r,i,S("dtype",t,e,n))]}case"TruncatedNormal":{const a=S("shape",t,e,n),r=S("mean",t,e,n),i=S("stdDev",t,e,n),o=S("seed",t,e,n);return[s.truncatedNormal(a,r,i,S("dtype",t,e,n),o)]}case"Zeros":return[s.zeros(S("shape",t,e,n),S("dtype",t,e,n))];case"ZerosLike":return[s.zerosLike(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(t,e,n){const s=S("boxes",t,e,n),a=S("scores",t,e,n),r=S("maxOutputSize",t,e,n),i=S("iouThreshold",t,e,n),o=S("scoreThreshold",t,e,n),l=S("softNmsSigma",t,e,n);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}const LX=async(t,e,n,s,a=$n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Ax(t,e,n),d=await a.image.nonMaxSuppressionWithScoreAsync(r,i,o,l,u,c);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Ax(t,e,n),c=S("padToMaxOutputSize",t,e,n),d=await a.image.nonMaxSuppressionPaddedAsync(r,i,o,l,u,c);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Ax(t,e,n);return[await a.image.nonMaxSuppressionAsync(r,i,o,l,u)]}case"Where":{const r=a.cast(S("condition",t,e,n),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(S("x",t,e,n),S("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX=(t,e,n,s=$n)=>{switch(t.op){case"LowerBound":{const a=S("sortedSequence",t,e,n),r=S("values",t,e,n);return[s.lowerBound(a,r)]}case"TopKV2":{const a=S("x",t,e,n),r=S("k",t,e,n),i=S("sorted",t,e,n),o=s.topk(a,r,i);return[o.values,o.indices]}case"UpperBound":{const a=S("sortedSequence",t,e,n),r=S("values",t,e,n);return[s.upperBound(a,r)]}case"Unique":{const a=S("x",t,e,n),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=S("x",t,e,n),r=S("axis",t,e,n),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MX=(t,e,n,s=$n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const a=S("default",t,e,n);return[bn(t.name,e,n)||a];case"Placeholder":return[bn(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=S("x",t,e,n);return[mr(c)]}case"IdentityN":return S("x",t,e,n).map(c=>mr(c));case"Snapshot":const r=S("x",t,e,n);return[mr(r)];case"Shape":return[s.tensor1d(S("x",t,e,n).shape,"int32")];case"ShapeN":return S("x",t,e,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(S("x",t,e,n).size,"int32")];case"Rank":return[s.scalar(S("x",t,e,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=S("x",t,e,n),o=S("data",t,e,n),l=S("message",t,e,n),u=S("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BX{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=we(0),this.tensorMap=new Map,cn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),U(()=>{const a=da(n),r=s.length,i=a.length;N(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let o=0;o<r;o++){const l=s[o],u=a[o];cn(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return U(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],o=this.findWithDefault(i,n);a.push(o)}return ps(a)})}findWithDefault(e,n){const s=this.tensorMap.get(e);return s??n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(t.name);if(a!=null)return[a];{const r=S("keyDType",t,e,n),i=S("valueDType",t,e,n),o=new BX(r,i);return s.addHashTable(t.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=S("tableHandle",t,e,n,s),r=S("keys",t,e,n),i=S("values",t,e,n);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=S("tableHandle",t,e,n,s),r=S("keys",t,e,n),i=S("defaultValue",t,e,n);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=S("tableHandle",t,e,n,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX=(t,e,n,s=$n)=>{switch(t.op){case"ResizeBilinear":{const a=S("images",t,e,n),r=S("size",t,e,n),i=S("alignCorners",t,e,n),o=S("halfPixelCenters",t,e,n);return[s.image.resizeBilinear(a,[r[0],r[1]],i,o)]}case"ResizeNearestNeighbor":{const a=S("images",t,e,n),r=S("size",t,e,n),i=S("alignCorners",t,e,n),o=S("halfPixelCenters",t,e,n);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,o)]}case"CropAndResize":{const a=S("image",t,e,n),r=S("boxes",t,e,n),i=S("boxInd",t,e,n),o=S("cropSize",t,e,n),l=S("method",t,e,n),u=S("extrapolationValue",t,e,n);return[s.image.cropAndResize(a,r,i,o,l,u)]}case"ImageProjectiveTransformV3":{const a=S("images",t,e,n),r=S("transforms",t,e,n),i=S("outputShape",t,e,n),o=S("fillValue",t,e,n),l=S("interpolation",t,e,n),u=S("fillMode",t,e,n);return[s.image.transform(a,r,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX=(t,e,n,s=$n)=>{switch(t.op){case"Equal":return[s.equal(S("a",t,e,n),S("b",t,e,n))];case"NotEqual":return[s.notEqual(S("a",t,e,n),S("b",t,e,n))];case"Greater":return[s.greater(S("a",t,e,n),S("b",t,e,n))];case"GreaterEqual":return[s.greaterEqual(S("a",t,e,n),S("b",t,e,n))];case"Less":return[s.less(S("a",t,e,n),S("b",t,e,n))];case"LessEqual":return[s.lessEqual(S("a",t,e,n),S("b",t,e,n))];case"LogicalAnd":return[s.logicalAnd(S("a",t,e,n),S("b",t,e,n))];case"LogicalNot":return[s.logicalNot(S("a",t,e,n))];case"LogicalOr":return[s.logicalOr(S("a",t,e,n),S("b",t,e,n))];case"Select":case"SelectV2":return[s.where(S("condition",t,e,n),S("a",t,e,n),S("b",t,e,n))];case"BitwiseAnd":return[s.bitwiseAnd(S("a",t,e,n),S("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX=(t,e,n,s=$n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(S("a",t,e,n),S("b",t,e,n),S("transposeA",t,e,n),S("transposeB",t,e,n))];case"Einsum":return[s.einsum(S("equation",t,e,n),...S("tensors",t,e,n))];case"Transpose":return[s.transpose(S("x",t,e,n),S("perm",t,e,n))];case"_FusedMatMul":const[a,r]=S("fusedOps",t,e,n),i=a==="biasadd",o=r==="prelu",l=S("numArgs",t,e,n),u=S("leakyreluAlpha",t,e,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=S("args",t,e,n);return[s.fused.matMul({a:S("a",t,e,n),b:S("b",t,e,n),transposeA:S("transposeA",t,e,n),transposeB:S("transposeB",t,e,n),bias:c,activation:r,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(S("a",t,e,n),S("numLower",t,e,n),S("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HX=(t,e,n,s=$n)=>{switch(t.op){case"EuclideanNorm":return[s.euclideanNorm(S("x",t,e,n),S("axis",t,e,n),S("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(S("x",t,e,n),S("mean",t,e,n),S("variance",t,e,n),S("offset",t,e,n),S("scale",t,e,n),S("epsilon",t,e,n))];case"FusedBatchNormV3":return[s.batchNorm(S("x",t,e,n),S("mean",t,e,n),S("variance",t,e,n),S("offset",t,e,n),S("scale",t,e,n),S("epsilon",t,e,n))];case"LRN":return[s.localResponseNormalization(S("x",t,e,n),S("radius",t,e,n),S("bias",t,e,n),S("alpha",t,e,n),S("beta",t,e,n))];case"Softmax":return[s.softmax(S("x",t,e,n))];case"LogSoftmax":return[s.logSoftmax(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX=(t,e,n,s=$n)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(S("paramsNestedSplits",t,e,n),S("paramsDenseValues",t,e,n),S("indices",t,e,n),S("outputRaggedRank",t,e,n));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(S("starts",t,e,n),S("limits",t,e,n),S("splits",t,e,n));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(S("shape",t,e,n),S("values",t,e,n),S("defaultValue",t,e,n),S("rowPartitionTensors",t,e,n),S("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX=(t,e,n,s=$n)=>{switch(t.op){case"Max":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.max(S("x",t,e,n),o,l)]}case"Mean":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.mean(S("x",t,e,n),o,l)]}case"Min":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.min(S("x",t,e,n),o,l)]}case"Sum":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.sum(S("x",t,e,n),o,l)]}case"All":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.all(S("x",t,e,n),o,l)]}case"Any":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.any(S("x",t,e,n),o,l)]}case"ArgMax":{const o=S("axis",t,e,n);return[s.argMax(S("x",t,e,n),o)]}case"ArgMin":{const o=S("axis",t,e,n);return[s.argMin(S("x",t,e,n),o)]}case"Prod":{const o=S("axis",t,e,n),l=S("keepDims",t,e,n);return[s.prod(S("x",t,e,n),o,l)]}case"Cumprod":{const o=S("axis",t,e,n),l=S("exclusive",t,e,n),u=S("reverse",t,e,n);return[s.cumprod(S("x",t,e,n),o,l,u)]}case"Cumsum":{const o=S("axis",t,e,n),l=S("exclusive",t,e,n),u=S("reverse",t,e,n);return[s.cumsum(S("x",t,e,n),o,l,u)]}case"Bincount":const a=S("x",t,e,n),r=S("weights",t,e,n),i=S("size",t,e,n);return[s.bincount(a,r,i)];case"DenseBincount":{const o=S("x",t,e,n),l=S("weights",t,e,n),u=S("size",t,e,n),c=S("binaryOutput",t,e,n);return[s.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX=(t,e,n,s=$n)=>{switch(t.op){case"ConcatV2":case"Concat":{const a=S("n",t,e,n),r=S("axis",t,e,n);let i=S("tensors",t,e,n);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=S("x",t,e,n),r=S("indices",t,e,n);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=S("axis",t,e,n),r=S("batchDims",t,e,n),i=S("x",t,e,n),o=S("indices",t,e,n);return[s.gather(i,s.cast(o,"int32"),a,r)]}case"Reverse":{const a=S("dims",t,e,n),r=[];for(let o=0;o<a.length;o++)a[o]&&r.push(o);const i=S("x",t,e,n);return[s.reverse(i,r)]}case"ReverseV2":{const a=S("axis",t,e,n),r=S("x",t,e,n);return[s.reverse(r,a)]}case"Slice":{const a=S("begin",t,e,n),r=S("size",t,e,n);return[s.slice(S("x",t,e,n),a,r)]}case"StridedSlice":{const a=S("begin",t,e,n),r=S("end",t,e,n),i=S("strides",t,e,n),o=S("beginMask",t,e,n),l=S("endMask",t,e,n),u=S("ellipsisMask",t,e,n),c=S("newAxisMask",t,e,n),d=S("shrinkAxisMask",t,e,n),h=S("x",t,e,n);return[s.stridedSlice(h,a,r,i,o,l,u,c,d)]}case"Pack":return U(()=>{const a=S("axis",t,e,n),r=S("tensors",t,e,n),i=r[0].shape,o=s.squeeze(r[0]).shape,l=r.map(u=>{const c=Ee(u.shape,i);if(!c&&!Ee(s.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,a)]});case"Unpack":{const a=S("axis",t,e,n),r=S("tensor",t,e,n);return s.unstack(r,a)}case"Tile":{const a=S("reps",t,e,n);return[s.tile(S("x",t,e,n),a)]}case"Split":case"SplitV":{const a=S("axis",t,e,n),r=S("numOrSizeSplits",t,e,n),i=S("x",t,e,n);return s.split(i,r,a)}case"ScatterNd":{const a=S("indices",t,e,n),r=S("values",t,e,n),i=S("shape",t,e,n);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=S("x",t,e,n),r=S("indices",t,e,n);return[s.gatherND(a,r)]}case"SparseToDense":{const a=S("sparseIndices",t,e,n),r=S("outputShape",t,e,n),i=S("sparseValues",t,e,n),o=S("defaultValue",t,e,n);return[s.sparseToDense(a,i,r,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}case"TensorScatterUpdate":{const a=S("indices",t,e,n),r=S("values",t,e,n),i=S("tensor",t,e,n);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX=(t,e,n,s=$n)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(S("indices",t,e,n),S("values",t,e,n),S("denseShape",t,e,n),S("defaultValue",t,e,n));return[a,r,i,o]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(S("inputIndices",t,e,n),S("inputShape",t,e,n),S("newShape",t,e,n));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(S("data",t,e,n),S("indices",t,e,n),S("segmentIds",t,e,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(S("data",t,e,n),S("indices",t,e,n),S("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX=(t,e,n,s=$n)=>{switch(t.op){case"FFT":return[s.fft(S("x",t,e,n))];case"IFFT":return[s.ifft(S("x",t,e,n))];case"RFFT":return[s.rfft(S("x",t,e,n))];case"IRFFT":return[s.irfft(S("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX=(t,e,n,s=$n)=>{switch(t.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(S("input",t,e,n),S("pattern",t,e,n),S("rewrite",t,e,n),S("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(S("data",t,e,n),S("dataSplits",t,e,n),S("separator",t,e,n),S("nGramWidths",t,e,n),S("leftPad",t,e,n),S("rightPad",t,e,n),S("padWidth",t,e,n),S("preserveShortSequences",t,e,n));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(S("input",t,e,n),S("delimiter",t,e,n),S("skipEmpty",t,e,n));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(S("input",t,e,n),S("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZX=(t,e,n,s=$n)=>{switch(t.op){case"Cast":return[s.cast(S("x",t,e,n),S("dtype",t,e,n))];case"ExpandDims":{const a=S("axis",t,e,n);return[s.expandDims(S("x",t,e,n),a)]}case"Squeeze":{const a=S("axis",t,e,n);return[s.squeeze(S("x",t,e,n),a)]}case"Reshape":return[s.reshape(S("x",t,e,n),S("shape",t,e,n))];case"EnsureShape":return[s.ensureShape(S("x",t,e,n),S("shape",t,e,n))];case"MirrorPad":return[s.mirrorPad(S("x",t,e,n),S("padding",t,e,n),S("mode",t,e,n))];case"PadV2":case"Pad":return[s.pad(S("x",t,e,n),S("padding",t,e,n),S("constantValue",t,e,n))];case"SpaceToBatchND":{const a=S("blockShape",t,e,n),r=S("paddings",t,e,n);return[s.spaceToBatchND(S("x",t,e,n),a,r)]}case"BatchToSpaceND":{const a=S("blockShape",t,e,n),r=S("crops",t,e,n);return[s.batchToSpaceND(S("x",t,e,n),a,r)]}case"DepthToSpace":{const a=S("blockSize",t,e,n),r=S("dataFormat",t,e,n).toUpperCase();return[s.depthToSpace(S("x",t,e,n),a,r)]}case"BroadcastTo":return[s.broadcastTo(S("x",t,e,n),S("shape",t,e,n))];case"BroadcastArgs":return[s.broadcastArgs(S("s0",t,e,n),S("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(t,e,n,s,a=U){const r=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>IX(i,o,l));case"basic_math":return a(()=>TX(i,o,l));case"control":return OX(i,o,l);case"convolution":return a(()=>FX(i,o,l));case"creation":return a(()=>zX(i,o,l));case"dynamic":return LX(i,o,l);case"evaluation":return a(()=>PX(i,o,l));case"image":return a(()=>UX(i,o,l));case"graph":return a(()=>MX(i,o,l));case"logical":return a(()=>WX(i,o,l));case"matrices":return a(()=>GX(i,o,l));case"normalization":return a(()=>HX(i,o,l));case"ragged":return a(()=>jX(i,o,l));case"reduction":return a(()=>qX(i,o,l));case"slice_join":return a(()=>XX(i,o,l));case"sparse":return a(()=>KX(i,o,l));case"spectral":return a(()=>YX(i,o,l));case"string":return a(()=>QX(i,o,l));case"transformation":return a(()=>ZX(i,o,l));case"hash_table":return VX(i,o,l,s);case"custom":const u=c3(i.op);if(u&&u.customExecutor)return u.customExecutor(new kX(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Eo(r)?r.then(i=>[].concat(i)):[].concat(r)}class g${constructor(e={},n={},s={},a={},r){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const s=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(t,e,n,s){const a=new Set,r=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(t).map(h=>is(h)[0]));s=s||[];const c=new Set(s.map(h=>is(h.name)[0])),d=[...e];for(;d.length>0;){const h=d.pop();if((ao(h)||iK(h)||oK(h))&&i==null&&(i=h,o=i.children.map(p=>p.name).filter(p=>a.has(p))),a.add(h.name),n[h.name]==null&&!u.has(h.name)&&!c.has(h.name)){if(h.inputs.length===0){r.push(h.name);continue}h.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),d.push(p))})}}return{inputs:t,outputs:e,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:o}}function JX(t,e){const{usedNodes:n,inputs:s}=e,a=Object.keys(s).map(y=>is(y)[0]).map(y=>t.nodes[y]),r=t.initNodes||[],i=y=>n.has(typeof y=="string"?y:y.name);function o(y){return[...new Map(y.map(g=>[g.name,g])).values()]}const l=o([...a,...t.weights,...r]).filter(i),u=o([...l,...Object.values(t.nodes)]).filter(i),c=new Map(u.map(y=>[y.name,y])),d={};for(const y of u){d[y.name]=d[y.name]||0;for(const g of y.children)i(g)||(d[g.name]=Number.POSITIVE_INFINITY),d[g.name]=(d[g.name]||0)+1}const h=Object.entries(d).filter(([,y])=>y===0).map(([y])=>y),p=[...h];for(;h.length>0;){const y=h.pop(),g=c.get(y);for(const b of g.children.filter(i))--d[b.name]===0&&(p.push(b.name),h.push(b.name))}const f=p.map(y=>c.get(y)),m=eK(f,l);return tK(m,l),m}function eK(t,e){const n=new Map(t.map(i=>[i.name,i])),s=e.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),o=n.get(i);for(const l of o.children)!n.has(l.name)||a.has(l.name)||(a.add(l.name),s.push(l.name))}return t.filter(i=>a.has(i.name))}class $f extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function tK(t,e){const n=new Map(t.map((o,l)=>[o.name,l])),s=new Set(e.map(o=>o.name)),a=o=>s.has(typeof o=="string"?o:o.name),r=new Set(t.map(o=>o.name)),i=o=>r.has(typeof o=="string"?o:o.name);for(const o of t){for(const l of o.children.filter(i)){if(!n.has(l.name))throw new $f(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new $f(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(const l of o.inputs){if(!n.has(l.name))throw new $f(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new $f(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function nK(t){const e=new Map(t.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,s=t.map((o,l)=>ao(o)?n:l),a=o=>{const l=s[e.get(o.name)];return l??-1},r=t.map((o,l)=>o.children.map(a).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let o=0;o<t.length;++o){const l=r[o];if(l===n)continue;const u=t[o],c=t[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}const sK=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),aK=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),rK=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ao(t){return sK.has(t.op)}function iK(t){return aK.has(t.op)}function oK(t){return rK.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jm{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(s=>e[s].map(a=>a.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new jm(e.functions[s],this)})}getCompilationKey(e,n){const s=e.map(r=>r.name).sort(),a=n.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,n){const s=y$(e,n,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const u=n.map(d=>d.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${a}]`)}const o=JX(this.graph,s),l=nK(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return cn(n),n}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,s])=>[n,this.cloneTensorList(s)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const a=s.map(h=>this.graph.nodes[is(h)[0]]),r=n.map(h=>is(h)[0]),i=new Set(r);let o=r.map(h=>this.graph.nodes[h]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(a,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},d={};return U(()=>{const h=new g$(this.weightMap,c,d,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[b,x]=is(g,h),w=[];w[x]=e[g],p[b]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(w))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:y}=u;for(const g of m){if(p[g.name])continue;const b=m$(g,p,h,this._resourceManager);if(Eo(b))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);p[g.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,p,h,f,i,y.get(g.name))}return this.parent==null&&h.dispose(f),n.map(g=>bn(g,p,h))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(a=>a.id)));return new Set(n)}checkTensorForDisposal(e,n,s,a,r,i,o){if(!(ao(n)||i.has(e))){for(const l of s[e])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(const l of n.inputs){if(ao(l))continue;const u=c$(l.name,s,a);if(u!=null)for(const c of u){if(!c||c.kept||r.has(c.id))continue;const d=o[c.id];d===1?(c.dispose(),delete o[c.id]):d!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,s,a,r,i){function o(l){return ao(l)||r.has(l.name)}if(!(ao(e)||i==null))for(const l of i){if(o(l))continue;const u=c$(l.name,n,s);for(const c of u)!c||c.kept||a.has(c.id)||c.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const i=new g$(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,i,n,s),l=n.map(h=>bn(h,o,i)),u=l.map(h=>h.id),c=Object.keys(e).map(h=>e[h].id),d=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(h=>{h.forEach(p=>{p&&!p.isDisposed&&!d.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(d),l}async executeFunctionAsync(e,n,s){const a=e.reduce((r,i,o)=>(r[this.inputs[o].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,n,s)}async executeWithControlFlow(e,n,s,a){const r=Object.keys(e),i=r.map(w=>this.graph.nodes[is(w)[0]]),o=s.map(w=>is(w)[0]),l=new Set(o);let u=o.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:d,dynamicNode:h,syncInputs:p}=y$(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[v,C]=is(w),$=[];$[C]=e[w],m[v]=$});const y={},g=this.getFrozenTensorIds(m),b={};for(;f.length>0;){const w=this.processStack(i,f,n,m,b,g,l,y,c);await Promise.all(w)}h==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=u.filter(w=>!ao(w)&&!bn(w.name,m,n)).map(w=>w.name);if(x.length>0){let w="";throw h!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${r}]. Consider providing the following inputs: [${d}]. ${w}`)}return m}processStack(e,n,s,a,r,i,o,l,u){const c=[];for(;n.length>0;){const d=n.pop();s.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&S("isConstant",d.node,a,s)&&([h]=fr(d.node.name,s)),a[d.node.name]==null){const p=m$(d.node,a,s,this._resourceManager);h||([h]=fr(d.node.name,s));const f=s.currentContext;Eo(p)?c.push(p.then(m=>(a[h]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(h,d.node,a,s,i,o,l),this.processChildNodes(d.node,n,s,a,r,u),m))):(a[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,d.node,a,s,i,o,l),this.processChildNodes(d.node,n,s,a,r,u))}else this.processChildNodes(d.node,n,s,a,r,u)}return c}processChildNodes(e,n,s,a,r,i){e.children.forEach(o=>{const[l]=fr(o.name,s);r[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!bn(u,a,s))&&(r[l]=!0,n.push({contexts:s.currentContext,node:o})):o.inputNames.every(u=>!!bn(u,a,s))&&(r[l]=!0,n.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const s=e[n],[a]=is(n),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,o=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);N(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&N(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var n,s;const a={};for(const r in e){const i=(s=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const n=Object.keys(e).filter(s=>{const[a]=is(s);return this.graph.nodes[a]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[n];return r!=null?r.name:n},{})}checkOutputs(e){e.forEach(n=>{const[s]=is(n);if(!this.graph.nodes[s])throw new Error(`The output '${n}' is not found in the graph`)})}}class lK{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK="?tfjs-format=file",cK="model.json";class dK{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},s=fR){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=s,n==null&&(this.loadOptions={}),this.resourceManager=new lK}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Eo(e)?e.then(n=>n.getWeightStream==null?this.loadSync(n):this.loadStreaming(n)):this.loadSync(e)}loadSync(e){const n=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,n)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const n=await LT(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,n)}loadWithWeightMap(e,n){this.artifacts=e;const s=this.artifacts.modelTopology;let a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=a,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new jm(d$.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const r=d$.Instance.transformGraph(e.modelInitializer);this.initializer=new jm(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof kt?[e]:e,s={};return n.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return e}predict(e,n){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,n){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var n;if(!(e instanceof kt)&&!Array.isArray(e)){const r=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(r!=null)for(const i in r){const o=r[i];o.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?r[i]=this.resourceIdToCapturedInput[c]:r[i]=e[a++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,s=Object.keys(n);for(let a=0;a<s.length;a++){const r=s[a],i=n[r];this.resourceIdToCapturedInput[i.resourceId]=e[a]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=this.executor.execute(e,n);return s.length>1?s:s[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=await this.executor.executeAsync(e,n);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,s)=>(n[s]=[e[s]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&_e(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function hK(t,e={},n=fR){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=pK(t));const s=new dK(t,e,n);return await s.load(),s}function pK(t){return t.endsWith("/")||(t=t+"/"),`${t}${cK}${uK}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var b$;(function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"})(b$||(b$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&N(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK=Ov;class $b extends Sg{nextDataId(){return $b.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Aw(this,Wn())}write(e,n,s){this.firstUse&&(this.firstUse=!1,M().get("IS_NODE")&&Ns(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:s,refCount:1}),a}makeTensorInfo(e,n,s){let a;if(n==="string"&&s!=null&&s.length>0&&Au(s[0])){const r=s.map(i=>kr(i));a=this.write(r,e,n)}else a=this.write(s,e,n);return{dataId:a,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,s,a,r){this.data.set(e,{values:n,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:s}=this.data.get(e);if(n==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return ka(a,r)}return jf(this.data.get(e).values,n)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(a=>$a(a));return ke(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}makeOutput(e,n,s){return Wn().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=Gn();return e(),{kernelMs:Gn()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){me([e],"where");const n=this.readSync(e.dataId);return fK(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}$b.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const mK=t=>{const{x:e}=t.inputs,n=t.backend;me(e,"abs");let s=new Float32Array(L(e.shape));const a=n.data.get(e.dataId).values;return s=p3(a),n.makeOutput(s,e.shape,e.dtype)},gK={kernelName:Th,backendName:"cpu",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wt(t){return(e,n,s,a,r)=>{const i=Se(e,n),o=i.length,l=be(i),u=L(i),c=nn(r,u),d=e.length,h=n.length,p=be(e),f=be(n),m=ki(e,i),y=ki(n,i);if(m.length+y.length===0)for(let g=0;g<c.length;++g)c[g]=t(s[g%s.length],a[g%a.length]);else for(let g=0;g<c.length;++g){const b=_u(g,o,l),x=b.slice(-d);m.forEach($=>x[$]=0);const w=ja(x,d,p),v=b.slice(-h);y.forEach($=>v[$]=0);const C=ja(v,h,f);c[g]=t(s[w],a[C])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(t){const{inputs:e,backend:n}=t,{real:s,imag:a}=e,r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",r),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const yK={kernelName:Rg,backendName:"cpu",kernelFunc:os};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(t,e,n="float32"){if(n==="complex64"){const a=qm(t,e,"float32"),r=qm(t,e,"float32");return os({inputs:{real:a,imag:r},backend:t})}const s=Sn(L(e),n);return t.makeTensorInfo(e,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const bK={kernelName:ec,backendName:"cpu",kernelFunc:Ja};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mo(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.data.get(s.dataId).complexTensorInfos.real,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const xK={kernelName:ay,backendName:"cpu",kernelFunc:Mo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(t,e,n,s){if(s==="int32"){const a=Int32Array.from(t);return[e,"int32",a]}if(s==="bool"){const a=Zo([0],n),[r,i]=Wt((o,l)=>o!==l?1:0)(e,[],t,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Di(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return Ja({inputs:{x:a},backend:n});const c=qm(n,a.shape,a.dtype),d=Di({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),h=os({inputs:{real:d,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),h}if(a.dtype==="complex64"){const c=Mo({inputs:{input:a},backend:n}),d=Di({inputs:{x:c},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(c),d}if(!Fw(a.dtype,r)){const c=Ja({inputs:{x:a},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:r}}const i=n.data.get(a.dataId).values,[o,l,u]=f3(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}const wK={kernelName:Vu,backendName:"cpu",kernelFunc:Di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(t,e,n,s){return n==null?({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;me([i,o],t);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,d=i.dtype==="string"?Ia(u):u,h=i.dtype==="string"?Ia(c):c,p=s||i.dtype,[f,m]=e(i.shape,o.shape,d,h,p);return l.makeTensorInfo(m,p,f)}:({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;if(i.dtype==="complex64"||o.dtype==="complex64"){const u=Di({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.real,h=c.complexTensorInfos.imag,p=l.data.get(d.dataId).values,f=l.data.get(h.dataId).values,m=Di({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(m.dataId),g=y.complexTensorInfos.real,b=y.complexTensorInfos.imag,x=l.data.get(g.dataId).values,w=l.data.get(b.dataId).values,[v,C,$]=n(i.shape,o.shape,p,f,x,w),k=l.makeTensorInfo($,"float32",v),T=l.makeTensorInfo($,"float32",C),E=os({inputs:{real:k,imag:T},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(k),l.disposeIntermediateTensorInfo(T),E}else{const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,d=s||i.dtype,[h,p]=e(i.shape,o.shape,u,c,d);return l.makeTensorInfo(p,d,h)}}}function gS(t){return(e,n,s,a,r,i)=>{const o=Se(e,n),l=L(o),u=o.length,c=be(o),d=nn("float32",l),h=nn("float32",l),p=ki(e,o),f=ki(n,o),m=ka(s,a),y=ka(r,i),g=e.length,b=be(e),x=n.length,w=be(n);if(p.length+f.length===0)for(let v=0;v<d.length;v++){const C=v%m.length,$=v%y.length,k=t(m[C*2],m[C*2+1],y[$*2],y[$*2+1]);d[v]=k.real,h[v]=k.imag}else for(let v=0;v<d.length;v++){const C=_u(v,u,c),$=C.slice(-g);p.forEach(B=>$[B]=0);const k=ja($,g,b),T=C.slice(-x);f.forEach(B=>T[B]=0);const E=ja(T,x,w),O=t(m[k*2],m[k*2+1],y[E*2],y[E*2+1]);d[v]=O.real,h[v]=O.imag}return[d,h,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m3=Wt((t,e)=>t+e),vK=gS((t,e,n,s)=>({real:t+n,imag:e+s})),bu=rn(Yo,m3,vK),SK={kernelName:Yo,backendName:"cpu",kernelFunc:bu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(t,e,n,s,a){const r=L(s),i=Sn(a,n);for(let o=0;o<t.length;o++){const l=t[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(r>0?i[l]+=e[o]:i[l]+=1)}return i}function g3(t,e,n,s=!1){const a=t.shape[0],r=t.shape[1],i=ke([a,n],e.dtype);for(let o=0;o<a;o++)for(let l=0;l<r;l++){const u=t.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?i.set(1,o,u):e.size>0?i.set(i.get(o,u)+e.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=Wt((t,e)=>t&e),CK=rn(Tg,y3),$K={kernelName:Tg,backendName:"cpu",kernelFunc:CK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(t){return(e,n,s)=>{const a=Ot(n,e.length);for(let r=0;r<e.length;++r)a[r]=t(e[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(t,e,n){const s=ir(e);return Wi(t,s,n)}function Wi(t,e,n){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;me(i,t);const o=r,l=o.data.get(i.dataId).values;let u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Ia(l)}else u=l;const c=n||i.dtype,d=e(u,c,a);return o.makeTensorInfo(i.shape,c,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b3=ir(t=>Math.ceil(t)),NK=Wi(Uu,b3),kK={kernelName:Uu,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(t,e,n,s){const a=Ot(n,L(e));if(s&&n!=="string"){let r=0;t.forEach(i=>{const o=L(i.shape);a.set(i.vals,r),r+=o})}else{let r=0;t.forEach(i=>{const o=n==="string"?Ia(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+r;for(let d=0;d<i.shape[1];++d)a[c+d]=o[l++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3=Wt((t,e)=>t===e?1:0),v3=rn(Gh,w3,null,"bool"),IK={kernelName:Gh,backendName:"cpu",kernelFunc:v3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S3=ir(t=>Math.exp(t)),C3=Wi(Ku,S3,"float32"),TK={kernelName:Ku,backendName:"cpu",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3=ir(t=>Math.expm1(t)),EK=Wi(Yu,$3),RK={kernelName:Yu,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3=ir(t=>Math.floor(t)),DK=Wi(Qu,N3),AK={kernelName:Qu,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k3=Wt((t,e)=>Math.floor(t/e)),_K=rn(Zu,k3,null,"int32"),OK={kernelName:Zu,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(t,e,n,s,a,r,i,o,l){const u=ke([s,r],n);for(let c=0;c<s;c++){const d=[];let h=0;for(let p=0;p<a;p++){const f=t[c*a+p];h+=f*i[p],d.push(f)}if(h<0||h>=l/r)throw new Error(`Invalid indices: ${d} does not index into ${o}`);for(let p=0;p<r;p++)u.values[c*r+p]=e.get(...e.indexToLoc(h*r+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(t,e,n){const s=ke(n,t.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),o=i[0],l=i[2],u=e.locToIndex([o,l]);i[2]=e.values[u];const c=t.locToIndex(i);0<=c&&c<t.values.length&&(s.values[a]=t.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E3=Wt((t,e)=>t>e?1:0),FK=rn(Xh,E3,null,"bool"),zK={kernelName:Xh,backendName:"cpu",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3=Wt((t,e)=>t>=e?1:0),LK=rn(Ju,R3,null,"bool"),PK={kernelName:Ju,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D3=Wt((t,e)=>t<e?1:0),MK=rn(Yh,D3,null,"bool"),BK={kernelName:Yh,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A3=Wt((t,e)=>t<=e?1:0),VK=rn(Qh,A3,null,"bool"),UK={kernelName:Qh,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(t,e,n){const s=(e-t)/(n-1),a=Sn(n,"float32");a[0]=t;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O3=ir(t=>Math.log(t)),WK=Wi(ac,O3),GK={kernelName:ac,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(t,e,n,s){const a=nn(s,L(n));for(let r=0;r<a.length;++r){const i=r*e;let o=t[i];for(let l=0;l<e;++l){const u=t[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[r]=o}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z3=Wt((t,e)=>Math.max(t,e)),HK=rn(ic,z3),jK={kernelName:ic,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L3=Wt((t,e)=>Math.min(t,e)),qK=rn(oc,L3),XK={kernelName:oc,backendName:"cpu",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS=Wt((t,e)=>t*e),KK=gS((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n})),Nb=rn(uc,bS,KK),YK={kernelName:uc,backendName:"cpu",kernelFunc:Nb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(t,e,n){const s=Fi(-1,n);return bS([],e,s,t,n)}function QK(t){const{inputs:e,backend:n}=t,{x:s}=e;me(s,"neg");const a=n.data.get(s.dataId).values,[r,i]=P3(a,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,r)}const ZK={kernelName:lp,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M3=Wt((t,e)=>t!==e?1:0),JK=rn(up,M3,null,"bool"),e8={kernelName:up,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(t,e,n,s,a){const r=e.length,i=L(e),o=be(e),l=be(a),u=nn(n,L(a));for(let c=0;c<i;++c){const d=_u(c,r,o),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=ja(h,r,l);u[p]=t[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(t){const{inputs:e,attrs:n,backend:s}=t,{x:a}=e,{perm:r}=n;me(a,"transpose");const i=a.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=a.shape[r[d]];const l=s.data.get(a.dataId).values,u=xS(l,a.shape,a.dtype,r,o);return{dataId:s.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const t8={kernelName:xo,backendName:"cpu",kernelFunc:es};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(t,e,n,s){const[a,r]=Vt(t,s),i=pn(e,"int32"),o=Sn(L(a),i),l=L(r);for(let u=0;u<o.length;++u){const c=u*l;let d=1;for(let h=0;h<l;++h)d*=n[c+h];o[u]=d}return{outVals:o,outShape:a,outDtype:i}}function n8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"prod");const o=a.shape.length,l=Ie(r,a.shape),u=tt(l,o);let c=l,d=a;const h=[];u!=null&&(d=es({inputs:{x:a},backend:n,attrs:{perm:u}}),h.push(d),c=ht(c.length,o));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:y}=B3(d.shape,d.dtype,p,c);let g=m;return i&&(g=zt(m,l)),h.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(g,y,f)}const s8={kernelName:mp,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(t,e,n){t.forEach((s,a)=>{if(s<0||s>=n){const r=_u(a,e.length,be(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${n})`)}})}function r8(t,e){for(let n=0;n<t.length;++n){const s=t[n],a=n===t.length-1?e:t[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function i8(t,e,n,s){const a=[];let r=0;const i=e.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);r8(n,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let d=1;d<l+1;++d)o[u].push(d*c)}for(let u=0;u<t.length;++u){let c=t[u],d=t[u]+1;for(let h=0;h<n.length;++h){const p=n[h],f=h+e.length-1;if(f>=0){const m=o[f],y=m[m.length-1]-p[c];for(let g=c;g<d;++g)o[f].push(p[g+1]+y)}c=p[c],d=p[d]}d!==c&&(a.push([c,d]),r+=d-c)}return{outSplits:o,valueSlices:a,numValues:r}}function o8(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,a=Ot("int32",s);e.push(a),t[n].forEach((r,i)=>a[i]=r)}return e}function x$(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function l8(t,e,n,s,a,r){const i=x$(e,2)[1],o=x$(r,2)[1];let l=0;for(const u of n)for(let c=u[0];c<u[1];++c){for(let d=0;d<s;++d)a[l*o+d]=t[c*i+d];++l}}function u8(t,e,n,s,a){const r=e.slice();r[0]=a;const i=Ot(n,L(r)),o=t.length,l=o===0?0:o/e[0];return l8(t,e,s,l,i,r),[i,r]}function V3(t,e,n,s,a,r,i,o){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(a8(r,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:d,numValues:h}=i8(r,i,t,u),p=o8(c),f=u8(n,s,a,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$=2147483647;function U3(t,e,n,s,a,r,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=a.length===0,u=i.length===0,c=[];o||c.push(e[0]),l||c.push(a[0]),u||c.push(i[0]);for(let y=1;y<c.length;++y)if(c[y]!==c[y-1])throw new Error("starts, limits, and deltas must have the same shape");const d=c.length===0?1:c[0],h=Ot("int32",d+1);h[0]=0;for(let y=0;y<d;++y){const g=o?t[0]:t[y],b=l?s[0]:s[y],x=u?r[0]:r[y];if(x===0)throw new Error("Requires delta != 0");let w;if(x>0&&b<g||x<0&&b>g)w=0;else if(w=Math.ceil(Math.abs((b-g)/x)),w>w$)throw new Error(`Requires ((limit - start) / delta) <= ${w$}`);h[y+1]=h[y]+w}const p=h[d],f=Ot(n,p);let m=0;for(let y=0;y<d;++y){const g=h[y+1]-h[y];let b=o?t[0]:t[y];const x=u?r[0]:r[y];for(let w=0;w<g;++w)f[m++]=b,b+=x}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bs=wa;class Xm{constructor(e,n,s,a,r,i,o,l,u,c){this.shape=e,this.shapeShape=n,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=NR(c),this.raggedRank=kR(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Bs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Bs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Bs.VALUE_ROWIDS:return Xm.getMaxWidthValueRowID(n);case Bs.ROW_SPLITS:return Xm.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Bs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let s=0;for(let a=0;a<n-1;++a){const r=e[a+1]-e[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let s=0,a=e[0],r=0;for(let i=1;i<n;++i){const o=e[i];o!==a&&(a=o,r=Math.max(i-s,r),s=i)}return Math.max(n-s,r)}tensorShapeFromTensor(e,n,s=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return S$(e,s)}calculateOutputSize(e){const n=this.valuesShape,s=this.defaultValueShape;IR(s,n);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=$R(this.raggedRank,a,n);i[0]<0&&(i[0]=e);for(let o=1;o<=this.raggedRank;++o)i[o]<0&&(i[o]=this.getMaxWidth(o));return i}calculateFirstParentOutputIndex(e,n,s){const a=Math.min(e,s),r=[];let i=0;for(let o=0;o<a;++o,i+=n)r.push(i);for(let o=a;o<e;++o)r.push(-1);return N(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,n,s,a){const r=e.length,i=[];for(let o=0;o<r-1;++o){const l=e[o+1]-e[o];let u=Math.min(a,l),c=n[o];c===-1&&(u=0);for(let d=0;d<u;++d)i.push(c),c+=s;for(let d=0;d<l-u;++d)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,n,s,a){const r=e.length,i=[];if(r===0)return[];let o=0,l=e[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];i.push(u);for(let c=1;c<r;++c){const d=e[c];if(d===l)u>=0&&(++o,o<a?u+=s:u=-1);else{if(o=0,l=d,d>=n.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${n.length}`);u=n[d]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,n,s,a){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Bs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,n,s,a);case Bs.ROW_SPLITS:if(r.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(r,n,s,a);default:throw new Error(`Unsupported partition type: ${Bs[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Bs.FIRST_DIM_SIZE:return e[0];case Bs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Bs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Bs[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let l=a.length-2;l>=0;--l)a[l]=a[l+1]*s[l+1];const r=S$(s,!1),i=Ot(this.valuesDType,L(r));if(a[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(n,a[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,a[u],s[u]);this.setOutput(this.raggedRank,l,i,r)}return[r,i]}setOutput(e,n,s,a){if(s.length===0)return;const r=this.values,i=s;let o=a.slice();o=o.slice(e+1);const l=L(o),u=n.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;U(()=>{const m=F(c,f);c=Jl(m,o).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=u;++f){let m=f<u?n[f]:-1;if(m===p){++p;continue}if(h<p){const y=r.subarray(d*l),g=i.subarray(h*l),b=(p-h)*l;v$(g,y,b)}if(f>=u){const y=s.length;m=Math.floor(y/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const y=i.slice(p*l);v$(y,c,l),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function v$(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function S$(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function W3(t,e,n,s,a,r,i,o,l,u){return new Xm(t,e,n,s,a,r,i,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(t,e,n,s){const a=t===e,r=t<e&&n<0,i=e<t&&n>1;if(a||r||i)return Sn(0,s);const o=Math.abs(Math.ceil((e-t)/n)),l=Sn(o,s);e<t&&n===1&&(n=-1),l[0]=t;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3=ir(t=>1/Math.sqrt(t)),c8=Wi(mc,H3),d8={kernelName:mc,backendName:"cpu",kernelFunc:c8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(t,e,n,s,a,r,i,o,l,u){const c=[s/a,a],d=t.values,h=e.values;if(s===0)return ke(n,e.dtype);const p=l instanceof Jt?l:ke(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<r;f++){const m=[];let y=0;for(let g=0;g<i;g++){const b=d[f*i+g];m.push(b),y+=b*o[g]}if(y<0||y>=s/a)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let g=0;g<a;g++)u?p.values[y*a+g]+=h[f*a+g]:p.values[y*a+g]=e.rank===0?h[0]:h[f*a+g]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8=ir(t=>1/(1+Math.exp(-t))),j3=Ze(wc,t=>1/(1+Math.exp(-t))),p8={kernelName:wc,backendName:"cpu",kernelFunc:j3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(t,e,n,s,a){const r=Uv(s,e,n),i=L(n),o=be(s);if(r){const d=Wv(e,o);return a==="string"?t.slice(d,d+i):t.subarray(d,d+i)}const l=a==="string"?Ia(t):t,u=ke(s,a,l),c=ke(n,a);for(let d=0;d<c.size;++d){const h=c.indexToLoc(d),p=h.map((f,m)=>f+e[m]);c.set(u.get(...p),...h)}return a==="string"?jR(c.values):c.values}function Bo(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,size:i}=s;me(a,"slice");const[o,l]=zp(a,r,i);qy(a,o,l);const u=n.data.get(a.dataId).values,c=q3(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,c)}const f8={kernelName:vp,backendName:"cpu",kernelFunc:Bo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(t,e,n,s,a,r,i){const o=e[0],l=r[0],u=new Array(l),c=new Array(o),d=e[1];if(l===0){if(o!==0)throw new Error(OR(o));const y=Ot(n,0),g=Ot(a,0);return[y,[0,d],g,u,c]}let h=!0,p=0;const f=new Array(l).fill(0);for(let y=0;y<o;++y){const g=t[y*d];if(g<0)throw new Error(FR(y,g));if(g>=l)throw new Error(zR(y,g,l));++f[g],h=h&&g>=p,p=g}let m=!0;for(let y=0;y<l;++y){const g=f[y]===0;u[y]=g,m=m&&!g,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(m&&h){const y=t,g=s;for(let b=0;b<o;++b)c[b]=b;return[y,[o,d],g,u,c]}else{const y=f[l-1],g=Ot(n,y*d),b=Ot(a,y),x=new Array(l).fill(0);for(let w=0;w<o;++w){const v=t[w*d],C=x[v],$=(v===0?0:f[v-1])+C;x[v]++;for(let k=0;k<d;++k)g[$*d+k]=t[w*d+k];b[$]=s[w],c[w]=$}for(let w=0;w<l;++w)if(x[w]===0){const C=w===0?0:f[w-1];g[C*d+0]=w;for(let $=1;$<d;++$)g[C*d+$]=0;b[C]=i}return[g,[y,d],b,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(t,e,n,s,a){const r=L(s),i=e[0],o=a.length,l=[];let u=1,c=-1;for(let y=0;y<o;++y){const g=a[y];if(g===-1){if(c!==-1)throw new Error(LR(c,y));c=y,l.push(1)}else{if(g<0)throw new Error(PR(y,g));u*=g,l.push(g)}}if(c!==-1){if(u<=0)throw new Error(MR());const y=Math.trunc(r/u);if(u*y!==r)throw new Error(BR(s,l));l[c]=y}if(L(l)!==r)throw new Error(VR(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let y=h-2;y>=0;--y)p[y]=p[y+1]*s[y+1]}const f=[];if(o>0){f[o-1]=1;for(let y=o-2;y>=0;--y)f[y]=f[y+1]*l[y+1]}const m=Ot(n,i*o);for(let y=0;y<i;++y){let g=0;for(let b=0;b<h;++b)g+=t[y*h+b]*p[b];for(let b=0;b<o;++b)m[y*o+b]=Math.trunc(g/f[b]),g%=f[b]}return[m,[i,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(t,e,n,s,a,r=!1,i=0){const o=s.length,l=[e[0],t.length/e[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error(n1());const h=e.slice();h[0]=d;const p=h.reduce((x,w)=>x*w,1),f=Ot(n,p);if(o===0)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(n1());let m=0,y=1,g=0,b=a[m];for(;;){let x=0;if(y<o){if(x=a[y],b===x){++y;continue}if(b>=x)throw new Error(UR())}if(b<0||b>=d)throw new Error(WR(b,d));b>g&&f.fill(i,g*u,b*u);for(let w=m;w<y;++w){const v=s[w];if(v<0||v>=l[0])throw new Error(GR(w,s[w],l[0]));for(let C=0;C<u;C++)f[b*u+C]+=t[v*u+C]}if(r)for(let w=0;w<u;w++)f[b*u+w]/=y-m;if(m=y,++y,g=b+1,b=x,y>o)break}return g<d&&f.fill(i,g*u,d*u),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8=ir(t=>Math.sqrt(t)),g8=Ze(Sc,t=>Math.sqrt(t)),y8={kernelName:Sc,backendName:"cpu",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y3=Wt((t,e)=>{const n=t-e;return n*n}),b8=rn(Cc,Y3),x8={kernelName:Cc,backendName:"cpu",kernelFunc:b8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q3=ir((t,e)=>{const{pattern:n,replaceGlobal:s,rewrite:a}=e;return t.replace(new RegExp(n,s?"g":""),a)}),w8=Wi(fy,Q3),v8={kernelName:fy,backendName:"cpu",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(t,e,n,s){const a=ke(t,e.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+s[l];a.set(e.get(...o),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S8{constructor(e,n,s,a,r,i){this.separator=kr(e),this.nGramWidths=n,this.leftPad=kr(s),this.rightPad=kr(a),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const s=this.getPadWidth(n);return Math.max(0,e+2*s-n+1)}createNGrams(e,n,s,a,r,i){for(let o=0;o<r;++o){const l=this.getPadWidth(i),u=Math.max(0,l-o),c=Math.max(0,l-(r-(o+1))),d=i-(u+c),h=n+(u>0?0:o-l);let p=0;p+=u*this.leftPad.length;for(let b=0;b<d;++b)p+=e[h+b].length;p+=c*this.rightPad.length;const f=u+c+d-1;p+=f*this.separator.length,s[a+o]=new Uint8Array(p);const m=s[a+o];let y=0;const g=b=>b.forEach(x=>m[y++]=x);for(let b=0;b<u;++b)g(this.leftPad),g(this.separator);for(let b=0;b<d-1;++b)g(e[h+b]),g(this.separator);if(d>0){g(e[h+d-1]);for(let b=0;b<c;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<c-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,n){const s=e.length,a=n.length;if(a>0){let l=n[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<a;++u){let c=n[u]>=l;if(c=c&&n[u]<=s,!c)throw new Error(`Invalid split value ${n[u]}, must be in [${l}, ${s}]`);l=n[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=a-1,i=Ot("int32",a);if(s===0||a===0){const l=new Array(s);for(let u=0;u<=r;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=r;++l){const u=n[l]-n[l-1];let c=0;this.nGramWidths.forEach(d=>{c+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const o=new Array(i[r]);for(let l=0;l<r;++l){const u=n[l];let c=i[l];if(this.nGramWidths.forEach(d=>{const h=n[l+1]-n[l],p=this.getNumNGrams(h,d);this.createNGrams(e,u,o,c,p,d),c+=p}),this.preserveShort&&c===i[l]){const d=n[l+1]-n[l];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(e,u,o,c,1,h)}}return[o,i]}}function J3(t,e,n,s,a,r,i,o){return new S8(n,s,a,r,i,o).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(t,e,n,s){if(!t.length)return;if(e.length===0){for(let r=0;r<t.length;++r)s.push(t.subarray(r,r+1));return}if(e.length===1){const r=e[0];let i=t.indexOf(r);for(;i!==-1;){const o=t.subarray(0,i);(!n||o.length!==0)&&s.push(o),t=t.subarray(i+1),i=t.indexOf(r)}(!n||t.length!==0)&&s.push(t);return}let a=0;for(let r=0;r<t.length+1;r++)if(r===t.length||e.indexOf(t[r])!==-1){const i=t.subarray(a,r);(!n||i.length!==0)&&s.push(i),a=r+1}}function e_(t,e,n){const s=t.length,a=[];let r=0,i=0;const o=new Array(s);for(let h=0;h<s;++h){const p=a.length;C8(t[h],e,n,a);const f=a.length-p;o[h]=f,r+=f,i=Math.max(i,f)}const l=Ot("int32",r*2),u=new Array(r),c=[s,i];let d=0;for(let h=0;h<s;++h)for(let p=0;p<o[h];++p)l[d*2]=h,l[d*2+1]=p,u[d]=a[d],++d;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(t,e){const n=Ot("int32",t.length);for(let s=0;s<t.length;++s)n[s]=zP(t[s]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n_=Wt((t,e)=>t-e),$8=gS((t,e,n,s)=>({real:t-n,imag:e-s})),vS=rn($c,n_,$8),N8={kernelName:$c,backendName:"cpu",kernelFunc:vS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const s=ke(n,t.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(t.rank);for(let l=0;l<i.length;l++)i[l]=r[l]%t.shape[l];const o=t.locToIndex(i);s.values[a]=t.values[o]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hd=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function a_(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const o=s-n+1,l=e-n+1,u=Math.log(o),c=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*c*(o-c)/o)*Math.sign(l-o/2),h=Math.max(n,Math.floor(e-l*c/o+d)),p=Math.min(s,Math.floor(e+(o-l)*c/o+d));a_(t,e,h,p)}const a=t[e];let r=n,i=s;for(kl(t,n,e),hd(t[s],a)>0&&kl(t,n,s);r<i;){for(kl(t,r,i),r++,i--;hd(t[r],a)<0;)r=r+1;for(;hd(t[i],a)>0;)i=i-1}hd(t[n],a)===0?kl(t,n,i):(i=i+1,kl(t,i,s)),i<=e&&(n=i+1),e<=i&&(s=i-1)}}function r_(t,e,n,s,a){const r=e[e.length-1],[i,o]=[t.length/r,r],l=nn(n,i*s),u=nn("int32",i*s);for(let d=0;d<i;d++){const h=d*o,p=t.subarray(h,h+o);let f=new Array(p.length);p.forEach((b,x)=>f[x]={value:b,index:x}),s<f.length&&(a_(f,s),f=f.slice(0,s)),a&&f.sort(hd);const m=d*s,y=l.subarray(m,m+s),g=u.subarray(m,m+s);for(let b=0;b<s;b++)y[b]=f[b].value,g[b]=f[b].index}const c=e.slice();return c[c.length-1]=s,[ke(c,n,l),ke(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(t,e,n,s){const a=Ie(e,n)[0],r=[1,n[0],1];for(let f=0;f<a;f++)r[0]*=n[f];r[1]=n[a];for(let f=a+1;f<n.length;f++)r[2]*=n[f];const i=new Map,o=new Int32Array(n[a]),l=new Jt(r,s,t),u=[],c=r[0]===1&&r[2]===1;for(let f=0;f<n[a];f++){let m;if(c)m=t[f].toString();else{const g=[];for(let b=0;b<r[0];b++)for(let x=0;x<r[2];x++)g.push(l.get(b,f,x));m=g.join(",")}const y=i.get(m);if(y!=null)o[f]=y;else{const g=i.size;i.set(m,g),o[f]=g,u.push(f)}}const d=r.slice();d[1]=i.size;const h=new Jt(d,s);u.forEach((f,m)=>{for(let y=0;y<r[0];y++)for(let g=0;g<r[2];g++)h.set(l.get(y,f,g),y,m,g)});const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o_=Object.freeze(Object.defineProperty({__proto__:null,addImpl:m3,bincountImpl:yS,bincountReduceImpl:g3,bitwiseAndImpl:y3,castImpl:f3,ceilImpl:b3,concatImpl:x3,equalImpl:w3,expImpl:S3,expm1Impl:$3,floorDivImpl:k3,floorImpl:N3,gatherNdImpl:I3,gatherV2Impl:T3,greaterEqualImpl:R3,greaterImpl:E3,lessEqualImpl:A3,lessImpl:D3,linSpaceImpl:_3,logImpl:O3,maxImpl:F3,maximumImpl:z3,minimumImpl:L3,multiplyImpl:bS,negImpl:P3,notEqualImpl:M3,prodImpl:B3,raggedGatherImpl:V3,raggedRangeImpl:U3,raggedTensorToTensorImpl:W3,rangeImpl:G3,rsqrtImpl:H3,scatterImpl:ho,sigmoidImpl:h8,simpleAbsImpl:p3,sliceImpl:q3,sparseFillEmptyRowsImpl:X3,sparseReshapeImpl:K3,sparseSegmentReductionImpl:wS,sqrtImpl:m8,squaredDifferenceImpl:Y3,staticRegexReplaceImpl:Q3,stridedSliceImpl:Z3,stringNGramsImpl:J3,stringSplitImpl:e_,stringToHashBucketFastImpl:t_,subImpl:n_,tileImpl:s_,topKImpl:r_,transposeImpl:xS,uniqueImpl:i_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Kw("cpu",()=>new $b,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l_=Ze(qu,t=>t>=0?t:Math.exp(t)-1),k8={kernelName:qu,backendName:"cpu",kernelFunc:l_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{alpha:r}=s;me([a],"leakyRelu");const i=L(a.shape),o=n.data.get(a.dataId).values,l=nn("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?r*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}const I8={kernelName:Kh,backendName:"cpu",kernelFunc:u_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8=Wt((t,e)=>t<0?e*t:t);function c_(t){const{inputs:e,backend:n}=t,{x:s,alpha:a}=e;me([s,a],"prelu");const r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,[o,l]=T8(s.shape,a.shape,r,i,"float32");return n.makeTensorInfo(l,"float32",o)}const E8={kernelName:fp,backendName:"cpu",kernelFunc:c_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_=Ze(hc,t=>Math.max(0,t)),R8={kernelName:hc,backendName:"cpu",kernelFunc:d_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_=Ze(pc,t=>Math.min(Math.max(0,t),6)),D8={kernelName:pc,backendName:"cpu",kernelFunc:h_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(t,e,n,s,a){if(n==="linear")return Ja({inputs:{x:e},backend:t});if(n==="relu")return d_({inputs:{x:e},backend:t});if(n==="elu")return l_({inputs:{x:e},backend:t});if(n==="relu6")return h_({inputs:{x:e},backend:t});if(n==="prelu")return c_({inputs:{x:e,alpha:s},backend:t});if(n==="leakyrelu")return u_({inputs:{x:e},backend:t,attrs:{alpha:a}});if(n==="sigmoid")return j3({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{shape:r}=s,i=L(a.shape),o=Ow(r,i),l=L(o);N(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const u=n.data.get(a.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;c.shape=o,d.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const A8={kernelName:gp,backendName:"cpu",kernelFunc:ct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r}=e,{transposeA:i,transposeB:o}=s;me([a,r],"matMul");const l=a.shape.length,u=r.shape.length,c=i?a.shape[l-2]:a.shape[l-1],d=o?r.shape[u-1]:r.shape[u-2],h=i?a.shape[l-1]:a.shape[l-2],p=o?r.shape[u-2]:r.shape[u-1],f=a.shape.slice(0,-2),m=r.shape.slice(0,-2),y=L(f),g=L(m),x=Se(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([h,p]);N(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${o} must match.`);const w=i?[y,c,h]:[y,h,c],v=o?[g,p,d]:[g,d,p],C=ct({inputs:{x:a},backend:n,attrs:{shape:w}}),$=ct({inputs:{x:r},backend:n,attrs:{shape:v}}),k=i?C.shape[1]:C.shape[2],T=i?C.shape[2]:C.shape[1],E=o?$.shape[1]:$.shape[2],O=Math.max(y,g),B=n.data.get(C.dataId).values,W=n.data.get($.dataId).values,V=be(C.shape),G=be($.shape),[D,H,P]=i?[V[0],1,V[1]]:[V[0],V[1],1],[j,X,Q]=o?[1,G[1],G[0]]:[G[1],1,G[0]],ee=T*E,J=ke([O,T,E],C.dtype),se=J.values,te=n.blockSize;for(let he=0;he<O;he++){const xe=he%y,Ce=he%g;for(let ve=0;ve<T;ve+=te){const Re=Math.min(ve+te,T);for(let Fe=0;Fe<E;Fe+=te){const Ye=Math.min(Fe+te,E);for(let it=0;it<k;it+=te){const Et=Math.min(it+te,k);for(let ot=ve;ot<Re;ot++)for(let Je=Fe;Je<Ye;Je++){let Ct=0;for(let bt=it;bt<Et;bt++){const or=B[xe*D+ot*H+bt*P],mn=W[bt*j+Je*X+Ce*Q];Ct+=or*mn}se[he*ee+(ot*E+Je)]+=Ct}}}}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(x,J.dtype,J.values)}const _8={kernelName:Oh,backendName:"cpu",kernelFunc:p_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=p_({inputs:{a,b:r},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=bu({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=Km(n,h,c,o,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}const F8={kernelName:Yd,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8=Ze(Ou,t=>Math.acos(t)),L8={kernelName:Ou,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=Ze(Fu,t=>Math.acosh(t)),M8={kernelName:Fu,backendName:"cpu",kernelFunc:P8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(t){const{inputs:e,backend:n}=t,s=e;me(e,"addN");const a=s.map(o=>n.data.get(o.dataId).values),r=ke(s[0].shape,s[0].dtype),i=r.values;for(let o=0;o<s.length;o++){const l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}const V8={kernelName:Eh,backendName:"cpu",kernelFunc:B8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"all");const o=Ie(r,a.shape);let l=o;const u=tt(l,a.shape.length);let c=a;u!=null&&(c=es({inputs:{x:a},backend:n,attrs:{perm:u}}),l=ht(l.length,a.shape.length)),jt("all",l,c.shape.length);const[d,h]=Vt(c.shape,l),p=L(h),f=Sn(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const b=g*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];x=x&&v}f[g]=x}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(d,c.dtype,f);if(i){const g=zt(d,o),b=ct({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),b}return y}const W8={kernelName:Cg,backendName:"cpu",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"any");const o=Ie(r,a.shape);let l=o;const u=tt(l,a.shape.length);let c=a;u!=null&&(c=es({inputs:{x:a},backend:n,attrs:{perm:u}}),l=ht(l.length,a.shape.length)),jt("any",l,c.shape.length);const[d,h]=Vt(c.shape,l),p=L(h),f=Sn(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const b=g*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];x=x||v}f[g]=x}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(d,c.dtype,f);if(i){const g=zt(d,o),b=ct({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),b}return y}const H8={kernelName:$g,backendName:"cpu",kernelFunc:G8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;me(a,"argMax");let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=es({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ht(i.length,l.shape.length)),i=[i[0]],jt("argMax",i,l.shape.length);const[c,d]=Vt(l.shape,i),h=L(c),p=Sn(h,"int32"),f=L(d),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let b=m[g],x=0;for(let w=0;w<f;++w){const v=m[g+w];v>b&&(b=v,x=w)}p[y]=x}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const q8={kernelName:Rh,backendName:"cpu",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;me(a,"argMin");let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=es({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ht(i.length,l.shape.length)),i=[i[0]],jt("argMin",i,l.shape.length);const[c,d]=Vt(l.shape,i),h=L(c),p=Sn(h,"int32"),f=L(d),m=n.data.get(l.dataId).values;for(let y=0;y<p.length;++y){const g=y*f;let b=m[g],x=0;for(let w=0;w<f;++w){const v=m[g+w];v<b&&(b=v,x=w)}p[y]=x}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",p)}const K8={kernelName:Dh,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8=Ze(zu,t=>Math.asin(t)),Q8={kernelName:zu,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8=Ze(Lu,t=>Math.asinh(t)),J8={kernelName:Lu,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=Ze(Pu,t=>Math.atan(t)),t7={kernelName:Pu,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=Wt((t,e)=>Math.atan2(t,e)),s7=rn(Bu,n7),a7={kernelName:Bu,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7=Ze(Mu,t=>Math.atanh(t)),i7={kernelName:Mu,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(t,e,n,s,a,r){const i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ke(a.outShape,n),y=m.values,g=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){const v=w*g,C=w*s[0];for(let $=0;$<a.inChannels;++$)for(let k=0;k<a.outHeight;++k){const T=k*i-h,E=Math.max(0,T),O=Math.min(a.inHeight,c+T),B=v+k*b;for(let W=0;W<a.outWidth;++W){const V=W*o-p,G=Math.max(0,V),D=Math.min(a.inWidth,d+V);let H=f,P=0,j=0;for(let Q=E;Q<O;Q+=l){const ee=C+Q*s[1];for(let J=G;J<D;J+=u){const se=ee+J*s[2],te=t[se+$];r==="max"&&te>H?H=te:r==="avg"&&(P+=te,j++)}if(isNaN(H))break}const X=B+W*x+$;y[X]=r==="avg"?P/j:H}}}return m}function f_(t,e,n,s,a=!1,r=!1){const i=ke(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ke(e,n,t);for(let y=0;y<s.batchSize;++y)for(let g=0;g<s.inChannels;++g)for(let b=0;b<s.outHeight;++b){const x=b*o-p;let w=x;for(;w<0;)w+=u;const v=Math.min(s.inHeight,d+x);for(let C=0;C<s.outWidth;++C){const $=C*l-f;let k=$;for(;k<0;)k+=c;const T=Math.min(s.inWidth,h+$);let E=Number.NEGATIVE_INFINITY,O=-1;for(let B=w;B<v;B+=u){const W=B-x;for(let V=k;V<T;V+=c){const G=V-$,D=m.get(y,B,V,g);D>E&&(E=D,a?O=r?((y*s.inHeight+B)*s.inWidth+V)*s.inChannels+g:(B*s.inWidth+V)*s.inChannels+g:O=W*h+G)}}i.set(O,y,b,C,g)}}return i}function m_(t,e,n,s,a,r){const i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,y=a.padInfo.top,g=a.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ke(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[2]*a.outShape[3]*a.outShape[4],$=a.outShape[3]*a.outShape[4],k=a.outShape[4];for(let T=0;T<a.batchSize;++T){const E=T*v,O=T*s[0];for(let B=0;B<a.inChannels;++B)for(let W=0;W<a.outDepth;++W){const V=W*i-m;let G=V;for(;G<0;)G+=u;const D=Math.min(a.inDepth,h+V),H=E+W*C;for(let P=0;P<a.outHeight;++P){const j=P*o-y;let X=j;for(;X<0;)X+=c;const Q=Math.min(a.inHeight,p+j),ee=H+P*$;for(let J=0;J<a.outWidth;++J){const se=J*l-g;let te=se;for(;te<0;)te+=d;const he=Math.min(a.inWidth,f+se),xe=ee+J*k;let Ce=b,ve=0,Re=0;for(let Ye=G;Ye<D;Ye+=u){const it=O+Ye*s[1];for(let Et=X;Et<Q;Et+=c){const ot=it+Et*s[2];for(let Je=te;Je<he;Je+=d){const Ct=ot+Je*s[3],bt=t[Ct+B];if(r==="max"&&bt>Ce?Ce=bt:r==="avg"&&(ve+=bt,Re++),isNaN(Ce))break}if(isNaN(Ce))break}if(isNaN(Ce))break}const Fe=xe+B;w[Fe]=r==="avg"?ve/Math.max(Re,1):Ce}}}}return x}function o7(t,e){const n=ke(e.outShape,"int32"),s=e.strideDepth,a=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let y=0;y<e.inChannels;++y)for(let g=0;g<e.outDepth;++g){const b=g*s-h;let x=b;for(;x<0;)x+=i;const w=Math.min(e.inDepth,u+b);for(let v=0;v<e.outHeight;++v){const C=v*a-p;let $=C;for(;$<0;)$+=o;const k=Math.min(e.inHeight,c+C);for(let T=0;T<e.outWidth;++T){const E=T*r-f;let O=E;for(;O<0;)O+=l;const B=Math.min(e.inWidth,d+E);let W=Number.NEGATIVE_INFINITY,V=-1;for(let G=x;G<w;G+=i){const D=G-b;for(let H=$;H<k;H+=o){const P=H-C;for(let j=O;j<B;j+=l){const X=j-E,Q=t.get(m,G,H,j,y);Q>=W&&(W=Q,V=D*c*d+P*c+X)}}}n.set(V,m,g,v,T,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;me(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(an(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);let d;if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))d=Ja({inputs:{x:a},backend:n});else{const h=n.data.get(a.dataId).values,p=be(a.shape),f=SS(h,a.shape,a.dtype,p,c,"avg");d=n.makeTensorInfo(c.outShape,a.dtype,f.values)}return d}const u7={kernelName:Ah,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;me(a,"avgPool3d");const c=Os(a.shape,r,i,1,o,l,u),d=n.data.get(a.dataId).values,h=m_(d,a.shape,a.dtype,be(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}const d7={kernelName:_h,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;me([a,r],"avgPool3DGrad");const c=Os(r.shape,i,o,1,l,u),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,y=c.filterWidth,g=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,C=c.effectiveFilterWidth,$=w-1-c.padInfo.front,k=C-1-c.padInfo.left,T=v-1-c.padInfo.top,E=ke(r.shape,"float32"),O=1/(f*m*y),B=n.bufferSync(a);for(let W=0;W<c.batchSize;++W)for(let V=0;V<c.inChannels;++V)for(let G=0;G<c.inDepth;++G)for(let D=0;D<c.inHeight;++D)for(let H=0;H<c.inWidth;++H){const P=G-$,j=D-T,X=H-k;let Q=0;for(let ee=0;ee<w;ee+=g){const J=(P+ee)/d;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let se=0;se<v;se+=b){const te=(j+se)/h;if(!(te<0||te>=c.outHeight||Math.floor(te)!==te))for(let he=0;he<C;he+=x){const xe=(X+he)/p;if(xe<0||xe>=c.outWidth||Math.floor(xe)!==xe)continue;const Ce=B.get(W,J,te,xe,V);Q+=Ce}}}E.set(Q*O,W,G,D,H,V)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const p7={kernelName:kg,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r;me([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rn(i.shape,o,l,1,u),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,g=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=g-1-c.padInfo.top,v=ke(i.shape,"float32"),C=1/(p*f),$=n.data.get(a.dataId).values,k=ke(a.shape,"float32",$);for(let T=0;T<c.batchSize;++T)for(let E=0;E<c.inChannels;++E)for(let O=0;O<c.inHeight;++O)for(let B=0;B<c.inWidth;++B){const W=O-w,V=B-x;let G=0;for(let D=0;D<g;D+=m){const H=(W+D)/d;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let P=0;P<b;P+=y){const j=(V+P)/h;if(j<0||j>=c.outWidth||Math.floor(j)!==j)continue;const X=k.get(T,H,j,E);G+=X}}v.set(G*C,T,O,B,E)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const m7={kernelName:Ng,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,scale:r,offset:i,mean:o,variance:l}=e;N(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(r==null||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),me([a,o,l,r,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,p=r?n.data.get(r.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),y=f.length,g=p.length,b=h.length,x=d.length;let w=0,v=0,C=0,$=0;for(let k=0;k<c.length;++k)m[k]=f[w++]+(c[k]-d[v++])*p[C++]/Math.sqrt(h[$++]+u),w>=y&&(w=0),v>=x&&(v=0),C>=g&&(C=0),$>=b&&($=0);return n.makeTensorInfo(a.shape,a.dtype,m)}const y7={kernelName:jh,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,crops:i}=s;me([a],"batchToSpaceND");const o=r.reduce((g,b)=>g*b),l=sl(a.shape,r,o),u=al(l.length,r.length),c=rl(a.shape,r,o),d=Jy(i,r.length),h=eb(c,i,r.length),p=ct({inputs:{x:a},backend:n,attrs:{shape:l}}),f=es({inputs:{x:p},backend:n,attrs:{perm:u}}),m=ct({inputs:{x:f},backend:n,attrs:{shape:c}}),y=Bo({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const x7={kernelName:Fh,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i}=s,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=yS(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}const v7={kernelName:Ig,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(t){const{inputs:e,backend:n}=t,{s0:s,s1:a}=e,r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,o=Se(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const C7={kernelName:Eg,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=Ze(Wu,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),N7={kernelName:Wu,backendName:"cpu",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(L(e.shape)),a=n.data.get(e.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const c=o[u],d=l[u];s[u]=Math.hypot(c,d)}return n.makeOutput(s,e.shape,"float32")},I7={kernelName:zh,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xu(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.data.get(s.dataId).complexTensorInfos.imag,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const T7={kernelName:Xg,backendName:"cpu",kernelFunc:xu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,r=Ie(a,e[0].shape)[0],i=e.map(m=>m.shape);Yy(i,r);let o=Qn(e.map(m=>m.shape),r);if(L(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(m=>L(m.shape)>0);if(l.length===1)return Ja({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){const m=l.map(w=>Mo({inputs:{input:w},backend:n})),y=l.map(w=>xu({inputs:{input:w},backend:n})),g=wu({inputs:m,backend:n,attrs:{axis:r}}),b=wu({inputs:y,backend:n,attrs:{axis:r}}),x=os({inputs:{real:g,imag:b},backend:n});return m.forEach(w=>n.disposeIntermediateTensorInfo(w)),y.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}const u=l.map(m=>{const g=[-1,L(m.shape.slice(r))];return ct({inputs:{x:m},backend:n,attrs:{shape:g}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=Qn(u.map(m=>m.shape),1);const d=u[0].shape[0]===1,h=x3(c,o,e[0].dtype,d),p=Qn(l.map(m=>m.shape),r),f=n.makeTensorInfo(p,e[0].dtype,h);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const E7={kernelName:Lh,backendName:"cpu",kernelFunc:wu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;me([a,r],"conv2d");const d=xs(l),h=dt(a.shape,r.shape,i,u,o,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,y=h.dilationWidth,g=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",w=new Jt(h.outShape,a.dtype),v=be(a.shape),C=be(r.shape),$=v[0],k=x?v[1]:v[2],T=x?v[2]:1,E=x?1:v[1],O=w.strides[0],B=x?w.strides[1]:w.strides[2],W=x?w.strides[2]:1,V=x?1:w.strides[1],G=n.data.get(a.dataId).values,D=n.data.get(r.dataId).values,H=w.values;for(let P=0;P<h.batchSize;++P){const j=P*$,X=P*O;for(let Q=0;Q<h.outHeight;++Q){const ee=X+Q*B,J=Q*h.strideHeight-b;for(let se=0;se<p;++se){const te=J+se*m;if(te<0||te>=h.inHeight)continue;const he=se*C[0],xe=j+te*k;for(let Ce=0;Ce<h.outWidth;++Ce){const ve=ee+Ce*W,Re=Ce*h.strideWidth-g;for(let Fe=0;Fe<f;++Fe){const Ye=Re+Fe*y;if(Ye<0||Ye>=h.inWidth)continue;const it=he+Fe*C[1],Et=xe+Ye*T;let ot=it;for(let Je=0;Je<h.inChannels;++Je){const Ct=G[Et+Je*E];for(let bt=0;bt<h.outChannels;++bt)H[ve+bt*V]+=Ct*D[ot+bt];ot+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,H)}const R7={kernelName:Ph,backendName:"cpu",kernelFunc:g_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;me([a,r],"conv2dBackpropFilter");const d=xs(l),h=dt(a.shape,c,i,1,o,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:y}=h,g=h.dataFormat==="channelsLast",b=new Jt(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=n.data.get(a.dataId).values,C=n.data.get(r.dataId).values,$=new Jt(a.shape,a.dtype,v),k=new Jt(r.shape,r.dtype,C);for(let T=0;T<m;++T){const E=Math.max(0,Math.ceil((w-T)/p)),O=Math.min(h.outHeight,(h.inHeight+w-T)/p);for(let B=0;B<y;++B){const W=Math.max(0,Math.ceil((x-B)/f)),V=Math.min(h.outWidth,(h.inWidth+x-B)/f);for(let G=0;G<h.inChannels;++G)for(let D=0;D<h.outChannels;++D){let H=0;for(let P=0;P<h.batchSize;++P)for(let j=E;j<O;++j){const X=T+j*p-w;for(let Q=W;Q<V;++Q){const ee=B+Q*f-x;g?H+=$.get(P,X,ee,G)*k.get(P,j,Q,D):H+=$.get(P,G,X,ee)*k.get(P,D,j,Q)}}b.set(H,T,B,G,D)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const A7={kernelName:Dg,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;me([a,r],"conv2dBackpropInput");const d=be(r.shape),h=be(a.shape);let p=xs(u);const f=dt(i,r.shape,o,1,l,c,!1,p),m=new Jt(f.inShape,"float32"),y=m.values,g=n.data.get(a.dataId).values,b=n.data.get(r.dataId).values,[x,w,v]=d,{batchSize:C,filterHeight:$,filterWidth:k,inChannels:T,inHeight:E,inWidth:O,outChannels:B,outHeight:W,outWidth:V,strideHeight:G,strideWidth:D}=f;p=f.dataFormat;const H=$-1-f.padInfo.top,P=k-1-f.padInfo.left,j=p==="channelsLast",X=m.strides[0],Q=j?m.strides[1]:m.strides[2],ee=j?m.strides[2]:1,J=j?1:m.strides[1],se=h[0],te=j?h[1]:h[2],he=j?h[2]:1,xe=j?1:h[1];for(let Ce=0;Ce<C;++Ce)for(let ve=0;ve<T;++ve)for(let Re=0;Re<E;++Re){const Fe=Re-H,Ye=Math.max(0,Math.ceil(Fe/G)),it=Math.min(W,($+Fe)/G);for(let Et=0;Et<O;++Et){const ot=Et-P,Je=Math.max(0,Math.ceil(ot/D)),Ct=Math.min(V,(k+ot)/D);let bt=0;for(let mn=Ye;mn<it;++mn){const Ur=mn*G-Fe;for(let vs=Je;vs<Ct;++vs){const ji=vs*D-ot,fa=se*Ce+te*mn+he*vs,lr=x*($-1-Ur)+w*(k-1-ji)+v*ve;for(let Wr=0;Wr<B;++Wr){const Gr=g[fa+xe*Wr],Hr=b[lr+Wr];bt+=Gr*Hr}}}const or=X*Ce+Q*Re+ee*Et+J*ve;y[or]=bt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const O7={kernelName:Mh,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s;me([a,r],"conv3d");const u=Oa(a.shape,r.shape,i,l,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:y}=u,g=y.front,b=y.left,x=y.top,w=new Jt(u.outShape,a.dtype),v=n.data.get(a.dataId).values,C=n.data.get(r.dataId).values,$=w.values,k=be(a.shape),T=be(r.shape);for(let E=0;E<u.batchSize;++E){const O=E*k[0],B=E*w.strides[0];for(let W=0;W<u.outDepth;++W){const V=B+W*w.strides[1],G=W*u.strideDepth-g;for(let D=0;D<c;++D){const H=G+D*p;if(H<0||H>=u.inDepth)continue;const P=D*T[0],j=O+H*k[1];for(let X=0;X<u.outHeight;++X){const Q=V+X*w.strides[2],ee=X*u.strideHeight-x;for(let J=0;J<d;++J){const se=ee+J*f;if(se<0||se>=u.inHeight)continue;const te=P+J*T[1],he=j+se*k[2];for(let xe=0;xe<u.outWidth;++xe){const Ce=Q+xe*u.outChannels,ve=xe*u.strideWidth-b;for(let Re=0;Re<h;++Re){const Fe=ve+Re*m;if(Fe<0||Fe>=u.inWidth)continue;const Ye=te+Re*T[2],it=he+Fe*u.inChannels;let Et=Ye;for(let ot=0;ot<u.inChannels;++ot){const Je=v[it+ot];for(let Ct=0;Ct<u.outChannels;++Ct)$[Ce+Ct]+=Je*C[Et+Ct];Et+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const z7={kernelName:Bh,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s;me([a,r],"conv3dBackpropFilterV2");const u=be(a.shape),c=be(r.shape),d=Oa(a.shape,l,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,y=d.filterHeight,g=d.filterWidth,b=new Jt(d.filterShape,"float32"),x=b.values,[w,v,C,$]=b.strides,k=n.data.get(r.dataId).values,[T,E,O,B]=c,W=n.data.get(a.dataId).values,[V,G,D,H]=u,P=d.padInfo.front,j=d.padInfo.left,X=d.padInfo.top;for(let Q=0;Q<m;++Q){const ee=Math.max(0,Math.ceil((P-Q)/h)),J=Math.min(d.outDepth,(d.inDepth+P-Q)/h),se=Q*w;for(let te=0;te<y;++te){const he=Math.max(0,Math.ceil((X-te)/p)),xe=Math.min(d.outHeight,(d.inHeight+X-te)/p),Ce=te*v+se;for(let ve=0;ve<g;++ve){const Re=Math.max(0,Math.ceil((j-ve)/f)),Fe=Math.min(d.outWidth,(d.inWidth+j-ve)/f),Ye=ve*C+Ce;for(let it=0;it<d.inChannels;++it){const Et=it*$+Ye;for(let ot=0;ot<d.outChannels;++ot){let Je=0;for(let Ct=0;Ct<d.batchSize;++Ct){const bt=Ct*V,or=Ct*T;for(let mn=ee;mn<J;++mn){const vs=(Q+mn*h-P)*G+bt,ji=mn*E+or;for(let fa=he;fa<xe;++fa){const Wr=(te+fa*p-X)*D+vs,Gr=fa*O+ji;for(let Hr=Re;Hr<Fe;++Hr){const zb=(ve+Hr*f-j)*H+Wr,Lb=Hr*B+Gr;Je+=W[zb+it]*k[Lb+ot]}}}}x[Et+ot]=Je}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const P7={kernelName:Ag,backendName:"cpu",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{pad:i,strides:o,inputShape:l}=s;me([a],"conv3dBackpropInputV2");const u=be(a.shape),c=be(r.shape),d=Oa(l,r.shape,o,1,i),h=new Jt(d.inShape,"float32"),p=h.values,[f,m,y,g]=h.strides,b=n.data.get(a.dataId).values,[x,w,v,C]=u,$=n.data.get(r.dataId).values,[k,T,E,O]=c,{batchSize:B,filterDepth:W,filterHeight:V,filterWidth:G,inChannels:D,inDepth:H,inHeight:P,inWidth:j,outChannels:X,outDepth:Q,outHeight:ee,outWidth:J,strideDepth:se,strideHeight:te,strideWidth:he}=d,xe=W-1-d.padInfo.front,Ce=V-1-d.padInfo.top,ve=G-1-d.padInfo.left;for(let Re=0;Re<B;++Re)for(let Fe=0;Fe<D;++Fe)for(let Ye=0;Ye<H;++Ye){const it=Ye-xe,Et=Math.max(0,Math.ceil(it/se)),ot=Math.min(Q,(W+it)/se);for(let Je=0;Je<P;++Je){const Ct=Je-Ce,bt=Math.max(0,Math.ceil(Ct/te)),or=Math.min(ee,(V+Ct)/te);for(let mn=0;mn<j;++mn){const Ur=mn-ve,vs=Math.max(0,Math.ceil(Ur/he)),ji=Math.min(J,(G+Ur)/he);let fa=0;for(let lr=Et;lr<ot;++lr){const Wr=lr*se-it;for(let Gr=bt;Gr<or;++Gr){const Hr=Gr*te-Ct;for(let Hc=vs;Hc<ji;++Hc){const zb=Hc*he-Ur,Lb=x*Re+w*lr+v*Gr+C*Hc,UO=k*(W-1-Wr)+T*(V-1-Hr)+E*(G-1-zb)+O*Fe;for(let ef=0;ef<X;++ef){const WO=b[Lb+ef],GO=$[UO+ef];fa+=WO*GO}}}}p[f*Re+m*Ye+y*Je+g*mn+Fe]=fa}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}const B7={kernelName:_g,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=Ze(Gu,t=>Math.cos(t)),U7={kernelName:Gu,backendName:"cpu",kernelFunc:V7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7=Ze(Hu,t=>Math.cosh(t)),G7={kernelName:Hu,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(t){const{inputs:e,backend:n,attrs:s}=t,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,d,h,p]=a.shape,f=r.shape[0],[m,y]=o,g=ke([f,m,y,p],"float32"),b=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=be(a.shape),C=be(g.shape);for(let $=0;$<f;$++){const k=$*4,T=b[k],E=b[k+1],O=b[k+2],B=b[k+3],W=x[$];if(W>=c)continue;const V=m>1?(O-T)*(d-1)/(m-1):0,G=y>1?(B-E)*(h-1)/(y-1):0;for(let D=0;D<m;D++){const H=m>1?T*(d-1)+D*V:.5*(T+O)*(d-1);if(H<0||H>d-1){for(let P=0;P<y;P++)for(let j=0;j<p;j++){const X=j+P*C[2]+D*C[1]+$*C[0];g.values[X]=u}continue}if(l==="bilinear"){const P=Math.floor(H),j=Math.ceil(H),X=H-P;for(let Q=0;Q<y;Q++){const ee=y>1?E*(h-1)+Q*G:.5*(E+B)*(h-1);if(ee<0||ee>h-1){for(let he=0;he<p;he++){const xe=he+Q*C[2]+D*C[1]+$*C[0];g.values[xe]=u}continue}const J=Math.floor(ee),se=Math.ceil(ee),te=ee-J;for(let he=0;he<p;he++){let xe=he+J*v[2]+P*v[1]+W*v[0];const Ce=w[xe];xe=he+se*v[2]+P*v[1]+W*v[0];const ve=w[xe];xe=he+J*v[2]+j*v[1]+W*v[0];const Re=w[xe];xe=he+se*v[2]+j*v[1]+W*v[0];const Fe=w[xe],Ye=Ce+(ve-Ce)*te,it=Re+(Fe-Re)*te;xe=he+Q*C[2]+D*C[1]+$*C[0],g.values[xe]=Ye+(it-Ye)*X}}}else for(let P=0;P<y;++P){const j=y>1?E*(h-1)+P*G:.5*(E+B)*(h-1);if(j<0||j>h-1){for(let ee=0;ee<p;ee++){const J=ee+P*C[2]+D*C[1]+$*C[0];g.values[J]=u}continue}const X=Math.round(j),Q=Math.round(H);for(let ee=0;ee<p;ee++){const J=ee+X*v[2]+Q*v[1]+W*v[0],se=ee+P*C[2]+D*C[1]+$*C[0];g.values[se]=w[J]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const j7={kernelName:Fg,backendName:"cpu",kernelFunc:H7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;me(a,"cumprod");const l=tt([r],a.shape.length);let u=a;l!=null&&(u=es({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=ht(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=pn(u.dtype,"int32"),h=zw(L(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(g,b)=>g+f-b-1:(g,b)=>g+b;for(let g=0;g<p.length;g+=f)for(let b=0;b<f;b++){const x=m(g,b);if(b===0)h[x]=i?1:p[x];else{const w=m(g,b-1);h[x]=i?p[w]*h[w]:p[x]*h[w]}}const y=n.makeTensorInfo(u.shape,d,h);if(l!=null){const g=sr(l),b=es({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),b}return y}const X7={kernelName:Og,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;me(a,"cumsum");const l=tt([r],a.shape.length);let u=a;l!=null&&(u=es({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=ht(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=pn(u.dtype,"int32"),h=Sn(L(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(g,b)=>g+f-b-1:(g,b)=>g+b;for(let g=0;g<p.length;g+=f)for(let b=0;b<f;b++){const x=m(g,b);if(b===0)h[x]=i?0:p[x];else{const w=m(g,b-1);h[x]=i?p[w]+h[w]:p[x]+h[w]}}const y=n.makeTensorInfo(u.shape,d,h);if(l!=null){const g=sr(l),b=es({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),b}return y}const Y7={kernelName:Vh,backendName:"cpu",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s;if(a.shape.length===1){const l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=yS(l,u,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}else if(a.shape.length===2){const l=n.bufferSync(a),u=n.bufferSync(r),c=g3(l,u,i,o);return n.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const Z7={kernelName:zg,backendName:"cpu",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockSize:r,dataFormat:i}=s;N(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],d=l*r,h=u*r,p=c/(r*r),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*p);let y=0;for(let g=0;g<o;++g)for(let b=0;b<d;++b){const x=Math.floor(b/r),w=b%r;for(let v=0;v<h;++v){const C=Math.floor(v/r),$=v%r,k=(w*r+$)*p;for(let T=0;T<p;++T){const O=T+k+c*(C+u*(x+l*g));m[y++]=f[O]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,m)}const eY={kernelName:Lg,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;me([a,r],"depthwiseConv2DNative");const c=be(a.shape),d=be(r.shape);let h=l;h==null&&(h=[1,1]),N(an(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const p=dt(a.shape,r.shape,i,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:y,dilationWidth:g,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,C=new Jt(p.outShape,a.dtype),$=n.data.get(a.dataId).values,k=n.data.get(r.dataId).values,T=C.values;for(let E=0;E<p.batchSize;++E){const O=E*c[0],B=E*C.strides[0];for(let W=0;W<p.outHeight;++W){const V=B+W*C.strides[1],G=W*p.strideHeight-w;for(let D=0;D<f;++D){const H=G+D*y;if(H<0||H>=p.inHeight)continue;const P=D*d[0],j=O+H*c[1];for(let X=0;X<p.outWidth;++X){const Q=V+X*C.strides[2],ee=X*p.strideWidth-x;for(let J=0;J<m;++J){const se=ee+J*g;if(se<0||se>=p.inWidth)continue;const te=P+J*d[1],he=j+se*p.inChannels;let xe=Q,Ce=te;for(let ve=0;ve<p.inChannels;++ve){const Re=$[he+ve];for(let Fe=0;Fe<v;++Fe)T[xe+Fe]+=Re*k[Ce+Fe];xe+=v,Ce+=v}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const tY={kernelName:Uh,backendName:"cpu",kernelFunc:y_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;me([a,r],"depthwiseConv2dNativeBackpropFilter");const d=dt(a.shape,c,i,o,l,u,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,y=new Jt(d.filterShape,"float32"),g=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,v=new Jt(a.shape,a.dtype,w),C=n.data.get(r.dataId).values,$=new Jt(r.shape,r.dtype,C);for(let k=0;k<f;++k){const T=Math.max(0,Math.ceil((b-k)/h)),E=Math.min(d.outHeight,(d.inHeight+b-k)/h);for(let O=0;O<m;++O){const B=Math.max(0,Math.ceil((g-O)/p)),W=Math.min(d.outWidth,(d.inWidth+g-O)/p);for(let V=0;V<d.outChannels;++V){const G=Math.trunc(V/x),D=V%x;let H=0;for(let P=0;P<d.batchSize;++P)for(let j=T;j<E;++j){const X=k+j*h-b;for(let Q=B;Q<W;++Q){const ee=O+Q*p-g;H+=v.get(P,X,ee,G)*$.get(P,j,Q,V)}}y.set(H,k,O,G,D)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const sY={kernelName:Pg,backendName:"cpu",kernelFunc:nY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;me([a,r],"depthwiseConv2DNativeBackpropInput");const d=be(a.shape),h=be(r.shape),p=dt(c,r.shape,i,o,l,u,!0),f=new Jt(p.inShape,"float32"),m=f.values,[y,g,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,C]=d,$=n.data.get(r.dataId).values,[k,T,E]=h,{batchSize:O,filterHeight:B,filterWidth:W,inChannels:V,inHeight:G,inWidth:D,outChannels:H,outHeight:P,outWidth:j,strideHeight:X,strideWidth:Q}=p,ee=B-1-p.padInfo.top,J=W-1-p.padInfo.left,se=H/V;for(let te=0;te<O;++te)for(let he=0;he<V;++he)for(let xe=0;xe<G;++xe){const Ce=xe-ee,ve=Math.max(0,Math.ceil(Ce/X)),Re=Math.min(P,(B+Ce)/X);for(let Fe=0;Fe<D;++Fe){const Ye=Fe-J,it=Math.max(0,Math.ceil(Ye/Q)),Et=Math.min(j,(W+Ye)/Q);let ot=0;for(let Je=ve;Je<Re;++Je){const Ct=Je*X-Ce;for(let bt=it;bt<Et;++bt){const or=bt*Q-Ye,mn=w*te+v*Je+C*bt,Ur=k*(B-1-Ct)+T*(W-1-or)+E*he;for(let vs=0;vs<se;++vs){const ji=he*se+vs,fa=x[mn+ji],lr=$[Ur+vs];ot+=fa*lr}}}m[y*te+g*xe+b*Fe+he]=ot}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const rY={kernelName:Mg,backendName:"cpu",kernelFunc:aY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(t){const{inputs:e,backend:n}=t,{x:s}=e,a=L(s.shape),r=n.data.get(s.dataId).values,i=ke([a,a],s.dtype),o=i.values;for(let u=0;u<r.length;u++)o[u*a+u]=r[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}const oY={kernelName:Bg,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY={kernelName:Wh,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a}=t,{strides:r,pad:i,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,d=l.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:y,outHeight:g,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:$,dilationHeight:k,dilationWidth:T,outShape:E}=Pi(s.shape,a.shape,r,i,"NHWC",o),O=L(E),B=E.length,W=Ot(s.dtype,O);for(let G=0;G<p;++G)for(let D=0;D<g;++D){const H=D*w-x.top;for(let P=0;P<b;++P){const j=P*v-x.left;for(let X=0;X<y;++X){let Q=Number.MIN_SAFE_INTEGER;for(let J=0;J<C;++J){const se=H+J*k;if(se>=0&&se<f)for(let te=0;te<$;++te){const he=j+te*T;if(he>=0&&he<m){const xe=ja([G,se,he,X],c,be(s.shape)),Ce=ja([J,te,X],h,be(a.shape)),ve=u[xe]+d[Ce];ve>Q&&(Q=ve)}}}const ee=ja([G,D,P,X],B,be(E));W[ee]=Q}}}return{dataId:l.write(Zo(W,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uY={kernelName:Tm,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a,dy:r}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=ra(s.shape,u.data.get(s.dataId).values),d=ra(a.shape,u.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:T}=Pi(s.shape,a.shape,i,o,"NHWC",l);N(r.rank===T.length,()=>`Error in ${Tm}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const E=ra(T,u.data.get(r.dataId).values),O=cT(a.shape,a.dtype);for(let W=0;W<h;++W)for(let V=0;V<y;++V){const G=V*x-b.top;for(let D=0;D<g;++D){const H=D*w-b.left;for(let P=0;P<m;++P){let j=Number.MIN_SAFE_INTEGER,X=0,Q=0;for(let ee=0;ee<v;++ee){const J=G+ee*$;if(J>=0&&J<p)for(let se=0;se<C;++se){const te=H+se*k;if(te>=0&&te<f){const he=c[W][J][te][P]+d[ee][se][P];he>j&&(j=he,X=ee,Q=se)}}}O[X][Q][P]+=E[W][V][D][P]}}}return{dataId:u.write(Zo(O,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cY={kernelName:Im,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a,dy:r}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=ra(s.shape,u.data.get(s.dataId).values),d=ra(a.shape,u.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:$,dilationWidth:k,outShape:T}=Pi(s.shape,a.shape,i,o,"NHWC",l);N(r.rank===T.length,()=>`Error in ${Im}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const E=ra(T,u.data.get(r.dataId).values),O=cT(s.shape,s.dtype);for(let W=0;W<h;++W)for(let V=0;V<y;++V){const G=V*x-b.top;for(let D=0;D<g;++D){const H=D*w-b.left;for(let P=0;P<m;++P){let j=Number.MIN_SAFE_INTEGER,X=G<0?0:G,Q=H<0?0:H;for(let ee=0;ee<v;++ee){const J=G+ee*$;if(J>=0&&J<p)for(let se=0;se<C;++se){const te=H+se*k;if(te>=0&&te<f){const he=c[W][J][te][P]+d[ee][se][P];he>j&&(j=he,X=J,Q=te)}}}O[W][X][Q][P]+=E[W][V][D][P]}}}return{dataId:u.write(Zo(O,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(t){const{inputs:e,backend:n,attrs:s}=t,{image:a}=e,{canvas:r,options:i}=s,{contextOptions:o,imageOptions:l}=i||{},u=(l==null?void 0:l.alpha)||1,c=(o==null?void 0:o.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=r.getContext(c,(o==null?void 0:o.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=a.shape.slice(0,2),f=a.shape.length===2?1:a.shape[2],m=n.data.get(a.dataId).values,y=a.dtype==="float32"?255:1,g=new Uint8ClampedArray(p*h*4);for(let x=0;x<h*p;++x){const w=[0,0,0,255*u];for(let C=0;C<f;C++){const $=m[x*f+C];if(a.dtype==="float32"){if($<0||$>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${$}.`)}else if(a.dtype==="int32"&&($<0||$>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${$}.`);f===1?(w[0]=$*y,w[1]=$*y,w[2]=$*y):w[C]=$*y}const v=x*4;g[v+0]=Math.round(w[0]),g[v+1]=Math.round(w[1]),g[v+2]=Math.round(w[2]),g[v+3]=Math.round(w[3])}r.width=p,r.height=h;const b=new ImageData(g,p,h);return d.putImageData(b,0,0),a}const hY={kernelName:pT,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"sum");let o;a.dtype==="bool"?o=Di({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Ja({inputs:{x:a},backend:n});const l=o.shape.length,u=Ie(r,o.shape),c=tt(u,l);let d=u,h=o;c!=null&&(h=es({inputs:{x:o},backend:n,attrs:{perm:c}}),d=ht(d.length,l)),jt("sum",d,h.shape.length);const[p,f]=Vt(h.shape,d),m=pn(h.dtype,"int32");let y=qm(n,p,m);const g=L(f),b=n.data.get(y.dataId).values,x=n.data.get(h.dataId).values;for(let w=0;w<b.length;++w){const v=w*g;let C=0;for(let $=0;$<g;++$)C+=x[v+$];b[w]=C}if(i){const w=zt(y.shape,u),v=y;y=ct({inputs:{x:y},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(h),y}const pY={kernelName:Sp,backendName:"cpu",kernelFunc:qp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(t){const{inputs:e,backend:n,attrs:s}=t,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=ob(a,r.length);ub(i.length,l,r);const{path:u,steps:c}=cb(o,l),d=c.length;let h=null,p=i.length;const f=[];for(let m=0;m<d;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:b}=lb(p,l[y]);let x;db(g)?x=r[y]:(x=es({inputs:{x:r[y]},backend:n,attrs:{perm:g}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);Ee(x.shape,w)||(x=ct({inputs:{x},backend:n,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=Nb({inputs:{a:x,b:h},backend:n}),f.push(h))}m<d-1&&(u[m]>=0&&(h=qp({inputs:{x:h},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}const mY={kernelName:Vg,backendName:"cpu",kernelFunc:fY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY(t){const{inputs:e,backend:n}=t,{dy:s,y:a}=e;me([s,a],"eluGrad");const r=new Float32Array(L(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=0?r[l]=o[l]:r[l]=o[l]*(u+1)}return n.makeTensorInfo(a.shape,"float32",r)}const yY={kernelName:Ug,backendName:"cpu",kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY=tb,xY=nb,wY=sb,vY=ab,SY=rb,CY=ib,$Y=Ze(Xu,t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+bY*n);return e*(1-((((CY*s+SY)*s+vY)*s+wY)*s+xY)*s*Math.exp(-n*n))}),NY={kernelName:Xu,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ym(t){const{inputs:e,backend:n,attrs:s}=t,{input:a}=e,{dim:r}=s,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(N(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),ct({inputs:{x:a},backend:n,attrs:{shape:o}})}const kY={kernelName:Hh,backendName:"cpu",kernelFunc:Ym};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=Wt((t,e)=>t/e),CS=rn(ju,IY),$1={kernelName:ju,backendName:"cpu",kernelFunc:CS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(t,e,n){const s=t.shape,a=s[0],r=s[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,r],c=L(u),d=nn("float32",c),h=nn("float32",c);for(let y=0;y<a;y++){const g=Bo({inputs:{x:o},backend:n,attrs:{begin:[y,0],size:[1,r]}}),b=Bo({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,r]}}),x=os({inputs:{real:g,imag:b},backend:n}),{real:w,imag:v}=TY(x,e,n),C=ka(w,v);for(let $=0;$<r;$++){const k=Hv(C,$);d[y*r+$]=k.real,h[y*r+$]=k.imag}n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}const p=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",h),m=os({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function TY(t,e,n){const s=L(t.shape),a=n.data.get(t.dataId),r=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(EY(s)){const o=N1(r,i,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const u=n.makeTensorInfo(l,"float32",o.real),c=n.makeTensorInfo(l,"float32",o.imag),d=n.makeTensorInfo([],"float32",Fi(s,"float32")),h=Ja({inputs:{x:d},backend:n}),p=$1.kernelFunc({inputs:{a:u,b:d},backend:n}),f=$1.kernelFunc({inputs:{a:c,b:h},backend:n}),m=n.data.get(p.dataId).values,y=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:y}}return o}else{const o=ka(r,i),l=RY(o,s,e);return TR(l)}}function EY(t){return(t&t-1)===0}function N1(t,e,n,s,a){if(n===1)return{real:t,imag:e};const r=ka(t,e),i=n/2,o=ER(r),l=o.real,u=o.imag,c=[l.length],d=a.makeTensorInfo(c,"float32",l),h=a.makeTensorInfo(c,"float32",u),p=os({inputs:{real:d,imag:h},backend:a}),f=RR(r),m=f.real,y=f.imag,g=[m.length],b=a.makeTensorInfo(g,"float32",m),x=a.makeTensorInfo(g,"float32",y),w=os({inputs:{real:b,imag:x},backend:a}),v=N1(l,u,i,s,a),C=v.real,$=v.imag,k=[C.length],T=a.makeTensorInfo(k,"float32",C),E=a.makeTensorInfo(k,"float32",$),O=os({inputs:{real:T,imag:E},backend:a}),B=N1(m,y,i,s,a),W=B.real,V=B.imag,G=[W.length],D=a.makeTensorInfo(G,"float32",W),H=a.makeTensorInfo(G,"float32",V),P=os({inputs:{real:D,imag:H},backend:a}),j=AR(n,s),X=[j.real.length],Q=a.makeTensorInfo(X,"float32",j.real),ee=a.makeTensorInfo(X,"float32",j.imag),J=os({inputs:{real:Q,imag:ee},backend:a}),se=Nb({inputs:{a:J,b:P},backend:a}),te=bu({inputs:{a:O,b:se},backend:a}),he=vS({inputs:{a:O,b:se},backend:a}),xe=Mo({inputs:{input:te},backend:a}),Ce=Mo({inputs:{input:he},backend:a}),ve=xu({inputs:{input:te},backend:a}),Re=xu({inputs:{input:he},backend:a}),Fe=wu({inputs:[xe,Ce],backend:a,attrs:{axis:0}}),Ye=wu({inputs:[ve,Re],backend:a,attrs:{axis:0}}),it=a.data.get(Fe.dataId).values,Et=a.data.get(Ye.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(Q),a.disposeIntermediateTensorInfo(ee),a.disposeIntermediateTensorInfo(J),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(he),a.disposeIntermediateTensorInfo(xe),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo(Ce),a.disposeIntermediateTensorInfo(Re),a.disposeIntermediateTensorInfo(Fe),a.disposeIntermediateTensorInfo(Ye),{real:it,imag:Et}}function RY(t,e,n){const s=new Float32Array(e*2);for(let a=0;a<e;a++){let r=0,i=0;for(let o=0;o<e;o++){const l=_R(a*o,e,n),u=Hv(t,o);r+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(r/=e,i/=e),DR(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(t){const{inputs:e,backend:n}=t,{input:s}=e,a=L(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=ct({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=b_(o,!1,n),u=ct({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const AY={kernelName:Wg,backendName:"cpu",kernelFunc:DY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(t){const{backend:e,attrs:n}=t,{shape:s,value:a,dtype:r}=n,i=r||Ko(a),o=Ot(i,L(s));return OY(o,a,i),e.makeTensorInfo(s,i,o)}const _Y={kernelName:Gg,backendName:"cpu",kernelFunc:$S};function OY(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY={kernelName:Hg,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,a=n,r=nn(s.dtype,L(s.shape)),[i,o,l,u]=s.shape,c=a.data.get(s.dataId).values;for(let h=0;h<i;h++){const p=h*l*o*u;for(let f=0;f<o;f++){const m=f*(l*u);for(let y=0;y<l;y++){const g=y*u;for(let b=0;b<u;b++){const x=Math.round(l-y-1),w=p+m+g+b;let v=c[w];if(x>=0&&x<l){const C=x*u,$=p+m+C+b;v=c[$]}r[w]=v}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=g_({inputs:{x:a,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const y=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const g=ct({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=bu({inputs:{a:m,b:g},backend:n}),n.disposeIntermediateTensorInfo(g)}else m=bu({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(y)}if(p){const y=m;if(c==="NCHW"&&p==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const g=ct({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Km(n,m,p,g,f),n.disposeIntermediateTensorInfo(g)}else m=Km(n,m,p,o,f);n.disposeIntermediateTensorInfo(y)}return m}const LY={kernelName:Qd,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=y_({inputs:{x:a,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const y=m;m=bu({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(p){const y=m;m=Km(n,m,p,o,f),n.disposeIntermediateTensorInfo(y)}return m}const MY={kernelName:Zd,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(t){const{inputs:e,backend:n}=t,{params:s,indices:a}=e,r=L(s.shape),i=a.shape,o=i[i.length-1],[l,u,c,d]=jy(s,a);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);const h=n.data.get(a.dataId).values,p=n.bufferSync(s),f=I3(h,p,s.dtype,u,o,c,d,s.shape,r);return n.makeTensorInfo(l,s.dtype,f.values)}const VY={kernelName:jg,backendName:"cpu",kernelFunc:BY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,indices:r}=e,{axis:i,batchDims:o}=s;me([a,r],"gatherV2");const l=Ie(i,a.shape)[0],u=n.data.get(r.dataId).values,c=a.shape[l];for(let w=0;w<u.length;++w){const v=u[w];N(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let d=o;o==null&&(d=0);const h=L(r.shape),p=pb(a,r,l,d),f=ct({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ct({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),y=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=n.bufferSync(m),b=n.bufferSync(f),x=T3(b,g,y);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}const WY={kernelName:qh,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(t){const{inputs:e,backend:n}=t,{input:s}=e,a=L(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=ct({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=b_(o,!0,n),u=ct({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const HY={kernelName:qg,backendName:"cpu",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY=Ze(tc,t=>Number.isFinite(t)?1:0,"bool"),qY={kernelName:tc,backendName:"cpu",kernelFunc:jY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY=Ze(nc,t=>Math.abs(t)===1/0?1:0,"bool"),KY={kernelName:nc,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=Ze(sc,t=>Number.isNaN(t)?1:0,"bool"),QY={kernelName:sc,backendName:"cpu",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(t){const{backend:e,attrs:n}=t,{start:s,stop:a,num:r}=n,i=_3(s,a,r);return e.makeTensorInfo([i.length],"float32",i)}const JY={kernelName:Kg,backendName:"cpu",kernelFunc:ZY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=Ze(rc,t=>Math.log1p(t)),t9={kernelName:rc,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=Wt((t,e)=>t&&e),s9=rn(Zh,n9,null,"bool"),a9={kernelName:Zh,backendName:"cpu",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9=Ze(Jh,t=>t?0:1,"bool"),i9={kernelName:Jh,backendName:"cpu",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=Wt((t,e)=>t||e),l9=rn(ep,o9,null,"bool"),u9={kernelName:ep,backendName:"cpu",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s;me(a,"LRN");const u=a.shape[3],c=u-1,d=n.data.get(a.dataId).values,h=L(a.shape),p=new Float32Array(h);function f(m){const y=m%u;let g=m-y+Math.max(0,y-r);const b=m-y+Math.min(y+r,c);let x=0;for(;g<=b;g++){const w=d[g];x+=w*w}return x}for(let m=0;m<h;m++){const y=f(m),g=d[m]*Math.pow(i+o*y,-l);p[m]=g}return n.makeTensorInfo(a.shape,a.dtype,p)}const d9={kernelName:tp,backendName:"cpu",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;me(i,"LRNGrad");const d=L(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values,y=new Float32Array(d),g=d;for(let b=0;b<g;b++){const x=b%h,w=b-x+Math.max(0,x-o),v=b-x+Math.min(h,x+o+1);let C=0;for(let $=w;$<v;$++)C+=Math.pow(f[$],2);C=u*C+l;for(let $=w;$<v;$++){let k=-2*u*c*f[$]*m[b]/C;b===$&&(k+=Math.pow(C,-c)),k*=p[b],y[$]+=k}}return n.makeTensorInfo(i.shape,a.dtype,y)}const p9={kernelName:Yg,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reductionIndices:r,keepDims:i}=s,o=n;let l=a.shape;const u=l.length,c=Ie(r,l);let d=c;const h=tt(d,u);let p=o.data.get(a.dataId).values;if(h!=null){const w=new Array(u);for(let v=0;v<w.length;v++)w[v]=l[h[v]];p=xS(p,l,a.dtype,h,w),d=ht(d.length,u),l=w}me(a,"max"),jt("max",d,u);const[f,m]=Vt(l,d),y=L(m),g=F3(p,y,f,a.dtype),b=o.write(g,f,a.dtype);let x=f;return i&&(x=zt(f,c)),{dataId:b,shape:x,dtype:a.dtype}}const f9={kernelName:np,backendName:"cpu",kernelFunc:x_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;me(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(an(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);let d;if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))d=Ja({inputs:{x:a},backend:n});else{const h=n.data.get(a.dataId).values,p=be(a.shape),f=SS(h,a.shape,a.dtype,p,c,"max");d=n.makeTensorInfo(c.outShape,a.dtype,f.values)}return d}const g9={kernelName:sp,backendName:"cpu",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;me(a,"maxPool3d");const c=Os(a.shape,r,i,1,o,l,u),d=n.data.get(a.dataId).values,h=m_(d,a.shape,a.dtype,be(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}const b9={kernelName:ap,backendName:"cpu",kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;me([a,r],"maxPool3DGrad");const c=Os(r.shape,i,o,1,l,u),d=n.bufferSync(r),h=o7(d,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,y=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,C=x-1-c.padInfo.front,$=v-1-c.padInfo.left,k=w-1-c.padInfo.top,T=ke(r.shape,"float32"),E=n.bufferSync(a);for(let O=0;O<c.batchSize;++O)for(let B=0;B<c.inChannels;++B)for(let W=0;W<c.inDepth;++W)for(let V=0;V<c.inHeight;++V)for(let G=0;G<c.inWidth;++G){const D=W-C,H=V-k,P=G-$;let j=0;for(let X=0;X<x;X+=y){const Q=(D+X)/p;if(!(Q<0||Q>=c.outDepth||Math.floor(Q)!==Q))for(let ee=0;ee<w;ee+=g){const J=(H+ee)/f;if(!(J<0||J>=c.outHeight||Math.floor(J)!==J))for(let se=0;se<v;se+=b){const te=(P+se)/m;if(te<0||te>=c.outWidth||Math.floor(te)!==te)continue;const he=x*w*v-1-h.get(O,Q,J,te,B),xe=X*w*v+ee*v+se,Ce=he===xe?1:0;if(Ce===0)continue;const ve=E.get(O,Q,J,te,B);j+=ve*Ce}}}T.set(j,O,W,V,G,B)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const w9={kernelName:Zg,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r,output:i}=e,o=r;me([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=Rn(o.shape,l,u,1,c,d),p=n.data.get(o.dataId).values,f=ke(h.outShape,o.dtype,f_(p,o.shape,o.dtype,h).values),m=h.strideHeight,y=h.strideWidth,g=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,C=x-1-h.padInfo.top,$=ke(o.shape,"float32"),k=n.data.get(a.dataId).values,T=ke(a.shape,"float32",k);for(let E=0;E<h.batchSize;++E)for(let O=0;O<h.inChannels;++O)for(let B=0;B<h.inHeight;++B)for(let W=0;W<h.inWidth;++W){const V=B-C,G=W-v;let D=0;for(let H=0;H<x;H+=g){const P=(V+H)/m;if(!(P<0||P>=h.outHeight||Math.floor(P)!==P))for(let j=0;j<w;j+=b){const X=(G+j)/y;if(X<0||X>=h.outWidth||Math.floor(X)!==X)continue;const Q=x*w-1-f.get(E,P,X,O),ee=H*w+j,J=Q===ee?1:0;if(J===0)continue;const se=T.get(E,P,X,O);D+=se*J}}$.set(D,E,B,W,O)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const S9={kernelName:Qg,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(t,e,n,s,a){const r=be(e),i=SS(t,e,n,r,a,"max"),o=f_(t,e,n,a,!0,s);return[i.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9={kernelName:Jg,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=e,l=n;me(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Rn(s.shape,a,r,[1,1],i),[d,h]=C9(u,s.shape,s.dtype,o,c),p=l.write(d,c.outShape,s.dtype),f=l.write(h,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=Ie(r,a.shape),u=Vt(a.shape,o)[1],c=L(u),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(h);const p=Di({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=CS({inputs:{a:p,b:h},backend:n});d.push(f);const m=qp({inputs:{x:f},backend:n,attrs:{axis:r,keepDims:i}});return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),m}const k9={kernelName:rp,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;me(a,"min");const o=Ie(r,a.shape);let l=o;const u=tt(l,a.shape.length);let c=a;u!=null&&(c=es({inputs:{x:a},backend:n,attrs:{perm:u}}),l=ht(l.length,a.shape.length)),jt("min",l,c.shape.length);const[d,h]=Vt(c.shape,l),p=L(h),f=Sn(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const b=g*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];(Number.isNaN(v)||v<x)&&(x=v)}f[g]=x}u!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(d,c.dtype,f);if(i){const g=zt(d,o),b=ct({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),b}return y}const T9={kernelName:ip,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,mode:i}=s;me(a,"mirrorPad");const o=r.map((x,w)=>x[0]+a.shape[w]+x[1]),l=r.map(x=>x[0]),u=r.map((x,w)=>x[0]+a.shape[w]),c=i==="reflect"?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=be(a.shape),f=L(o),m=o.length,y=be(o),g=nn(a.dtype,f);for(let x=0;x<f;x++){let w=_u(x,m,y);for(let C=0;C<m;C++)w[C]<l[C]?w[C]=l[C]*2-w[C]-c:w[C]>=u[C]&&(w[C]=(u[C]-1)*2-w[C]+c);w=w.map((C,$)=>C-l[$]);const v=ja(w,h,p);g[x]=d[v]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}const R9={kernelName:op,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9=Wt((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),A9=rn(lc,D9),_9={kernelName:lc,backendName:"cpu",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{dim:r}=s,i=a.shape.length;let o=r;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=Ie([o],a.shape),u=x_({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=zt(u.shape,l),d=ct({inputs:{x:u},backend:n,attrs:{shape:c}}),h=vS({inputs:{a,b:d},backend:n}),p=C3({inputs:{x:h},backend:n}),f=qp({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=ct({inputs:{x:f},backend:n,attrs:{shape:c}}),y=CS({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const O9={kernelName:Np,backendName:"cpu",kernelFunc:w_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s;me(a,"multinomial");const l=o?a:w_({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=n.data.get(l.dataId).values,h=[u,r],p=Sn(L(h),"int32");for(let f=0;f<u;++f){const m=f*c,y=new Float32Array(c-1);y[0]=d[m];for(let x=1;x<y.length;++x)y[x]=y[x-1]+d[m+x];const g=Oy.alea(i.toString()),b=f*r;for(let x=0;x<r;++x){const w=g();p[b+x]=y.length;for(let v=0;v<y.length;v++)if(w<y[v]){p[b+x]=v;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",p)}const z9={kernelName:ey,backendName:"cpu",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L9=Gy;function P9(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;me(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,{selectedIndices:d}=L9(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const M9={kernelName:ty,backendName:"cpu",kernelFunc:P9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=Lv;function V9(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;me(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(r.dataId).values,{selectedIndices:h,validOutputs:p}=B9(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const U9={kernelName:Pw,backendName:"cpu",kernelFunc:V9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9=Hy;function G9(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;me(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(r.dataId).values,h=i,p=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=W9(c,d,h,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const H9={kernelName:ny,backendName:"cpu",kernelFunc:G9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s;me(a,"oneHot");const u=L(a.shape),c=new Float32Array(u*i);c.fill(l);const d=n.data.get(a.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<i&&(c[h*i+d[h]]=o);return n.makeTensorInfo([...a.shape,i],r,c)}const q9={kernelName:dp,backendName:"cpu",kernelFunc:j9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qm(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Mo({inputs:{input:s},backend:n}),r=Qm({inputs:{x:a},backend:n}),i=xu({inputs:{input:s},backend:n}),o=Qm({inputs:{x:i},backend:n}),l=os({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return $S({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const X9={kernelName:Tp,backendName:"cpu",kernelFunc:Qm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Mo({inputs:{input:s},backend:n}),r=v_({inputs:{x:a},backend:n}),i=xu({inputs:{input:s},backend:n}),o=Qm({inputs:{x:i},backend:n}),l=os({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return $S({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const K9={kernelName:cp,backendName:"cpu",kernelFunc:v_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s;if(e.length===1)return Ym({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{ns(r,c.shape,"All tensors passed to stack must have matching shapes"),N(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const d=Ym({inputs:{input:c},backend:n,attrs:{dim:a}});return o.push(d),d}),u=wu({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Y9={kernelName:hp,backendName:"cpu",kernelFunc:S_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,constantValue:i}=s;me(a,"pad");const o=r.map((b,x)=>b[0]+a.shape[x]+b[1]),l=r.map(b=>b[0]),u=n.data.get(a.dataId).values,c=L(a.shape),d=a.shape.length,h=be(a.shape),p=L(o),f=o.length,m=be(o),y=nn(a.dtype,p);i!==0&&y.fill(i);for(let b=0;b<c;b++){const w=_u(b,d,h).map((C,$)=>C+l[$]),v=ja(w,f,m);y[v]=u[b]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}const C_={kernelName:pp,backendName:"cpu",kernelFunc:Q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9=Wt((t,e)=>Math.pow(t,e)),J9=rn(cc,Z9),eQ={kernelName:cc,backendName:"cpu",kernelFunc:J9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tQ(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=e,o=a.map(y=>n.data.get(y.dataId).values),l=a.map(y=>y.shape),u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,[d,h,p]=V3(o,l,u,r.shape,r.dtype,c,i.shape),f=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),m=n.makeTensorInfo(p,r.dtype,h);return f.concat([m])}const nQ={kernelName:Mw,backendName:"cpu",kernelFunc:tQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sQ(t){const{inputs:e,backend:n}=t,{starts:s,limits:a,deltas:r}=e,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=U3(i,s.shape,s.dtype,o,a.shape,l,r.shape),d=n.makeTensorInfo([u.length],"int32",u),h=n.makeTensorInfo([c.length],s.dtype,c);return[d,h]}const aQ={kernelName:Bw,backendName:"cpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(t){const{inputs:e,backend:n,attrs:s}=t,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,h=o.map(y=>n.data.get(y.dataId).values),p=o.map(y=>y.shape),[f,m]=W3(u,a.shape,c,r.shape,r.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(f,r.dtype,m)}const iQ={kernelName:Vw,backendName:"cpu",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oQ(t){const{backend:e,attrs:n}=t,{start:s,stop:a,dtype:r,step:i}=n,o=G3(s,a,i,r);return e.makeTensorInfo([o.length],r,o)}const lQ={kernelName:sy,backendName:"cpu",kernelFunc:oQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ=Ze(dc,t=>1/t),cQ={kernelName:dc,backendName:"cpu",kernelFunc:uQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dQ(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s;me(a,"resizeBilinear");const l=be(a.shape),[u,c]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,y=new Float32Array(L([d,u,c,f])),g=[r&&u>1?h-1:h,r&&c>1?p-1:p],b=[r&&u>1?u-1:u,r&&c>1?c-1:c];let x=0;const w=g[0]/b[0],v=g[1]/b[1];for(let C=0;C<d;C++)for(let $=0;$<u;$++){let k;i?k=w*($+.5)-.5:k=w*$;const T=Math.max(0,Math.floor(k)),E=k-T,O=Math.min(h-1,Math.ceil(k)),B=C*l[0]+T*l[1],W=C*l[0]+O*l[1];for(let V=0;V<c;V++){let G;i?G=v*(V+.5)-.5:G=v*V;const D=Math.max(0,Math.floor(G)),H=G-D,P=Math.min(p-1,Math.ceil(G)),j=B+D*l[2],X=W+D*l[2],Q=B+P*l[2],ee=W+P*l[2];for(let J=0;J<f;J++){const se=m[j+J],te=m[X+J],he=m[Q+J],xe=m[ee+J],Ce=se+(he-se)*H,ve=te+(xe-te)*H,Re=Ce+(ve-Ce)*E;y[x++]=Re}}}return n.makeTensorInfo([d,u,c,f],"float32",y)}const hQ={kernelName:bp,backendName:"cpu",kernelFunc:dQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s;me([r,a],"resizeBilinearGrad");const o=be(a.shape),[l,u,c,d]=a.shape,[,h,p]=r.shape,f=new Float32Array(l*u*c*d),m=[i&&h>1?u-1:u,i&&p>1?c-1:c],y=[i&&h>1?h-1:h,i&&p>1?p-1:p],g=m[0]/y[0],b=m[1]/y[1],x=n.data.get(r.dataId).values;let w=0;for(let v=0;v<l;v++){const C=v*o[0];for(let $=0;$<h;$++){const k=$*g,T=Math.floor(k),E=Math.min(Math.ceil(k),u-1),O=C+T*o[1],B=C+E*o[1],W=k-T,V=1-W;for(let G=0;G<p;G++){const D=G*b,H=Math.floor(D),P=Math.min(Math.ceil(D),c-1),j=D-H,X=1-j,Q=O+H*o[2],ee=O+P*o[2],J=B+H*o[2],se=B+P*o[2],te=V*X,he=V*j,xe=W*X,Ce=W*j;for(let ve=0;ve<d;ve++){const Re=x[w++];f[Q+ve]+=Re*te,f[ee+ve]+=Re*he,f[J+ve]+=Re*xe,f[se+ve]+=Re*Ce}}}}return n.makeTensorInfo([l,c,u,d],"float32",f)}const fQ={kernelName:iy,backendName:"cpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s;me(a,"resizeNearestNeighbor");const l=be(a.shape),[u,c]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,y=new Float32Array(d*u*c*f),g=[r&&u>1?h-1:h,r&&c>1?p-1:p],b=[r&&u>1?u-1:u,r&&c>1?c-1:c],x=g[0]/b[0],w=g[1]/b[1];let v=0;for(let C=0;C<d;C++){const $=C*l[0];for(let k=0;k<u;k++){const T=i?x*(k+.5):x*k;let E=Math.min(h-1,r?Math.round(T):Math.floor(T));i&&(E=Math.max(0,E));const O=$+E*l[1];for(let B=0;B<c;B++){const W=i?w*(B+.5):w*B;let V=Math.min(p-1,r?Math.round(W):Math.floor(W));i&&(V=Math.max(0,V));const G=O+V*l[2];for(let D=0;D<f;D++){const H=m[G+D];y[v++]=H}}}}return n.makeTensorInfo([d,u,c,f],a.dtype,y)}const gQ={kernelName:yp,backendName:"cpu",kernelFunc:mQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yQ(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s;me([r,a],"resizeNearestNeighborGrad");const o=be(a.shape),l=be(r.shape),[u,c,d,h]=a.shape,[,p,f]=r.shape,m=new Float32Array(u*c*d*h),y=n.data.get(r.dataId).values,g=[i&&p>1?c-1:c,i&&f>1?d-1:d],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=g[0]/b[0],w=g[1]/b[1],v=1/x,C=1/w,$=Math.ceil(v)*2+2,k=Math.ceil(C)*2+2;for(let T=0;T<u;T++){const E=T*o[0];for(let O=0;O<c;O++){const B=E+O*o[1],W=Math.floor(O*v),V=Math.floor(W-$/2);for(let G=0;G<d;G++){const D=B+G*o[2],H=Math.floor(G*C),P=Math.floor(H-k/2);for(let j=0;j<h;j++){let X=0;for(let Q=0;Q<$;Q++){const ee=Q+V;if(ee<0||ee>=p)continue;const J=E+ee*l[1],se=ee*x,te=Math.min(c-1,i?Math.round(se):Math.floor(se));if(O===te)for(let he=0;he<k;he++){const xe=he+P;if(xe<0||xe>=f)continue;const Ce=J+xe*l[2],ve=xe*w,Re=Math.min(d-1,i?Math.round(ve):Math.floor(ve));G===Re&&(X+=y[Ce+j])}}m[D+j]=X}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}const bQ={kernelName:ry,backendName:"cpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dims:r}=s;me(a,"reverse");const i=a.shape.length,o=Ie(r,a.shape);if(i===0)return Ja({inputs:{x:a},backend:n});const l=new Jt(a.shape,a.dtype),u=n.bufferSync(a);for(let c=0;c<l.size;c++){const d=l.indexToLoc(c),h=d.slice();o.forEach(p=>h[p]=a.shape[p]-1-h[p]),l.set(u.get(...h),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const wQ={kernelName:xp,backendName:"cpu",kernelFunc:xQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vQ={kernelName:xy,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:r,center:i}=e,o=n,l=nn(s.dtype,L(s.shape)),[u,c,d,h]=s.shape,[p,f]=Zy(i,c,d),m=255,y=Math.sin(a),g=Math.cos(a),b=o.data.get(s.dataId).values;for(let w=0;w<u;w++){const v=w*d*c*h;for(let C=0;C<c;C++){const $=C*(d*h);for(let k=0;k<d;k++){const T=k*h;for(let E=0;E<h;E++){const O=[u,C,k,E],B=O[2],W=O[1];let V=(B-p)*g-(W-f)*y,G=(B-p)*y+(W-f)*g;V=Math.round(V+p),G=Math.round(G+f);let D=r;if(typeof r!="number"&&(E===3?D=m:D=r[E]),V>=0&&V<d&&G>=0&&G<c){const P=G*(d*h),j=V*h,X=v+P+j+E;D=b[X]}const H=v+$+T+E;l[H]=D}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQ=Ze(fc,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),CQ={kernelName:fc,backendName:"cpu",kernelFunc:SQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Q(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=rr(r,a,i),h=!0,p=n.bufferSync(a),f=n.bufferSync(r),m=ho(p,f,i,d,u,l,o,c,0,h);return n.makeTensorInfo(i,m.dtype,m.values)}const NQ={kernelName:oy,backendName:"cpu",kernelFunc:$Q};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kQ(t,e){let n=0,s=t.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),t[a]<e?n=a+1:s=a;return s}function IQ(t,e){let n=0,s=t.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),t[a]<=e?n=a+1:s=a;return s}function TQ(t,e,n,s,a,r){const i=Ot("int32",n*a);for(let o=0;o<n;++o){const l=t.slice(o*s,(o+1)*s),u=o*a;for(let c=0;c<a;++c)i[u+c]=r==="left"?kQ(l,e[c+u]):IQ(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EQ(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:a,values:r}=e,{side:i}=s,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=TQ(o,l,a.shape[0],a.shape[1],r.shape[1],i);return n.makeTensorInfo(r.shape,"int32",u)}const RQ={kernelName:uy,backendName:"cpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(t){const{inputs:e,backend:n}=t,{condition:s,t:a,e:r}=e;me([s,a,r],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=pn(a.dtype,r.dtype),d=Sn(L(a.shape),c);let h=0;const p=i===0||i>1||a.shape.length===1?1:L(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<p;m++)o[f]===1?d[h++]=l[f]:d[h++]=u[f];return n.makeTensorInfo(a.shape,c,d)}const AQ={kernelName:wp,backendName:"cpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Q=Lp,OQ=Pp,FQ=Ze(gc,t=>t>=0?OQ*t:_Q*(Math.exp(t)-1)),zQ={kernelName:gc,backendName:"cpu",kernelFunc:FQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ=Ze(xc,t=>t<0?-1:t>0?1:0),PQ={kernelName:xc,backendName:"cpu",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MQ=Ze(yc,t=>Math.sin(t)),BQ={kernelName:yc,backendName:"cpu",kernelFunc:MQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VQ=Ze(bc,t=>Math.sinh(t)),UQ={kernelName:bc,backendName:"cpu",kernelFunc:VQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WQ=11920928955078125e-23,C$=Math.log(WQ)+2,GQ=Ze(vc,t=>{const e=t>-C$,n=t<C$,s=Math.exp(t);let a;return n?a=s:e?a=t:a=Math.log(1+s),a}),HQ={kernelName:vc,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,paddings:i}=s;me([a],"spaceToBatchND");const o=L(r),l=[[0,0]];l.push(...i);for(let C=1+r.length;C<a.shape.length;++C)l.push([0,0]);const u=C_.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=sl(u.shape,r,o,!1),d=al(c.length,r.length,!1),h=rl(u.shape,r,o,!1),m=ct({inputs:{x:u},backend:n,attrs:{shape:c}}),b=es({inputs:{x:m},backend:n,attrs:{perm:d}}),v=ct({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),v}const qQ={kernelName:Cp,backendName:"cpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(t){const{inputs:e,backend:n}=t,{indices:s,values:a,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=X3(o,s.shape,s.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const KQ={kernelName:Uw,backendName:"cpu",kernelFunc:XQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:a,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(r.dataId).values),[u,c,d]=K3(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}const QQ={kernelName:Ww,backendName:"cpu",kernelFunc:YQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=wS(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const JQ={kernelName:cy,backendName:"cpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=wS(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const tZ={kernelName:dy,backendName:"cpu",kernelFunc:eZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=rr(r,a,o),p=!1,f=n.bufferSync(a);let m;switch(r.dtype){case"bool":{const y=n.bufferSync(r),g=!!n.data.get(i.dataId).values[0];m=ho(f,y,o,h,c,u,l,d,g,p);break}case"float32":{const y=n.bufferSync(r),g=n.data.get(i.dataId).values[0];m=ho(f,y,o,h,c,u,l,d,g,p);break}case"int32":{const y=n.bufferSync(r),g=n.data.get(i.dataId).values[0];m=ho(f,y,o,h,c,u,l,d,g,p);break}case"string":{const y=n.bufferSync(r),g=$a(n.data.get(i.dataId).values[0]);m=ho(f,y,o,h,c,u,l,d,g,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}const sZ={kernelName:hy,backendName:"cpu",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=Ie(i,a.shape)[0],l=hb(a,r,o),u=new Array(a.shape.length).fill(0),c=a.shape.slice();return l.map(d=>{const h=[...c];h[o]=d;const p=Bo({inputs:{x:a},backend:n,attrs:{begin:u,size:h}});return u[o]+=d,p})}const rZ={kernelName:$p,backendName:"cpu",kernelFunc:aZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ={kernelName:py,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;me(n,"square");const a=s.data.get(n.dataId).values,r=new Float32Array(a.length);for(let o=0;o<a.length;++o){const l=a[o];r[o]=l*l}return{dataId:s.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oZ=Ze(Tc,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),lZ={kernelName:Tc,backendName:"cpu",kernelFunc:oZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s;me(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:b,end:x,strides:w}=Ky(a.shape,r,i,o,l,u,c,d,h);let v;if(m)v=ct({inputs:{x:a},backend:n,attrs:{shape:f}});else if(y||g){N(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const C=Xy(b,x,w),$=Bo({inputs:{x:a},backend:n,attrs:{begin:b,size:C}});v=ct({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{const C=n.bufferSync(a),$=Z3(p,C,w,b);v=n.makeTensorInfo(f,$.dtype,$.values)}return v}const cZ={kernelName:my,backendName:"cpu",kernelFunc:uZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(t){const{inputs:e,backend:n,attrs:s}=t,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=e,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=J3(h,p,a,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const hZ={kernelName:gy,backendName:"cpu",kernelFunc:dZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:a}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=e_(o,l,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const fZ={kernelName:Gw,backendName:"cpu",kernelFunc:pZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:a}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(r.dataId).values,o=t_(i,a);return n.makeTensorInfo(r.shape,"int32",o)}const gZ={kernelName:Hw,backendName:"cpu",kernelFunc:mZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yZ=Ze(Nc,t=>Math.tan(t)),bZ={kernelName:Nc,backendName:"cpu",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xZ=Ze(kc,t=>Math.tanh(t)),wZ={kernelName:kc,backendName:"cpu",kernelFunc:xZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(t){const{inputs:e,backend:n}=t,{tensor:s,indices:a,updates:r}=e,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=rr(r,a,s.shape),d=!1,h=n.bufferSync(a),p=n.bufferSync(r),f=n.bufferSync(s),m=ho(h,p,s.shape,c,l,o,i,u,f,d);return n.makeTensorInfo(s.shape,m.dtype,m.values)}const SZ={kernelName:ly,backendName:"cpu",kernelFunc:vZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reps:r}=s;me(a,"tile");const i=s_(n.bufferSync(a),r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const $Z={kernelName:Ic,backendName:"cpu",kernelFunc:CZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{k:r,sorted:i}=s;me(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=r_(o,a.shape,a.dtype,r,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const kZ={kernelName:yy,backendName:"cpu",kernelFunc:NZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(t){const{inputs:e,attrs:n,backend:s}=t,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,d,h,p]=a.shape,[f,m]=u??[d,h],y=[c,f,m,p],g=be(a.shape),b=g[0],x=g[1],w=g[2],v=be(y),C=v[0],$=v[1],k=v[2],T=nn(a.dtype,L(y));T.fill(l);const E=s.data.get(a.dataId).values,O=s.data.get(r.dataId).values;for(let W=0;W<c;++W){const V=r.shape[0]===1?O:O.subarray(W*8,W*8+8);for(let G=0;G<f;++G)for(let D=0;D<m;++D)for(let H=0;H<p;++H){let P;const j=V[6]*D+V[7]*G+1;if(j===0)continue;const X=(V[0]*D+V[1]*G+V[2])/j,Q=(V[3]*D+V[4]*G+V[5])/j,ee=$$(X,h,o),J=$$(Q,d,o);switch(i){case"nearest":P=_Z(E,d,h,b,x,w,W,J,ee,H,l);break;case"bilinear":P=OZ(E,d,h,b,x,w,W,J,ee,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const se=W*C+G*$+D*k+H;T[se]=P}return s.makeTensorInfo(y,a.dtype,T)}return{dataId:s.write(T,y,a.dtype),shape:a.shape,dtype:a.dtype}}const TZ={kernelName:by,backendName:"cpu",kernelFunc:IZ};function $$(t,e,n){switch(n){case"reflect":return EZ(t,e);case"wrap":return RZ(t,e);case"nearest":return AZ(t,e);case"constant":default:return DZ(t)}}function EZ(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=2*e;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-e?n+s:-n-1}else if(n>e-1)if(e<=1)n=0;else{const s=2*e;n-=s*Math.trunc(n/s),n>=e&&(n=s-n-1)}return To(0,n,e-1)}function RZ(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=e-1;n+=e*(Math.trunc(-n/s)+1)}else if(n>e-1)if(e<=1)n=0;else{const s=e-1;n-=e*Math.trunc(n/s)}return To(0,n,e-1)}function DZ(t,e){return t}function AZ(t,e){return To(0,t,e-1)}function pd(t,e,n,s,a,r,i,o,l,u,c){const d=i*s+o*a+l*r+u;return 0<=o&&o<e&&0<=l&&l<n?t[d]:c}function _Z(t,e,n,s,a,r,i,o,l,u,c){const d=Math.round(o),h=Math.round(l);return pd(t,e,n,s,a,r,i,d,h,u,c)}function OZ(t,e,n,s,a,r,i,o,l,u,c){const d=Math.floor(o),h=Math.floor(l),p=d+1,f=h+1,m=(f-l)*pd(t,e,n,s,a,r,i,d,h,u,c)+(l-h)*pd(t,e,n,s,a,r,i,d,f,u,c),y=(f-l)*pd(t,e,n,s,a,r,i,p,h,u,c)+(l-h)*pd(t,e,n,s,a,r,i,p,f,u,c);return(p-o)*m+(o-d)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FZ(t){const{inputs:e,attrs:n,backend:s}=t,{axis:a}=n,{x:r}=e;me(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:u}=i_(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const zZ={kernelName:jw,backendName:"cpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LZ(t){const{inputs:e,backend:n,attrs:s}=t,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,o=a.shape[r],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==r&&(l[u++]=a.shape[p]);const c=new Array(i).fill(0),d=a.shape.slice();d[r]=1;const h=new Array(o);for(let p=0;p<h.length;p++){c[r]=p;const f=Bo({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[p]=ct({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return h}const PZ={kernelName:kp,backendName:"cpu",kernelFunc:LZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,segmentIds:r}=e,{numSegments:i}=s;me(a,"unsortedSegmentSum");const o=a.shape.length,l=r.shape.length,u=[],c=[],d=o-l;let h=r;for(let f=0;f<d;++f){const m=Ym({inputs:{input:h},backend:n,attrs:{dim:f+1}});h=m,c.push(m)}for(let f=0;f<i;++f){const m=Fi(f,"int32"),y=n.makeTensorInfo([],"int32",m),g=v3({inputs:{a:y,b:h},backend:n}),b=Di({inputs:{x:g},backend:n,attrs:{dtype:"float32"}}),x=Nb({inputs:{a:b,b:a},backend:n}),w=qp({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(y),c.push(g),c.push(b),c.push(x),c.push(w)}const p=S_({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const BZ={kernelName:Ip,backendName:"cpu",kernelFunc:MZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VZ=[F8,gK,L8,M8,SK,V8,W8,H8,q8,K8,Q8,J8,t7,a7,i7,u7,d7,p7,m7,_8,y7,x7,v7,$K,C7,wK,kK,N7,yK,I7,E7,R7,A7,O7,z7,P7,B7,U7,G7,j7,X7,Y7,Z7,eY,tY,sY,rY,oY,lY,uY,cY,hY,mY,k8,yY,IK,NY,TK,kY,RK,AY,_Y,FY,AK,OK,LY,MY,VY,WY,zK,PK,bK,HY,T7,qY,KY,QY,I8,BK,UK,JY,GK,t9,a9,i9,u9,d9,p9,f9,jK,g9,b9,w9,S9,$9,k9,T9,XK,R9,_9,z9,YK,ZK,M9,U9,H9,e8,q9,K9,Y9,C_,eQ,E8,s8,nQ,aQ,iQ,lQ,xK,$1,cQ,R8,D8,A8,hQ,fQ,gQ,bQ,wQ,vQ,CQ,d8,NQ,RQ,AQ,zQ,p8,PQ,BQ,UQ,f8,O9,HQ,qQ,KQ,QQ,JQ,tZ,sZ,rZ,y8,iZ,x8,v8,lZ,cZ,hZ,fZ,gZ,N8,pY,bZ,wZ,SZ,$Z,kZ,TZ,t8,zZ,PZ,BZ,X9];for(const t of VZ)qw(t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro={},Nf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function UZ(t,e){ro[t]=e}function Ra(t,e){if(!(t in ro)||e!=null){const s=GZ(t,e);if(s!==null)ro[t]=s;else return console.log("Could not get context for WebGL version",t),null}const n=ro[t];return n==null||n.isContextLost()?(delete ro[t],Ra(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ro[t])}function WZ(t){if(!M().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function GZ(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e??WZ(t);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ro[t]},!1),M().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nf.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",Nf)||n.getContext("experimental-webgl",Nf):n.getContext("webgl2",Nf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ch;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(ch||(ch={}));var ks;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(ks||(ks={}));var xn;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(xn||(xn={}));function Xp(t,e){return[e,t]}function HZ(t,e){return t*e}function kf(t){const e=L(t),n=Math.ceil(e/4);return O0(n)}function Fc(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function jZ(t,e){const[n,s]=Fc(t,e);return n*s*4}function NS(t,e){const n=t;let s,a,r,i,o,l,u,c,d,h;return M().getNumber("WEBGL_VERSION")===2?(s=n.R32F,a=n.R16F,r=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(s=t.RGBA,a=t.RGBA,r=t.RGBA,i=n.RGBA,o=t.RGBA,u=4,c=4,d=e!=null?e.HALF_FLOAT_OES:null,h=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(t,e){const n=e();return M().getBool("DEBUG")&&qZ(t),n}function qZ(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+QZ(t,e))}const XZ=596e-10,KZ=65504;function YZ(t){return!!(M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||XZ<Math.abs(t)&&Math.abs(t)<KZ)}function QZ(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function If(t,e){return Br(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function ZZ(t,e){const n=Br(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function JZ(t,e){const n=Br(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),M().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw $_(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const eJ=/ERROR: [0-9]+:([0-9]+):/g;function $_(t,e){const n=eJ.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const s=+n[1],a=t.split(`
`),r=a.length.toString().length+2,i=a.map((d,h)=>Yl((h+1).toString(),r)+d);let o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Yl(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function tJ(t){return Br(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function nJ(t,e){if(ue(t,()=>t.linkProgram(e)),!M().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function _x(t,e){if(ue(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function sJ(t,e){const n=Br(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function aJ(t,e){const n=Br(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function rJ(t){return Br(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function iJ(t,e){const n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const s=`[${t}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(t>n||e>n){const s=`[${t}x${e}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function oJ(t){return Br(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function N$(t,e,n,s,a,r,i){const o=t.getAttribLocation(e,n);return o===-1?!1:(ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),ue(t,()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,r,i)),ue(t,()=>t.enableVertexAttribArray(o)),!0)}function lJ(t,e,n){pJ(t,n),ue(t,()=>t.activeTexture(t.TEXTURE0+n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function uJ(t,e,n){return Br(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function cJ(t,e,n){return t.getUniformLocation(e,n)}function dJ(t,e,n,s){ue(t,()=>lJ(t,e,s)),ue(t,()=>t.uniform1i(n,s))}function Ox(t,e,n){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function k$(t,e){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Tf(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+hJ(t,e))}function hJ(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Br(t,e,n){const s=ue(t,()=>e());if(s==null)throw new Error(n);return s}function pJ(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n){const a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function vu(t,e=2){return L(t.slice(0,t.length-e))}function Su(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ef(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[vu(t),...Su(t)]),e}function fJ(t,e=!1){let n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=M().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&M().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n=n*2,s=s*2,t=t.map((o,l)=>l>=t.length-2?_w(t[l]):t[l]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=Oi(t).newShape);let a=L(t),r=null;t.length<=1&&a<=n?r=[1,a]:t.length===2&&t[0]<=n&&t[1]<=n?r=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?r=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?r=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?r=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(r=[t[0],t[1]*t[2]*t[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||i)if(e){const o=vu(t);let l=2,u=2;t.length&&([l,u]=Su(t)),a=o*(l/2)*(u/2),r=O0(a).map(c=>c*2)}else r=O0(a);return r}function Rf(t){return t%2===0}function Zm(t,e){if(t=t.slice(-2),e=e.slice(-2),Ee(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],s=e[e.length-1];if(n===s||Rf(n)&&Rf(s)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&Rf(t[0])&&Rf(e[0])}let Fx,zx;function mJ(t){if(Fx==null){const e=Ra(t);Fx=e.getParameter(e.MAX_TEXTURE_SIZE)}return Fx}function gJ(t){if(zx==null){const e=Ra(t);zx=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zx)}function yJ(t){if(t===0)return 0;let e;const n=Ra(t);return aa(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:aa(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function aa(t,e){return t.getExtension(e)!=null}function I$(t){try{if(Ra(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function bJ(t){if(t===0)return!1;const e=Ra(t);if(t===1){if(!aa(e,"OES_texture_float"))return!1}else if(!aa(e,"EXT_color_buffer_float"))return!1;return k1(e)}function xJ(t){if(t===0)return!1;const e=Ra(t);if(t===1){if(!aa(e,"OES_texture_float")||!aa(e,"WEBGL_color_buffer_float"))return!1}else{if(aa(e,"EXT_color_buffer_float"))return k1(e);const s="EXT_color_buffer_half_float";if(aa(e,s)){const a=e.getExtension(s);return wJ(e,a)}return!1}return k1(e)}function k1(t){const e=NS(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function wJ(t,e){const n=NS(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(i),o}function vJ(t){return t!==2?!1:Ra(t).fenceSync!=null}function Kp(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&N(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye=M();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>I$(2)?2:I$(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>mJ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>gJ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=ye.getNumber("WEBGL_VERSION");return t===0?0:yJ(t)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!RT());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>bJ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>xJ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>vJ(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>RT()?1:-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ye.registerFlag("WEBGL_EXP_CONV",()=>!1);ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ye.getBool("IS_TEST"));ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ye.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Un(){let t,e,n,s,a,r,i,o,l,u;return M().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",o=M().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",s="varying",a="texture2D",r="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(t,e,n="index"){const s=be(e);return s.map((a,r)=>{const i=`int ${t[r]} = ${n} / ${a}`,o=r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${a}`:`index -= ${t[r]} * ${a}`;return`${i}; ${o};`}).join("")}function kb(t,e,n="index"){const s=be(e);return s.map((a,r)=>{const i=`int ${t[r]} = ${n} / outShapeStrides[${r}]`,o=r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * outShapeStrides[${r}]`:`index -= ${t[r]} * outShapeStrides[${r}]`;return`${i}; ${o};`}).join("")}function SJ(t,e){const n=t.length,s=t.map(r=>`${e}[${r}]`),a=new Array(n-1);a[n-2]=s[n-1];for(let r=n-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function CJ(t,e,n="index"){const s=t.map((r,i)=>i),a=SJ(s,e);return a.map((r,i)=>{const o=`int ${t[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${a[i]}`:`index -= ${t[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function kS(t){const e=be(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function IS(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const N_=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:k_}=BH;function $J(t,e,n){const s=[];if(t.forEach(p=>{const f=L(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){const{uniformShape:m}=TS(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const a=s.join(`
`),r=t.map(p=>NJ(p,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=e.texShape,o=Un(),l=TJ(o);let u,c,d=DJ(o);return e.isPacked?(u=kJ(e.logicalShape,i,n.enableShapeUniforms),c=RJ(o)):(u=IJ(e.logicalShape,i,n.enableShapeUniforms),c=EJ(o)),n.packedInputs&&(d+=FJ),[d,l,c,a,u,r,n.userCode].join(`
`)}function zc(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return qJ(t,e);case 1:return KJ(t,e);case 2:return QJ(t,e);case 3:return JJ(t,e);case 4:return tee(t,e);case 5:return nee(t);case 6:return see(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function I_(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return jJ(t);case 1:return XJ(t,e);case 2:return YJ(t,e);case 3:return ZJ(t,e);default:return eee(t,e)}}function NJ(t,e,n=!1,s){let a="";n?a+=I_(t,s):a+=zc(t,s);const r=t.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(n?a+=aee(t,e):a+=ree(t,e)),a}function kJ(t,e,n){switch(t.length){case 0:return T_();case 1:return zJ(t,e,n);case 2:return GJ(t,e,n);case 3:return PJ(t,e,n);default:return BJ(t,e,n)}}function IJ(t,e,n){switch(t.length){case 0:return T_();case 1:return LJ(t,e,n);case 2:return HJ(t,e,n);case 3:return MJ(t,e,n);case 4:return VJ(t,e,n);case 5:return UJ(t,e);case 6:return WJ(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function TJ(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function EJ(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function RJ(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function DJ(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${AJ}
    ${_J}
    ${OJ}
  `}const AJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_J=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,FJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function T_(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function zJ(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function LJ(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function PJ(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[2]/2),r=a*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function MJ(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${kb(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const s=ll(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function BJ(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[t.length-1]/2),r=a*Math.ceil(t[t.length-2]/2);let i=r,o="",l="b, r, c";for(let u=2;u<t.length-1;u++)i*=t[t.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${t.length}(${l});
    }
  `}function VJ(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${kb(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const s=ll(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function UJ(t,e){const n=ll(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function WJ(t,e){const n=ll(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function GJ(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ee(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function HJ(t,e,n){return Ee(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function ul(t){return`offset${t}`}function jJ(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Un();return`
    vec4 ${n}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function qJ(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[a,r]=t.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=ul(n);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[o,l]=t.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function XJ(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,r=Un();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${n}, uv);
    }
  `}function KJ(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Lc(t)}
      }
    `;const a=t.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const o=ul(n);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);
        return sampleTexture(${n}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function YJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape,i=r[0],o=r[1],l=Un();if(r!=null&&Ee(n,r))return e?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function QJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape;if(r!=null&&Ee(n,r)){if(e)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=r[0],p=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:o}=Oi(n),l=i;if(l.length<n.length){const h=Pc(t,l),p=["row","col"];return`
      ${zc(h,e)}
      float ${a}(int row, int col) {
        return ${a}(${Mc(p,o)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Lc(t)}
      }
    `;const u=r[0],c=r[1],d=ul(s);return c===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function ZJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(n[0]===1){const h=n.slice(1),p=[1,2],f=Pc(t,h),m=["b","row","col"];return`
        ${I_(f,e)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Mc(m,p)});
        }
      `}const o=Un();if(e)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${d}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function JJ(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Oi(n),u=o;if(u.length<n.length){const m=Pc(t,u),y=["row","col","depth"];return`
        ${zc(m,e)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Mc(y,l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${Lc(t)}
      }
    `;const c=t.shapeInfo.texShape,d=c[0],h=c[1],p=t.shapeInfo.flatOffset;if(h===r&&p==null)return e?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===i&&p==null)return e?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=ul(s);return e?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function eee(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Un();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;const r=t.shapeInfo.logicalShape,i=r.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(r[i-1]/2);let h=d*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,h*=r[i-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}function tee(t,e){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[3],i=n[2]*r,o=n[1]*i,{newShape:l,keptDims:u}=Oi(n);if(l.length<n.length){const b=Pc(t,l),x=["row","col","depth","depth2"];return`
      ${zc(b,e)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Mc(x,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${r}, 1)));
        ${Lc(t)}
      }
    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&c==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&c==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const g=ul(s);return e?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${g});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function nee(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],r=e[3]*a,i=e[2]*r,o=e[1]*i,{newShape:l,keptDims:u}=Oi(e);if(l.length<e.length){const m=Pc(t,l),y=["row","col","depth","depth2","depth3"];return`
      ${zc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Mc(y,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${r}, ${a})) +
          depth3;
        ${Lc(t)}
      }
    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=ul(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function see(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:r}=Oi(e);if(a.length<e.length){const y=Pc(t,a),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${zc(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Mc(g,r)});
      }
    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Lc(t)}
      }
    `;const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=ul(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Lc(t){const e=t.name,n=L(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function aee(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=k_(t.shapeInfo.logicalShape,e.logicalShape),l=et(i),u=i-r;let c;const d=["x","y","z","w","u","v"];r===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(b=>`coords.${d[b+u]} = 0;`).join(`
`);let h="";i<2&&r>0?h="coords":h=t.shapeInfo.logicalShape.map((b,x)=>`coords.${d[x+u]}`).join(", ");let p="return outputValue;";const m=L(t.shapeInfo.logicalShape)===1,g=L(e.logicalShape)===1;if(r===1&&!m&&!g)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!g)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(o.length){const b=r-2,x=r-1;o.indexOf(b)>-1&&o.indexOf(x)>-1?p="return vec4(outputValue.x);":o.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(x)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function ree(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&t.shapeInfo.flatOffset==null&&Ee(i,r))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=et(l),c=k_(t.shapeInfo.logicalShape,e.logicalShape),d=l-o;let h;const p=["x","y","z","w","u","v"];o===0?h="":l<2&&c.length>=1?h="coords = 0;":h=c.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=t.shapeInfo.logicalShape.map((m,y)=>`coords.${p[y+d]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function et(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function TS(t,e,n){const{newShape:s,keptDims:a}=Oi(e),r=e.length,i=t&&r===3&&e[0]===1,o=i?e.slice(1):s,l=!t&&r>1&&!Ee(e,n)&&s.length<r||i;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:a}}function Pc(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Mc(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iee(t,e,n,s){const a=n.map((c,d)=>{const h={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(h.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),r=a.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=$J(a,i,e),l=JZ(t.gl,o),u=t.createProgram(l);return M().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i},E_(t,e,u)))}function E_(t,e,n){const s=[],a=[];let r,i,o,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),M().getNumber("WEBGL_VERSION")===1&&(l=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const d of e.variableNames){const h={name:d,uniform:t.getUniformLocation(n,d,c),offset:t.getUniformLocation(n,`offset${d}`,c)};e.enableShapeUniforms&&(h.shape=t.getUniformLocation(n,`${d}Shape`,c),h.texShape=t.getUniformLocation(n,`${d}TexShape`,c)),s.push(h)}if(e.enableShapeUniforms&&(r=t.getUniformLocation(n,"outShape",c),o=t.getUniformLocation(n,"outShapeStrides",c),i=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const d of e.customUniforms)a.push(t.getUniformLocation(n,d.name,c));return{variablesLocations:s,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}}function T$(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,s)=>{const a=n.logicalShape,r=e[s],i=r.shape;if(!Ee(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&r.isUniform)return;const o=n.texShape,l=r.isUniform?null:r.texData.texShape;if(!Ee(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function oee(t,e,n,s,a){e.program.enableShapeUniforms||(T$(e.inShapeInfos,n),T$([e.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):t.setOutputMatrixTexture(r.texture,i[0],i[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),M().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<n.length;++l){const u=n[l],{uniform:c,offset:d,shape:h,texShape:p}=e.variablesLocations[l];if(h){const{uniformShape:f}=TS(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:t.gl.uniform1iv(h,new Int32Array(f));break;case 2:t.gl.uniform2iv(h,new Int32Array(f));break;case 3:t.gl.uniform3iv(h,new Int32Array(f));break;case 4:t.gl.uniform4iv(h,new Int32Array(f));break}}if(p&&t.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(L(u.shape)<2)t.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),t.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&d!=null&&t.gl.uniform1i(d,u.texData.slice.flatOffset),t.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=be(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&a)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],d=a[l];if(u.type==="float")t.gl.uniform1fv(c,d);else if(u.type==="vec2")t.gl.uniform2fv(c,d);else if(u.type==="vec3")t.gl.uniform3fv(c,d);else if(u.type==="vec4")t.gl.uniform4fv(c,d);else if(u.type==="int")t.gl.uniform1iv(c,d);else if(u.type==="ivec2")t.gl.uniform2iv(c,d);else if(u.type==="ivec3")t.gl.uniform3iv(c,d);else if(u.type==="ivec4")t.gl.uniform4iv(c,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}t.executeProgram()}function lee(t,e,n){let s="";e.concat(n).forEach(i=>{const o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:d}=TS(t.packedInputs,i.shape,l);let h="",p="",f="";if(c.length===1&&t.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!t.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const v=be(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}const m=i.shape.length,y=c.length===2&&Ee(i.shape,l),g=L(i.shape)===1,b=ki(i.shape,n.shape),x=!t.packedInputs&&m===n.shape.length&&Ee(l,n.texData.texShape),w=t.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${x}_${u?d:""}_${c.length}_${g}_${b}_${y}_${h}_${p}_${f}_${w}_${o}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${o}`}});const a=t.userCode;let r=t.constructor.name;return r+="_"+s+"_"+a+`${M().getNumber("WEBGL_VERSION")}`,r}function An(t){return M().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uee{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ch.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kb(["r","c","d"],e):ll(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ch.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kb(["r","c","d"],e):ll(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dee{constructor(e){this.variableNames=["A"],this.outTexUsage=ks.DOWNLOAD;const n=Un();this.outputShape=e,this.userCode=`
      ${N_}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hee{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ks.DOWNLOAD;const n=Un();this.outputShape=e,this.userCode=`
      ${N_}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pee={R:0,G:1,B:2,A:3};class E${constructor(e,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);let r="result";n&&(r="floor(result * 255. + 0.5)");let i="";for(let o=0;o<s.length;o++){const l=s[o];i+=`
          if(offset == ${o}) {
            result = values[${pee[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?IS():kS(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fee{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Un();this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);let a="",r="result";n&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let o=0;o<=1;o++){const l=i*2+o;a+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?IS():kS(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mee(t){const e=Un(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return ZZ(t,n)}function gee(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return sJ(t,e)}function yee(t){const e=new Uint16Array([0,1,2,2,1,3]);return aJ(t,e)}function Yp(t,e,n,s,a,r){iJ(e,n);const i=rJ(t),o=t.TEXTURE_2D;return ue(t,()=>t.bindTexture(o,i)),ue(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),ue(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),M().getNumber("WEBGL_VERSION")===1?ue(t,()=>t.texImage2D(o,0,s,e,n,0,a,r,null)):ue(t,()=>t.texStorage2D(o,1,s,e,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:i,texShape:[n,e]}}function R_(t){return t.internalFormatFloat}function bee(t,e,n,s){const[a,r]=Xp(e,n);return Yp(t,a,r,R_(s),s.textureFormatFloat,t.FLOAT)}function D_(t){return t.internalFormatHalfFloat}function xee(t,e,n,s){const[a,r]=Xp(e,n);return Yp(t,a,r,D_(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function A_(t){return t.downloadTextureFormat}function wee(t,e,n,s){const[a,r]=Xp(e,n);return Yp(t,a,r,A_(s),t.RGBA,t.UNSIGNED_BYTE)}function __(t){return t.internalFormatPackedFloat}function vee(t,e,n,s){const[a,r]=Fc(e,n);return Yp(t,a,r,__(s),t.RGBA,t.FLOAT)}function O_(t){return t.internalFormatPackedHalfFloat}function See(t,e,n,s){const[a,r]=Fc(e,n);return Yp(t,a,r,O_(s),t.RGBA,s.textureTypeHalfFloat)}function Cee(t,e,n){return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),N$(t,e,"clipSpacePos",n,3,20,0)&&N$(t,e,"uv",n,2,20,12)}function $ee(t,e,n,s,a,r){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),o=t.FLOAT,l=r.internalFormatPackedFloat),i.set(a),M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,o,i)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,i)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function Nee(t,e,n){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function kee(t,e,n,s){const a=t.createBuffer();ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const o=4*4*e*n;return ue(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}function Iee(t,e,n){const s=t,a=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function Tee(t,e,n,s){const[a,r]=Xp(e,n),i=4,o=new Uint8Array(HZ(e*n,i));return ue(t,()=>t.readPixels(0,0,a,r,s.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function Eee(t,e,n,s,a,r,i,o){const l=t,u=new Float32Array(jZ(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Ree(t,e,n){const s=new Float32Array(e*n*4);return ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lx{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=M().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,UZ(n,e)):this.gl=Ra(n),e=this.gl,M().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>ue(r,()=>r.createVertexArray()),this.bindVertexArray=i=>ue(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>ue(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>ue(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ue(e,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>ue(e,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ue(e,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>ue(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),M().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=If(this.gl,r),aa(this.gl,i))this.textureHalfFloatExtension=If(this.gl,i);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),aa(this.gl,a))this.colorBufferHalfFloatExtension=If(this.gl,a);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",aa(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(aa(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=gee(this.gl),this.indexBuffer=yee(this.gl),this.framebuffer=oJ(this.gl),this.textureConfig=NS(this.gl,this.textureHalfFloatExtension)}get debug(){return M().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ue(e,()=>e.finish()),ue(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ue(e,()=>e.deleteFramebuffer(this.framebuffer)),ue(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ue(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ue(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),bee(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),xee(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),wee(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),Nee(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,s,a){this.throwIfDisposed(),$ee(this.gl,e,n,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),See(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),vee(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(k$(this.gl,this.framebuffer),this.outputTexture=null),ue(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,s){return this.downloadMatrixDriver(e,()=>Tee(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,s,a,r,i){return Eee(this.gl,e,n,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return Iee(this.gl,e,n)}createBufferFromTexture(e,n,s){this.bindTextureToFrameBuffer(e);const a=kee(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,s;if(M().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},n=r}else M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(e,n,s){return this.downloadMatrixDriver(e,()=>Ree(this.gl,n,s))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=mee(n));const s=tJ(n);ue(n,()=>n.attachShader(s,this.vertexShader)),ue(n,()=>n.attachShader(s,e)),nJ(n,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&_x(n,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;ue(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),Cee(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ue(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&_x(this.gl,this.program),ue(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,s=!0){return this.throwIfDisposed(),s?uJ(this.gl,e,n):cJ(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),ue(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),dJ(this.gl,e,n,s)}setOutputMatrixTexture(e,n,s){this.setOutputMatrixTextureDriver(e,s,n)}setOutputPackedMatrixTexture(e,n,s){this.throwIfDisposed();const[a,r]=Fc(n,s);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,n,s,a){this.setOutputMatrixWriteRegionDriver(s,e,a,n)}setOutputPackedMatrixWriteRegion(e,n,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&_x(this.gl,this.program),Tf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ue(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ue(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=If(this.gl,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await c2(()=>this.disposed||this.isQueryAvailable(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=Dee(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in M().platform&&(s=M().platform.setTimeoutCustom.bind(M().platform)),c2(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ox(this.gl,e,this.framebuffer),this.debug&&Tf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ox(this.gl,this.outputTexture,this.framebuffer),this.debug&&Tf(this.gl)):k$(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,n,s){this.throwIfDisposed();const a=this.gl;Ox(a,e,this.framebuffer),this.debug&&Tf(a),this.outputTexture=e,ue(a,()=>a.viewport(0,0,n,s)),ue(a,()=>a.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(e,n,s,a){this.throwIfDisposed(),ue(this.gl,()=>this.gl.scissor(e,n,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Dee(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Aee,bincountImpl:F_,bincountReduceImpl:_ee,bitwiseAndImpl:Oee,castImpl:Fee,ceilImpl:zee,concatImpl:Lee,equalImpl:Pee,expImpl:Mee,expm1Impl:Bee,floorImpl:Vee,gatherNdImpl:Uee,gatherV2Impl:Wee,greaterImpl:Gee,greaterEqualImpl:Hee,lessImpl:jee,lessEqualImpl:qee,linSpaceImpl:Xee,logImpl:Kee,maxImpl:Yee,maximumImpl:Qee,minimumImpl:Zee,multiplyImpl:Jee,negImpl:ete,notEqualImpl:tte,prodImpl:nte,raggedGatherImpl:ste,raggedRangeImpl:ate,raggedTensorToTensorImpl:rte,rangeImpl:ite,rsqrtImpl:ote,scatterImpl:lte,sigmoidImpl:ute,simpleAbsImpl:z_,sliceImpl:cte,sparseFillEmptyRowsImpl:dte,sparseReshapeImpl:hte,sparseSegmentReductionImpl:L_,sqrtImpl:pte,staticRegexReplaceImpl:fte,stridedSliceImpl:mte,stringNGramsImpl:gte,stringSplitImpl:yte,stringToHashBucketFastImpl:bte,subImpl:xte,tileImpl:wte,topKImpl:vte,transposeImpl:ES,uniqueImpl:Ste}=o_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function zn(t,e){return e===1?[t]:P_(t,e)}function Cte(t,e){if(t===1)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $te{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=An(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=zn("rc",this.rank),s=et(this.rank),a=this.getOutOfBoundsCondition(n),r=this.getSetup(n),i=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${e[e.length-1-i]},`+r;n.push(r)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M_{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${Nte(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?IS():kS(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function Nte(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?CJ(["r","c","d"],"inputShape"):ll(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kte=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,s){const a=D$(n,s),r=A$(e,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=R$(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let o;return a===xn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===xn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===xn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===xn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===xn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(e,n,s,a){if(this.freeTextures==null)return;const r=D$(s,a),i=A$(n,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const o=R$(n,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),l=M().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Ite(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function R$(t,e,n,s,a){const r=Tte(e,s);let i;if(a){const[l,u]=Fc(t[0],t[1]);i=l*u}else{const[l,u]=Xp(t[0],t[1]);i=l*u}const o=Ite(n,r);return i*o}function Tte(t,e){switch(t){case xn.PACKED_2X2_FLOAT32:return __(e);case xn.PACKED_2X2_FLOAT16:return O_(e);case xn.UNPACKED_FLOAT32:return R_(e);case xn.UNPACKED_FLOAT16:return D_(e);case xn.PACKED_4X1_UNSIGNED_BYTE:return A_(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function Ete(t){return M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?xn.PACKED_2X2_FLOAT32:xn.UNPACKED_FLOAT32:t?xn.PACKED_2X2_FLOAT16:xn.UNPACKED_FLOAT16}function D$(t,e){if(t===ks.UPLOAD)return xn.PACKED_2X2_FLOAT32;if(t===ks.RENDER||t==null)return Ete(e);if(t===ks.DOWNLOAD||t===ks.PIXELS)return xn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function A$(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ua=class{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const pa="if (isnan(x)) return x;",Rte="return x;",_$="return abs(x);",Dte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ate=pa+`
  return (x < 0.0) ? 0.0 : x;
`,_te=pa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qr="return x;",Ote="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fte="return x;",zte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Lte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mte="return 1.0 / (1.0 + exp(-1.0 * x));";class ii{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bte{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);const n=e.length,s=zn("rc",n),a=et(n),r=Cte(n,s),i=s.slice(-2),o=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vte=Ov,Ute=1e-7,Wte=1e-4,Df={};function Gte(t){return t in Df||(Df[t]={}),Df[t]}const Hte=M().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),jte=600;function qte(){return M().global.screen==null?1024:M().global.screen.height*M().global.screen.width*window.devicePixelRatio*jte/1024/1024}class Ib extends Sg{nextDataId(){return Ib.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!M().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Lx)n=e;else{const s=Ra(M().getNumber("WEBGL_VERSION"),e);n=new Lx(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ra(M().getNumber("WEBGL_VERSION"));n=new Lx(s),this.binaryCache=Gte(M().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new kte(this.gpgpu),this.numMBBeforeWarning=qte(),this.texData=new Aw(this,Wn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,s,a,r,i){const o=this.makeTensorInfo(n,s),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[a,r]},l.texShape=[a,r];const u=Ef(n),c=new E$(u,!1,i),d=this.runWebGLProgram(c,[o],s,[[a,r]]);return d.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(o),d.dataId}write(e,n,s){if((M().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||M().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:n,dtype:s,values:e,usage:ks.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,s,a,r){if(M().getBool("DEBUG")&&this.checkNumericalProblems(n),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:a,values:n,usage:ks.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:o,isPacked:l}=n;if(i!=null){let h;l?h=new ii(o,Qr):h=new Ua(o,Qr);const p=this.runWebGLProgram(h,[{dataId:e,shape:o,dtype:a}],a),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=Gn());let d;if(a==="complex64"){const h=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);d=ka(h,p)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Gn()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const n=this.texData.get(e),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:o,isPacked:l}=n;if(r!=null){let f;l?f=new ii(a,Qr):f=new Ua(a,Qr);const m=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:i}],i),y=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(M().getBool("DEBUG")&&!M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&M().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&M().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...kf(a))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){const f=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),m=f[0],y=f[1];d=ka(m,y)}else if(u==null)d=this.getValuesFromTexture(e);else{const f=L(a);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;ue(f,()=>f.deleteBuffer(u))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Wn().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,n={}){const s=this.texData.get(e),{values:a,shape:r,slice:i,dtype:o,isPacked:l,texture:u}=s;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new ii(r,Qr):p=new Ua(r,Qr);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:o}],o),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),d=Wn().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(a=>$a(a));return ke(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const s=e[n];if(!YZ(s))throw M().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:s,isPacked:a}=this.texData.get(e),r=L(n);if(M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...kf(n)).subarray(0,r);return this.disposeIntermediateTensorInfo(h),f}const i=M().getBool("WEBGL_PACK")&&a===!0,o=i?Ef(n):n,l=i?new hee(o):new dee(o),u=this.runWebGLProgram(l,[{shape:o,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=Or(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=Or(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);o.kernelMs=lT(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Gn(),endMs:null}}endTimer(e){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Gn(),e)}async getQueryTime(e){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:s,texShape:a,usage:r,isPacked:i,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(n,a,r,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=Hte){return M().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&L(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){Ns("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return Vte(e.shape,n)}packedUnaryOp(e,n,s){const a=new ii(e.shape,n),r=this.compileAndRun(a,[e],s);return Wn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const a=z_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(M().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_$,e.dtype);const n=new Ua(e.shape,_$),s=this.compileAndRun(n,[e]);return Wn().makeTensorFromTensorInfo(s)}makeTensorInfo(e,n,s){let a;if(n==="string"&&s!=null&&s.length>0&&Au(s[0])){const r=s.map(i=>kr(i));a=this.write(r,e,n)}else a=this.write(s,e,n);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:n}}makeOutput(e,n,s){return Wn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,s),this)}unpackTensor(e){const n=new Bte(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new $te(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)}packedReshape(e,n){const s=[vu(e.shape),...Su(e.shape)],a={dtype:e.dtype,shape:s,dataId:e.dataId},r=[vu(n),...Su(n)],i=new M_(r,s),o=!0,l=[s],u=this.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(e,n){const s=this.texData.get(e),{isPacked:a,shape:r,dtype:i}=s;if(n!=null){const h=L(r),p=n[0]*n[1]*4;N(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=Ef(r);let l;a?l=new cee(o):l=new uee(o);const u=!0,c=[n??kf(o)],d=this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:e}],i,c,u,n);return{dtype:i,shape:r,dataId:d.dataId}}runWebGLProgram(e,n,s,a,r=!1,i){const o=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===ch.DENSE){const g=i??kf(e.outputShape);l.texShape=g.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),L(o.shape)===0)return l.values=nn(o.dtype,0),o;const u=[],c=n.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(g.dataId);if(b.texture==null){if(!e.packedInputs&&L(g.shape)<=M().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!b.isPacked!=!!e.packedInputs)g=b.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),b=this.texData.get(g.dataId);else if(b.isPacked&&!Zm(b.shape,g.shape)){const x=g,w=g.shape;g.shape=b.shape,g=this.packedReshape(g,w),u.push(g),b=this.texData.get(g.dataId),x.shape=w}return{shape:g.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);const d={shape:o.shape,texData:l,isUniform:!1},h=lee(e,c,d),p=this.getAndSaveBinary(h,()=>iee(this.gpgpu,e,c,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),M().get("ENGINE_COMPILE_ONLY")||oee(this.gpgpu,p,c,d,a),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=M().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const g=Gn();g-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!M().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,n,s,a,r=!1){return s=s||n[0].dtype,this.runWebGLProgram(e,n,s,a,r)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(M().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=U(()=>{if(!M().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=M().getBool("DEBUG");M().set("DEBUG",!1);const n=this.abs(we(1e-8)).dataSync()[0];if(M().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Ute:Wte}uploadToGPU(e){const n=this.texData.get(e),{shape:s,dtype:a,values:r,texture:i,usage:o,isPacked:l}=n;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Gn());let d=n.texShape;if(d==null&&(d=fJ(s,l),n.texShape=d),r!=null){const h=Ef(s);let p,f=d[1],m=d[0];const y=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!y)&&([f,m]=Fc(d[0],d[1])),l?p=new fee(h,y):p=new E$(h,y);const g=y?[m,f]:d,b=this.makeTensorInfo(g,a),x=this.texData.get(b.dataId);y?x.usage=ks.PIXELS:x.usage=ks.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,r);const w=[[m,f]],C=this.runWebGLProgram(p,[b],a,w,!0),$=this.texData.get(C.dataId);n.texShape=$.texShape,n.isPacked=$.isPacked,n.usage=$.usage,M().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(n.texture=$.texture,n.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=Gn()-c)}else{const h=this.acquireTexture(d,o,a,l);n.texture=h}}convertAndCacheOnCPU(e,n){const s=this.texData.get(e),{dtype:a}=s;return n!=null&&(s.values=Xte(n,a)),s.values}acquireTexture(e,n,s,a){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,a)}computeBytes(e,n){return e[0]*e[1]*km(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(n),a(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await CR(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?($_(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:l}=E_(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=s,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,n,s){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:i,channels:o}=e,l=Wn().backend;if(!l.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(a,n,s,r,i,o);return Wn().makeTensorFromDataId(u,n,s,l)}}Ib.nextDataId=0;function Xte(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<n.length;++s)n[s]=Math.round(t[s]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */DT()&&Kw("webgl",()=>new Ib,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let Vo=class{constructor(e,n,s){this.variableNames=["A","B"],this.outputShape=Se(n,s),this.enableShapeUniforms=An(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cl=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Bc{constructor(e,n,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Se(n,s);const r=this.outputShape.length;this.enableShapeUniforms=An(r);let i="";if(a)if(r===0||L(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${et(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=zn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Kte={kernelName:ec,backendName:"webgl",kernelFunc:ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(t){const{inputs:e,backend:n}=t,{real:s,imag:a}=e,r=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(r.dataId),o=ms({inputs:{x:s},backend:n}),l=ms({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const Yte={kernelName:Rg,backendName:"webgl",kernelFunc:Gi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_="return (a < 0.) ? b * a : a;",V_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Qte(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{alpha:r}=s,i=n.makeTensorInfo([],"float32",Fi(r,"float32")),o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bc(V_,a.shape,i.shape):new Vo(B_,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}const Zte={kernelName:Kh,backendName:"webgl",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_="return (a < 0.) ? b * a : a;",W_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Jte(t){const{inputs:e,backend:n}=t,{x:s,alpha:a}=e,r=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bc(W_,s.shape,a.shape):new Vo(U_,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],"float32")}const ene={kernelName:fp,backendName:"webgl",kernelFunc:Jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vc="if (isnan(x)) return x;";function He({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,o=r,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){const d=o.texData.get(i.dataId),h=n(d.values,l);return o.makeTensorInfo(i.shape,l,h)}const u=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new ii(i.shape,e):c=new Ua(i.shape,t),o.runWebGLProgram(c,[i],l)}}function Nn({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[y,g]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{const[w,v]=x,C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},$={dataId:v.dataId,dtype:v.dtype,shape:u.shape},k=new Vo(t,l.shape,u.shape);return c.runWebGLProgram(k,[C,$],pn(w.dtype,v.dtype))}),b=Gi({inputs:{real:y,imag:g},backend:c});return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(g),b}const d=r||pn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&a!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,y=l.dtype==="string"?Ia(f):f,g=l.dtype==="string"?Ia(m):m,[b,x]=a(l.shape,u.shape,y,g,d),w=c.makeTensorInfo(x,d),v=c.texData.get(w.dataId);return v.values=b,w}const h=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new Bc(e,l.shape,u.shape,n):p=new Vo(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],d)}}function dh(t,e=!1){if(t==="linear")return e?Fte:Rte;if(t==="relu")return e?Lte:Ate;if(t==="elu")return e?zte:Dte;if(t==="relu6")return e?Pte:_te;if(t==="prelu")return e?W_:U_;if(t==="leakyrelu")return e?V_:B_;if(t==="sigmoid")return e?Mte:Ote;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let G_=class{constructor(e,n,s,a=!1,r=!1,i=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=An(this.outputShape.length);const c=a?e[1]:e[2],d=Math.ceil(c/2),h=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",g="";o&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:y=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",w="rc.x";e[0]<n[0]?x=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(w=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${x};
        int batchB = ${w};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O$={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let F$=class{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Se(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z$="return a * b;";function DS(t){const{inputs:e,backend:n}=t,{a:s,b:a}=e,r=pn(s.dtype,a.dtype);if(s.dtype==="complex64"){const o=n.texData.get(s.dataId),l=n.texData.get(a.dataId),u=new F$(O$.REAL,s.shape,a.shape),c=new F$(O$.IMAG,s.shape,a.shape),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=Gi({inputs:{real:h,imag:p},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,a])){const o=n.texData.get(s.dataId),l=n.texData.get(a.dataId),[u,c]=Jee(s.shape,a.shape,o.values,l.values,r),d=n.makeTensorInfo(c,r),h=n.texData.get(d.dataId);return h.values=u,d}let i;return M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Bc(z$,s.shape,a.shape):i=new Vo(z$,s.shape,a.shape),n.runWebGLProgram(i,[s,a],r)}const tne={kernelName:uc,backendName:"webgl",kernelFunc:DS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(t,e,n){const s=[vu(t.shape),...Su(t.shape)],a={dtype:t.dtype,shape:s,dataId:t.dataId},r=[vu(e),...Su(e)],i=new M_(r,s),o=!0,l=[s],u=n.runWebGLProgram(i,[a],t.dtype,l,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{shape:r}=s,i=n,o=L(a.shape),l=Ow(r,o),u=L(l);N(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(a.dataId);return c.isPacked&&!Zm(a.shape,l)&&!(c.texture!==null&&Zm(c.shape,l))?nne(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}const sne={kernelName:gp,backendName:"webgl",kernelFunc:ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L${constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];const o=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(n!=null){const d=1/n;u=`sumValue += dot(values * ${du(d)?d.toPrecision(2):d}, ones);`}let c="";r%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ane=class{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let o="0.0",l="";n==="prod"?o="1.0":n==="min"?(o="1.0 / 1e-20",l="min"):n==="max"&&(o="-1.0 / 1e-20",l="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,d=s%4;let h=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(o="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(o="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rne(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],s=Qy(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}function dl(t,e,n,s){const a=rne(t.shape);let r=t;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:l,outSize:u}=a[i];let c,d;n==="mean"?c=i===0?new L$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new L$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):c=new ane({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),d=r,r=s.runWebGLProgram(c,[r],e),d.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(d)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ine=class{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[n[i]];this.outputShape=s,this.rank=s.length;const a=et(this.rank),r=one(n);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function one(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let a=0;a<t.length;a++)s[t[a]]=n[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lne{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=et(this.rank),r=P_("rc",this.rank),i=new Array(this.rank);for(let c=0;c<n.length;c++)i[n[c]]=r[c];const o=`vec2(${i.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tb(t,e,n){const s=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lne(t.shape,e):new ine(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function une(t,e,n,s){const a=e,r=t.shape.length,i=Ie(a,t.shape);let o=i;const l=tt(o,r),u=l!=null;let c=t;u&&(c=Tb(t,l,s),o=ht(o.length,r)),jt("sum",o,r);const[d,h]=Vt(c.shape,o);let p=d;n&&(p=zt(d,i));const f=L(h),y=L(t.shape)/f,g=ie({inputs:{x:c},attrs:{shape:[y,f]},backend:s}),b=vy(t.dtype),x=dl(g,b,"sum",s),w=ie({inputs:{x},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(x),u&&s.disposeIntermediateTensorInfo(c),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return une(a,r,i,n)}const cne={kernelName:Sp,backendName:"webgl",kernelFunc:Eb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{perm:r}=s,i=n,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[r[c]];let u;if(i.shouldExecuteOnCPU([a])){const d=i.texData.get(a.dataId).values,h=ES(d,a.shape,a.dtype,r,l);u=i.makeTensorInfo(l,a.dtype);const p=i.texData.get(u.dataId);p.values=h}else u=Tb(a,r,i);return u}const dne={kernelName:xo,backendName:"webgl",kernelFunc:Bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_=1e3;function Jm({a:t,b:e,transposeA:n,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,d=n?t.shape[u-2]:t.shape[u-1],h=s?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=L(m),b=L(y),w=Se(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);N(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[g,d,p]:[g,p,d],C=s?[b,f,h]:[b,h,f],$=ie({inputs:{x:t},backend:a,attrs:{shape:v}}),k=ie({inputs:{x:e},backend:a,attrs:{shape:C}}),T=[$,k],E=Math.max(g,b),O=n?$.shape[1]:$.shape[2],B=r!=null,W=i!=null,V=l==="leakyrelu",G=l!=null?dh(l,!0):null,D=B||W||V||G!=null;let H;if((p===1||f===1)&&O>H_&&D===!1){let j=$,X=k;n&&(j=Bn({inputs:{x:$},backend:a,attrs:{perm:[0,2,1]}}),T.push(j)),s&&(X=Bn({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),T.push(X));const Q=f!==1,ee=f===1;let J=j;Q&&(J=ie({inputs:{x:j},backend:a,attrs:{shape:[E,O,1]}}),T.push(J));const se=f===1?2:1;let te=X;ee&&(te=ie({inputs:{x:X},backend:a,attrs:{shape:[E,1,O]}}),T.push(te));const he=DS({inputs:{a:J,b:te},backend:a});H=Eb({inputs:{x:he},backend:a,attrs:{axis:se,keepDims:!0}}),T.push(he)}else{const j=pn(t.dtype,e.dtype),X=new G_(v,C,[E,p,f],n,s,B,G,W,V),Q=[$,k];if(r!=null&&Q.push(r),W&&Q.push(i),V){const ee=a.makeTensorInfo([],"float32",Fi(o,"float32"));Q.push(ee),T.push(ee)}H=a.runWebGLProgram(X,Q,j)}const P=ie({inputs:{x:H},backend:a,attrs:{shape:w}});T.push(H);for(const j of T)a.disposeIntermediateTensorInfo(j);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hne(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;return Jm({a,b:r,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}const pne={kernelName:Yd,backendName:"webgl",kernelFunc:hne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P$="return abs(x);";function fne(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=n.texData.get(s.dataId),i=z_(r.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let a;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ii(s.shape,P$):a=new Ua(s.shape,P$),n.runWebGLProgram(a,[s],s.dtype)}const mne={kernelName:Th,backendName:"webgl",kernelFunc:fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gne=pa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yne=He({opSnippet:gne}),bne={kernelName:Ou,backendName:"webgl",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xne=pa+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,wne=He({opSnippet:xne}),vne={kernelName:Fu,backendName:"webgl",kernelFunc:wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M$="return a + b;",Sne=Nn({opSnippet:M$,packedOpSnippet:M$,supportsComplex:!0,cpuKernelImpl:Aee}),Cne={kernelName:Yo,backendName:"webgl",kernelFunc:Sne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ne{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nne=class{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yf(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return ms({inputs:{x:s[0]},backend:n});if(s.length>M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Yf({inputs:s.slice(0,l),backend:n}),c=Yf({inputs:s.slice(l),backend:n});return Yf({inputs:[u,c],backend:n})}const a=s.map(l=>l.dtype).reduce((l,u)=>pn(l,u)),r=s.map(l=>l.shape),o=M().getBool("WEBGL_PACK")?new Nne(s[0].shape,r):new $ne(s[0].shape,r);return n.runWebGLProgram(o,s,a)}const kne={kernelName:Eh,backendName:"webgl",kernelFunc:Yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ine(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o);let d=a;c!=null&&(d=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),u=ht(u.length,o)),jt("all",u,o);const[h,p]=Vt(d.shape,u),f=L(p),m=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),y=dl(m,m.dtype,"all",n);let g;if(i){const b=zt(h,l);g=ie({inputs:{x:y},backend:n,attrs:{shape:b}})}else g=ie({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(d),g}const Tne={kernelName:Cg,backendName:"webgl",kernelFunc:Ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o);let d=a;c!=null&&(d=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),u=ht(u.length,o)),jt("any",u,o);const[h,p]=Vt(d.shape,u),f=L(p),m=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),y=dl(m,m.dtype,"any",n);let g;if(i){const b=zt(h,l);g=ie({inputs:{x:y},backend:n,attrs:{shape:b}})}else g=ie({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(d),g}const Rne={kernelName:$g,backendName:"webgl",kernelFunc:Ene};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dne=class{constructor(e,n,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const o=n==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ane{constructor(e,n,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],i=Math.ceil(r/n);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=et(l),c=zn("coords",l);let d,h;if(i===1){h=l+1;const k=et(h);d=`
        ${k} sourceLocR = ${k}(${c.join()}, 0);
        ++${c[l-1]};
        ${k} sourceLocG = ${k}(${c.join()}, 0);
        ++${c[l-2]};
        ${k} sourceLocA = ${k}(${c.join()}, 0);
        --${c[l-1]};
        ${k} sourceLocB = ${k}(${c.join()}, 0);
        --${c[l-2]};`}else h=l,d=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(k=>"int "+k),y=zn("sourceLocR",h-1).concat("inIdx.r"),g=zn("sourceLocG",h-1).concat("inIdx.g"),b=zn("sourceLocB",h-1).concat("inIdx.b"),x=zn("sourceLocA",h-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",v=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()})));`,C=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,$=a?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(t,e,n,s=null){let a=e.shape[0],r=e.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=Qy(r),o={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},l=new Dne(o,n,s==null),u=[e];s!=null&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const d=j_(t,e,n,c);return t.disposeIntermediateTensorInfo(c),d}function q_(t,e,n,s=null){const a=s!=null?s.shape:e.shape,r=a[a.length-1],i=Qy(r),o=new Ane(a,i,n,s==null),l=s==null?[e]:[e,s],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===e.shape.length){const c=q_(t,e,n,u);return t.disposeIntermediateTensorInfo(u),c}return u}function X_(t,e,n,s){const a=[n];if(jt("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,e.shape.length),!M().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],i=t.texData.get(e.dataId),o=i!==null&&i.isPacked;let l=e;o&&(l=t.unpackTensor(e),r.push(l));const[u,c]=Vt(l.shape,a),d=L(c),h=ie({inputs:{x:l},backend:t,attrs:{shape:[-1,d]}});r.push(h);const p=j_(t,h,s);r.push(p);const f=ie({inputs:{x:p},backend:t,attrs:{shape:u}});return r.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}return q_(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=Bn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ht(i.length,l.shape.length)),jt("argMax",[i[0]],l.shape.length);const c=X_(n,l,i[0],"max");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),c}const One={kernelName:Rh,backendName:"webgl",kernelFunc:_ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=Bn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ht(i.length,l.shape.length)),jt("argMin",[i[0]],l.shape.length);const c=X_(n,l,i[0],"min");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),c}const zne={kernelName:Dh,backendName:"webgl",kernelFunc:Fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lne=pa+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Pne=He({opSnippet:Lne}),Mne={kernelName:zu,backendName:"webgl",kernelFunc:Pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bne=pa+"return log(x + sqrt(x * x + 1.0));",Vne=He({opSnippet:Bne}),Une={kernelName:Lu,backendName:"webgl",kernelFunc:Vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wne=pa+`
  return atan(x);
`,Gne=He({opSnippet:Wne}),Hne={kernelName:Pu,backendName:"webgl",kernelFunc:Gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jne=RS+`
  return atan(a, b);
`,qne=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cl+`
  return result;
`,Xne=Nn({opSnippet:jne,packedOpSnippet:qne}),Kne={kernelName:Bu,backendName:"webgl",kernelFunc:Xne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yne=pa+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Qne=He({opSnippet:Yne}),Zne={kernelName:Mu,backendName:"webgl",kernelFunc:Qne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hh=class{constructor(e,n,s,a=!1,r=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${k} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?y:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const x="max";let w=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(w="avgValue / max(count, 1.0)");const v=Math.floor(i/4)*4,C=i%4,$=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${v};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${w});
      }
    `}},AS=class{constructor(e,n,s,a=!1,r=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,o=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,y=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x=n==="avg";let w="0.0";if(x||(w="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${u});
        const ivec3 pads = ivec3(${y}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let C=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(C="avgValue / max(count, 1.0)");const $=Math.floor(i/4)*4,k=i%4,T=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${u});
      const ivec3 pads = ivec3(${y}, ${g}, ${b});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${$};
            if (${k===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${k===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${k===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${C});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jne(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;Kp(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(an(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))return ms({inputs:{x:a},backend:n});const d=new hh(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}const ese={kernelName:Ah,backendName:"webgl",kernelFunc:Jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],d=Os(a.shape,r,i,c,o,l,u),h=new AS(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}const nse={kernelName:_h,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sse=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},ase=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=h-1-e.padInfo.top,y=p-1-e.padInfo.left,g=1/(n*s*a);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${y});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rse(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Os(i.shape,o,l,d,u,c),p=new ase(h);return n.runWebGLProgram(p,[a],i.dtype)}const ise={kernelName:kg,backendName:"webgl",kernelFunc:rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ose(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r;Kp([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rn(i.shape,o,l,1,u),d=new sse(c);return n.runWebGLProgram(d,[a],i.dtype)}const lse={kernelName:Ng,backendName:"webgl",kernelFunc:ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function use(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r}=e,{transposeA:i,transposeB:o}=s;return Jm({a,b:r,transposeA:i,transposeB:o,backend:n})}const cse={kernelName:Oh,backendName:"webgl",kernelFunc:use};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dse=class{constructor(e,n,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Se(e,n),Se(e,s);let o="0.0";a!=null&&(Se(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";r!=null&&(Se(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hse{constructor(e,n,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Se(e,n),Se(e,s);let o="vec4(0.0)";a!=null&&(Se(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(Se(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pse=({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:a,variance:r,offset:i,scale:o}=t;N(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);const u=[s,a,r];let c=null;i!=null&&(c=i.shape,u.push(i));let d=null;o!=null&&(d=o.shape,u.push(o));const h=M().getBool("WEBGL_PACK_NORMALIZATION")?new hse(s.shape,a.shape,r.shape,c,d,l):new dse(s.shape,a.shape,r.shape,c,d,l);return e.runWebGLProgram(h,u,u[0].dtype)},fse={kernelName:jh,backendName:"webgl",kernelFunc:pse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mse=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=et(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=gse(this.rank);let a;const r=e.map((i,o)=>`sourceLoc.${I1[o]} = start[${o}] + coords.${I1[o]};`);a=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}};const I1=["x","y","z","w","u","v"];function gse(t){if(t===1)return"sourceLoc";if(t<=6)return I1.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yse{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=et(this.rank),s=zn("coords",this.rank),a=zn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,o=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,d)=>`start[${d}]`).join()});`:e.map((c,d)=>`${a[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bse(t,e,n,s){const a=s.texData.get(t.dataId),r=s.makeTensorInfo(n,t.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=t.dtype;let o=Wv(e,be(t.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),r}function Uc(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,size:i}=s,[o,l]=zp(a,r,i);if(qy(a,o,l),L(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){const d=n.texData.get(a.dataId),h=cte(d.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,h)}const{isPacked:u}=n.texData.get(a.dataId),c=Uv(a.shape,o,l);if(u||!c){const d=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yse(l):new mse(l),h=[o];return n.runWebGLProgram(d,[a],a.dtype,h)}return n.uploadToGPU(a.dataId),bse(a,o,l,n)}const xse={kernelName:vp,backendName:"webgl",kernelFunc:Uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wse=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,crops:i}=s;N(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((b,x)=>b*x),l=sl(a.shape,r,o),u=al(l.length,r.length),c=rl(a.shape,r,o),d=Jy(i,r.length),h=eb(c,i,r.length),p=[],f=ie({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Bn({inputs:{x:f},backend:n,attrs:{perm:u}}),y=ie({inputs:{x:m},backend:n,attrs:{shape:c}}),g=Uc({inputs:{x:y},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(y),p.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},vse={kernelName:Fh,backendName:"webgl",kernelFunc:wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i}=s,o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=F_(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}const Cse={kernelName:Ig,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $se=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Nse=`
  return float(int(a.r) & int(b.r));
`;function kse(t){const{inputs:e,backend:n}=t,{a:s,b:a}=e,r=M().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=M().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,a])||i===1){const l=n.texData.get(s.dataId).values,u=n.texData.get(a.dataId).values,[c,d]=Oee(s.shape,a.shape,l,u,s.dtype),h=n.makeTensorInfo(d,s.dtype),p=n.texData.get(h.dataId);return p.values=c,h}let o;return r?o=new Bc($se,s.shape,a.shape,!1):o=new Vo(Nse,s.shape,a.shape),n.runWebGLProgram(o,[s,a],s.dtype)}const Ise={kernelName:Tg,backendName:"webgl",kernelFunc:kse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tse(t){const{inputs:e,backend:n}=t,{s0:s,s1:a}=e,r=n.readSync(s.dataId),i=n.readSync(a.dataId),o=Se(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const Ese={kernelName:Eg,backendName:"webgl",kernelFunc:Tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rse="return float(a != b);",K_=Nn({opSnippet:Rse,cpuKernelImpl:tte,dtype:"bool"}),Dse={kernelName:up,backendName:"webgl",kernelFunc:K_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.texData.get(s.dataId);return ms({inputs:{x:a.complexTensorInfos.real},backend:n})}const Ase={kernelName:ay,backendName:"webgl",kernelFunc:Qp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _se="return float(int(x));";function Ose(t,e){const n=new Ua(t.shape,_se),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return ms({inputs:{x:a},backend:n});const i=Ht(a.shape),o=T1({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=Gi({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){const i=Qp({inputs:{input:a},backend:n}),o=T1({inputs:{x:i},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(i),o}if(!Fw(a.dtype,r)){const i=ms({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(n.shouldExecuteOnCPU([a])){const i=n.texData.get(a.dataId).values,[o,l,u]=Fee(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}if(r==="int32")return Ose(a,n);if(r==="bool"){const i=n.makeTensorInfo([],"bool",nn("bool",1)),l=K_({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const Fse={kernelName:Vu,backendName:"webgl",kernelFunc:T1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B$="return ceil(x);",zse=He({opSnippet:B$,packedOpSnippet:B$,cpuKernelImpl:zee}),Lse={kernelName:Uu,backendName:"webgl",kernelFunc:zse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pse=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mse{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{clipValueMin:r,clipValueMax:i}=s;let o;M().getBool("WEBGL_PACK_CLIP")?o=new Mse(a.shape):o=new Pse(a.shape);const l=[[r],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}const Vse={kernelName:Wu,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Use=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function Wse(t){const{inputs:e,backend:n}=t,{x:s}=e,a=n.texData.get(s.dataId),r=new Use(s.shape),i=[V$(s,a.complexTensorInfos.real),V$(s,a.complexTensorInfos.imag)];return n.runWebGLProgram(r,i,i[0].dtype)}const Gse={kernelName:zh,backendName:"webgl",kernelFunc:Wse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hse=class{constructor(e){this.outputShape=[],this.outputShape=Qn(e,1),this.variableNames=e.map((i,o)=>`T${o}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+e[i][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const o=n[i-1];s.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${o}));`)}const a=n.length,r=n[n.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jse{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Qn(e,n);const s=this.outputShape,a=s.length,r=et(a),i=zn("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((m,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][n];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][n];const u=o[n],c=o.slice(-2),d=o.join();let h=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const y=l[m-1];h+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Af(o,u,y)}),
            vec2(${Af(c,u,y)}));
        }`}const p=l.length,f=l[l.length-1];h+=`
        return getChannel(
          getT${p}(${Af(o,u,f)}),
          vec2(${Af(c,u,f)}));`,this.userCode=`
      float getValue(${o.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Af(t,e,n){const s=t.indexOf(e);return t.map((r,i)=>i===s?`${r} - ${n}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.texData.get(s.dataId);return ms({inputs:{x:a.complexTensorInfos.imag},backend:n})}const qse={kernelName:Xg,backendName:"webgl",kernelFunc:Rb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(t,e,n){const s=t[0].dtype;if(s==="complex64"){const p=t.map(b=>Qp({inputs:{input:b},backend:n})),f=t.map(b=>Rb({inputs:{input:b},backend:n})),m=fd(p,e,n),y=fd(f,e,n),g=Gi({inputs:{real:m,imag:y},backend:n});return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),f.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),g}let a=n.shouldExecuteOnCPU(t);if(s==="string"&&(a=!0),a){const p=t.map(w=>{const C=[-1,L(w.shape.slice(e))];return ie({inputs:{x:w},backend:n,attrs:{shape:C}})}),f=p.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),m=Qn(p.map(w=>w.shape),1),y=p[0].shape[0]===1,g=Lee(f,m,s,y),b=Qn(t.map(w=>w.shape),e),x=n.makeTensorInfo(b,s,g);return p.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}const r=t.filter(p=>L(p.shape)>0),i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=i?new Ua(t[0].shape,Qr):new ii(t[0].shape,Qr);return n.runWebGLProgram(p,t,s)}const o=M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>o){const p=[];for(let m=0;m<r.length;m+=o){const y=r.slice(m,m+o);p.push(fd(y,e,n))}const f=fd(p,e,n);for(const m of p)n.disposeIntermediateTensorInfo(m);return f}if(i){const p=new jse(r.map(f=>f.shape),e);return n.runWebGLProgram(p,r,s)}const{tensors2D:l,outShape:u}=Xse(r,e,n),c=new Hse(l.map(p=>p.shape)),d=n.runWebGLProgram(c,l,s);l.forEach(p=>n.disposeIntermediateTensorInfo(p));const h=ie({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),h}function Xse(t,e,n){const s=Qn(t.map(r=>r.shape),e);return{tensors2D:t.map(r=>ie({inputs:{x:r},attrs:{shape:[-1,L(r.shape.slice(e))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,r=Ie(a,e[0].shape)[0],i=e.map(u=>u.shape);Yy(i,r);const o=Qn(e.map(u=>u.shape),r);if(L(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>L(u.shape)>0);return l.length===1?ms({inputs:{x:l[0]},backend:n}):fd(l,r,n)}const Kse={kernelName:Lh,backendName:"webgl",kernelFunc:Y_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q_{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,y=e.dataFormat==="channelsLast",g=y?1:2,b=y?2:3,x=y?3:1;let w="",v="";s&&(a?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const C=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${v}
        setOutput(result);
      }
    `}}class Yse{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,s=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${o});
      const ivec3 pads = ivec3(${n}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z_{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=An(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)h+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<c;y++)h+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(d+1)/2;y++){const g=y*2;if(h+=`
           xC = xCCorner + ${g*l};
           `,o===1){if(g<c&&(i%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,l===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const b=i%2===0?_w(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,l>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):b===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(i%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(a?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qse{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=An(this.outputShape.length);const{dataFormat:s}=n,a=Un(),r=s==="channelsLast",i=r?1:2,o=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eg(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function J_({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1;let y;const g=[];if(r!=null){const w=eg(r.shape,p);w!=null&&(r=ie({inputs:{x:r},backend:s,attrs:{shape:w}}),g.push(r))}if(a!=null){const w=eg(a.shape,p);w!=null&&(a=ie({inputs:{x:a},backend:s,attrs:{shape:w}}),g.push(a))}if(!((d===1||h===1)&&c>H_)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&Ee(u.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),v={dataId:t.dataId,shape:[1,w,n.inChannels],dtype:t.dtype},C=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,N(Zm(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);const $=ie({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push($);const k=Jm({a:v,b:$,backend:s,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),T=s.texData.get(k.dataId);N(T.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=C,T.shape=n.outShape,y=ms({inputs:{x:k},backend:s}),y.shape=n.outShape,g.push(k)}else{const w=n.outHeight*n.outWidth,v=ie({inputs:{x:t},backend:s,attrs:{shape:p?[n.batchSize,w,n.inChannels]:[n.batchSize,n.inChannels,w]}}),C=ie({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),$=Jm({a:p?v:C,b:p?C:v,transposeA:!p,transposeB:m,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i});y=ie({inputs:{x:$},backend:s,attrs:{shape:n.outShape}}),g.push(v),g.push(C),g.push($)}for(const w of g)s.disposeIntermediateTensorInfo(w);return y}function eO({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=n,f=p==="channelsLast",m=l*u*c,y=h*d,g=[n.batchSize,m,y],b=!0,x=!1,w=[];if(r!=null){const P=eg(r.shape,f);P!=null&&(r=ie({inputs:{x:r},backend:s,attrs:{shape:P}}),w.push(r))}if(a!=null){const P=eg(a.shape,f);P!=null&&(a=ie({inputs:{x:a},backend:s,attrs:{shape:P}}),w.push(a))}const v=ie({inputs:{x:e},backend:s,attrs:{shape:[1,m,L(e.shape)/m]}});w.push(v);const C=new Qse(g,n),$=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(C,[t],"float32",$),T=ie({inputs:{x:k},backend:s,attrs:{shape:g}});w.push(k),w.push(T);const E=a!=null,O=r!=null,B=o==="leakyrelu",W=o?dh(o,!0):null,V=new G_(f?T.shape:v.shape,f?v.shape:T.shape,f?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],b,x,E,W,O,B),G=f?[T,v]:[v,T];if(a&&G.push(a),O&&G.push(r),B){const P=s.makeTensorInfo([],"float32",Fi(i,"float32"));G.push(P),w.push(P)}const D=s.runWebGLProgram(V,G,"float32"),H=ie({inputs:{x:D},backend:s,attrs:{shape:n.outShape}});w.push(D);for(const P of w)s.disposeIntermediateTensorInfo(P);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zse(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,d=xs(l),h=dt(a.shape,r.shape,i,u,o,c,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=J_({x:a,filter:r,convInfo:h,backend:n});else if(h.strideWidth<=2&&d==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const m=new Z_(h),y=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=n.runWebGLProgram(m,[a,r],"float32",y)}else if(M().getBool("WEBGL_CONV_IM2COL"))p=eO({x:a,filter:r,convInfo:h,backend:n});else{const m=new Q_(h);p=n.runWebGLProgram(m,[a,r],"float32")}const f=ie({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}const Jse={kernelName:Ph,backendName:"webgl",kernelFunc:Zse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let eae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},tae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dataFormat==="channelsLast",o=n-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,d=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},nae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,s=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},sae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=n-1-e.padInfo.front,u=s-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,d=xs(l),h=dt(a.shape,c,i,1,o,u,!1,d),p=new eae(h);return n.runWebGLProgram(p,[a,r],"float32")}const rae={kernelName:Dg,backendName:"webgl",kernelFunc:aae};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iae{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=An(this.outputShape.length);const n=e.filterHeight,s=e.filterWidth,a=n-1-e.padInfo.top,r=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oae(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,d=xs(u),h=dt(i,r.shape,o,1,l,c,!1,d);if(M().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],f=new iae(h);return n.runWebGLProgram(f,[a,r],"float32",p)}else{const p=new tae(h);return n.runWebGLProgram(p,[a,r],"float32")}}const lae={kernelName:Mh,backendName:"webgl",kernelFunc:oae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Oa(a.shape,r.shape,i,l,o),c=new Yse(u);return n.runWebGLProgram(c,[a,r],"float32")}const cae={kernelName:Bh,backendName:"webgl",kernelFunc:uae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s,u=Oa(a.shape,l,i,1,o),c=new nae(u);return n.runWebGLProgram(c,[a,r],"float32")}const hae={kernelName:Ag,backendName:"webgl",kernelFunc:dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pae(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{pad:i,strides:o,inputShape:l}=s,u=Oa(l,r.shape,o,1,i),c=new sae(u);return n.runWebGLProgram(c,[a,r],"float32")}const fae={kernelName:_g,backendName:"webgl",kernelFunc:pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mae=Vc+`
  return cos(x);
`,gae=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${cl}
  return result;
`,yae=He({opSnippet:mae,packedOpSnippet:gae}),bae={kernelName:Gu,backendName:"webgl",kernelFunc:yae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xae=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,wae=He({opSnippet:xae}),vae={kernelName:Hu,backendName:"webgl",kernelFunc:wae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sae=class{constructor(e,n,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,l,u]=e,[c]=n,[d,h]=s;this.outputShape=[c,d,h,u];const p=a==="bilinear"?1:0,[f,m]=[`${o-1}.0`,`${l-1}.0`],[y,g,b]=d>1?[`${(o-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,w,v]=h>1?[`${(l-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${w};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cae=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new Sae(a.shape,r.shape,o,l,u);return n.runWebGLProgram(c,[a,r,i],"float32")},$ae={kernelName:Fg,backendName:"webgl",kernelFunc:Cae};var ph;(function(t){t.Prod="*",t.Sum="+"})(ph||(ph={}));let U$=class{constructor(e,n,s,a){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===ph.Prod?"1.0":"0.0",o=s?i:`getX(${W$(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=a?`end != ${l-1}`:"end != 0",c=a?"end + 1":"end - 1"):(u=a?`end + pow2 < ${l}`:"end >= pow2",c=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${et(r)} coords = getOutputCoords();
        int end = ${G$(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${G$(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${W$(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function W$(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function G$(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(t,e,n,s,a,r){const i=e.shape.length,o=tt([s],i);let l=e;o!=null&&(l=Bn({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=ht(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let d=ms({inputs:{x:l},backend:n});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new U$(t,l.shape,!1,r),f=[[h]],m=d;d=n.runWebGLProgram(p,[d],d.dtype,f),n.disposeIntermediateTensorInfo(m)}if(a){const h=new U$(t,l.shape,a,r),p=d;d=n.runWebGLProgram(h,[d],d.dtype),n.disposeIntermediateTensorInfo(p)}if(o!=null){const h=sr(o),p=Bn({inputs:{x:d},backend:n,attrs:{perm:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return tO(ph.Prod,a,n,r,i,o)}const kae={kernelName:Og,backendName:"webgl",kernelFunc:Nae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return tO(ph.Sum,a,n,r,i,o)}const Tae={kernelName:Vh,backendName:"webgl",kernelFunc:Iae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s;if(a.shape.length===1){const l=n.readSync(a.dataId),u=n.readSync(r.dataId),c=F_(l,u,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,c)}else if(a.shape.length===2){const l=n.bufferSync(a),u=n.bufferSync(r),c=_ee(l,u,i,o);return n.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const Rae={kernelName:zg,backendName:"webgl",kernelFunc:Eae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dae=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockSize:r,dataFormat:i}=s,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],c=i==="NHWC"?a.shape[3]:a.shape[1],d=l*r,h=u*r,p=c/(r*r),f=i==="NHWC"?[o,d,h,p]:[o,p,d,h],m=new Dae(f,r,i);return n.runWebGLProgram(m,[a],a.dtype)}const _ae={kernelName:Lg,backendName:"webgl",kernelFunc:Aae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nO=class{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=An(this.outputShape.length);const i=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(a?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const d=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${c}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sO{constructor(e,n=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=An(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<d;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){const b=g*2;if(p+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<d&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<d)){const x=o%2===0?_w(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):x===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<d&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<d&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<d&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<d&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(a?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),N(an(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=dt(a.shape,r.shape,i,c,o,u,!0);let h;M().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new sO(d):h=new nO(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,r],"float32",p)}const Fae={kernelName:Uh,backendName:"webgl",kernelFunc:Oae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Lae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=n-1-e.padInfo.top,o=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,d=dt(a.shape,c,i,o,l,u,!0),h=new zae(d);return n.runWebGLProgram(h,[a,r],"float32")}const Mae={kernelName:Pg,backendName:"webgl",kernelFunc:Pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bae(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,d=dt(c,r.shape,i,o,l,u,!0),h=new Lae(d);return n.runWebGLProgram(h,[a,r],"float32")}const Vae={kernelName:Mg,backendName:"webgl",kernelFunc:Bae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uae=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wae(t){const{inputs:e,backend:n}=t,{x:s}=e,a=[...s.shape,...s.shape],r=L(s.shape),i=ie({inputs:{x:s},backend:n,attrs:{shape:[r]}}),o=new Uae(r),l=n.runWebGLProgram(o,[i],i.dtype),u=ie({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}const Gae={kernelName:Bg,backendName:"webgl",kernelFunc:Wae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hae=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:o,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:d,left:h}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jae(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Pi(a.shape,r.shape,i,o,"NHWC",l);let c;const d=new Hae(u);c=n.runWebGLProgram(d,[a,r],"float32");const h=ie({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),h}const qae={kernelName:Wh,backendName:"webgl",kernelFunc:jae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xae(t){const{inputs:e,backend:n,attrs:s}=t,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=ob(a,r.length);ub(i.length,l,r);const{path:u,steps:c}=cb(o,l),d=c.length;let h=null,p=i.length;const f=[];for(let m=0;m<d;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:b}=lb(p,l[y]);let x;db(g)?x=r[y]:(x=Bn({inputs:{x:r[y]},backend:n,attrs:{perm:g}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);Ee(x.shape,w)||(x=ie({inputs:{x},backend:n,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=DS({inputs:{a:x,b:h},backend:n}),f.push(h))}m<d-1&&(u[m]>=0&&(h=Eb({inputs:{x:h},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}const Kae={kernelName:Vg,backendName:"webgl",kernelFunc:Xae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yae="return (x >= 0.0) ? x : (exp(x) - 1.0);",Qae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Zae=He({opSnippet:Yae,packedOpSnippet:Qae}),Jae={kernelName:qu,backendName:"webgl",kernelFunc:Zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ere="return (b >= 0.0) ? a : a * (b + 1.0);",tre=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,nre=t=>{const{inputs:e,backend:n}=t,{dy:s,y:a}=e,r=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bc(tre,s.shape,a.shape):new Vo(ere,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],s.dtype)},sre={kernelName:Ug,backendName:"webgl",kernelFunc:nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const are=`
  return vec4(equal(a, b));
`,rre="return float(a == b);",ire=Nn({opSnippet:rre,packedOpSnippet:are,dtype:"bool",cpuKernelImpl:Pee}),ore={kernelName:Gh,backendName:"webgl",kernelFunc:ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lre=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${tb};
  float a1 = ${nb};
  float a2 = ${sb};
  float a3 = ${ab};
  float a4 = ${rb};
  float a5 = ${ib};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,ure=He({opSnippet:lre}),cre={kernelName:Xu,backendName:"webgl",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dre=Vc+`
  return exp(x);
`,hre=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aO=He({opSnippet:dre,packedOpSnippet:hre,cpuKernelImpl:Mee,dtype:"float32"}),pre={kernelName:Ku,backendName:"webgl",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E1(t){const{inputs:e,attrs:n,backend:s}=t,{dim:a}=n,{input:r}=e,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(N(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),ie({inputs:{x:r},backend:s,attrs:{shape:o}})}const fre={kernelName:Hh,backendName:"webgl",kernelFunc:E1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$="return exp(x) - 1.0;",mre=He({opSnippet:H$,packedOpSnippet:H$,cpuKernelImpl:Bee}),gre={kernelName:Yu,backendName:"webgl",kernelFunc:mre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let j$=class{constructor(e,n,s){this.variableNames=["real","imag"];const a=n[1];this.outputShape=n;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(t,e,n){const s=n.texData.get(t.dataId),a=L(t.shape),r=t.shape[t.shape.length-1],i=a/r,o=ie({inputs:{x:t},backend:n,attrs:{shape:[i,r]}}),l=o.shape,u=new j$("real",l,e),c=new j$("imag",l,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=Gi({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=ie({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yre(t){const{inputs:e,backend:n}=t,{input:s}=e;return rO(s,!1,n)}const bre={kernelName:Wg,backendName:"webgl",kernelFunc:yre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xre=class{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(t){const{backend:e,attrs:n}=t,{shape:s,value:a}=n;let{dtype:r}=n;if(r=r||Ko(a),r==="string"){const i=Ot(r,L(s));return i.fill(a),e.makeTensorInfo(s,r,i)}else{const i=new xre(s,a),o=[[a]];return e.runWebGLProgram(i,[],r,o)}}const wre={kernelName:Gg,backendName:"webgl",kernelFunc:Zp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vre=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sre={kernelName:Hg,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,a=new vre(n.shape);return s.runWebGLProgram(a,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$="return floor(x);",Cre=He({opSnippet:q$,packedOpSnippet:q$,cpuKernelImpl:Vee}),$re={kernelName:Qu,backendName:"webgl",kernelFunc:Cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,kre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Ire=Nn({opSnippet:Nre,packedOpSnippet:kre,dtype:"int32"}),Tre={kernelName:Zu,backendName:"webgl",kernelFunc:Ire};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ere=class{constructor(e){this.variableNames=["A"];const n=Un(),[s,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rre{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Un(),[s,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre={kernelName:Em,backendName:"webgl",kernelFunc:Are};let xl,Px=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Are(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:a}=e;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[u,l],d=[u,l,r];if(o||i){const m=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(xl==null||m!==Px)&&(Px=m,xl=document.createElement("canvas").getContext("2d",{willReadFrequently:Px})),xl.canvas.width=l,xl.canvas.height=u,xl.drawImage(a,0,0,l,u),a=xl.canvas}const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=ks.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=M().getBool("WEBGL_PACK")?new Rre(d):new Ere(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _re(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=xs(c),y=dt(a.shape,r.shape,l,d,u,h,!1,m);let g;const b=[],x=i!=null,w=o!=null,v=p==="leakyrelu",C=()=>{const k=[a,r],T=(E,O)=>{if(O==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const B=ie({inputs:{x:E},backend:n,attrs:{shape:[E.shape[0],1,1]}});return b.push(B),B}return E};if(x&&k.push(T(i,c)),w&&k.push(T(o,c)),v){const E=n.makeTensorInfo([],"float32",Fi(f,"float32"));k.push(E),b.push(E)}return k};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))g=J_({x:a,filter:r,convInfo:y,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else if(y.strideWidth<=2&&m==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const k=p?dh(p,!0):null,T=new Z_(y,x,k,w,v),E=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],O=C();g=n.runWebGLProgram(T,O,"float32",E)}else if(M().getBool("WEBGL_CONV_IM2COL"))g=eO({x:a,filter:r,convInfo:y,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const k=p?dh(p,!1):null,T=new Q_(y,x,k,w,v),E=C();g=n.runWebGLProgram(T,E,"float32")}const $=ie({inputs:{x:g},backend:n,attrs:{shape:y.outShape}});return b.push(g),b.forEach(k=>n.disposeIntermediateTensorInfo(k)),$}const Ore={kernelName:Qd,backendName:"webgl",kernelFunc:_re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fre(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),N(an(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const y=dt(a.shape,r.shape,l,m,u,d,!0),g=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,b=h?dh(h,g):null,x=[a,r],w=i!=null,v=o!=null,C=h==="leakyrelu";if(w&&x.push(i),v&&x.push(o),C){const E=n.makeTensorInfo([],"float32",Fi(p,"float32"));x.push(E),f.push(E)}let $;g?$=new sO(y,w,b,v,C):$=new nO(y,w,b,v,C);const k=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram($,x,"float32",k);return f.forEach(E=>n.disposeIntermediateTensorInfo(E)),T}const zre={kernelName:Zd,backendName:"webgl",kernelFunc:Fre};let Lre=class{constructor(e,n,s,a){this.sliceDim=e,this.strides=n,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=et(s.length);let i=`
    int index;`;for(let o=0;o<this.sliceDim;o++)i+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pre(t){const{inputs:e,backend:n}=t,{params:s,indices:a}=e,r=a.shape,i=r[r.length-1],o=L(s.shape),[l,u,c,d]=jy(s,a),h=ie({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=ie({inputs:{x:s},backend:n,attrs:{shape:[L(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const g=n.readSync(a.dataId),b=n.bufferSync(s),x=Uee(g,b,s.dtype,u,i,c,d,s.shape,o);return n.makeTensorInfo(l,s.dtype,x.values)}const f=new Lre(i,d,[u,c],s.shape),m=n.runWebGLProgram(f,[p,h],p.dtype),y=ie({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),y}const Mre={kernelName:jg,backendName:"webgl",kernelFunc:Pre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bre=class{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=et(this.rank),a=Vre(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}};function Vre(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<t.length;a++)a===2?s.push("index"):s.push(`${n[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,indices:r}=e,{axis:i,batchDims:o}=s,l=Ie(i,a.shape)[0];if(M().get("DEBUG")){const b=n.readSync(r.dataId),x=a.shape[l];for(let w=0;w<b.length;++w){const v=b[w];N(v<=x-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${x-1}]`)}}const u=pb(a,r,l,o),c=L(r.shape),d=[],h=ie({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=ie({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const b=n.bufferSync(p),x=n.bufferSync(h),w=Wee(x,b,f);return d.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(u.outputShape,w.dtype,w.values)}const m=new Bre(h.shape,f),y=n.runWebGLProgram(m,[h,p],h.dtype);d.push(y);const g=ie({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return d.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}const Ure={kernelName:qh,backendName:"webgl",kernelFunc:iO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wre="return float(a > b);",Gre=`
  return vec4(greaterThan(a, b));
`,Hre=Nn({opSnippet:Wre,packedOpSnippet:Gre,cpuKernelImpl:Gee,dtype:"bool"}),jre={kernelName:Xh,backendName:"webgl",kernelFunc:Hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qre="return float(a >= b);",Xre=`
  return vec4(greaterThanEqual(a, b));
`,Kre=Nn({opSnippet:qre,packedOpSnippet:Xre,dtype:"bool",cpuKernelImpl:Hee}),Yre={kernelName:Ju,backendName:"webgl",kernelFunc:Kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qre(t){const{inputs:e,backend:n}=t,{input:s}=e;return rO(s,!0,n)}const Zre={kernelName:qg,backendName:"webgl",kernelFunc:Qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jre="return float(!isnan(x) && !isinf(x));",eie=He({opSnippet:Jre,dtype:"bool"}),tie={kernelName:tc,backendName:"webgl",kernelFunc:eie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nie="return float(isinf(x));",sie=He({opSnippet:nie,dtype:"bool"}),aie={kernelName:nc,backendName:"webgl",kernelFunc:sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rie="return float(isnan(x));",iie=He({opSnippet:rie,dtype:"bool"}),oie={kernelName:sc,backendName:"webgl",kernelFunc:iie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lie="return float(a < b);",uie=`
  return vec4(lessThan(a, b));
`,cie=Nn({opSnippet:lie,packedOpSnippet:uie,cpuKernelImpl:jee,dtype:"bool"}),die={kernelName:Yh,backendName:"webgl",kernelFunc:cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hie="return float(a <= b);",pie=`
  return vec4(lessThanEqual(a, b));
`,fie=Nn({opSnippet:hie,packedOpSnippet:pie,cpuKernelImpl:qee,dtype:"bool"}),mie={kernelName:Qh,backendName:"webgl",kernelFunc:fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gie(t){const{backend:e,attrs:n}=t,{start:s,stop:a,num:r}=n,i=Xee(s,a,r);return e.makeTensorInfo([i.length],"float32",i)}const yie={kernelName:Kg,backendName:"webgl",kernelFunc:gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bie=Vc+`
  return x < 0.0 ? 0./0. : log(x);
`,xie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,wie=He({opSnippet:bie,packedOpSnippet:xie,cpuKernelImpl:Kee}),vie={kernelName:ac,backendName:"webgl",kernelFunc:wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sie=Vc+`
  return log(1.0 + x);
`,Cie=He({opSnippet:Sie}),$ie={kernelName:rc,backendName:"webgl",kernelFunc:Cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nie="return float(a >= 1.0 && b >= 1.0);",kie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Iie=Nn({opSnippet:Nie,packedOpSnippet:kie,dtype:"bool"}),Tie={kernelName:Zh,backendName:"webgl",kernelFunc:Iie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eie="return float(!(x >= 1.0));",Rie=He({opSnippet:Eie}),Die={kernelName:Jh,backendName:"webgl",kernelFunc:Rie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aie="return float(a >= 1.0 || b >= 1.0);",_ie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Oie=Nn({opSnippet:Aie,packedOpSnippet:_ie,dtype:"bool"}),Fie={kernelName:ep,backendName:"webgl",kernelFunc:Oie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zie=class{constructor(e,n,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=n,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${a}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lie{constructor(e,n,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${a}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pie=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s,u=M().getBool("WEBGL_PACK_NORMALIZATION")?new Lie(a.shape,r,i,o,l):new zie(a.shape,r,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},Mie={kernelName:tp,backendName:"webgl",kernelFunc:Pie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bie=class{constructor(e,n,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vie=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,d=new Bie(a.shape,o,l,u,c);return n.runWebGLProgram(d,[a,r,i],a.dtype)},Uie={kernelName:Yg,backendName:"webgl",kernelFunc:Vie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wie(t,e,n,s){const a=L(e),i=L(t.shape)/a,o=ie({inputs:{x:t},attrs:{shape:[i,a]},backend:s}),l=dl(o,t.dtype,"max",s),u=ie({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reductionIndices:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o),d=c!=null,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const x=n.texData.get(p.dataId).values,w=new Array(o);for(let $=0;$<w.length;$++)w[$]=a.shape[c[$]];const v=ES(x,a.shape,a.dtype,c,w);p=n.makeTensorInfo(w,a.dtype);const C=n.texData.get(p.dataId);C.values=v}else p=Tb(a,c,n);u=ht(u.length,o)}jt("max",u,o);const[f,m]=Vt(p.shape,u);let y=f;i&&(y=zt(f,l));let g;if(h){const x=n.texData.get(p.dataId).values,w=Yee(x,L(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);const v=n.texData.get(g.dataId);v.values=w}else g=Wie(p,m,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}const Gie={kernelName:np,backendName:"webgl",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hie=RS+`
  return max(a, b);
`,jie=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cl+`
  return result;
`,qie=Nn({opSnippet:Hie,packedOpSnippet:jie,cpuKernelImpl:Qee}),Xie={kernelName:ic,backendName:"webgl",kernelFunc:qie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;Kp(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;N(an(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=Rn(a.shape,r,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ee(c.inShape,c.outShape))return ms({inputs:{x:a},backend:n});const d=new hh(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}const Yie={kernelName:sp,backendName:"webgl",kernelFunc:Kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qie(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Os(a.shape,r,i,c,o,u,l),h=new AS(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}const Zie={kernelName:ap,backendName:"webgl",kernelFunc:Qie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Jie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,o=r-1-e.padInfo.top,l=i-1-e.padInfo.left,u=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},eoe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,s=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=l-1-e.padInfo.front,h=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function toe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Os(i.shape,o,l,d,u,c),p=new AS(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new eoe(h),y=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),y}const noe={kernelName:Zg,backendName:"webgl",kernelFunc:toe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function soe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r,output:i}=e,o=r;Kp([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=Rn(o.shape,l,u,1,c,d),p=!0,f=new hh(h,"max",p),m=n.runWebGLProgram(f,[o],o.dtype),y=new Jie(h),g=n.runWebGLProgram(y,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}const aoe={kernelName:Qg,backendName:"webgl",kernelFunc:soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function roe(t,e,n,s){let a=new hh(n,"max",!1);const r=s.runWebGLProgram(a,[t],"float32");a=new hh(n,"max",!0,!0,e);const i=s.runWebGLProgram(a,[t],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ioe={kernelName:Jg,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=e,l=n;N(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];N(an(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=Rn(s.shape,a,r,u,i),[d,h]=roe(s,o,c,l);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ooe(t,e,n,s){const a=L(e),i=L(t.shape)/a,o=ie({inputs:{x:t},attrs:{shape:[i,a]},backend:s}),l=dl(o,"float32","mean",s),u=ie({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const loe={kernelName:rp,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:a,axis:r}=e,i=n,o=s.shape.length,l=Ie(r,s.shape);let u=l;const c=tt(u,o),d=c!=null,h=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const w=i.texData.get(f.dataId).values,v=new Array(o);for(let k=0;k<v.length;k++)v[k]=s.shape[c[k]];const C=ES(w,s.shape,s.dtype,c,v);f=i.makeTensorInfo(v,s.dtype);const $=i.texData.get(f.dataId);$.values=C}else f=Tb(s,c,i);p.push(f),u=ht(u.length,o)}jt("sum",u,o);const[m,y]=Vt(f.shape,u);let g=m;a&&(g=zt(m,l));const b=ooe(f,y,g,i);for(const x of p)i.disposeIntermediateTensorInfo(x);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uoe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=Ie(r,a.shape);let u=l;const c=tt(u,o);let d=a;c!=null&&(d=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),u=ht(u.length,a.shape.length)),jt("min",u,o);const[h,p]=Vt(d.shape,u),f=L(p),m=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),y=dl(m,m.dtype,"min",n);let g;if(i){const b=zt(h,l);g=ie({inputs:{x:y},backend:n,attrs:{shape:b}})}else g=ie({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(d),g}const coe={kernelName:ip,backendName:"webgl",kernelFunc:uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const doe=RS+`
  return min(a, b);
`,hoe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cl+`
  return result;
`,poe=Nn({opSnippet:doe,packedOpSnippet:hoe,cpuKernelImpl:Zee}),foe={kernelName:oc,backendName:"webgl",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let moe=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=n.map((c,d)=>c[0]+e[d]+c[1]);const a=e.length,r=et(a),i=n.map(c=>c[0]).join(","),o=n.map((c,d)=>c[0]+e[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class goe{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+e[m]+f[1]);const a=e.length,r=et(a),i=n.map(f=>f[0]).join(","),o=n.map((f,m)=>f[0]+e[m]).join(","),l=zn("rc",a),u=zn("source",a),c=`${l[a-1]} < ${this.outputShape[a-1]}`,d=a===1?"source":`vec2(${u.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(a===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[a-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${l[a-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${l[a-2]} += 1;
        if(${l[a-2]} < ${this.outputShape[a-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${l[a-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yoe=({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:a,mode:r}=n,i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new goe(s.shape,a,r):new moe(s.shape,a,r);return e.runWebGLProgram(i,[s],s.dtype)},boe={kernelName:op,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xoe=`if (b == 0.0) return NAN;
  return mod(a, b);`,woe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+cl+`
  return result;
`,voe=Nn({opSnippet:xoe,packedOpSnippet:woe}),Soe={kernelName:lc,backendName:"webgl",kernelFunc:voe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Coe=class{constructor(e,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=`
if (a == b) {
  return 1.0;
};
return a / b;`,Noe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,lO=Nn({opSnippet:$oe,packedOpSnippet:Noe,checkOutOfBounds:!0}),koe={kernelName:ju,backendName:"webgl",kernelFunc:lO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X$="return a - b;",uO=Nn({opSnippet:X$,packedOpSnippet:X$,supportsComplex:!0,cpuKernelImpl:xte}),Ioe={kernelName:$c,backendName:"webgl",kernelFunc:uO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{dim:r}=s,i=Ie([r],a.shape),o=oO({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=zt(o.shape,i),u=ie({inputs:{x:o},backend:n,attrs:{shape:l}}),c=uO({inputs:{a,b:u},backend:n}),d=aO({inputs:{x:c},backend:n}),h=Eb({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=ie({inputs:{x:h},backend:n,attrs:{shape:l}}),f=lO({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const Toe={kernelName:Np,backendName:"webgl",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eoe(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s,l=o?a:cO({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new Coe(u,c,r),h=[[i]],p=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),p}const Roe={kernelName:ey,backendName:"webgl",kernelFunc:Eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Doe=pa+`
  return -x;
`,Aoe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function _oe(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const r=n.texData.get(s.dataId),[i,o]=ete(r.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let a;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ii(s.shape,Aoe):a=new Ua(s.shape,Doe),n.runWebGLProgram(a,[s],s.dtype)}const Ooe={kernelName:lp,backendName:"webgl",kernelFunc:_oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Foe=Gy;function zoe(t){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),{selectedIndices:d}=Foe(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Loe={kernelName:ty,backendName:"webgl",kernelFunc:zoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Poe=Lv;function Moe(t){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(a.dataId),d=n.readSync(r.dataId),{selectedIndices:h,validOutputs:p}=Poe(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Boe={kernelName:Pw,backendName:"webgl",kernelFunc:Moe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Voe=Hy;function Uoe(t){Ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(a.dataId),d=n.readSync(r.dataId),h=i,p=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=Voe(c,d,h,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Woe={kernelName:ny,backendName:"webgl",kernelFunc:Uoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Goe=class{constructor(e,n,s,a){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hoe=t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s,u=L(a.shape),c=new Goe(u,i,o,l),d=ie({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(c,[d],r);n.disposeIntermediateTensorInfo(d);const p=[...a.shape,i],f=ie({inputs:{x:h},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(h),f},joe={kernelName:dp,backendName:"webgl",kernelFunc:Hoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tg(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const a=Qp({inputs:{input:s},backend:n}),r=tg({inputs:{x:a},backend:n}),i=Rb({inputs:{input:s},backend:n}),o=tg({inputs:{x:i},backend:n}),l=Gi({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Zp({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const qoe={kernelName:Tp,backendName:"webgl",kernelFunc:tg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=Qp({inputs:{input:s},backend:n}),r=dO({inputs:{x:a},backend:n}),i=Rb({inputs:{input:s},backend:n}),o=tg({inputs:{x:i},backend:n}),l=Gi({inputs:{real:r,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Zp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const Xoe={kernelName:cp,backendName:"webgl",kernelFunc:dO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Koe(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s;if(e.length===1)return E1({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{ns(r,c.shape,"All tensors passed to stack must have matching shapes"),N(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const d=E1({inputs:{input:c},backend:n,attrs:{dim:a}});return o.push(d),d}),u=Y_({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Yoe={kernelName:hp,backendName:"webgl",kernelFunc:Koe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qoe=class{constructor(e,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,c)=>u[0]+e[c]+u[1]);const a=e.length,r=et(a),i=n.map(u=>u[0]).join(","),o=n.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zoe{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,y)=>m[0]+e[y]+m[1]);const a=e.length,r=et(a),i=n.map(m=>m[0]).join(","),o=n.map((m,y)=>m[0]+e[y]).join(","),l=zn("rc",a),u=zn("source",a),c=`${l[a-1]} < ${this.outputShape[a-1]}`,d=a===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${l[a-1]} += 1;
       if(${c}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${l[a-2]} += 1;
       if(${l[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${l[a-1]} += 1;
         if(${c}) {`],p=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,y=a===1?2:4;m<y;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${d});
        }
      `;f+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,constantValue:i}=s;if(L(a.shape)===0){const u=r.map((c,d)=>c[0]+a.shape[d]+c[1]);return Zp({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}const o=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zoe(a.shape,r,i):new Qoe(a.shape,r,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},Joe={kernelName:pp,backendName:"webgl",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ele=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,tle=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+cl+`
  return result;
`,nle=Nn({opSnippet:ele,packedOpSnippet:tle}),sle={kernelName:cc,backendName:"webgl",kernelFunc:nle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ale(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=[],u=Ie(r,a.shape);let c=u;const d=tt(c,o);let h=a;d!=null&&(h=Bn({inputs:{x:a},backend:n,attrs:{perm:d}}),c=ht(c.length,o),l.push(h)),jt("prod",c,o);let p;if(n.shouldExecuteOnCPU([h])){const f=n.texData.get(h.dataId).values,{outVals:m,outShape:y,outDtype:g}=nte(h.shape,h.dtype,f,c);p=n.makeTensorInfo(y,g,m)}else{const[f,m]=Vt(h.shape,c),y=L(m),g=ie({inputs:{x:h},backend:n,attrs:{shape:[-1,y]}}),b=vy(a.dtype),x=dl(g,b,"prod",n);p=ie({inputs:{x},backend:n,attrs:{shape:f}}),l.push(g),l.push(x)}if(i){l.push(p);const f=zt(p.shape,u);p=ie({inputs:{x:p},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const rle={kernelName:mp,backendName:"webgl",kernelFunc:ale};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ile(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:o}=s,l=a.map(g=>n.readSync(g.dataId)),u=a.map(g=>g.shape),c=n.readSync(r.dataId),d=n.readSync(i.dataId),[h,p,f]=ste(l,u,c,r.shape,r.dtype,d,i.shape,o),m=h.map(g=>n.makeTensorInfo([g.length],"int32",g)),y=n.makeTensorInfo(f,r.dtype,p);return m.concat([y])}const ole={kernelName:Mw,backendName:"webgl",kernelFunc:ile};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lle(t){const{inputs:e,backend:n}=t,{starts:s,limits:a,deltas:r}=e,i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=ate(i,s.shape,s.dtype,o,a.shape,l,r.shape),d=n.makeTensorInfo([u.length],"int32",u),h=n.makeTensorInfo([c.length],s.dtype,c);return[d,h]}const ule={kernelName:Bw,backendName:"webgl",kernelFunc:lle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cle(t){const{inputs:e,backend:n,attrs:s}=t,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),d=n.readSync(i.dataId),h=o.map(y=>n.readSync(y.dataId)),p=o.map(y=>y.shape),[f,m]=rte(u,a.shape,c,r.shape,r.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(f,r.dtype,m)}const dle={kernelName:Vw,backendName:"webgl",kernelFunc:cle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO=t=>{const{backend:e,attrs:n}=t,{start:s,stop:a,step:r,dtype:i}=n,o=ite(s,a,r,i);return e.makeTensorInfo([o.length],i,o)},hle={kernelName:sy,backendName:"webgl",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ple="return 1.0 / x;",fle=He({opSnippet:ple}),mle={kernelName:dc,backendName:"webgl",kernelFunc:fle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gle=pa+`
  return (x < 0.0) ? 0.0 : x;
`,yle=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ble=He({opSnippet:gle,packedOpSnippet:yle}),xle={kernelName:hc,backendName:"webgl",kernelFunc:ble};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wle=pa+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,vle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Sle=He({opSnippet:wle,packedOpSnippet:vle}),Cle={kernelName:pc,backendName:"webgl",kernelFunc:Sle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $le=class{constructor(e,n,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],d=[a&&n>1?n-1:n,a&&s>1?s-1:s];let h;r?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nle{constructor(e,n,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],d=[a&&n>1?n-1:n,a&&s>1?s-1:s];let h;r?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kle(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Nle(a.shape,l,u,r,i):new $le(a.shape,l,u,r,i);return n.runWebGLProgram(c,[a],"float32")}const Ile={kernelName:bp,backendName:"webgl",kernelFunc:kle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tle=class{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,a,r]=n,[,i,o]=e,l=[s&&i>1?a-1:a,s&&o>1?r-1:r],u=[s&&i>1?i-1:i,s&&o>1?o-1:o],c=l[0]/u[0],d=l[1]/u[1],h=1/c,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ele(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,o=new Tle(r.shape,a.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const Rle={kernelName:iy,backendName:"webgl",kernelFunc:Ele};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dle=class{constructor(e,n,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],d=[a&&n>1?n-1:n,a&&s>1?s-1:s],h=a?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ale{constructor(e,n,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,n,s,u];const c=[a&&n>1?o-1:o,a&&s>1?l-1:l],d=[a&&n>1?n-1:n,a&&s>1?s-1:s],h=a?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _le(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ale(a.shape,l,u,r,i):new Dle(a.shape,l,u,r,i);return n.runWebGLProgram(c,[a],a.dtype)}const Ole={kernelName:yp,backendName:"webgl",kernelFunc:_le};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fle=class{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,a,r]=n,[,i,o]=e,l=[s&&i>1?a-1:a,s&&o>1?r-1:r],u=[s&&i>1?i-1:i,s&&o>1?o-1:o],c=l[0]/u[0],d=l[1]/u[1],h=1/c,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zle(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,o=new Fle(r.shape,a.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const Lle={kernelName:ry,backendName:"webgl",kernelFunc:zle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ple=class{constructor(e,n){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const a=o=>n.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,l)=>a(l)).join(","),i=et(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mle{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const a=zn("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,o=et(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(a.slice())};
          if(${r}){
            result.g = ${u(a.slice())};
          }
          if(${i}) {
            result.b = ${c(a.slice())};
            if(${r}) {
              result.a = ${d(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return h(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=e.map((b,x)=>p(x,f)),y=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${g}))`}function p(f,m){return n.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ble(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dims:r}=s,i=a.shape.length,o=Ie(r,a.shape);if(i===0)return ms({inputs:{x:a},backend:n});const l=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mle(a.shape,o):new Ple(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}const Vle={kernelName:xp,backendName:"webgl",kernelFunc:Ble};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ule=class{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],a=e[2];this.outputShape=e;let r="";typeof n=="number"?r=`float outputValue = ${n.toFixed(2)};`:r=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wle={kernelName:xy,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:r,center:i}=e,o=n,l=new Ule(s.shape,r),[u,c]=Zy(i,s.shape[1],s.shape[2]),d=[[u,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Hle=He({opSnippet:Gle}),jle={kernelName:fc,backendName:"webgl",kernelFunc:Hle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qle="return inversesqrt(x);",Xle=He({opSnippet:qle,cpuKernelImpl:ote}),Kle={kernelName:mc,backendName:"webgl",kernelFunc:Xle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _S=class{constructor(e,n,s,a,r,i,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=et(r.length),c=et(i.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";a===1?p="i":a===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yle{constructor(e,n,s,a,r,i,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=et(r.length),c=et(i.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";a===1?p="i":a===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides",b=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qle(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=rr(r,a,i),h=[d/u,u];if(d===0)return n.makeTensorInfo(i,a.dtype);const p=ie({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=ie({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;M().getBool("WEBGL_PACK")?y=new Yle(l,o,p.shape.length,f.shape.length,c,h):y=new _S(l,o,p.shape.length,f.shape.length,c,h);const g=n.runWebGLProgram(y,[f,p,m],f.dtype),b=ie({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),b}const Zle={kernelName:oy,backendName:"webgl",kernelFunc:Qle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Jle=class{constructor(e,n,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,o=M().getNumber("WEBGL_VERSION")===2?r:i,l=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eue(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:a,values:r}=e,{side:i}=s,o=new Jle(a.shape[0],a.shape[1],r.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,r],"int32",l)}const tue={kernelName:uy,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nue=class{constructor(e,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<n.length;c++)u.push(`${o[c]}`),c<e&&l.push(`${o[c]}`);a=l.join(),r=u.join()}const i=et(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sue(t){const{inputs:e,backend:n}=t,{condition:s,t:a,e:r}=e,i=new nue(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[s,a,r],pn(a.dtype,r.dtype))}const aue={kernelName:wp,backendName:"webgl",kernelFunc:sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Lp};
  float scale = ${Pp};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,iue=He({opSnippet:rue}),oue={kernelName:gc,backendName:"webgl",kernelFunc:iue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lue=Vc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,uue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cue=He({opSnippet:lue,packedOpSnippet:uue,cpuKernelImpl:ute}),due={kernelName:wc,backendName:"webgl",kernelFunc:cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,pue=He({opSnippet:hue}),fue={kernelName:xc,backendName:"webgl",kernelFunc:pue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mue=Vc+`
  return sin(x);
`,gue=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${cl}
  return result;
`,yue=He({opSnippet:mue,packedOpSnippet:gue}),bue={kernelName:yc,backendName:"webgl",kernelFunc:yue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,wue=He({opSnippet:xue}),vue={kernelName:bc,backendName:"webgl",kernelFunc:wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Cue=He({opSnippet:Sue}),$ue={kernelName:vc,backendName:"webgl",kernelFunc:Cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nue=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,paddings:i}=s;N(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((g,b)=>g*b),l=[[0,0]];l.push(...i);for(let g=1+r.length;g<a.shape.length;++g)l.push([0,0]);const u=[],c=hO({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=sl(c.shape,r,o,!1),h=al(d.length,r.length,!1),p=rl(c.shape,r,o,!1),f=ie({inputs:{x:c},backend:n,attrs:{shape:d}}),m=Bn({inputs:{x:f},backend:n,attrs:{perm:h}}),y=ie({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(g=>n.disposeIntermediateTensorInfo(g)),y},kue={kernelName:Cp,backendName:"webgl",kernelFunc:Nue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iue(t){const{inputs:e,backend:n}=t,{indices:s,values:a,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=n.readSync(r.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=dte(o,s.shape,s.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Tue={kernelName:Uw,backendName:"webgl",kernelFunc:Iue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eue(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:a,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(r.dataId)),[u,c,d]=hte(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}const Rue={kernelName:Ww,backendName:"webgl",kernelFunc:Eue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Due(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=L_(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const Aue={kernelName:cy,backendName:"webgl",kernelFunc:Due};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ue(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=L_(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const Oue={kernelName:dy,backendName:"webgl",kernelFunc:_ue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fue(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=rr(r,a,o),p=!1;if(r.dtype==="string"){const g=n.bufferSync(a),b=n.bufferSync(r),x=$a(n.readSync(i.dataId)[0]),w=lte(g,b,o,h,c,u,l,d,x,p);return n.makeTensorInfo(o,w.dtype,w.values)}const f=new _S(u,l,a.shape.length,r.shape.length,d,[h,1],p),m=n.runWebGLProgram(f,[r,a,i],r.dtype),y=ie({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),y}const zue={kernelName:hy,backendName:"webgl",kernelFunc:Fue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lue(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=Ie(i,a.shape)[0],l=hb(a,r,o),u=a.shape.length,c=new Array(u).fill(0),d=a.shape.slice();return l.map(h=>{const p=[...d];p[o]=h;const f=Uc({inputs:{x:a},backend:n,attrs:{begin:c,size:p}});return c[o]+=h,f})}const Pue={kernelName:$p,backendName:"webgl",kernelFunc:Lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$="return sqrt(x);",Mue=He({opSnippet:K$,packedOpSnippet:K$,cpuKernelImpl:pte}),Bue={kernelName:Sc,backendName:"webgl",kernelFunc:Mue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vue="return x * x;",Uue=He({opSnippet:Vue}),Wue={kernelName:py,backendName:"webgl",kernelFunc:Uue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$="return (a - b) * (a - b);",Gue=Nn({opSnippet:Y$,packedOpSnippet:Y$}),Hue={kernelName:Cc,backendName:"webgl",kernelFunc:Gue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jue(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=n.readSync(a.dataId),i=Ia(r),o=fte(i,"string",s);return n.makeTensorInfo(a.shape,"string",o)}const que={kernelName:fy,backendName:"webgl",kernelFunc:jue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xue({inputs:t,attrs:e,backend:n}){const{x:s}=t,a=pa+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new Ua(s.shape,a);return n.runWebGLProgram(r,[s],s.dtype)}const Kue={kernelName:Tc,backendName:"webgl",kernelFunc:Xue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yue=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=et(s.length),i=et(s.length);let o="";if(a===1)o="coords * strides + begin";else{let l=0;o=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Que(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:b,end:x,strides:w}=Ky(a.shape,r,i,o,l,u,c,d,h);let v;if(m)v=ie({inputs:{x:a},backend:n,attrs:{shape:f}});else if(y||g){N(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const $=Xy(b,x,w),k=Uc({inputs:{x:a},backend:n,attrs:{begin:b,size:$}});v=ie({inputs:{x:k},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(k)}else if(n.shouldExecuteOnCPU([a])){const k=n.readSync(a.dataId),T=ke(a.shape,a.dtype,k),E=mte(p,T,w,b);v=n.makeTensorInfo(f,a.dtype,E.values)}else{const k=new Yue(b,w,p);v=n.runWebGLProgram(k,[a],a.dtype)}const C=ie({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),C}const Zue={kernelName:my,backendName:"webgl",kernelFunc:Que};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jue(t){const{inputs:e,backend:n,attrs:s}=t,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=e,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=gte(h,p,a,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const ece={kernelName:gy,backendName:"webgl",kernelFunc:Jue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tce(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:a}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=yte(o,l,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const nce={kernelName:Gw,backendName:"webgl",kernelFunc:tce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sce(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:a}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(r.dataId),o=bte(i,a);return n.makeTensorInfo(r.shape,"int32",o)}const ace={kernelName:Hw,backendName:"webgl",kernelFunc:sce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rce="return tan(x);",ice=He({opSnippet:rce}),oce={kernelName:Nc,backendName:"webgl",kernelFunc:ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lce=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,uce=He({opSnippet:lce}),cce={kernelName:kc,backendName:"webgl",kernelFunc:uce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dce(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:a,indices:r,updates:i}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=rr(i,r,a.shape),h=[d/u,u];if(d===0)return n.makeTensorInfo(a.shape,r.dtype);const p=ie({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=ie({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=ie({inputs:{x:a},backend:n,attrs:{shape:h}}),y=new _S(l,o,p.shape.length,f.shape.length,c,h,!1,!0),g=n.runWebGLProgram(y,[f,p,m],m.dtype),b=ie({inputs:{x:g},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}const hce={kernelName:ly,backendName:"webgl",kernelFunc:dce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pce=class{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*n[i];this.outputShape=s,this.rank=s.length;const a=et(this.rank),r=fce(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function fce(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<t.length;a++)s.push(`imod(${n[a]}, ${t[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const l=n.readSync(a.dataId),u=a.dtype==="string"?l.map(h=>$a(h)):l,c=ke(a.shape,a.dtype,u),d=wte(c,r);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new pce(a.shape,r);return n.runWebGLProgram(i,[a],a.dtype)}const mce={kernelName:Ic,backendName:"webgl",kernelFunc:fO};let gce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},yce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yi(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function Q$(t){let e=1;for(;e<t;)e*=2;return e}function bce(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{k:r,sorted:i}=s,o=M().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=M().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([a])||c<o||r>l){const E=n.readSync(a.dataId),[O,B]=vte(E,u,a.dtype,r,i);return[n.makeTensorInfo(O.shape,O.dtype,O.values),n.makeTensorInfo(B.shape,B.dtype,B.values)]}if(r===0)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[a,Zp({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),h=d!==null&&d.isPacked,p=h?n.unpackTensor(a):a,m=L(u)/c,y=ie({inputs:{x:p},attrs:{shape:[m,c]},backend:n});h&&Yi(n,p);const g=Q$(r),b=Q$(c);let x=null;const w=()=>x===null?[y,y]:[y,x],v=(E,O,B)=>{const W=w(),V=new gce(B),D=[[c],[x===null?1:0],[Number.NEGATIVE_INFINITY],[E],[O]],H=x;x=n.runWebGLProgram(V,W,"int32",D),Yi(n,H)};for(let E=1;E<g;E*=2){const O=E*2;for(let B=E;B>=1;B/=2)v(O,B,[m,b])}for(let E=b;E>g;E/=2){const O=w(),B=new yce([m,E/2]),V=[[c],[x===null?1:0],[g]],G=x;x=n.runWebGLProgram(B,O,"int32",V),Yi(n,G);const D=g/2,H=D*2;for(let P=D;P>=1;P/=2)v(H,P,x.shape)}let C=x;x=Uc({inputs:{x},backend:n,attrs:{begin:0,size:[m,r]}}),Yi(n,C);let $=iO({inputs:{x:y,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Yi(n,y);const k=u.slice(0,-1);k.push(r),C=x,x=ie({inputs:{x},attrs:{shape:k},backend:n}),Yi(n,C);const T=$;return $=ie({inputs:{x:$},attrs:{shape:k},backend:n}),Yi(n,T),[$,x]}const xce={kernelName:yy,backendName:"webgl",kernelFunc:bce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wce=class{constructor(e,n,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const o=s==="nearest"?1:2;let l;switch(a){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vce(t){const{inputs:e,backend:n,attrs:s}=t,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,d,h,p]=a.shape,[f,m]=u??[d,h],y=[c,f,m,p],g=new wce(d,h,i,o,l,y);return n.runWebGLProgram(g,[a,r],"float32")}const Sce={kernelName:by,backendName:"webgl",kernelFunc:vce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cce(t){const{inputs:e,attrs:n,backend:s}=t,{axis:a}=n,{x:r}=e;Kp(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:o,outputShape:l,indices:u}=Ste(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const $ce={kernelName:jw,backendName:"webgl",kernelFunc:Cce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nce(t){const{inputs:e,backend:n,attrs:s}=t,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[r],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==r&&(u[c++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[r]=m;const y=Uc({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),g=ie({inputs:{x:y},backend:n,attrs:{shape:u}});f[m]=g,d.push(y)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const kce={kernelName:kp,backendName:"webgl",kernelFunc:Nce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ice{constructor(e,n){this.variableNames=["x","segmentIds"];const s=e.windowSize,a=e.batchSize,r=e.inSize,i=e.numSegments,o=i*Math.ceil(r/s);this.outputShape=[a,o];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tce(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,segmentIds:r}=e,{numSegments:i}=s,o=a.shape.length,l=[];let u=0;const c=tt([u],o);let d=a;c!=null&&(d=Bn({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(d),u=ht(1,o)[0]);const h=jv(d.shape,u,i),p=L([d.shape[u]]),f=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=vy(a.dtype),y=(w,v,C,$,k)=>{const T=w.shape[0],E=w.shape[1],O=HR(E,k),B={windowSize:O,inSize:E,batchSize:T,numSegments:k},W=new Ice(B,v),V=n.compileAndRun(W,[w,C],$);if(l.push(V),V.shape[1]===k)return V;const G=pO({backend:n,attrs:{start:0,stop:k,step:1,dtype:"float32"}}),D=fO({inputs:{x:G},backend:n,attrs:{reps:[E/O]}});return l.push(G),l.push(D),y(V,v,D,$,k)},g=y(f,"unsortedSegmentSum",r,m,i),b=ie({inputs:{x:g},backend:n,attrs:{shape:h}});let x=b;if(c!=null){l.push(b);const w=sr(c);x=Bn({inputs:{x},backend:n,attrs:{perm:w}})}return l.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}const Ece={kernelName:Ip,backendName:"webgl",kernelFunc:Tce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rce=[pne,mne,bne,vne,Cne,kne,Tne,Rne,One,zne,Mne,Une,Hne,Kne,Zne,ese,nse,ise,lse,cse,fse,vse,Cse,Ise,Ese,Fse,Lse,Vse,Yte,Gse,Kse,Jse,rae,lae,cae,hae,fae,bae,vae,$ae,kae,Tae,Rae,_ae,Fae,Mae,Vae,Gae,qae,Kae,Jae,sre,ore,cre,pre,fre,gre,bre,wre,Sre,$re,Tre,Dre,Ore,zre,Mre,Ure,jre,Yre,Kte,Zre,qse,tie,aie,oie,Zte,die,mie,yie,vie,$ie,Tie,Die,Fie,Mie,Uie,Gie,Xie,Yie,Zie,noe,aoe,ioe,loe,coe,foe,boe,Soe,Roe,tne,Ooe,Loe,Boe,Woe,Dse,joe,Xoe,Yoe,Joe,sle,ene,rle,ole,ule,dle,hle,Ase,koe,mle,xle,Cle,sne,Ile,Rle,Ole,Lle,Vle,Wle,jle,Kle,Zle,tue,aue,oue,due,fue,bue,vue,xse,Toe,$ue,kue,Tue,Rue,Aue,Oue,zue,Pue,Bue,Wue,Hue,que,Kue,Zue,ece,nce,ace,Ioe,cne,oce,cce,hce,mce,xce,Sce,dne,$ce,kce,Ece,qoe];for(const t of Rce)qw(t);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=M();zs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);zs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);zs.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);zs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);zs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);zs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);zs.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);zs.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);zs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);zs.registerFlag("WEBGPU_PRINT_SHADER",()=>"");zs.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dce{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ace{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,n,s=!1,a=!0){let r;const i=Z$(e,n);return a?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(r=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(r=this.device.createBuffer({size:e,usage:n,mappedAtCreation:s}),this.numBytesAllocated+=e)):(r=this.device.createBuffer({size:e,usage:n,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(r),this.numUsedBuffers++,this.numBytesUsed+=e,r}releaseBuffer(e,n=!0){if(this.freeBuffers.size===0)return;const s=e.size,a=e.usage,r=Z$(s,a),i=this.usedBuffers.get(r),o=i.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");i[o]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,n?(this.freeBuffers.get(r).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function Z$(t,e){return`${t}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ce{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,n,s,a){const r=eN(s),i=e*n*r,o=J$(e,n,s,a);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const u=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(u),u}this.numBytesAllocated+=i;const l=this.device.createTexture({size:[e,n],format:s,usage:a});return this.usedTextures.get(o).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const n=e.width,s=e.height,a=e.format,r=e.usage,i=J$(n,s,a,r);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(i),l=o.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(l,1);const u=eN(a),c=n*s*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function J$(t,e,n,s){return`${t}_${e}_${n}_${s}`}function eN(t){if(t==="rgba8unorm")return 16;throw new Error(`${t} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oce(t,e){if(Math.max(...t)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=t.length,s="xyzwuv",a=t.map(i=>`${e}.${s[i]}`),r=new Array(n-1);r[n-2]=a[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${a[i+1]})`;return r}const Hi=(t,e,n)=>n==="int32"?`atomicAdd(${t}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${t}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cu;(function(t){t[t.FROM_PIXELS=0]="FROM_PIXELS",t[t.DRAW=1]="DRAW"})(Cu||(Cu={}));const Fce=(t,e,n,s,a)=>{const r={dtype:s.dtype,shape:s.shape},i=Lce(n,r,e),o=t.createShaderModule({code:i,label:e.constructor.name});let l=M().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");(l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(i),console.groupEnd())}return a?t.createComputePipelineAsync({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):t.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},De=(t,e="f32")=>{switch(t){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component ${e} is not supported.`)}};function Mt(t){if(t<=1)return"i32";if(t===2)return"vec2<i32>";if(t===3)return"vec3<i32>";if(t===4)return"vec4<i32>";if(t===5)return"vec5";if(t===6)return"vec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Er(t){if(t===0)return"x";if(t===1)return"y";if(t===2)return"z";if(t===3)return"w";if(t===4)return"u";if(t===5)return"v";throw Error(`Index ${t} is not yet supported`)}function ae(...t){let e;switch(t.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${t[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function tN(t,e){let n;return n=`
     ${zce(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${t?"main(getGlobalIndex());":"main();"};
      }
    `,n}function zce(t){return`
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})
`}function Lce(t,e,n){const s=[],a=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${mO(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${a}u +
                localIndex);
        `}
      }
    `),n.pixelsOpType!=null){const f=n.pixelsOpType===Cu.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${io(e.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${io(t[0].dtype,n.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const y=sN(n);return[nN,s.join(`
`),Qf(e.shape),n.getUserCode(),tN(y,n)].join(`
`)}let r,i,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach((f,m)=>{const y=Mt(t[m].shape.length);o+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${y}, `,r=t[m].shape.length-1,i=Mt(r),o+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${i}, `});const l=Mt(e.shape.length);o+=`outShape : ${l}, `,r=e.shape.length-1,i=Mt(r),o+=`
         outShapeStrides: ${i}, `,n.size&&(o+="size : i32, "),n.uniforms&&(o+=n.uniforms),o+="};",o=jce(o),s.push(o),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${io(e.dtype,n.outputComponent)}>;
    `),n.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${n.variableComponents?io(t[m].dtype,n.variableComponents[m]):io(t[m].dtype,n.outputComponent)}>;
        `)}),o!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=Wce(e.shape,n.dispatchLayout),c=[nN,s.join(`
`)+Mce,Qf(e.shape),u,Gce(e.shape.length)];n.atomic||c.push(Hce(e.shape,e.dtype,n.outputComponent)),n.variableNames.forEach((f,m)=>{c.push(`${Qf(t[m].shape,f)}`)});const d=t.map((f,m)=>Uce(f,e.shape,n.variableComponents?n.variableComponents[m]:n.outputComponent,n.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(d),c.push(n.getUserCode());const h=sN(n);return c.push(tN(h,n)),c.join(`
`)}function Pce(t,e,n){let s=t.shaderKey;if(t.pixelsOpType!=null)return s;const a=[],r=[];e.forEach(c=>{a.push(c.shape),r.push(c.dtype)}),a.push(n.shape),r.push(n.dtype);const i=e.map(c=>ki(c.shape,n.shape)),o=e.map(c=>Ee(c.shape,n.shape)).join("_"),l=i.map(c=>c.join("_")).join(";"),u=mO(t)?"flatDispatch":"";return s+="_"+(t.workgroupSize?t.workgroupSize.join(","):"")+a.map(c=>c.length).join(",")+r.join(",")+t.variableNames.join(",")+l+o+u,s}const nN=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Mce=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Qf(t,e=""){const n=t.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",a=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const r=be(t),i=Mt(n),o=[];for(let u=0;u<n;u++)o.push(`d${u}`);if(r.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${a}; let d1 = index - d0 * uniforms.${a};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+r.map((u,c)=>{const d=`let ${o[c]} = index2 / uniforms.${a}.${Er(c)}`,h=c===r.length-1?`let ${o[c+1]} = index2 - ${o[c]} * uniforms.${a}.${Er(c)}`:`index2 = index2 - ${o[c]} * uniforms.${a}.${Er(c)}`;return`${d}; ${h};`}).join(""),`
    fn ${s}(index : i32) -> ${i} {
      ${l}
      return ${i}(${o.join(",")});
    }
  `}function Bce(t,e){const n=t.name,s=t.shape.length,a=Mt(s),r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=i.map(c=>`${c} : i32`).join(", ");if(s<1)return`
      fn ${r}() -> ${De(e)} {
        return ${De(e)}(${n}[0]);
      }
    `;const l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let u=`${s}D`;return s===0&&(u="1D"),`
    fn ${r}(${o}) -> ${De(e)} {
      return ${De(e)}(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function Vce(t,e,n,s){const a=t.name,r=a.charAt(0).toUpperCase()+a.slice(1),i="get"+r+"ByOutput",o=t.shape.length,l=e.length,u=Mt(l);if(Ee(t.shape,e)&&s)return`
    fn ${i}Index(globalIndex : i32) -> ${De(n)} {
      return ${De(n)}(${a}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> ${De(n)} {
      return ${De(n)}(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${n===1?"":` / ${n}`}]);
    }
    `;const c=ki(t.shape,e),d=l-o;let h="";if(o===0)return`
    fn ${i}Index(globalIndex : i32) -> ${De(n)}{
      return get${r}();
    }

    fn ${i}Coords(coords : ${u}) -> ${De(n)}{
      return get${r}();
    }
  `;l<2&&c.length>=1?h="coords = 0;":h=c.map(y=>`coords.${Er(y+d)} = 0;`).join(`
`);let p="";if(l<2&&o>0)p="coords";else if(l>1){const y=Mt(o),g=t.shape.map((b,x)=>`coords.${Er(x+d)}`).join(", ");p=`${y}(${g})`}else p="coords";const f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${De(n)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${h}
    return ${De(n)}(${a}[getIndexFromCoords${m}(${p}, ${f})${n===1?"":` / ${n}`}]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> ${De(n)} {
    var coords = coordsIn;
    ${h}
    return ${De(n)}(${a}[getIndexFromCoords${m}(${p}, ${f})${n===1?"":` / ${n}`}]);
  }
`}function Uce(t,e,n,s){let a=Bce(t,n);return t.shape.length<=e.length&&(a+=Vce(t,e,n,s)),a}function Wce(t,e){const{x:n,y:s=[],z:a=[]}=e,r=t.length,i=n.length+s.length+a.length;if(i!==r)return"";if(n.length===r)return`fn getOutputCoords() -> ${Mt(r)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="";const l=[n,s,a];for(let h=0;h<l.length;h++){const p=l[h];if(p.length!==0)if(p.length===1)o+=`let d${p[0]} = i32(globalId[${h}]);`;else{const f=Oce(p,"uniforms.outShape");o+=`var index${h} = i32(globalId[${h}]);`;for(let m=0;m<f.length;m++)o+=`let d${p[m]} = index${h} / ${f[m]};`,m===f.length-1?o+=`let d${p[m+1]} = index${h} - d${p[m]} * ${f[m]};`:o+=`index${h} = index${h} - d${p[m]} * ${f[m]};`}}const u=[];for(let h=0;h<i;h++)u.push(`d${h}`);const c=Mt(i);let d=`fn getOutputCoords() -> ${c} {
  ${o}
`;return u.length===0?d+=`return ${c}(0); }`:d+=`return ${c}(${u.join(",")}); }`,d}function Gce(t){let e="";switch(t){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:N(!1,()=>`Unsupported ${t}D shape`);break}return e}function mO(t){return t.dispatch[1]===1&&t.dispatch[2]===1}function io(t,e=1){if(t==="float32")return De(e,"f32");if(t==="int32"||t==="bool")return De(e,"i32");throw new Error(`type ${t} is not supported.`)}function Hce(t,e,n){const s=t.length,a=io(e,n);let r=`fn setOutputAtIndex(flatIndex : i32, value : ${De(n)}) {
      result[flatIndex] = ${a}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${De(n,"i32")}) {
      result[flatIndex] = ${a}(value);
    }
    `;if(s>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=Mt(s);r+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : ${De(n)}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${n===1?"":` / ${n}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : ${De(n,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${n===1?"":` / ${n}`}, value);
      }
    `}return r}function jce(t){const e=/(\w+)\s*:\s*vec(5|6)/g;t=t.replace(e,s=>"@align(16) "+s);const n=/vec(5|6)\s*,\s*(\w+)/g;return t=t.replace(n,(s,a,r)=>`vec${a}, @align(16) ${r}`),t}function sN(t){return!(t.dispatchLayout.hasOwnProperty("y")&&t.dispatchLayout.y.length!==0||t.dispatchLayout.hasOwnProperty("z")&&t.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So=t=>{let e=1;for(let n=0;n<t.length;n++)e*=t[n];return e};function re(t,e,n=[1,1,1],s=[1,1,1]){const[a,r,i]=[Math.ceil(So(t.x.map(o=>e[o]))/(n[0]*s[0])),t.y?Math.ceil(So(t.y.map(o=>e[o]))/(n[1]*s[1])):1,t.z?Math.ceil(So(t.z.map(o=>e[o]))/(n[2]*s[2])):1];return[a,r,i]}function qce(t,e,n,s=!1){const a=[8,8,1],r=[4,4,1];return s||(t<=8&&(r[1]=1),e<=16&&n<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:r}}function gO(t,e,n=!1){if(n)return[8,8,1];const s=So(t.x.map(r=>e[r])),a=So(t.y.map(r=>e[r]));return s<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function yO(t,e,n=!1){if(n)return[4,4,1];const s=So(t.x.map(r=>e[r])),a=So(t.y.map(r=>e[r]));return s<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function ce(t){return{x:t.map((e,n)=>n)}}function aN(t){if(t==="float32"||t==="int32"||t==="bool"||t==="string")return 4;if(t==="complex64")return 8;throw new Error(`Unknown dtype ${t}`)}function bO(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function xO(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&N(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var za;(function(t){t[t.MatMulReduceProgram=0]="MatMulReduceProgram",t[t.MatMulSplitKProgram=1]="MatMulSplitKProgram",t[t.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",t[t.MatMulPackedProgram=3]="MatMulPackedProgram",t[t.MatMulMax=4]="MatMulMax"})(za||(za={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xce=M().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Kce=(t,e)=>{const n=t.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,a=e.dispatch;if(a.every(i=>i<=n))return a;N(a[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let r=Math.ceil(Math.sqrt(a[0]));return r>n?(r=Math.ceil(Math.cbrt(a[0])),N(r<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[r,r,r]):[r,r,1]};class Db extends Sg{nextDataId(){return Db.nextDataId++}constructor(e,n){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!bO())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Dce(n),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new Ace(this.device),this.textureManager=new _ce(this.device),this.tensorMap=new Aw(this,Wn()),M().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,n=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return n?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const n=this.tensorMap.get(e);if(!(!n||!n.resource)){if(n.external){n.resource=null;return}n.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(n.resource):n.resource instanceof GPUTexture&&this.textureManager.releaseTexture(n.resource),n.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);n.refCount--}}write(e,n,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:s,shape:n,values:e,refCount:1}),a}move(e,n,s,a,r){if(a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:s,values:n,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(n){throw new Error(n.message)}Object.keys(this.pipelineCache).map((n,s)=>{this.pipelineCache[n]=e[s]})}async getBufferData(e){if(M().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const n=e.size,s=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,n),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const a=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),M().getBool("WEBGPU_USE_PROFILE_TOOL")&&(N(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,n){const s=this.tensorMap.get(e);return s.values=n,s.values}readSync(e){const n=this.tensorMap.get(e),{values:s,complexTensorInfos:a}=n;if(s!=null||n.dtype==="string")return s;if(n.dtype==="complex64"){const m=this.readSync(a.real.dataId),y=this.readSync(a.imag.dataId),g=jf(ka(m,y).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const r=["opaque","premultiplied"],i=n.resource,o=i.size;N(o%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=o/4,u=new ArrayBuffer(o),c=256,d=256,h=r.map(m=>new OffscreenCanvas(c,d)),p=new OffscreenCanvas(c,d);this.endComputePassEncoder(),h.map((m,y)=>{const g=m.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[y]}),g.getCurrentTexture()}).map((m,y)=>{const g=c*4,b=(k,T,E)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:g,offset:E},{texture:m},{width:k,height:T}),this.submitQueue();const O=p.getContext("2d",{willReadFrequently:!0});O.clearRect(0,0,k,T),O.drawImage(h[y],0,0);const B=O.getImageData(0,0,k,T).data,W=r[y],V=new Uint8ClampedArray(u,E,k*T*4);for(let G=0;G<V.length;G+=4)if(W==="premultiplied")V[G+3]=B[G+3];else{const D=B[G];V[G]=B[G+2],V[G+1]=B[G+1],V[G+2]=D}},x=Math.floor(l/(c*d));let w=c,v=d,C=0;for(let k=0;k<x;k++)b(w,v,C),C+=c*d*4;const $=l%(c*d);v=Math.floor($/c),v>0&&(b(w,v,C),C+=v*(c*4)),w=$%c,w>0&&b(w,1,C)});const f=jf(u,n.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const n=this.tensorMap.get(e),{values:s}=n;if(s!=null)return s;let a;if(n.dtype==="complex64"){const r=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=r[0],o=r[1];a=ka(i,o)}else{const r=await this.getBufferData(n.resource);a=jf(r,n.dtype)}return this.convertAndCacheOnCPU(e,a),a}copyBuffer(e){const n=e.size,s=e.usage,a=this.bufferManager.acquireBuffer(n,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,n),this.submitQueue(),a}createTensorFromGPUData(e,n,s){let a=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:s,shape:n,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(r),o=aN(i.dtype)*L(i.shape);if(e.buffer.size<o)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${o})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(a=this.copyBuffer(a)),i.resource=a,Wn().makeTensorFromDataId(r,n,s,this)}readToGPU(e){const n=this.tensorMap.get(e),{values:s,dtype:a,shape:r,resource:i}=n;if(a==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=i,l=o.size,u=o.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,c,0,l),this.submitQueue();const d=this.makeTensorInfo(r,a),h=Wn().makeTensorFromTensorInfo(d),p=this.tensorMap.get(d.dataId);return p.resource=c,{tensorRef:h,buffer:c}}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(a=>$a(a));return ke(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const n=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=Or(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=Or(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(r);return o.kernelMs=lT(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,n,s){return n==="string"&&s!=null&&s.length>0&&Au(s[0])&&(s=s.map(r=>kr(r))),{dataId:this.write(s,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const n=this.tensorMap.get(e);if(n.resource!=null)return;const s=aN(n.dtype)*L(n.shape);let a;const r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(n.values){if(a=this.bufferManager.acquireBuffer(s,r,!0),a.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),o=i.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(o).set(n.values):new Float32Array(o).set(n.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,a,0,s),this.stagingPendingDisposal.push(i)}else{const i=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),a.unmap()}n.values=null}else a=this.bufferManager.acquireBuffer(s,r);n.resource=a}makeUniforms(e){let n=0,s=0;const a=[];let r=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:N(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(u=16),u>r&&(r=u),n=Math.ceil(n/u)*u,s=l.data.length,a.push(n),n+=l.data.length*4}),n=Math.ceil(n/r)*r;const i=new ArrayBuffer(n);e.forEach((l,u)=>{const c=a[u];l.type==="int32"?new Int32Array(i,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(i,c,l.data.length).set(l.data):new Float32Array(i,c,l.data.length).set(l.data)});const o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(o,0,i,0,n),this.uniformPendingDisposal.push(o),{offset:0,size:n,buffer:o}}runWebGPUProgram(e,n,s,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,s)),L(r.shape)===0)return this.tensorMap.get(r.dataId).values=nn(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=Kce(this.device,e);const i=n.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=Pce(e,i,r);const o=M().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=Fce(this.device,e,i,r,o)),e.pipeline=this.pipelineCache[e.shaderKey],o||this.recordAndSubmit(e,r,n,a),r}recordAndSubmit(e,n,s,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],i=[];const o="int32";if(e.pixelsOpType==null){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=s.concat(n).map(p=>p.shape);const h="int32";i.map(p=>{r.push({type:h,data:p});const f=be(p);r.push({type:h,data:f})})}else{const h=be(n.shape);r.push({type:o,data:h})}if(e.size){const h=L(e.outputShape);r.push({type:o,data:[e.outputComponent?h/e.outputComponent:h]})}a&&(r=[...r,...a]);const l=[this.tensorToBinding(n),...s.map(h=>this.tensorToBinding(h)),this.makeUniforms(r)];s.forEach(h=>{this.commandQueueOwnedIds.add(h.dataId)}),this.commandQueueOwnedIds.add(n.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((h,p)=>({binding:p,resource:h}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const d={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||M().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Cu.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const n=new BigUint64Array(e.getMappedRange()),s=Number(n[1]-n[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,n=Xce){return M().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&L(s.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Db.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bO()&&Kw("webgpu",async()=>{const t={powerPreference:M().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(t),n={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),n.requiredFeatures=s;const a=e.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:a.maxStorageBufferBindingSize,maxBufferSize:a.maxBufferSize,maxComputeWorkgroupSizeX:a.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:a.maxComputeInvocationsPerWorkgroup};const r=await e.requestDevice(n),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Db(r,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $e;(function(t){t[t.ADD=0]="ADD",t[t.ATAN2=1]="ATAN2",t[t.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",t[t.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",t[t.DIV=4]="DIV",t[t.ELU_DER=5]="ELU_DER",t[t.EQUAL=6]="EQUAL",t[t.FLOOR_DIV=7]="FLOOR_DIV",t[t.GREATER=8]="GREATER",t[t.GREATER_EQUAL=9]="GREATER_EQUAL",t[t.LESS=10]="LESS",t[t.LESS_EQUAL=11]="LESS_EQUAL",t[t.LOGICAL_AND=12]="LOGICAL_AND",t[t.LOGICAL_OR=13]="LOGICAL_OR",t[t.MAX=14]="MAX",t[t.MIN=15]="MIN",t[t.MOD=16]="MOD",t[t.MUL=17]="MUL",t[t.NOT_EQUAL=18]="NOT_EQUAL",t[t.POW=19]="POW",t[t.PRELU=20]="PRELU",t[t.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",t[t.SUB=22]="SUB"})($e||($e={}));const Yce="let resultTemp = a + b;",Qce="let resultTemp = atan2(a, b);",Zce="let resultTemp = areal * breal - aimag * bimag;",Jce="let resultTemp = areal * bimag + aimag * breal;",ede="let resultTemp = a / b;",tde="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",nde=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,sde=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,ade=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,rde=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,ide=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,ode=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,lde="return f32(a >= 1.0 && b >= 1.0);",ude=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,cde="return f32(a >= 1.0 || b >= 1.0);",dde=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,hde="let resultTemp = max(a, b);",pde="let resultTemp = min(a, b);",fde=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,mde=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,gde="let resultTemp = a * b;",yde=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,bde=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,xde=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,wde=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,vde="if (a < 0.0) { return b * a; }  return a;",Sde=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Cde="let resultTemp = (a - b) * (a - b);",$de="let resultTemp = a - b;";function OS(t,e){let n;do{switch(t){case $e.ATAN2:n=Qce;break;case $e.MAX:n=hde;break;case $e.MIN:n=pde;break;case $e.MOD:n=e?mde:fde;break;case $e.NOT_EQUAL:n=e?bde:yde;break;case $e.POW:n=e?wde:xde;break;default:continue}let s,a,r;return e?(s="isnanVec4",a="vec4<f32>",r="vec4<bool>"):(s="isnan",a="f32",r="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${a}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${a}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${n}
        return select(
            resultTemp, ${a}(valueForNaN),
            ${r}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(t){case $e.ADD:n=Yce;break;case $e.COMPLEX_MULTIPLY_IMAG:n=Jce;break;case $e.COMPLEX_MULTIPLY_REAL:n=Zce;break;case $e.DIV:n=ede;break;case $e.ELU_DER:n=tde;break;case $e.EQUAL:n=nde;break;case $e.FLOOR_DIV:n=sde;break;case $e.GREATER:n=ade;break;case $e.GREATER_EQUAL:n=rde;break;case $e.LESS:n=ide;break;case $e.LESS_EQUAL:n=ode;break;case $e.LOGICAL_AND:return e?ude:lde;case $e.LOGICAL_OR:return e?dde:cde;case $e.MUL:n=gde;break;case $e.PRELU:return e?Sde:vde;case $e.SQUARED_DIFFERENCE:n=Cde;break;case $e.SUB:n=$de;break}return`
    ${n}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ne;(function(t){t[t.ABS=0]="ABS",t[t.ACOS=1]="ACOS",t[t.ACOSH=2]="ACOSH",t[t.ASIN=3]="ASIN",t[t.ASINH=4]="ASINH",t[t.ATAN=5]="ATAN",t[t.ATANH=6]="ATANH",t[t.CEIL=7]="CEIL",t[t.COS=8]="COS",t[t.COSH=9]="COSH",t[t.ELU=10]="ELU",t[t.ERF=11]="ERF",t[t.EXP=12]="EXP",t[t.EXPM1=13]="EXPM1",t[t.FLOOR=14]="FLOOR",t[t.IS_FINITE=15]="IS_FINITE",t[t.IS_INF=16]="IS_INF",t[t.IS_NAN=17]="IS_NAN",t[t.LINEAR=18]="LINEAR",t[t.LOG=19]="LOG",t[t.LOG1P=20]="LOG1P",t[t.LOGICAL_NOT=21]="LOGICAL_NOT",t[t.NEG=22]="NEG",t[t.RELU=23]="RELU",t[t.RELU6=24]="RELU6",t[t.LEAKYRELU=25]="LEAKYRELU",t[t.RECIPROCAL=26]="RECIPROCAL",t[t.ROUND=27]="ROUND",t[t.RSQRT=28]="RSQRT",t[t.SELU=29]="SELU",t[t.SIGMOID=30]="SIGMOID",t[t.SIGN=31]="SIGN",t[t.SIN=32]="SIN",t[t.SINH=33]="SINH",t[t.SOFTPLUS=34]="SOFTPLUS",t[t.SQRT=35]="SQRT",t[t.SQUARE=36]="SQUARE",t[t.STEP=37]="STEP",t[t.TAN=38]="TAN",t[t.TANH=39]="TANH",t[t.TO_INT=40]="TO_INT"})(ne||(ne={}));const Nde="return abs(a);",kde=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,Ide=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Tde=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,Ede="return asinh(a);",Rde=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,Dde=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,Ade="return ceil(a);",_de="return cos(a);",Ode=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Fde="return exp(a) - 1.0;",zde="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Lde=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Pde=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${tb};
  let a1 = ${nb};
  let a2 = ${sb};
  let a3 = ${ab};
  let a4 = ${rb};
  let a5 = ${ib};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Mde="return exp(a);",Bde="return floor(a);",Vde="return f32(!isnan(a) && !isinf(a));",Ude="return f32(isinf(a));",Wde="return f32(isnan(a));",Gde="return a;",Hde=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,jde=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,qde="return f32(!(a >= 1.0));",Xde="return -a;",Kde="if (a < 0.0) { return uniforms.alpha * a; } return a;",Yde=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Qde="return 1.0 / a;",Zde="return select(a, 0.0, a < 0.0);",Jde="return clamp(a, 0.0, 6.0);",ehe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",the=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,nhe="return round(a);",she="return inverseSqrt(a);",ahe=`
  if (a >= 0.0) {
    return ${Pp} * a;
  } else {
    return ${Lp} * (exp(a) - 1.0);
  }
`,rhe="return 1.0 / (1.0 + exp(-1.0 * a));",ihe="return sign(a);",ohe="return sin(a);",lhe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,uhe=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,che="return sqrt(a);",dhe="return a * a;",hhe=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,phe="return tan(a);",fhe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,mhe="return f32(i32((a)));";function eo(t,e){switch(t){case ne.ABS:return Nde;case ne.ACOS:return kde;case ne.ACOSH:return Ide;case ne.ASIN:return Tde;case ne.ASINH:return Ede;case ne.ATAN:return Rde;case ne.ATANH:return Dde;case ne.COS:return _de;case ne.COSH:return Ode;case ne.CEIL:return Ade;case ne.ELU:return e?Lde:zde;case ne.ERF:return Pde;case ne.EXP:return Mde;case ne.EXPM1:return Fde;case ne.FLOOR:return Bde;case ne.IS_FINITE:return Vde;case ne.IS_INF:return Ude;case ne.IS_NAN:return Wde;case ne.LINEAR:return Gde;case ne.LOG:return Hde;case ne.LOG1P:return jde;case ne.LOGICAL_NOT:return qde;case ne.NEG:return Xde;case ne.LEAKYRELU:return e?Yde:Kde;case ne.RECIPROCAL:return Qde;case ne.RELU:return e?the:Zde;case ne.RELU6:return e?ehe:Jde;case ne.ROUND:return nhe;case ne.RSQRT:return she;case ne.SELU:return ahe;case ne.SIGMOID:return rhe;case ne.SIGN:return ihe;case ne.SIN:return ohe;case ne.SINH:return lhe;case ne.SOFTPLUS:return uhe;case ne.SQRT:return che;case ne.SQUARE:return dhe;case ne.STEP:return hhe;case ne.TAN:return phe;case ne.TANH:return fhe;case ne.TO_INT:return mhe;default:throw new Error(`BinaryType ${t} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(t,e=!1,n=!1,s=3){if(t===null)return"";let a="";if(t==="linear")a=eo(ne.LINEAR);else if(t==="relu")a=eo(ne.RELU,n);else if(t==="elu")a=eo(ne.ELU,n);else if(t==="relu6")a=eo(ne.RELU6,n);else if(t==="prelu")a=OS($e.PRELU,n);else if(t==="sigmoid")a=eo(ne.SIGMOID,n);else if(t==="leakyrelu")a=eo(ne.LEAKYRELU,n);else throw new Error(`Activation ${t} has not been implemented for the WebGPU backend.`);const i=De(n?4:1);let o="";return e?o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${a}
      }`:o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${a}
      }`,o}function hl(t,e){return`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(t,e,n=!1,s=!1,a=!1,r=1){N(t&&r===1||!t,()=>`transposeA ${t} is not compatible with component size ${r}`);const i=`
      ${t?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,o=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${De(r)} {
    var value = ${De(r)}(0.0);
    ${n&&a?i:`
    ${t?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${De(r)} {
    var value = ${De(r)}(0.0);
    ${o}
    return value;
  }
  `}function FS(t,e,n,s,a=!1,r=!1,i=!1,o=1){return`
  ${wO(n,s,a,r,i,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${De(o)}) {
    ${a&&r?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${hl(t,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const ghe=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,yhe=(t,e,n,s)=>{if(t)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${n}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let a="",r="";for(let i=0;i<e;i++)a+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,r+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${a}
        for (var i = 0; i < ${n}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${r}
        }
      }`}};function Ab(t,e,n=!1,s=32,a=!1,r=32,i=!1){const o=e[1]*t[1],l=e[0]*t[0],u=n?o:s,c=n?s:o,d=u/e[0],h=s/e[1],p=t[1],f=t[0];return N((n&&d===4&&t[1]===4||!n&&(d===3||d===4))&&u%e[0]===0&&s%e[1]===0&&t[0]===4,()=>`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${t[1]} must be 4.
          Otherwise, innerElementSize ${d} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${d}<f32>, ${u/d}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/t[0]}>, ${s}>;

  ${ae()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${p};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${p};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${a?"0":"i32(globalId.z)"};
    let batchA = ${a||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${a||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${a?`${Math.ceil(r/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${a?`i32(globalId.z) * ${r}`:"0"};

    var acc: array<vec4<f32>, ${p}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${h};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${ghe(n,d)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${yhe(n,d,p,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const rN=t=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,bhe=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function _b(t,e,n=!1,s=32,a=!1,r=32,i=!1,o=!1){const l=t[1]*e[1],u=t[0]*e[0],c=n?l:s,d=n?s:l;N(d%e[1]===0&&c%e[0]===0&&s%e[1]===0,()=>`tileAHight ${d} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const h=d/e[1],p=c/e[0],f=s/e[1],m=t[1],y=t[0],g=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${rN(n)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${y}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${y}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${y}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${y};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${y};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${h};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${h}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${rN(n)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${y}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${y}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${y}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${bhe(n)}
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${y}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${s}>;

    ${ae()} {
      let batch = ${a?"0":"i32(globalId.z)"};
      let batchA = ${a||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${a||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${a?`${Math.ceil(r/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${a?`i32(globalId.z) * ${r}`:"0"};

      var acc : array<array<f32, ${y}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const xhe=t=>t?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function whe(t,e=!1){N(t[1]===1&&t[2]===1,()=>`A linear work group size is required. But got ${t}.`);const n=t[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${t[0]}>;

    ${ae()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${n} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${xhe(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n/4}; k++) {
          let rowB = t * ${n} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class vhe{constructor(e,n,s=!1,a=!1,r=null,i=null,o=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=s?e[1]:e[2];if(this.isVec4=(u%4===0&&!s||n[1]%4===0&&s)&&n[2]%4===0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=n[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const h=qce(n[1],u,n[2],s);this.workgroupSize=h.workgroupSize,this.elementsPerThread=h.elementsPerThread}this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=r!=null,d=o!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=a,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(n[1],n[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,n,s){const a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=r;const i=e%a===0,o=n%r===0,l=s%this.tileInner===0;return[i,o,l]}getUserCode(){return`
      ${Vr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${FS(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Ab(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?whe(this.workgroupSize,this.transposeA):_b(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function She(t){return`
    var<workgroup> sumValues : array<f32, ${t}>;
    ${ae()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${t}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${t/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class Che{constructor(e,n=!1,s=!1,a=null,r=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize);const o=a!=null,l=i!=null;o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=s,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${n}_${s}`}getUserCode(){return`
      ${Vr(this.activation,this.hasPreluActivationWeights)}
      ${FS(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${She(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $he(t){const e=t[1],n=t[0],s=e>n?e:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${ae()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class Nhe{constructor(e,n,s,a=!1,r=!1,i=null,o=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const u=i!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${a}_${r}`}getUserCode(){return`
      ${Vr(this.activation,this.hasPreluActivationWeights)}
      ${FS(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${$he(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class khe{constructor(e,n,s=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,N(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const r=(s&&this.outputShape[1]%4===0||!s&&n%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=re(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],n],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.shaderKey=`matMulSplitK_${s}_${a}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${wO(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${De(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Hi("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Ab(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):_b(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class Ihe{constructor(e,n=null,s=null,a=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n!=null,this.hasPreluActivationWeights=a!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${Vr(this.activation,this.hasPreluActivationWeights)}
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${hl(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class The{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(t){const{backend:e,attrs:n}=t,{shape:s,value:a}=n;let{dtype:r}=n;if(r=r||Ko(a),r==="string"){const i=Ot(r,L(s));return i.fill(a),e.makeTensorInfo(s,r,i)}else{const i=new The(s),o=[{type:"float32",data:[a]}];return e.runWebGPUProgram(i,[],r,o)}}const Ehe={kernelName:Gg,backendName:"webgpu",kernelFunc:Zn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(t){const{inputs:e,attrs:n}=t,{x:s}=e,{shape:a}=n,r=L(s.shape),i=Ow(a,r),o=L(i);return N(r===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${s.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),t.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const Rhe={kernelName:gp,backendName:"webgpu",kernelFunc:pe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ob({a:t,b:e,transposeA:n,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,d=n?t.shape[u-2]:t.shape[u-1],h=s?e.shape[c-1]:e.shape[c-2],p=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=L(m),b=L(y),w=Se(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);N(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[g,d,p]:[g,p,d],C=s?[b,f,h]:[b,h,f],$=pe({inputs:{x:t},backend:a,attrs:{shape:v}}),k=pe({inputs:{x:e},backend:a,attrs:{shape:C}}),T=[$,k],E=Math.max(g,b),O=[$,k],B=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[d]}];let W,V;const G=[E,p,f];let D=M().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(D<0){const P=M().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),j=P>0?P:a.thresholdToIncreaseWorkgroups,X=E*Math.ceil(p/32)*Math.ceil(f/32);X<=j||p<=8&&X<=j*2?E*p*f<=128?D=za.MatMulReduceProgram:E===1&&h>=2e3?D=za.MatMulSplitKProgram:D=za.MatMulSmallOutputSizeProgram:D=za.MatMulPackedProgram}switch(D){case za.MatMulReduceProgram:W=new Che(G,n,s,r,l,i);break;case za.MatMulSplitKProgram:{if(V=Zn({backend:a,attrs:{shape:G,value:0,dtype:t.dtype}}),W=new khe(G,h,n,s),r||l){V=a.runWebGPUProgram(W,O,t.dtype,B,V);const j=new Ihe(V.shape,r,l,i);let X=null;const Q=[V];r&&Q.push(r),i&&Q.push(i),l==="leakyrelu"&&(X=[{type:"float32",data:[o]}],j.uniforms+=" alpha : f32,");const ee=a.runWebGPUProgram(j,Q,V.dtype,X);T.push(V);const J=pe({inputs:{x:ee},backend:a,attrs:{shape:w}});T.push(ee);for(const se of T)a.disposeData(se.dataId);return J}break}case za.MatMulSmallOutputSizeProgram:W=new Nhe(v,C,G,n,s,r,l,i);break;case za.MatMulPackedProgram:const P=a.adapterInfo.isIntel();W=new vhe(v,G,n,s,r,l,i,P);break;default:throw new Error(`Unsupported MatMulProgramType ${D}.`)}r&&O.push(r),i&&O.push(i),l==="leakyrelu"&&(B.push({type:"float32",data:[o]}),W.uniforms+=" alpha : f32,"),V=a.runWebGPUProgram(W,O,t.dtype,B,V);const H=pe({inputs:{x:V},backend:a,attrs:{shape:w}});T.push(V);for(const P of T)a.disposeData(P.dataId);return H}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dhe(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;return Ob({a,b:r,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}const Ahe={kernelName:Yd,backendName:"webgpu",kernelFunc:Dhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iN{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Se(n,s),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${OS(this.op,!1)}
      }

      ${ae("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ng{constructor(e,n,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Se(n,s),this.dispatchLayout=ce(this.outputShape),this.op=e,this.useSharedMemoryWithA=n.length<=1&&s.length>1&&n[0]<128,this.useSharedMemoryWithB=s.length<=1&&n.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:n[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const a=n.length>0&&n[n.length-1]%4===0,r=s.length>0&&s[s.length-1]%4===0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(u2(s)||s[s.length-1]===1)||r&&(u2(n)||n[n.length-1]===1)?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const n=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${n}, b : ${n}) -> ${n} {
      ${OS(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const a=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${a}];`:`let a = sharedBuf[${a}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ae("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${r}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${ae("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${n}(getAByOutputCoords(coords));
           let b = ${n}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(t){const{inputs:e}=t,{x:n}=e;return t.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const _he={kernelName:ec,backendName:"webgpu",kernelFunc:gs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(t){const{inputs:e,backend:n}=t,{real:s,imag:a}=e,r=n.makeTensorInfo(s.shape,"complex64"),i=n.tensorMap.get(r.dataId),o=gs({inputs:{x:s},backend:n}),l=gs({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const Ohe={kernelName:Rg,backendName:"webgpu",kernelFunc:pl};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wc{constructor(e,n,s=""){this.variableNames=["A"],this.size=!0;const a=128;this.workgroupSize=[a,1,1],this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=n,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${n}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${eo(this.op,!1)}
      }
      ${ae("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function je({opType:t,cpuKernelImpl:e,dtype:n}){return({inputs:s,backend:a})=>{const{x:r}=s,i=a,o=n||r.dtype;if(i.shouldExecuteOnCPU([r])&&e!=null){const u=i.tensorMap.get(r.dataId),c=e(u.values,o);return i.makeTensorInfo(r.shape,o,c)}const l=new Wc(r.shape,t);return i.runWebGPUProgram(l,[r],o)}}function fn({opType:t,cpuKernelImpl:e,supportsComplex:n=!1,dtype:s}){return({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;if(n&&i.dtype==="complex64"){const d=l.tensorMap.get(i.dataId),h=l.tensorMap.get(o.dataId);let p,f;if(t!==$e.MUL)[p,f]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(y=>{const[g,b]=y,x={dataId:g.dataId,dtype:g.dtype,shape:i.shape},w={dataId:b.dataId,dtype:b.dtype,shape:o.shape},v=new ng(t,i.shape,o.shape);return l.runWebGPUProgram(v,[x,w],pn(g.dtype,b.dtype))});else{const y=new iN($e.COMPLEX_MULTIPLY_REAL,i.shape,o.shape),g=new iN($e.COMPLEX_MULTIPLY_IMAG,i.shape,o.shape),b=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:o.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:o.shape}];p=l.runWebGPUProgram(y,b,"float32"),f=l.runWebGPUProgram(g,b,"float32")}const m=pl({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}const u=s||pn(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([i,o]))&&e!=null){const d=l.tensorMap.get(i.dataId).values,h=l.tensorMap.get(o.dataId).values,p=i.dtype==="string"?Ia(d):d,f=i.dtype==="string"?Ia(h):h,[m,y]=e(i.shape,o.shape,p,f,u);return l.makeTensorInfo(y,u,m)}const c=new ng(t,i.shape,o.shape);return l.runWebGPUProgram(c,[i,o],u)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Fhe,castImpl:zhe,ceilImpl:Lhe,concatImpl:Phe,equalImpl:Mhe,expImpl:Bhe,expm1Impl:Vhe,floorImpl:Uhe,floorDivImpl:Whe,gatherNdImpl:Ghe,gatherV2Impl:Hhe,greaterEqualImpl:jhe,greaterImpl:qhe,lessEqualImpl:Xhe,lessImpl:Khe,logImpl:Yhe,maxImpl:Qhe,maximumImpl:Zhe,minimumImpl:Jhe,multiplyImpl:epe,negImpl:tpe,notEqualImpl:npe,prodImpl:spe,rangeImpl:ape,rsqrtImpl:rpe,scatterImpl:ipe,simpleAbsImpl:ope,sliceImpl:lpe,stridedSliceImpl:upe,stringNGramsImpl:cpe,subImpl:dpe,tileImpl:hpe,topKImpl:ppe,transposeImpl:fpe,uniqueImpl:N1e}=o_;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mpe=je({opType:ne.ABS,cpuKernelImpl:ope}),gpe={kernelName:Th,backendName:"webgpu",kernelFunc:mpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ype=je({opType:ne.ACOS}),bpe={kernelName:Ou,backendName:"webgpu",kernelFunc:ype};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xpe=je({opType:ne.ACOSH}),wpe={kernelName:Fu,backendName:"webgpu",kernelFunc:xpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vpe=fn({opType:$e.ADD,cpuKernelImpl:Fhe,supportsComplex:!0}),Spe={kernelName:Yo,backendName:"webgpu",kernelFunc:vpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cpe{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((n,s)=>`T${s}`),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(a=>{e.push(`let v${a} = get${a}ByOutputCoords(coords);`)});const n=this.variableNames.map(a=>`v${a}`).join(" + ");return`
      ${ae("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${n});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $pe(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return gs({inputs:{x:s[0]},backend:n});const a=s.map(o=>o.dtype).reduce((o,l)=>pn(o,l)),r=s.map(o=>o.shape),i=new Cpe(r);return n.runWebGPUProgram(i,s,a)}const Npe={kernelName:Eh,backendName:"webgpu",kernelFunc:$pe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kpe{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[n[a]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){N(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${ae()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ipe{constructor(e,n){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[n[a]];this.outputShape=s,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=n,this.shaderKey=`transpose_${n}`}getUserCode(){const e=Mt(this.outputShape.length),n=vO(this.newDim);return`
      ${ae("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${n}), uniforms.aShape)]);
          }
        }
      }
    `}}function vO(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=new Array(e);for(let s=0;s<t.length;s++)n[t[s]]=`coords.${Er(s)}`;return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{perm:r}=s,i=n,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[r[c]];if(n.shouldExecuteOnCPU([a])){const d=i.tensorMap.get(a.dataId).values,h=fpe(d,a.shape,a.dtype,r,l);return n.makeTensorInfo(l,a.dtype,h)}if(a.shape.length===2&&Ee(r,[1,0])){const c=new kpe(a.shape,r);return i.runWebGPUProgram(c,[a],a.dtype)}const u=new Ipe(a.shape,r);return i.runWebGPUProgram(u,[a],a.dtype)}const Tpe={kernelName:xo,backendName:"webgpu",kernelFunc:er};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Epe{constructor(e,n,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[a]=Vt(this.inputShape,[1]);this.outputShape=a.length===0?[1]:a,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=n,this.shaderKey=`reduce_${n}`}getUserCode(){let e="",n="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,n="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",n="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",n="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",n="0.0");const a=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ae("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${a}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rpe={mean:"float32",all:"bool",any:"bool"};function fl(t,e,n,s,a){const r=t.shape.length,i=[],o=Ie(e,t.shape);let l=o;const u=tt(l,r);let c=t;u!=null&&(c=er({inputs:{x:t},attrs:{perm:u},backend:a}),l=ht(l.length,r),i.push(c)),jt(s,l,r);const[d,h]=Vt(c.shape,l);let p=d;n&&(p=zt(d,o));let f;if((s==="max"||s==="prod")&&a.shouldExecuteOnCPU([c])){const m=a.tensorMap.get(c.dataId).values;switch(s){case"max":const y=Qhe(m,L(h),p,t.dtype);f=a.makeTensorInfo(p,t.dtype,y);break;case"prod":const{outVals:g,outShape:b,outDtype:x}=spe(c.shape,c.dtype,m,l);f=a.makeTensorInfo(b,x,g);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const m=L(h),g=L(c.shape)/m,b={windowSize:m,inSize:m,batchSize:g,outSize:1},x=Rpe[s]||vy(t.dtype),w=[{type:"int32",data:[m]}],v=new Epe(b,s,a.device.limits.maxComputeWorkgroupSizeX),C=a.runWebGPUProgram(v,[c],x,w);i.push(C),f=pe({inputs:{x:C},attrs:{shape:p},backend:a})}return i.forEach(m=>a.disposeData(m.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{keepDims:r,axis:i}=s;return fl(a,i,r,"all",n)}const Ape={kernelName:Cg,backendName:"webgpu",kernelFunc:Dpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _pe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{keepDims:r,axis:i}=s;return fl(a,i,r,"any",n)}const Ope={kernelName:$g,backendName:"webgpu",kernelFunc:_pe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SO{constructor(e,n,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const a=[n];this.op=s==="min"?"<":">";const[r,i]=Vt(e,a);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=ce(this.outputShape),L(i)<32?(this.type="plain",this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=re(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],n=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Er(this.inputShape.length-1)}`,s=()=>{let a="";if(this.outputShape.length===1)this.inputShape.length!==1&&(a+="outputCoords,");else for(let r=0;r<this.outputShape.length;r++)a+=`outputCoords.${Er(r)},`;return a};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${ae("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${n()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${ae("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${n()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=er({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ht(i.length,l.shape.length)),jt("argMax",[i[0]],l.shape.length);const c=new SO(l.shape,i[0],"max"),d=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=n.runWebGPUProgram(c,[l],"int32",d);return u.forEach(p=>n.disposeData(p.dataId)),h}const zpe={kernelName:Rh,backendName:"webgpu",kernelFunc:Fpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r}=s;let i=Ie(r,a.shape);const o=tt(i,a.shape.length);let l=a;const u=[];o!=null&&(l=er({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ht(i.length,l.shape.length)),jt("argMin",[i[0]],l.shape.length);const c=new SO(l.shape,i[0],"min"),d=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=n.runWebGPUProgram(c,[l],"int32",d);return u.forEach(p=>n.disposeData(p.dataId)),h}const Ppe={kernelName:Dh,backendName:"webgpu",kernelFunc:Lpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mpe=je({opType:ne.ASIN}),Bpe={kernelName:zu,backendName:"webgpu",kernelFunc:Mpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vpe=je({opType:ne.ASINH}),Upe={kernelName:Lu,backendName:"webgpu",kernelFunc:Vpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wpe=je({opType:ne.ATAN}),Gpe={kernelName:Pu,backendName:"webgpu",kernelFunc:Wpe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hpe=fn({opType:$e.ATAN2}),jpe={kernelName:Bu,backendName:"webgpu",kernelFunc:Hpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qpe=je({opType:ne.ATANH}),Xpe={kernelName:Mu,backendName:"webgpu",kernelFunc:qpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kpe{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fh{constructor(e,n,s=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=s,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool2D_${n}_${s}_${a}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}class zS{constructor(e,n,s=!1,a=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=s,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool3D_${n}_${s}_${a}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reductionIndices:r,keepDims:i}=s;return fl(a,r,i,"max",n)}const Ype={kernelName:np,backendName:"webgpu",kernelFunc:CO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{keepDims:r,axis:i}=s;return fl(a,i,r,"mean",n)}const Qpe={kernelName:rp,backendName:"webgpu",kernelFunc:$O};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(t,e,n,s){if(e.filterWidth===1&&e.filterHeight===1&&Ee(e.inShape,e.outShape))return gs({inputs:{x:t},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=t.shape.length,o=pe({inputs:{x:t},backend:s,attrs:{shape:[t.shape[i-3]*t.shape[i-2],t.shape[i-1]]}});let l;n==="avg"?l=$O({inputs:{x:o},backend:s,attrs:{axis:0,keepDims:!1}}):(N(n==="max",()=>`Invalid pool type ${n}`),l=CO({inputs:{x:o},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const u=pe({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(o.dataId),s.disposeData(l.dataId),u}let a;const r=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?a=new Kpe(e):(n==="avg"?a=new fh(e,"avg"):(N(n==="max",()=>`Invalid pool type ${n}`),a=new fh(e,"max")),r.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(a,[t],t.dtype,r)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,c=Rn(a.shape,r,i,1,o,l);return NO(a,c,"avg",n)}const Jpe={kernelName:Ah,backendName:"webgpu",kernelFunc:Zpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function efe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Os(a.shape,r,i,c,o,u,l),h=new zS(d,"avg"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[a],a.dtype,p)}const tfe={kernelName:_h,backendName:"webgpu",kernelFunc:efe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nfe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class sfe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function afe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,d=Os(i.shape,o,l,1,u,c),h=new sfe(d),p=1/(d.filterDepth*d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(h,[a],i.dtype,f)}const rfe={kernelName:kg,backendName:"webgpu",kernelFunc:afe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ife(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r;xO([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rn(i.shape,o,l,1,u),d=new nfe(c),h=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(d,[a],i.dtype,p)}const ofe={kernelName:Ng,backendName:"webgpu",kernelFunc:ife};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lfe(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:r}=e,{transposeA:i,transposeB:o}=s;return Ob({a,b:r,transposeA:i,transposeB:o,backend:n})}const ufe={kernelName:Oh,backendName:"webgpu",kernelFunc:lfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cfe{constructor(e,n){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.rank=n.length,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Mt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Mt(this.rank),n=dfe(this.rank);let s;return this.start.length===1?s=this.outputShape.map((r,i)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((r,i)=>`sourceLoc.${R1[i]} = uniforms.start.${Er(i)} + coords.${R1[i]};`),`
      ${ae("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${n}));
        }
      }
    `}}const R1=["x","y","z","w","u","v"];function dfe(t){if(t===1)return"sourceLoc";if(t<=6)return R1.slice(0,t).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gc(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,size:i}=s,[o,l]=zp(a,r,i);if(qy(a,o,l),n.shouldExecuteOnCPU([a])||a.dtype==="string"){const d=n.tensorMap.get(a.dataId),h=lpe(d.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,h)}if(L(l)===0)return n.makeTensorInfo(l,a.dtype,[]);const u=new cfe(o,l),c=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[a],a.dtype,c)}const hfe={kernelName:vp,backendName:"webgpu",kernelFunc:Gc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pfe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,crops:i}=s;N(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const o=r.reduce((b,x)=>b*x),l=sl(a.shape,r,o),u=al(l.length,r.length),c=rl(a.shape,r,o),d=Jy(i,r.length),h=eb(c,i,r.length),p=[],f=pe({inputs:{x:a},backend:n,attrs:{shape:l}}),m=er({inputs:{x:f},backend:n,attrs:{perm:u}}),y=pe({inputs:{x:m},backend:n,attrs:{shape:c}}),g=Gc({inputs:{x:y},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(y),p.forEach(b=>n.disposeData(b.dataId)),g},ffe={kernelName:Fh,backendName:"webgpu",kernelFunc:pfe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mfe=`
  fn bincount_write(index: i32, value: f32) {
    ${Hi("&result[index]","value","float32")}
  }
`,gfe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class kO{constructor(e,n,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=n,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?gfe:mfe}
  ${ae("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i}=s,o=L(a.shape),u=L(r.shape)>0,c=[i],d=r.dtype,h=Zn({backend:n,attrs:{shape:c,value:0,dtype:d}}),p=new kO([o],u),f=[{type:"int32",data:[i]}],m=u?[a,r]:[a];return n.runWebGPUProgram(p,m,d,f,h)}const bfe={kernelName:Ig,backendName:"webgpu",kernelFunc:yfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xfe{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${ae("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wfe(t){const{inputs:e,backend:n}=t,{s0:s,s1:a}=e;if(n.shouldExecuteOnCPU([s,a])){const c=n.tensorMap.get(s.dataId),d=n.tensorMap.get(a.dataId),h=c.values,p=d.values,f=Se(Array.from(h),Array.from(p));return n.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const r=L(s.shape),i=L(a.shape),o=Math.max(r,i),l=new xfe(o),u=[{type:"int32",data:[r]},{type:"int32",data:[i]}];return n.runWebGPUProgram(l,[s,a],"int32",u)}const vfe={kernelName:Eg,backendName:"webgpu",kernelFunc:wfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO=fn({opType:$e.NOT_EQUAL,dtype:"bool",cpuKernelImpl:npe}),Sfe={kernelName:up,backendName:"webgpu",kernelFunc:IO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.tensorMap.get(s.dataId);return gs({inputs:{x:a.complexTensorInfos.real},backend:n})}const Cfe={kernelName:ay,backendName:"webgpu",kernelFunc:Jp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $fe(t,e){const n=new Wc(t.shape,ne.TO_INT),s=e.runWebGPUProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D1(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return gs({inputs:{x:a},backend:n});const i=Ht(a.shape),o=D1({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=pl({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeData(o.dataId),l}if(a.dtype==="complex64"){const i=Jp({inputs:{input:a},backend:n}),o=D1({inputs:{x:i},backend:n,attrs:{dtype:r}});return n.disposeData(i.dataId),o}if(!Fw(a.dtype,r)){const i=gs({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(n.shouldExecuteOnCPU([a])){const i=n.tensorMap.get(a.dataId).values,[o,l,u]=zhe(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}if(r==="int32")return $fe(a,n);if(r==="bool"){const i=n.makeTensorInfo([],"bool",nn("bool",1)),l=IO({inputs:{a,b:i},backend:n});return n.disposeData(i.dataId),l}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const Nfe={kernelName:Vu,backendName:"webgpu",kernelFunc:D1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kfe=je({opType:ne.CEIL,cpuKernelImpl:Lhe}),Ife={kernelName:Uu,backendName:"webgpu",kernelFunc:kfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tfe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ae("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Efe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ae("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{clipValueMin:r,clipValueMax:i}=s;let o;const l=[{type:"float32",data:[r]},{type:"float32",data:[i]}];return L(a.shape)%4===0?o=new Tfe(a.shape):o=new Efe(a.shape),n.runWebGPUProgram(o,[a],a.dtype,l)}const Dfe={kernelName:Wu,backendName:"webgpu",kernelFunc:Rfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Afe{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function _fe(t){const{inputs:e,backend:n}=t,{x:s}=e,a=n.tensorMap.get(s.dataId),r=new Afe(s.shape),i=[oN(s,a.complexTensorInfos.real),oN(s,a.complexTensorInfos.imag)];return n.runWebGPUProgram(r,i,i[0].dtype)}const Ofe={kernelName:zh,backendName:"webgpu",kernelFunc:_fe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ffe{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Qn(e,1),this.variableNames=e.map((n,s)=>`T${s}`),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let n=0;n<this.offsetLength;n++)this.uniforms+=`offset${n} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);const s=this.offsetLength,a=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${a})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ae("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(t){const{inputs:e,backend:n}=t,{input:s}=e,a=n.tensorMap.get(s.dataId);return gs({inputs:{x:a.complexTensorInfos.imag},backend:n})}const zfe={kernelName:Xg,backendName:"webgpu",kernelFunc:Fb};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function md(t,e,n){const s=t[0].dtype;if(s==="complex64"){const f=t.map(x=>Jp({inputs:{input:x},backend:n})),m=t.map(x=>Fb({inputs:{input:x},backend:n})),y=md(f,e,n),g=md(m,e,n),b=pl({inputs:{real:y,imag:g},backend:n});return f.forEach(x=>n.disposeData(x.dataId)),m.forEach(x=>n.disposeData(x.dataId)),n.disposeData(y.dataId),n.disposeData(g.dataId),b}let a=n.shouldExecuteOnCPU(t);if(s==="string"&&(a=!0),a){const f=t.map(v=>{const $=[-1,L(v.shape.slice(e))];return pe({inputs:{x:v},backend:n,attrs:{shape:$}})}),m=f.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),y=Qn(f.map(v=>v.shape),1),g=f[0].shape[0]===1,b=Phe(m,y,s,g),x=Qn(t.map(v=>v.shape),e),w=n.makeTensorInfo(x,s,b);return f.forEach(v=>n.disposeData(v.dataId)),w}const r=n.device.limits.maxStorageBuffersPerShaderStage-1;if(t.length>r){const f=[];for(let y=0;y<t.length;y+=r){const g=t.slice(y,y+r);f.push(md(g,e,n))}const m=md(f,e,n);for(const y of f)n.disposeData(y.dataId);return m}const{tensors2D:i,outShape:o}=Lfe(t,e,n),l=i.map(f=>f.shape),u=new Ffe(l),c=[],d=new Array(l.length-1);if(d.length>0){d[0]=l[0][1],c.push({type:"int32",data:[d[0]]});for(let f=1;f<d.length;f++)d[f]=d[f-1]+l[f][1],c.push({type:"int32",data:[d[f]]})}const h=n.runWebGPUProgram(u,i,i[0].dtype,c);i.forEach(f=>n.disposeData(f.dataId));const p=pe({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),p}function Lfe(t,e,n){const s=Qn(t.map(r=>r.shape),e);return{tensors2D:t.map(r=>pe({inputs:{x:r},backend:n,attrs:{shape:[L(r.shape.slice(0,e)),L(r.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,r=Ie(a,e[0].shape)[0],i=e.map(u=>u.shape);Yy(i,r);const o=Qn(e.map(u=>u.shape),r);if(L(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>L(u.shape)>0);return l.length===1?gs({inputs:{x:l[0]},backend:n}):md(l,r,n)}const Pfe={kernelName:Lh,backendName:"webgpu",kernelFunc:TO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mfe(t,e,n,s,a=!1,r=null,i=!1,o=4,l=4,u=4){const c=T=>{switch(T){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},d=T=>{switch(T){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},h=t?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=t?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=t?"uniforms.xShape[1]":"uniforms.xShape[2]",m=t?"uniforms.xShape[2]":"uniforms.xShape[3]",y=t?"row":"col",g=t?"col":"row",b=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${De(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${h}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(o)}
      }
      return resData;`,x=t?e&&s?`
      ${b}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${b}
      }
      return ${De(o)}(0.0);`:s&&n?`
      ${b}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${b}
      }
      return ${De(o)}(0.0);`,w=`${d(l)}`,v=De(u),C=De(t?o:l),$=De(t?l:o);return`
      ${Vr(r,i,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${C} {
        ${t?x:w}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${$} {
        ${t?w:x}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${v}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${hl(a,r)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class Bfe{constructor(e,n,s,a,r=!1,i=null,o=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=gO(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=yO(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),o&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=r,this.activation=i,this.hasPreluActivationWeights=o,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=n%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=a%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Ab(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):_b(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),n=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Mfe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,n[0],n[1],n[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vfe{constructor(e,n=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n,this.activation=s,this.hasPreluActivationWeights=a,n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${Vr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${hl(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${ae("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ufe{constructor(e,n){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=n,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${ae("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${a};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${n}] && xCol >= 0) {
            value = ${r};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sg(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function Wfe({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=n.dataFormat==="channelsLast",u=!l,c=!1,d=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",h=[];let p,f;if(d){const g=n.inHeight*n.inWidth*n.inChannels;p=pe({inputs:{x:t},backend:s,attrs:{shape:[1,n.batchSize,g]}}),f=pe({inputs:{x:e},backend:s,attrs:{shape:[1,g,n.outChannels]}})}else p=pe({inputs:{x:t},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=pe({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(h.push(p),h.push(f),r!=null){const g=sg(r.shape,l);g!=null&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:g}}),h.push(r))}if(a!=null){const g=sg(a.shape,l);g!=null&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:g}}),h.push(a))}const m=Ob({a:l?p:f,b:l?f:p,transposeA:u,transposeB:c,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),y=pe({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});h.push(m);for(const g of h)s.disposeData(g.dataId);return y}function Gfe({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:d,strideHeight:h,padInfo:p,outWidth:f,outHeight:m,dilationWidth:y,dilationHeight:g,dataFormat:b}=n,x=b==="channelsLast",w=l*u*c,v=m*f,C=x?[n.batchSize,v,w]:[n.batchSize,w,v],$=new Ufe(C,x),k=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[h,d]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],T=s.runWebGPUProgram($,[t],t.dtype,k),E=[];E.push(T);const O=pe({inputs:{x:e},backend:s,attrs:{shape:[1,w,-1]}});if(E.push(O),r!=null){const D=sg(r.shape,x);D!=null&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:D}}),E.push(r))}if(a!=null){const D=sg(a.shape,x);D!=null&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:D}}),E.push(a))}const V=Ob({a:x?T:O,b:x?O:T,transposeA:!x,transposeB:!1,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),G=pe({inputs:{x:V},backend:s,attrs:{shape:n.outShape}});E.push(V);for(const D of E)s.disposeData(D.dataId);return G}function EO({x:t,filter:e,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=a!=null,u=r!=null,c=n.dataFormat==="channelsLast",d=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",h=M().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!h&&(d||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID")))return Wfe({x:t,filter:e,convInfo:n,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i});const p=M().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>-1?p:s.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(M().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return Gfe({x:t,filter:e,convInfo:n,backend:s,bias:a,preluActivationWeights:r,leakyreluAlpha:i,activation:o});let y;const g=[n.padInfo.top,n.padInfo.left],b=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(h)y=new Vfe(n,l,o,u);else{const C=c?n.outHeight*n.outWidth:n.outChannels,$=c?n.outChannels:n.outHeight*n.outWidth,k=n.filterHeight*n.filterWidth*n.inChannels;b.push({type:"int32",data:[C]},{type:"int32",data:[$]},{type:"int32",data:[k]});const T=s.adapterInfo.isIntel();y=new Bfe(n,C,$,k,l,o,u,T)}const x=[],w=[t,e];l&&(!c&&a.shape.length===1&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),x.push(a)),w.push(a)),u&&(!c&&r.shape.length===1&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),x.push(r)),w.push(r)),o==="leakyrelu"&&(b.push({type:"float32",data:[i]}),y.uniforms+=" alpha : f32,");const v=s.runWebGPUProgram(y,w,t.dtype,b);for(const C of x)s.disposeData(C.dataId);return v}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hfe(t){const{inputs:e,attrs:n,backend:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=n,d=xs(l),h=dt(a.shape,r.shape,i,u,o,c,!1,d);return EO({x:a,filter:r,convInfo:h,backend:s})}const jfe={kernelName:Ph,backendName:"webgpu",kernelFunc:Hfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qfe{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,a=`
    ${ae()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${a}
    `:`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${n}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Xfe{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Kfe{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Yfe{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${ae("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,d=xs(l),h=dt(a.shape,c,i,1,o,u,!1,d),p=new Xfe(h),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]}];return n.runWebGPUProgram(p,[a,r],a.dtype,f)}const Zfe={kernelName:Dg,backendName:"webgpu",kernelFunc:Qfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jfe(t=4){const e=r=>{switch(r){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${r} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${De(t)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${De(t)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${t}];`}
      }
      return ${De(t)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${De(t)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${De(t)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(t)}
    }
    return ${De(t)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${De(t)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${t}] = value;
    }
  }`}class eme{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,N(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=gO(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=yO(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Ab(this.elementsPerThread,this.workgroupSize):_b(this.elementsPerThread,this.workgroupSize);return`
    ${Jfe(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tme(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,d=xs(u),h=dt(i,r.shape,o,1,l,c,!1,d),p=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}];let f;if(M().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||h.dataFormat!=="channelsLast")f=new qfe(h);else{f=new eme(h);const m=h.inHeight*h.inWidth,y=h.inChannels,g=h.filterHeight*h.filterWidth*h.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[y]},{type:"uint32",data:[g]})}return n.runWebGPUProgram(f,[a,r],"float32",p)}const nme={kernelName:Mh,backendName:"webgpu",kernelFunc:tme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sme{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ame(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Oa(a.shape,r.shape,i,l,o),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],d=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],h=new sme(u),p=pn(a.dtype,r.dtype);return n.runWebGPUProgram(h,[a,r],p,d)}const rme={kernelName:Bh,backendName:"webgpu",kernelFunc:ame};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ime(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s,u=Oa(a.shape,l,i,1,o),c=new Kfe(u),d=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(c,[a,r],r.dtype,d)}const ome={kernelName:Ag,backendName:"webgpu",kernelFunc:ime};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lme(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,pad:o,inputShape:l}=s,u=Oa(l,r.shape,i,1,o),c=new Yfe(u),d=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(c,[a,r],a.dtype,d)}const ume={kernelName:_g,backendName:"webgpu",kernelFunc:lme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cme=je({opType:ne.COS}),dme={kernelName:Gu,backendName:"webgpu",kernelFunc:cme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hme=je({opType:ne.COSH}),pme={kernelName:Hu,backendName:"webgpu",kernelFunc:hme};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fme{constructor(e,n,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[r]=n;this.outputShape=[r,s[0],s[1],e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=a==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,n]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,a,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,o,l]=this.cropWidthBiggerThan1?[`(${n} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${n} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${n}`];return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${a};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${n} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mme=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new fme(a.shape[3],r.shape,o,l),d=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[a,r,i],"float32",d)},gme={kernelName:Fg,backendName:"webgpu",kernelFunc:mme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mh;(function(t){t.Prod="*",t.Sum="+"})(mh||(mh={}));class lN{constructor(e,n,s,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=a,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,n=this.op===mh.Prod?"1.0":"0.0",s=this.exclusive?n:`getX(${uN(e,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1];let r="",i="";return this.exclusive?(r=this.reverse?`end != ${a-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${a}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${ae("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${cN(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${i};
           ${cN(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${uN(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function uN(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function cN(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(t,e,n,s,a,r){const i=e.shape.length,o=tt([s],i);let l=e;o!=null&&(l=er({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=ht(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let d=gs({inputs:{x:l},backend:n});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new lN(t,l.shape,!1,r),f=d,m=[{type:"float32",data:[h]}];d=n.runWebGPUProgram(p,[d],d.dtype,m),n.disposeData(f.dataId)}if(a){const h=new lN(t,l.shape,a,r),p=d,f=[{type:"float32",data:[0]}];d=n.runWebGPUProgram(h,[d],d.dtype,f),n.disposeData(p.dataId)}if(o!=null){const h=sr(o),p=er({inputs:{x:d},backend:n,attrs:{perm:h}});return n.disposeData(d.dataId),n.disposeData(l.dataId),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return RO(mh.Prod,a,n,r,i,o)}const bme={kernelName:Og,backendName:"webgpu",kernelFunc:yme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return RO(mh.Sum,a,n,r,i,o)}const wme={kernelName:Vh,backendName:"webgpu",kernelFunc:xme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s,l=a.shape.length===1,c=L(r.shape)>0,d=r.dtype,h=l?[a.shape[0]]:[a.shape[0],a.shape[1]],p=l?[i]:[a.shape[0],i],f=Zn({backend:n,attrs:{shape:p,value:0,dtype:d}}),m=new kO(h,c,o),y=[{type:"int32",data:[i]}],g=c?[a,r]:[a];return n.runWebGPUProgram(m,g,d,y,f)}const Sme={kernelName:zg,backendName:"webgpu",kernelFunc:vme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cme{constructor(e,n){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${n}`,this.dataFormat=n}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $me(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockSize:r,dataFormat:i}=s,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],c=i==="NHWC"?a.shape[3]:a.shape[1],d=l*r,h=u*r,p=c/(r*r),f=i==="NHWC"?[o,d,h,p]:[o,p,d,h],m=[{type:"int32",data:[r]}],y=new Cme(f,i);return n.runWebGPUProgram(y,[a],a.dtype,m)}const Nme={kernelName:Lg,backendName:"webgpu",kernelFunc:$me};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kme{constructor(e,n,s,a=!1,r=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=i,this.filterHeight=n,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,n=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return`
      ${Vr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${a}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${ae()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${a}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<n?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${n})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${hl(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DO{constructor(e,n=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=ce(r),this.dispatch=re(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),N(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=s,this.hasPreluActivation=a,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,n=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${Vr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${ae("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${n}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${hl(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AO{constructor(e,n=!1,s=null,a=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",n&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=s,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Vr(this.activation,this.hasPreluActivation,!1,4)}

      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${hl(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ime(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,d=xs(l);let h=u;h==null&&(h=[1,1]);const p=dt(a.shape,r.shape,i,h,o,c,!0,d),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast";let y;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?y=new kme(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?(y=new DO(p),f.push({type:"int32",data:[y.virtualWidth]})):(y=new AO(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(y,[a,r],a.dtype,f)}const Tme={kernelName:Uh,backendName:"webgpu",kernelFunc:Ime};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eme{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Rme{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,d=dt(a.shape,c,i,o,l,u,!0),h=new Eme(d),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(h,[a,r],"float32",p)}const Ame={kernelName:Pg,backendName:"webgpu",kernelFunc:Dme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _me(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,d=dt(c,r.shape,i,o,l,u,!0),h=new Rme(d),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(h,[a,r],a.dtype,p)}const Ome={kernelName:Mg,backendName:"webgpu",kernelFunc:_me};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fme{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zme(t){const{inputs:e,backend:n}=t,{x:s}=e,a=[...s.shape,...s.shape],r=L(s.shape),i=pe({inputs:{x:s},backend:n,attrs:{shape:[r]}}),o=new Fme(r),l=n.runWebGPUProgram(o,[i],i.dtype),u=pe({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}const Lme={kernelName:Bg,backendName:"webgpu",kernelFunc:zme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pme{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${ae("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=Pi(a.shape,r.shape,i,o,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],d=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],h=new Pme(u);return n.runWebGPUProgram(h,[a,r],a.dtype,d)}const Bme={kernelName:Wh,backendName:"webgpu",kernelFunc:Mme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vme{constructor(e,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(e.outShape),this.dispatch=re(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${ae("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Hi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class Ume{constructor(e,n,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=ce(e.outShape),this.dispatch=re(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${ae("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Hi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,dy:i}=e,{strides:o,pad:l,dilations:u}=s,c=Pi(a.shape,r.shape,o,l,"NHWC",u),d=r.dtype,h=new Ume(c,r.shape,d),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[L(c.outShape)]}],f=Zn({backend:n,attrs:{shape:r.shape,value:0,dtype:d}});return n.runWebGPUProgram(h,[a,r,i],d,p,f)}const Gme={kernelName:Tm,backendName:"webgpu",kernelFunc:Wme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hme(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,dy:i}=e,{strides:o,pad:l,dilations:u}=s,c=Pi(a.shape,r.shape,o,l,"NHWC",u),d=a.dtype,h=new Vme(c,d),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[L(c.outShape)]}],f=Zn({backend:n,attrs:{shape:c.inShape,value:0,dtype:d}});return n.runWebGPUProgram(h,[a,r,i],d,p,f)}const jme={kernelName:Im,backendName:"webgpu",kernelFunc:Hme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qme{constructor(e,n,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Cu.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=n,this.textureFormat=s,this.shaderKey=`draw_${n}_${s}`}getUserCode(){let e;const n=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${n};
        rgba[1] = ${n};
        rgba[2] = ${n};
      } else {
        rgba[d] = ${n};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${ae("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xme(t){const{inputs:e,backend:n,attrs:s}=t,{image:a}=e,{canvas:r,options:i}=s,[o,l]=a.shape.slice(0,2),{imageOptions:u}=i||{},c=(u==null?void 0:u.alpha)||1,d=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",h=[o,l],p=new qme(h,a.dtype,d);r.width=l,r.height=o;const f="webgpu";let m=r.getContext(f),y;m||(y=new OffscreenCanvas(l,o),m=y.getContext(f));const g=a.shape.length===3?a.shape[2]:1;m.configure({device:n.device,format:d,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const b="int32",x=n.makeTensorInfo(h,b),w=n.tensorMap.get(x.dataId);w.resource=m.getCurrentTexture(),w.external=!0;const v=[{type:"uint32",data:[g]},{type:"float32",data:[c]}];if(n.runWebGPUProgram(p,[a],b,v,x),y){const C=r.getContext("2d");if(!C)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");C.drawImage(y,0,0)}return n.disposeData(x.dataId),a}const Kme={kernelName:pT,backendName:"webgpu",kernelFunc:Xme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O=fn({opType:$e.MUL,cpuKernelImpl:epe,supportsComplex:!0}),Yme={kernelName:uc,backendName:"webgpu",kernelFunc:_O};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return fl(a,r,i,"sum",n)}const Qme={kernelName:Sp,backendName:"webgpu",kernelFunc:OO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zme(t){const{inputs:e,backend:n,attrs:s}=t,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=ob(a,r.length);ub(i.length,l,r);const{path:u,steps:c}=cb(o,l),d=c.length;let h=null,p=i.length;const f=[];for(let m=0;m<d;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:b}=lb(p,l[y]);let x;db(g)?x=r[y]:(x=er({inputs:{x:r[y]},backend:n,attrs:{perm:g}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);Ee(x.shape,w)||(x=pe({inputs:{x},backend:n,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=_O({inputs:{a:x,b:h},backend:n}),f.push(h))}m<d-1&&(u[m]>=0&&(h=OO({inputs:{x:h},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&n.disposeData(m.dataId);return h}const Jme={kernelName:Vg,backendName:"webgpu",kernelFunc:Zme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ege=je({opType:ne.ELU}),tge={kernelName:qu,backendName:"webgpu",kernelFunc:ege};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nge=t=>{const{inputs:e,backend:n}=t,{dy:s,y:a}=e,r=new ng($e.ELU_DER,s.shape,a.shape);return n.runWebGPUProgram(r,[s,a],s.dtype)},sge={kernelName:Ug,backendName:"webgpu",kernelFunc:nge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const age=fn({opType:$e.EQUAL,dtype:"bool",cpuKernelImpl:Mhe}),rge={kernelName:Gh,backendName:"webgpu",kernelFunc:age};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ige=je({opType:ne.ERF}),oge={kernelName:Xu,backendName:"webgpu",kernelFunc:ige};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lge=je({opType:ne.EXP,cpuKernelImpl:Bhe,dtype:"float32"}),uge={kernelName:Ku,backendName:"webgpu",kernelFunc:lge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1(t){const{inputs:e,attrs:n,backend:s}=t,{dim:a}=n,{input:r}=e,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(N(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),pe({inputs:{x:r},backend:s,attrs:{shape:o}})}const cge={kernelName:Hh,backendName:"webgpu",kernelFunc:A1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dge=je({opType:ne.EXPM1,cpuKernelImpl:Vhe}),hge={kernelName:Yu,backendName:"webgpu",kernelFunc:dge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dN{constructor(e,n){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(t,e,n){const s=n.tensorMap.get(t.dataId),a=L(t.shape),r=t.shape[t.shape.length-1],i=a/r,o=[],l=pe({inputs:{x:t},backend:n,attrs:{shape:[i,r]}});o.push(l);const u=l.shape,c=new dN("real",u),d=new dN("imag",u),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=e?2*Math.PI:-2*Math.PI,f=e?u[1]:1,m=[{type:"float32",data:[p]},{type:"float32",data:[f]}],y=n.runWebGPUProgram(c,h,"float32",m);o.push(y);const g=n.runWebGPUProgram(d,h,"float32",m);o.push(g);const b=pl({inputs:{real:y,imag:g},backend:n});o.push(b);const x=pe({inputs:{x:b},backend:n,attrs:{shape:t.shape}});return o.forEach(w=>n.disposeData(w.dataId)),x}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pge(t){const{inputs:e,backend:n}=t,{input:s}=e;return FO(s,!1,n)}const fge={kernelName:Wg,backendName:"webgpu",kernelFunc:pge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mge{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gge={kernelName:Hg,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,a=new mge(n.shape);return s.runWebGPUProgram(a,[n],n.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yge=je({opType:ne.FLOOR,cpuKernelImpl:Uhe}),bge={kernelName:Qu,backendName:"webgpu",kernelFunc:yge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xge=fn({opType:$e.FLOOR_DIV,cpuKernelImpl:Whe,dtype:"int32"}),wge={kernelName:Zu,backendName:"webgpu",kernelFunc:xge};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vge{constructor(e,n,s=!1){this.pixelsOpType=Cu.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[n,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ae("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sge={kernelName:Em,backendName:"webgpu",kernelFunc:Cge};let wl,Mx=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Cge(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:a}=e;const{numChannels:r}=s;if(a==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&a instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&a instanceof ImageBitmap,[c,d]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[d,c,r],p=M().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(u||l||f){let b;if(p)b=n.device.importExternalTexture({source:a});else{if(f){const W=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(wl==null||W!==Mx)&&(Mx=W,wl=document.createElement("canvas").getContext("2d",{willReadFrequently:Mx})),wl.canvas.width=c,wl.canvas.height=d,wl.drawImage(a,0,0,c,d),a=wl.canvas}const E=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,B=n.textureManager.acquireTexture(h[1],h[0],"rgba8unorm",E);n.queue.copyExternalImageToTexture({source:a},{texture:B},[h[1],h[0]]),b=B}const x=L(h),w=be(h),v=new vge(h,r,p),C=[{type:"uint32",data:[x]},{type:"uint32",data:[r]},{type:"uint32",data:[...w]}],$=n.makeTensorInfo([d,c],"int32"),k=n.tensorMap.get($.dataId);k.resource=b;const T=n.runWebGPUProgram(v,[$],"int32",C);return n.disposeData($.dataId),T}const m=a.data;let y=m;if(r!=null&&r!==4){y=new Uint8Array(a.width*a.height*r);const b=m.length;let x=0;for(let w=0;w<b;w++)w%4<r&&(y[x++]=m[w])}const g=n.makeTensorInfo(h,"int32",new Int32Array(y));return n.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ge{constructor(e,n,s,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Se(e,n),Se(e,s),this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),a!=null&&(Se(e,a),this.variableNames.push("offset")),r!=null&&(Se(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let n="1.0";return this.scaleShape!=null&&(n="getScaleByOutputIndex(index)"),`
      ${ae("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${n};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nge={kernelName:jh,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s,scale:a,offset:r,mean:i,variance:o}=t,{varianceEpsilon:l}=e,u=n,c=[s,i,o];let d=null;r!=null&&(d=r.shape,c.push(r));let h=null;a!=null&&(h=a.shape,c.push(a));const p=new $ge(s.shape,i.shape,o.shape,d,h),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(p,c,s.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=xs(c),y=dt(a.shape,r.shape,l,d,u,h,!1,m);return EO({x:a,filter:r,convInfo:y,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:p})}const Ige={kernelName:Qd,backendName:"webgpu",kernelFunc:kge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s;let f=c;f==null&&(f=[1,1]),N(an(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=dt(a.shape,r.shape,l,f,u,d,!0),y=[a,r],g=i!=null,b=o!=null;g&&y.push(i),b&&y.push(o);const x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let w;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(w=new DO(m,g,h,b),x.push({type:"int32",data:[w.virtualWidth]})):(w=new AO(m,g,h,b),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),h==="leakyrelu"&&(x.push({type:"float32",data:[p]}),w.uniforms+=" alpha : f32,"),n.runWebGPUProgram(w,y,"float32",x)}const Ege={kernelName:Zd,backendName:"webgpu",kernelFunc:Tge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rge{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Mt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dge(t){const{inputs:e,backend:n}=t,{params:s,indices:a}=e,r=a.shape,i=r[r.length-1],o=L(s.shape),[l,u,c,d]=jy(s,a),h=pe({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=pe({inputs:{x:s},backend:n,attrs:{shape:[L(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const b=n.readSync(a.dataId),x=n.bufferSync(s),w=Ghe(b,x,s.dtype,u,i,c,d,s.shape,o);return n.makeTensorInfo(l,s.dtype,w.values)}const f=new Rge(i,[u,c]),m=[{type:"int32",data:[i]},{type:"int32",data:d}],y=n.runWebGPUProgram(f,[p,h],p.dtype,m),g=pe({inputs:{x:y},backend:n,attrs:{shape:l}});return n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(y.dataId),g}const Age={kernelName:jg,backendName:"webgpu",kernelFunc:Dge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ge{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=Oge(this.aShape);return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function Oge(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<t.length;s++)s===2?n.push("indexZ"):n.push(`${e[s]}`);return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,indices:r}=e,{axis:i,batchDims:o}=s,l=Ie(i,a.shape)[0],u=pb(a,r,l,o),c=L(r.shape),d=[],h=pe({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=pe({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,r])){const x=n.tensorMap.get(p.dataId).values,w=ke(p.shape,p.dtype,x),C=n.tensorMap.get(h.dataId).values,$=ke(h.shape,h.dtype,C),k=Hhe($,w,f);return d.forEach(T=>n.disposeData(T.dataId)),n.makeTensorInfo(u.outputShape,k.dtype,k.values)}const m=new _ge(h.shape,f),y=n.runWebGPUProgram(m,[h,p],h.dtype);d.push(y);const g=pe({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return d.forEach(b=>n.disposeData(b.dataId)),g}const Fge={kernelName:qh,backendName:"webgpu",kernelFunc:zO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zge=fn({opType:$e.GREATER,cpuKernelImpl:qhe,dtype:"bool"}),Lge={kernelName:Xh,backendName:"webgpu",kernelFunc:zge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pge=fn({opType:$e.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:jhe}),Mge={kernelName:Ju,backendName:"webgpu",kernelFunc:Pge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bge(t){const{inputs:e,backend:n}=t,{input:s}=e;return FO(s,!0,n)}const Vge={kernelName:qg,backendName:"webgpu",kernelFunc:Bge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uge=je({opType:ne.IS_FINITE,dtype:"bool"}),Wge={kernelName:tc,backendName:"webgpu",kernelFunc:Uge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gge=je({opType:ne.IS_INF,dtype:"bool"}),Hge={kernelName:nc,backendName:"webgpu",kernelFunc:Gge};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jge=je({opType:ne.IS_NAN,dtype:"bool"}),qge={kernelName:sc,backendName:"webgpu",kernelFunc:jge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xge(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{alpha:r}=s,i=[{type:"float32",data:[r]}],o=new Wc(a.shape,ne.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[a],"float32",i)}const Kge={kernelName:Kh,backendName:"webgpu",kernelFunc:Xge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yge=fn({opType:$e.LESS,dtype:"bool",cpuKernelImpl:Khe}),Qge={kernelName:Yh,backendName:"webgpu",kernelFunc:Yge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zge=fn({opType:$e.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Xhe}),Jge={kernelName:Qh,backendName:"webgpu",kernelFunc:Zge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eye{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tye(t){const{backend:e,attrs:n}=t,{start:s,stop:a,num:r}=n,i=(a-s)/(r-1),o=new eye(r),l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return e.runWebGPUProgram(o,[],"float32",l)}const nye={kernelName:Kg,backendName:"webgpu",kernelFunc:tye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sye=je({opType:ne.LOG,cpuKernelImpl:Yhe}),aye={kernelName:ac,backendName:"webgpu",kernelFunc:sye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rye=je({opType:ne.LOG1P}),iye={kernelName:rc,backendName:"webgpu",kernelFunc:rye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oye=fn({opType:$e.LOGICAL_AND,dtype:"bool"}),lye={kernelName:Zh,backendName:"webgpu",kernelFunc:oye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uye=je({opType:ne.LOGICAL_NOT}),cye={kernelName:Jh,backendName:"webgpu",kernelFunc:uye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dye=fn({opType:$e.LOGICAL_OR}),hye={kernelName:ep,backendName:"webgpu",kernelFunc:dye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class pye{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${LO}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class fye{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,N(n<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${n}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${ae()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${LO}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s;let u;r>16?u=new pye(a.shape):u=new fye(a.shape,r);const c=[{type:"int32",data:[r]},{type:"float32",data:[i]},{type:"float32",data:[o]},{type:"float32",data:[l]}];return n.runWebGPUProgram(u,[a],a.dtype,c)}const gye={kernelName:tp,backendName:"webgpu",kernelFunc:mye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yye{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,d=new yye(a.shape),h=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return n.runWebGPUProgram(d,[a,r,i],a.dtype,h)}const xye={kernelName:Yg,backendName:"webgpu",kernelFunc:bye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wye=fn({opType:$e.MAX,cpuKernelImpl:Zhe}),vye={kernelName:ic,backendName:"webgpu",kernelFunc:wye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,c=Rn(a.shape,r,i,1,o,l);return NO(a,c,"max",n)}const Cye={kernelName:sp,backendName:"webgpu",kernelFunc:Sye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Os(a.shape,r,i,c,o,u,l),h=new zS(d,"max"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[a],a.dtype,p)}const Nye={kernelName:ap,backendName:"webgpu",kernelFunc:$ye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kye{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Iye{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tye(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Os(i.shape,o,l,d,u,c),p=new zS(h,"max",!0);let f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[i],"int32",f),y=new Iye(h);f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const g=n.runWebGPUProgram(y,[a,m],i.dtype,f);return n.disposeData(m.dataId),g}const Eye={kernelName:Zg,backendName:"webgpu",kernelFunc:Tye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rye(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:r,output:i}=e,o=r;xO([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=Rn(o.shape,l,u,1,c,d),p=new fh(h,"max",!0);let f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[o],"int32",f),y=new kye(h);f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const g=n.runWebGPUProgram(y,[a,m],o.dtype,f);return n.disposeData(m.dataId),g}const Dye={kernelName:Qg,backendName:"webgpu",kernelFunc:Rye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aye(t){const{inputs:e,backend:n,attrs:s}=t,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=s,{x:l}=e;N(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];N(an(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=Rn(l.shape,a,r,u,i),d=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let h=new fh(c,"max",!1);const p=n.runWebGPUProgram(h,[l],l.dtype,d);h=new fh(c,"max",!0,!0,o);const f=n.runWebGPUProgram(h,[l],"int32",d);return[p,f]}const _ye={kernelName:Jg,backendName:"webgpu",kernelFunc:Aye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oye(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return fl(a,r,i,"min",n)}const Fye={kernelName:ip,backendName:"webgpu",kernelFunc:Oye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zye=fn({opType:$e.MIN,cpuKernelImpl:Jhe}),Lye={kernelName:oc,backendName:"webgpu",kernelFunc:zye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pye{constructor(e,n,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((a,r)=>a[0]+e[r]+a[1]),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,n.map((a,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,n=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),s=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),a=e===1?"start":"start[i]",r=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",o=Mt(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let start = ${o}(${n});
          let end = ${o}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${a}) {
              ${i} = ${a} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${r}) {
              ${i} = (${r} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mye={kernelName:op,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{paddings:a,mode:r}=e,i=n,o=a.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Pye(s.shape,a,r);return i.runWebGPUProgram(l,[s],s.dtype,o)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bye=fn({opType:$e.MOD}),Vye={kernelName:lc,backendName:"webgpu",kernelFunc:Bye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uye{constructor(e,n){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ae("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wye{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${ae("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{dim:r}=s,i=pe({inputs:{x:a},backend:n,attrs:{shape:[L(a.shape)/a.shape[r],a.shape[r]]}}),o=new Wye(i.shape),l=n.runWebGPUProgram(o,[i],a.dtype),u=pe({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}const Gye={kernelName:Np,backendName:"webgpu",kernelFunc:PO};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hye(t){const{inputs:e,backend:n,attrs:s}=t,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s,l=o?a:PO({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new Uye(u,r),h=[{type:"float32",data:[i]},{type:"int32",data:[c]}],p=n.runWebGPUProgram(d,[l],"int32",h);return o||n.disposeData(l.dataId),p}const jye={kernelName:ey,backendName:"webgpu",kernelFunc:Hye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qye(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const r=n.tensorMap.get(s.dataId),[i,o]=tpe(r.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}const a=new Wc(s.shape,ne.NEG);return n.runWebGPUProgram(a,[s],s.dtype)}const Xye={kernelName:lp,backendName:"webgpu",kernelFunc:qye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kye(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),{selectedIndices:d}=Gy(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Yye={kernelName:ty,backendName:"webgpu",kernelFunc:Kye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qye(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(a.dataId),d=n.readSync(r.dataId),h=i,p=o,f=l,m=u,{selectedIndices:y,selectedScores:g}=Hy(c,d,h,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Zye={kernelName:ny,backendName:"webgpu",kernelFunc:Qye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jye{constructor(e,n){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${ae("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ebe(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s,u=L(a.shape),c=new Jye(u,i),d=pe({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=[{type:"float32",data:[o]},{type:"float32",data:[l]}],p=n.runWebGPUProgram(c,[d],r,h);n.disposeData(d.dataId);const f=[...a.shape,i],m=pe({inputs:{x:p},backend:n,attrs:{shape:f}});return n.disposeData(p.dataId),m}const tbe={kernelName:dp,backendName:"webgpu",kernelFunc:ebe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const a=Jp({inputs:{input:s},backend:n}),r=ag({inputs:{x:a},backend:n}),i=Fb({inputs:{input:s},backend:n}),o=ag({inputs:{x:i},backend:n}),l=pl({inputs:{real:r,imag:o},backend:n});return n.disposeData(a.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),l}else return Zn({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const nbe={kernelName:Tp,backendName:"webgpu",kernelFunc:ag};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=Jp({inputs:{input:s},backend:n}),r=MO({inputs:{x:a},backend:n}),i=Fb({inputs:{input:s},backend:n}),o=ag({inputs:{x:i},backend:n}),l=pl({inputs:{real:r,imag:o},backend:n});return n.disposeData(a.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),l}else return Zn({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const sbe={kernelName:cp,backendName:"webgpu",kernelFunc:MO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abe(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s;if(e.length===1)return A1({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{ns(r,c.shape,"All tensors passed to stack must have matching shapes"),N(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const d=A1({inputs:{input:c},backend:n,attrs:{dim:a}});return o.push(d),d}),u=TO({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(c=>n.disposeData(c.dataId)),u}const rbe={kernelName:hp,backendName:"webgpu",kernelFunc:abe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(t,e=!1){const n=t.length,s=Mt(n),a=t.map((d,h)=>`uniforms.pad${h}[0]`).join(","),r=t.map((d,h)=>`uniforms.pad${h}[0] + uniforms.xShape${n>1?`[${h}]`:""}`).join(","),i=n>1?`${s}(${a})`:`${a}`,o=n>1?`${s}(${r})`:`${r}`,l=n>1?"any(paddedCoords < start)":"paddedCoords < start",u=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return`
        let start = ${i};
        let end = ${o};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}class ibe{constructor(e,n){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((s,a)=>s[0]+e[a]+s[1]),this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),n.map((s,a)=>{this.uniforms+=` pad${a} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${BO(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const obe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:r,constantValue:i}=s;if(r.every(u=>Ee(u,[0,0])))return gs({inputs:{x:a},backend:n});if(L(a.shape)===0){const u=r.map((c,d)=>c[0]+a.shape[d]+c[1]);return Zn({backend:n,attrs:{shape:u,value:i,dtype:a.dtype}})}const o=[{type:"float32",data:[i]}];r.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));const l=new ibe(a.shape,r);return n.runWebGPUProgram(l,[a],a.dtype,o)},lbe={kernelName:pp,backendName:"webgpu",kernelFunc:obe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ube=fn({opType:$e.POW}),cbe={kernelName:cc,backendName:"webgpu",kernelFunc:ube};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dbe(t){const{inputs:e,backend:n}=t,{x:s,alpha:a}=e,r=new ng($e.PRELU,s.shape,a.shape);return n.runWebGPUProgram(r,[s,a],"float32")}const hbe={kernelName:fp,backendName:"webgpu",kernelFunc:dbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{axis:r,keepDims:i}=s;return fl(a,r,i,"prod",n)}const fbe={kernelName:mp,backendName:"webgpu",kernelFunc:pbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mbe=t=>{const{backend:e,attrs:n}=t,{start:s,stop:a,step:r,dtype:i}=n,o=ape(s,a,r,i);return e.makeTensorInfo([o.length],i,o)},gbe={kernelName:sy,backendName:"webgpu",kernelFunc:mbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ybe=fn({opType:$e.DIV}),bbe={kernelName:ju,backendName:"webgpu",kernelFunc:ybe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xbe=je({opType:ne.RECIPROCAL}),wbe={kernelName:dc,backendName:"webgpu",kernelFunc:xbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vbe=je({opType:ne.RELU}),Sbe={kernelName:hc,backendName:"webgpu",kernelFunc:vbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cbe=je({opType:ne.RELU6}),$be={kernelName:pc,backendName:"webgpu",kernelFunc:Cbe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nbe{constructor(e,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,s,e[3]],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kbe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,size:i,halfPixelCenters:o}=s,[l,u]=i,c=r&&l>1?1:0,d=r&&u>1?1:0,p=[{type:"float32",data:[c,d]},{type:"float32",data:[o?.5:0]}],f=new Nbe(a.shape,l,u);return n.runWebGPUProgram(f,[a],"float32",p)}const Ibe={kernelName:bp,backendName:"webgpu",kernelFunc:kbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tbe{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeBilinearBackprop_${n}`}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ebe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,[,o,l]=a.shape,[,u,c]=r.shape,d=[i&&u>1?o-1:o,i&&c>1?l-1:l],h=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=d[0]/h[0],f=d[1]/h[1],m=1/p,y=1/f,g=Math.ceil(m)*2+2,b=Math.ceil(y)*2+2,x=new Tbe(a.shape,i),w=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[b]}];return n.runWebGPUProgram(x,[r],r.dtype,w)}const Rbe={kernelName:iy,backendName:"webgpu",kernelFunc:Ebe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dbe{constructor(e,n,s,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,s,e[3]],this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey=`resizeNearest_${a}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Abe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=r&&l>1?1:0,d=r&&u>1?1:0,p=[{type:"float32",data:[c,d]},{type:"float32",data:[r?.5:0]}],f=new Dbe(a.shape,l,u,i);return n.runWebGPUProgram(f,[a],a.dtype,p)}const _be={kernelName:yp,backendName:"webgpu",kernelFunc:Abe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Obe{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeNearestNeigborBackprop_${n}`}getUserCode(){return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fbe(t){const{inputs:e,backend:n,attrs:s}=t,{images:a,dy:r}=e,{alignCorners:i}=s,[,o,l]=a.shape,[,u,c]=r.shape,d=[i&&u>1?o-1:o,i&&c>1?l-1:l],h=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=d[0]/h[0],f=d[1]/h[1],m=1/p,y=1/f,g=Math.ceil(m)*2+2,b=Math.ceil(y)*2+2,x=new Obe(a.shape,i),w=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[b]}];return n.runWebGPUProgram(x,[r],r.dtype,w)}const zbe={kernelName:ry,backendName:"webgpu",kernelFunc:Fbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lbe{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dims:r}=s,i=a.shape.length;if(i===0)return gs({inputs:{x:a},backend:n});const o=a.shape,l=[1,1,1,1];o.forEach((y,g)=>{const b=g+4-i;l[b]=y});const u=Ie(r,a.shape),c=[0,0,0,0];u.forEach(y=>{const g=y+4-i;c[g]=1});const d=[{type:"int32",data:c}],h=pe({inputs:{x:a},backend:n,attrs:{shape:l}}),p=new Lbe(l),f=n.runWebGPUProgram(p,[h],h.dtype,d);n.disposeData(h.dataId);const m=pe({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}const Mbe={kernelName:xp,backendName:"webgpu",kernelFunc:Pbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bbe{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof n=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ae("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vbe={kernelName:xy,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:r,center:i}=e,o=n,l=new Bbe(s.shape,r),[u,c]=Zy(i,s.shape[1],s.shape[2]),d=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(a)]},{type:"float32",data:[Math.cos(a)]}];return typeof r=="number"?d.push({type:"float32",data:[Number.parseFloat(r.toFixed(2))]}):d.push({type:"float32",data:r}),o.runWebGPUProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ube=je({opType:ne.ROUND}),Wbe={kernelName:fc,backendName:"webgpu",kernelFunc:Ube};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gbe=je({opType:ne.RSQRT,cpuKernelImpl:rpe}),Hbe={kernelName:mc,backendName:"webgpu",kernelFunc:Gbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Od{constructor(e,n,s,a,r,i,o,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=o,this.sumDupeIndices=l,this.dispatchLayout=ce(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=n>1,this.shaderKey=`scatter_${s}_${a}_${this.sliceDimGreaterThanOne}_${o}_${l}_${r.length}`;const u=Mt(r.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=a,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const n=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let a="",r="";this.dispatchLayout.x.length===1?(a="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(a="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const o=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${r}
      ${ae("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${n}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${io(this.type)}(${o});
          let flatIndex = getOutputIndexFromCoords(${a});

          ${this.sumDupeIndices?Hi("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jbe(t){const{inputs:e,backend:n,attrs:s}=t,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=rr(r,a,i),h=[d/u,u];if(d===0)return n.makeTensorInfo(i,a.dtype);const p=pe({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=pe({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,y=Zn({backend:n,attrs:{shape:h,value:0,dtype:m}}),g=L(f.shape),b=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[g]}],x=new Od(f.shape,o,p.shape.length,f.shape.length,c,h,m),w=n.runWebGPUProgram(x,[f,p],m,b,y),v=pe({inputs:{x:w},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(w.dataId),v}const qbe={kernelName:oy,backendName:"webgpu",kernelFunc:jbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xbe{constructor(e,n){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=n,this.shaderKey=`search_sorted_${n}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${ae("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kbe(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:a,values:r}=e,{side:i}=s,o=new Xbe([r.shape[0],r.shape[1]],i),l=[{type:"int32",data:[a.shape[1]]}];return n.runWebGPUProgram(o,[a,r],"int32",l)}const Ybe={kernelName:uy,backendName:"webgpu",kernelFunc:Kbe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qbe{constructor(e,n,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,n;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)n="resRC",e="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],i=[];for(let o=0;o<this.outputShape.length;o++)i.push(`${a[o]}`),o<this.cRank&&r.push(`${a[o]}`);e=r.join(),n=i.join()}return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${n}));
          } else {
            setOutputAtIndex(index, getB(${n}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zbe(t){const{inputs:e,backend:n}=t,{condition:s,t:a,e:r}=e,i=new Qbe(s.shape.length,a.shape,a.shape.length);return n.runWebGPUProgram(i,[s,a,r],pn(a.dtype,r.dtype))}const Jbe={kernelName:wp,backendName:"webgpu",kernelFunc:Zbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const exe=je({opType:ne.SELU}),txe={kernelName:gc,backendName:"webgpu",kernelFunc:exe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nxe=je({opType:ne.SIGMOID}),sxe={kernelName:wc,backendName:"webgpu",kernelFunc:nxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const axe=je({opType:ne.SIGN}),rxe={kernelName:xc,backendName:"webgpu",kernelFunc:axe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ixe=je({opType:ne.SIN}),oxe={kernelName:yc,backendName:"webgpu",kernelFunc:ixe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lxe=je({opType:ne.SINH}),uxe={kernelName:bc,backendName:"webgpu",kernelFunc:lxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cxe=je({opType:ne.SOFTPLUS}),dxe={kernelName:vc,backendName:"webgpu",kernelFunc:cxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hxe{constructor(e,n,s,a,r,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[r[l]];this.outputShape=o,this.newDim=r,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=n,this.uniforms+=`reshapedPaddedXShape : ${Mt(a.length)}, paddedXShapeStrides : ${Mt(i)}, `,s.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){const e=Mt(this.outputShape.length),n=vO(this.newDim);return`
      ${Qf(this.paddedXShape,"PaddedX")}
      ${ae("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${n}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${BO(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pxe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:r,paddings:i}=s;N(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const o=r.reduce((b,x)=>b*x),l=[[0,0]];l.push(...i);for(let b=1+r.length;b<a.shape.length;++b)l.push([0,0]);const u=l.map((b,x)=>b[0]+a.shape[x]+b[1]),c=sl(u,r,o,!1),d=al(c.length,r.length,!1),h=rl(u,r,o,!1),p=be(u),f=new hxe(a.shape,u,l,c,d,p.length),m=[{type:"int32",data:c},{type:"int32",data:p}];l.map(b=>m.push({type:"int32",data:[b[0],b[1]]}));const y=n.runWebGPUProgram(f,[a],a.dtype,m),g=pe({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeData(y.dataId),g},fxe={kernelName:Cp,backendName:"webgpu",kernelFunc:pxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mxe{constructor(e,n,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=ce([n]),this.dispatch=re(this.dispatchLayout,[n],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Hi("&result[outIndex]","value",this.type)}
      }
    }
  `}}class gxe{constructor(e,n){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=ce(n),this.dispatch=re(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Hi("&result[segmentId]","1","int32")}
      }
    }
  `}}class yxe{constructor(e,n){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=n,this.dispatchLayout=ce(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(t,e,n,s=!1,a){const i=L(t.shape)/t.shape[0],o=t.dtype,l=L(e.shape),u=a.readSync(n.dataId),d=l>0?u[l-1]+1:0;let h;const p=t.shape.slice();p[0]=d;const f=l*i,m=Zn({backend:a,attrs:{shape:p,value:0,dtype:o}});h=new mxe(p,f,o);let y=[{type:"int32",data:[i]},{type:"int32",data:[f]}];const g=a.runWebGPUProgram(h,[t,e,n],o,y,m);if(s)return g;const b=Zn({backend:a,attrs:{shape:[d],value:0,dtype:"int32"}});h=new gxe(d,n.shape);const x=a.runWebGPUProgram(h,[n],"int32",null,b),w=Zn({backend:a,attrs:{shape:p,value:0,dtype:o}});h=new yxe(p,o),y=[{type:"int32",data:[i]}];const v=a.runWebGPUProgram(h,[g,x],o,y,w);return a.disposeData(g.dataId),a.disposeData(x.dataId),v}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bxe(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;return VO(s,a,r,!1,n)}const xxe={kernelName:cy,backendName:"webgpu",kernelFunc:bxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wxe(t){const{inputs:e,backend:n}=t,{data:s,indices:a,segmentIds:r}=e;return VO(s,a,r,!0,n)}const vxe={kernelName:dy,backendName:"webgpu",kernelFunc:wxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sxe{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*n[a];this.outputShape=s,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=Cxe(this.rank,"uniforms.");return`
      ${ae("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function Cxe(t,e=""){if(t>=5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`(resRC % ${e}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<t;a++)s.push(`(${n[a]} % ${e}aShape[${a}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{reps:r}=s;if(n.shouldExecuteOnCPU([a])||a.dtype==="string"||a.shape.length>=5){const l=n.readSync(a.dataId),u=a.dtype==="string"?l.map(h=>$a(h)):l,c=ke(a.shape,a.dtype,u),d=hpe(c,r);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new Sxe(a.shape,r);return n.runWebGPUProgram(i,[a],a.dtype)}const $xe={kernelName:Ic,backendName:"webgpu",kernelFunc:LS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nxe(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=rr(r,a,o),p=!1;if(r.dtype==="string"){const k=n.bufferSync(a),T=n.bufferSync(r),E=$a(n.readSync(i.dataId)[0]),O=ipe(k,T,o,h,c,u,l,d,E,p);return n.makeTensorInfo(o,O.dtype,O.values)}const f=[h/c,c],m=pe({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),y=r.shape.length?pe({inputs:{x:r},backend:n,attrs:{shape:[u,c]}}):gs({inputs:{x:r},backend:n}),g=y.dtype,b=n.makeTensorInfo([],g,Sn(1,g)),x=pe({inputs:{x:i},backend:n,attrs:{shape:Array(f.length).fill(1)}}),w=LS({inputs:{x},backend:n,attrs:{reps:f}}),v=L([u,c]),C=[{type:"int32",data:[l]},{type:"int32",data:d},{type:"int32",data:[v]}];switch(u){case 0:break;case 1:{const k=new Od([u,c],l,m.shape.length,y.shape.length,d,f,g,p);n.runWebGPUProgram(k,[y,m],g,C,w)}break;default:{const k=new Od([u,c],l,m.shape.length,b.shape.length,d,f,g,p);n.runWebGPUProgram(k,[b,m],g,C,w)}{const k=new Od([u,c],l,m.shape.length,y.shape.length,d,f,g);n.runWebGPUProgram(k,[y,m],g,C,w)}}const $=pe({inputs:{x:w},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),n.disposeData(w.dataId),$}const kxe={kernelName:hy,backendName:"webgpu",kernelFunc:Nxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ixe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=Ie(i,a.shape)[0],l=hb(a,r,o),u=a.shape.length,c=new Array(u).fill(0),d=a.shape.slice();return l.map(h=>{const p=[...d];p[o]=h;const f=Gc({inputs:{x:a},backend:n,attrs:{begin:c,size:p}});return c[o]+=h,f})}const Txe={kernelName:$p,backendName:"webgpu",kernelFunc:Ixe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Exe=je({opType:ne.SQRT}),Rxe={kernelName:Sc,backendName:"webgpu",kernelFunc:Exe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dxe={kernelName:py,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e,a=new Wc(n.shape,ne.SQUARE);return s.runWebGPUProgram(a,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Axe=fn({opType:$e.SQUARED_DIFFERENCE}),_xe={kernelName:Cc,backendName:"webgpu",kernelFunc:Axe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oxe({inputs:t,attrs:e,backend:n}){const{x:s}=t,a=new Wc(s.shape,ne.STEP,"stepAlpha : f32,"),r=[{type:"float32",data:[e.alpha]}];return n.runWebGPUProgram(a,[s],s.dtype,r)}const Fxe={kernelName:Tc,backendName:"webgpu",kernelFunc:Oxe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zxe{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const n=Mt(this.outputShape.length);this.uniforms=`begin : ${n},  strides : ${n}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let n="";if(e===1)n="coords * uniforms.strides + uniforms.begin";else{let a=0;n=this.outputShape.map((r,i)=>(a++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${a-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ae("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${n}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:b,end:x,strides:w}=Ky(a.shape,r,i,o,l,u,c,d,h);let v;if(m)v=pe({inputs:{x:a},backend:n,attrs:{shape:f}});else if(y||g){N(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const C=Xy(b,x,w),$=Gc({inputs:{x:a},backend:n,attrs:{begin:b,size:C}});v=pe({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeData($.dataId)}else if(n.shouldExecuteOnCPU([a])){const $=n.readSync(a.dataId),k=ke(a.shape,a.dtype,$),T=upe(p,k,w,b);v=n.makeTensorInfo(f,a.dtype,T.values)}else{const $=new zxe(p),k=[{type:"int32",data:b},{type:"int32",data:w}],T=n.runWebGPUProgram($,[a],a.dtype,k);v=pe({inputs:{x:T},backend:n,attrs:{shape:f}}),n.disposeData(T.dataId)}return v}const Pxe={kernelName:my,backendName:"webgpu",kernelFunc:Lxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mxe(t){const{inputs:e,backend:n,attrs:s}=t,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=e,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=cpe(h,p,a,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const Bxe={kernelName:gy,backendName:"webgpu",kernelFunc:Mxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vxe=fn({opType:$e.SUB,cpuKernelImpl:dpe,supportsComplex:!0}),Uxe={kernelName:$c,backendName:"webgpu",kernelFunc:Vxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wxe=je({opType:ne.TAN}),Gxe={kernelName:Nc,backendName:"webgpu",kernelFunc:Wxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hxe=je({opType:ne.TANH}),jxe={kernelName:kc,backendName:"webgpu",kernelFunc:Hxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qxe(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:a,indices:r,updates:i}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=rr(i,r,a.shape),h=[d/u,u];if(d===0)return n.makeTensorInfo(a.shape,r.dtype);const p=[],f=pe({inputs:{x:r},backend:n,attrs:{shape:[l,o]}});p.push(f);const m=pe({inputs:{x:i},backend:n,attrs:{shape:[l,u]}});p.push(m);const y=pe({inputs:{x:a},backend:n,attrs:{shape:h}});p.push(y);const g=LS({inputs:{x:y},backend:n,attrs:{reps:Array(h.length).fill(1)}}),b=new Od([l,u],o,f.shape.length,m.shape.length,c,h,a.dtype,!1),x=L([l,u]),w=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[x]}],v=n.runWebGPUProgram(b,[m,f],y.dtype,w,g);p.push(v);const C=pe({inputs:{x:v},backend:n,attrs:{shape:a.shape}});return p.forEach($=>n.disposeData($.dataId)),C}const Xxe={kernelName:ly,backendName:"webgpu",kernelFunc:qxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kxe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ae("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class Yxe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ae("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(t,e){e!==null&&t.disposeData(e.dataId)}function hN(t){let e=1;for(;e<t;)e*=2;return e}function Qxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{k:r,sorted:i}=s,o=a.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([a])){const v=n.readSync(a.dataId),[C,$]=ppe(v,o,a.dtype,r,i);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(r===0)return o[o.length-1]=0,[n.makeTensorInfo(o,a.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(l===1)return[a,Zn({attrs:{shape:o,dtype:"int32",value:0},backend:n})];const c=L(o)/l,d=pe({inputs:{x:a},attrs:{shape:[c,l]},backend:n}),h=hN(r),p=hN(l);let f=null;const m=()=>f===null?[d,d]:[d,f],y=(v,C,$)=>{const k=m(),T=new Kxe($),O=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[C]}],B=f;f=n.runWebGPUProgram(T,k,"int32",O),vl(n,B)};for(let v=1;v<h;v*=2){const C=v*2;for(let $=v;$>=1;$/=2)y(C,$,[c,p])}for(let v=p;v>h;v/=2){const C=m(),$=new Yxe([c,v/2]),T=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[h]}],E=f;f=n.runWebGPUProgram($,C,"int32",T),vl(n,E);const O=h/2,B=O*2;for(let W=O;W>=1;W/=2)y(B,W,f.shape)}let g=f;f=Gc({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,r]}}),vl(n,g);let b=zO({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});vl(n,d);const x=o.slice(0,-1);x.push(r),g=f,f=pe({inputs:{x:f},attrs:{shape:x},backend:n}),vl(n,g);const w=b;return b=pe({inputs:{x:b},attrs:{shape:x},backend:n}),vl(n,w),[b,f]}const Zxe={kernelName:yy,backendName:"webgpu",kernelFunc:Qxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jxe{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ce(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ae("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0e(t){const{inputs:e,backend:n,attrs:s}=t,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,d,h,p]=a.shape,[f,m]=u??[d,h],y=[c,f,m,p],g=new Jxe(y),b=i==="nearest"?1:2;let x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}const w=[{type:"int32",data:[b]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return n.runWebGPUProgram(g,[a,r],"float32",w)}const t0e={kernelName:by,backendName:"webgpu",kernelFunc:e0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0e(t){const{inputs:e,backend:n,attrs:s}=t,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[r],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==r&&(u[c++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[r]=m;const y=Gc({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),g=pe({inputs:{x:y},backend:n,attrs:{shape:u}});f[m]=g,d.push(y)}return d.forEach(m=>n.disposeData(m.dataId)),f}const s0e={kernelName:kp,backendName:"webgpu",kernelFunc:n0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a0e{constructor(e,n,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=n,this.dispatchLayout=ce(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${ae("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Hi("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,segmentIds:r}=e,{numSegments:i}=s,o=a.shape.length,l=[];let u=0;const c=tt([u],o);let d=a;c!=null&&(d=er({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(d),u=ht(1,o)[0]);const h=jv(d.shape,u,i),p=L([d.shape[u]]),f=pe({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=a.dtype,y=[f.shape[0],i],g=Zn({backend:n,attrs:{shape:y,value:0,dtype:m}}),b=new a0e(f.shape,y,m),x=[{type:"int32",data:[i]},{type:"int32",data:[L(f.shape)]}],w=n.runWebGPUProgram(b,[f,r],m,x,g),v=pe({inputs:{x:w},backend:n,attrs:{shape:h}});l.push(w);let C=v;if(c!=null){l.push(v);const $=sr(c);C=er({inputs:{x:C},backend:n,attrs:{perm:$}})}return l.forEach($=>n.disposeData($.dataId)),C}const i0e={kernelName:Ip,backendName:"webgpu",kernelFunc:r0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o0e=[Ahe,gpe,bpe,wpe,Spe,Npe,Ape,Ope,zpe,Ppe,Bpe,Upe,Gpe,jpe,Xpe,Jpe,tfe,rfe,ofe,ufe,ffe,bfe,vfe,Nfe,Ife,Dfe,Ohe,Ofe,Pfe,jfe,Zfe,nme,rme,ome,ume,dme,pme,gme,bme,wme,Sme,Nme,Ame,Ome,Tme,Lme,Bme,Gme,jme,Kme,Jme,tge,sge,rge,oge,uge,cge,hge,fge,Ehe,gge,Sge,bge,wge,Nge,Ige,Ege,Age,Fge,Lge,Mge,_he,Vge,zfe,Wge,Hge,qge,Kge,Qge,Jge,nye,iye,aye,lye,cye,hye,gye,xye,Ype,vye,Cye,Dye,Nye,Eye,_ye,Qpe,Fye,Lye,Mye,Vye,jye,Yme,Xye,Yye,Zye,Sfe,tbe,sbe,rbe,lbe,cbe,hbe,fbe,gbe,Cfe,bbe,wbe,Sbe,$be,Rhe,Ibe,Rbe,_be,zbe,Mbe,Vbe,Wbe,Hbe,qbe,Ybe,Jbe,txe,sxe,rxe,oxe,uxe,hfe,Fxe,Pxe,Bxe,Gye,dxe,fxe,xxe,vxe,kxe,Txe,Rxe,Dxe,_xe,Uxe,Qme,Gxe,jxe,Xxe,$xe,Zxe,t0e,Tpe,s0e,i0e,nbe];for(const t of o0e)qw(t);const l0e=t=>Te.jsxs("div",{className:"wrapper",...t,children:[Te.jsx("div",{className:"spinner"}),Te.jsx("p",{children:t.children})]}),u0e=({imageRef:t,cameraRef:e,videoRef:n})=>{const[s,a]=$t.useState(null),r=$t.useRef(null),i=$t.useRef(null),o=()=>{const u=t.current.src;t.current.src="#",URL.revokeObjectURL(u),a(null),r.current.value="",t.current.style.display="none"},l=()=>{const u=n.current.src;n.current.src="",URL.revokeObjectURL(u),a(null),i.current.value="",n.current.style.display="none"};return Te.jsxs("div",{className:"btn-container",children:[Te.jsx("input",{type:"file",accept:"image/*",style:{display:"none"},onChange:u=>{const c=URL.createObjectURL(u.target.files[0]);t.current.src=c,t.current.style.display="block",a("image")},ref:r}),Te.jsxs("button",{onClick:()=>{s===null?r.current.click():s==="image"?o():alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:[s==="image"?"Fermer":"Ouvrir"," Image"]}),Te.jsx("input",{type:"file",accept:"video/*",style:{display:"none"},onChange:u=>{s==="image"&&o();const c=URL.createObjectURL(u.target.files[0]);n.current.src=c,n.current.addEventListener("ended",()=>l()),n.current.style.display="block",a("video")},ref:i}),Te.jsxs("button",{onClick:()=>{s===null||s==="image"?i.current.click():s==="video"?l():alert(`Can't handle more than 1 stream
Currently streaming : ${s}`)},children:[s==="video"?"Fermer":"Ouvrir"," Video"]})]})},c0e=({detectionCounts:t={}})=>{const e=Object.entries(t).sort(([,a],[,r])=>r-a).map(([a,r])=>({className:a,count:r})),n=5,s=[];for(let a=0;a<Math.min(e.length,n);a++)s.push(e[a]);for(;s.length<n;)s.push({className:"",count:0,isEmpty:!0});return Te.jsxs("div",{className:"detection-table-container",children:[Te.jsx("h3",{children:"Detection Results"}),Te.jsx("div",{className:"detection-table-wrapper",children:Te.jsxs("table",{className:"detection-table",children:[Te.jsx("thead",{children:Te.jsxs("tr",{children:[Te.jsx("th",{children:"Object Class"}),Te.jsx("th",{children:"Count"})]})}),Te.jsx("tbody",{children:s.map(({className:a,count:r,isEmpty:i},o)=>Te.jsxs("tr",{className:i?"empty-row":"",children:[Te.jsx("td",{className:"class-name",children:!i&&Te.jsx("span",{className:"class-label",children:a})}),Te.jsx("td",{className:"count",children:!i&&Te.jsx("span",{className:"count-badge",children:r})})]},i?`empty-${o}`:a))})]})}),Te.jsxs("div",{className:"detection-summary",children:[Te.jsxs("p",{children:["Total objects detected: ",Te.jsx("strong",{children:e.reduce((a,{count:r})=>a+r,0)})]}),Te.jsxs("p",{children:["Unique classes: ",Te.jsx("strong",{children:e.length})]})]})]})},PS=["person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"],d0e=(t,e,n,s,a,r=.45)=>{const i=t.getContext("2d");i.clearRect(0,0,i.canvas.width,i.canvas.height);const o=new _1,l=`${Math.max(Math.round(Math.max(i.canvas.width,i.canvas.height)/40),14)}px Arial`;i.font=l,i.textBaseline="top";for(let u=0;u<n.length;++u){if(n[u]<r)continue;const c=PS[s[u]],d=o.get(s[u]),h=(n[u]*100).toFixed(1);let[p,f,m,y]=e.slice(u*4,(u+1)*4);f*=a[0],y*=a[0],p*=a[1],m*=a[1];const g=y-f,b=m-p;i.fillStyle=_1.hexToRgba(d,.2),i.fillRect(f,p,g,b),i.strokeStyle=d,i.lineWidth=Math.max(Math.min(i.canvas.width,i.canvas.height)/200,2.5),i.strokeRect(f,p,g,b),i.fillStyle=d;const x=i.measureText(c+" - "+h+"%").width,w=parseInt(l,10),v=p-(w+i.lineWidth);i.fillRect(f-1,v<0?0:v,x+i.lineWidth,w+i.lineWidth),i.fillStyle="#ffffff",i.fillText(c+" - "+h+"%",f-1,v<0?0:v)}};class _1{constructor(){Pb(this,"get",e=>this.palette[Math.floor(e)%this.n]);this.palette=["#FF3838","#FF9D97","#FF701F","#FFB21D","#CFD231","#48F90A","#92CC17","#3DDB86","#1A9334","#00D4BB","#2C99A8","#00C2FF","#344593","#6473FF","#0018EC","#8438FF","#520085","#CB38FF","#FF95C8","#FF37C7"],this.n=this.palette.length}}Pb(_1,"hexToRgba",(e,n)=>{const s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return s?`rgba(${[parseInt(s[1],16),parseInt(s[2],16),parseInt(s[3],16)].join(", ")}, ${n})`:null});const h0e=PS.length,p0e=(t,e,n)=>{let s,a;return[U(()=>{const i=EH(t),[o,l]=i.shape.slice(0,2),u=Math.max(l,o),c=i.pad([[0,u-o],[0,u-l],[0,0]]);return s=u/l,a=u/o,na.resizeBilinear(c,[e,n]).div(255).expandDims(0)}),s,a]},O1=async(t,e,n,s=()=>{},a=.45)=>{const[r,i]=e.inputShape.slice(1,3);Wn().startScope();const[o,l,u]=p0e(t,r,i),c=e.net.execute(o),d=c.transpose([0,2,1]),h=U(()=>{const w=d.slice([0,0,2],[-1,-1,1]),v=d.slice([0,0,3],[-1,-1,1]),C=de(d.slice([0,0,0],[-1,-1,1]),ge(w,2)),$=de(d.slice([0,0,1],[-1,-1,1]),ge(v,2));return Bt([$,C,K($,v),K(C,w)],2).squeeze()}),[p,f]=U(()=>{const w=d.slice([0,0,4],[-1,-1,h0e]).squeeze(0);return[w.max(1),w.argMax(1)]}),m=await na.nonMaxSuppressionAsync(h,p,5e3,.45,a),y=h.gather(m,0).dataSync(),g=p.gather(m,0).dataSync(),b=f.gather(m,0).dataSync(),x={};for(let w=0;w<g.length;++w)if(g[w]>=a){const v=PS[b[w]];x[v]=(x[v]||0)+1}return d0e(n,y,g,b,[l,u],a),_e([c,d,h,p,f,m]),s(x),Wn().endScope(),x},_f=(t,e,n,s=.45,a=()=>{})=>{const r=async()=>{if(t.videoWidth===0&&t.srcObject===null){const i=n.getContext("2d");i.clearRect(0,0,i.canvas.width,i.canvas.height);return}O1(t,e,n,i=>{a(i),requestAnimationFrame(r)},s)};r()};tM("webgpu");const f0e=()=>{const[t,e]=$t.useState({loading:!0,progress:0}),[n,s]=$t.useState({net:null,inputShape:[1,0,0,3]}),[a,r]=$t.useState("yolo11n"),[i,o]=$t.useState(.45),[l,u]=$t.useState(null),[c,d]=$t.useState({}),h=$t.useRef(null),p=$t.useRef(null),f=$t.useRef(null),m=$t.useRef(null);return $t.useEffect(()=>{nM().then(async()=>{e({loading:!0,progress:0});const y=await hK(`${window.location.href}/${a}_web_model/model.json`,{onProgress:x=>{e({loading:!0,progress:x})}}),g=Kn(y.inputs[0].shape),b=y.execute(g);e({loading:!1,progress:1}),s({net:y,inputShape:y.inputs[0].shape}),_e([b,g])})},[a]),$t.useEffect(()=>{!t.loading&&n.net&&l&&(l==="image"&&h.current&&h.current.src!=="#"?O1(h.current,n,m.current,y=>{d(y)},i):l==="camera"&&p.current&&p.current.videoWidth>0?_f(p.current,n,m.current,i,d):l==="video"&&f.current&&f.current.videoWidth>0&&_f(f.current,n,m.current,i,d))},[i,t.loading,n,l]),Te.jsxs("div",{className:"App",children:[t.loading&&Te.jsxs(l0e,{children:["Chargement du modèle en cours... ",(t.progress*100).toFixed(2),"%"]}),Te.jsxs("div",{className:"header",children:[Te.jsx("h1",{children:"Modèle d'intelligence artificielle de détection d'objets"}),Te.jsxs("div",{className:"confidence-control",children:[Te.jsxs("label",{htmlFor:"confidence-slider",children:["Seuil de confiance: ",(i*100).toFixed(0),"%"]}),Te.jsx("input",{id:"confidence-slider",type:"range",min:"0.01",max:"0.9",step:"0.01",value:i,onChange:y=>o(parseFloat(y.target.value)),className:"confidence-slider"})]})]}),Te.jsxs("div",{className:"content",children:[Te.jsx("img",{src:"#",ref:h,onLoad:()=>{u("image"),O1(h.current,n,m.current,y=>{d(y)},i)}}),Te.jsx("video",{autoPlay:!0,muted:!0,ref:p,onPlay:()=>{u("camera"),_f(p.current,n,m.current,i,d)}}),Te.jsx("video",{autoPlay:!0,muted:!0,ref:f,onPlay:()=>{u("video"),_f(f.current,n,m.current,i,d)}}),Te.jsx("canvas",{width:n.inputShape[1],height:n.inputShape[2],ref:m})]}),Te.jsx(u0e,{imageRef:h,cameraRef:p,videoRef:f}),Te.jsx(c0e,{detectionCounts:c})]})};jL.createRoot(document.getElementById("root")).render(Te.jsxs($t.StrictMode,{children:[Te.jsx(dP,{}),Te.jsx(nP,{}),Te.jsx(f0e,{})]}));
